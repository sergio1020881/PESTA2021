
Atmega128.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00002648  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025d4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000265  00800100  00800100  00002648  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002648  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002678  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000538  00000000  00000000  000026b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000526c  00000000  00000000  00002bec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001689  00000000  00000000  00007e58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000323f  00000000  00000000  000094e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ec4  00000000  00000000  0000c720  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000118d  00000000  00000000  0000d5e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000049ee  00000000  00000000  0000e771  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004c8  00000000  00000000  0001315f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a1 c0       	rjmp	.+322    	; 0x144 <__ctors_end>
       2:	00 00       	nop
       4:	be c0       	rjmp	.+380    	; 0x182 <__bad_interrupt>
       6:	00 00       	nop
       8:	bc c0       	rjmp	.+376    	; 0x182 <__bad_interrupt>
       a:	00 00       	nop
       c:	ba c0       	rjmp	.+372    	; 0x182 <__bad_interrupt>
       e:	00 00       	nop
      10:	b8 c0       	rjmp	.+368    	; 0x182 <__bad_interrupt>
      12:	00 00       	nop
      14:	b6 c0       	rjmp	.+364    	; 0x182 <__bad_interrupt>
      16:	00 00       	nop
      18:	b4 c0       	rjmp	.+360    	; 0x182 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b2 c0       	rjmp	.+356    	; 0x182 <__bad_interrupt>
      1e:	00 00       	nop
      20:	b0 c0       	rjmp	.+352    	; 0x182 <__bad_interrupt>
      22:	00 00       	nop
      24:	ae c0       	rjmp	.+348    	; 0x182 <__bad_interrupt>
      26:	00 00       	nop
      28:	c0 c3       	rjmp	.+1920   	; 0x7aa <__vector_10>
      2a:	00 00       	nop
      2c:	8c c3       	rjmp	.+1816   	; 0x746 <__vector_11>
      2e:	00 00       	nop
      30:	94 c3       	rjmp	.+1832   	; 0x75a <__vector_12>
      32:	00 00       	nop
      34:	9c c3       	rjmp	.+1848   	; 0x76e <__vector_13>
      36:	00 00       	nop
      38:	ae c3       	rjmp	.+1884   	; 0x796 <__vector_14>
      3a:	00 00       	nop
      3c:	0c 94 69 0e 	jmp	0x1cd2	; 0x1cd2 <__vector_15>
      40:	78 c3       	rjmp	.+1776   	; 0x732 <__vector_16>
      42:	00 00       	nop
      44:	9e c0       	rjmp	.+316    	; 0x182 <__bad_interrupt>
      46:	00 00       	nop
      48:	ec c3       	rjmp	.+2008   	; 0x822 <__vector_18>
      4a:	00 00       	nop
      4c:	20 c4       	rjmp	.+2112   	; 0x88e <__vector_19>
      4e:	00 00       	nop
      50:	98 c0       	rjmp	.+304    	; 0x182 <__bad_interrupt>
      52:	00 00       	nop
      54:	97 c0       	rjmp	.+302    	; 0x184 <__vector_21>
      56:	00 00       	nop
      58:	94 c0       	rjmp	.+296    	; 0x182 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	92 c0       	rjmp	.+292    	; 0x182 <__bad_interrupt>
      5e:	00 00       	nop
      60:	90 c3       	rjmp	.+1824   	; 0x782 <__vector_24>
      62:	00 00       	nop
      64:	ac c3       	rjmp	.+1880   	; 0x7be <__vector_25>
      66:	00 00       	nop
      68:	b4 c3       	rjmp	.+1896   	; 0x7d2 <__vector_26>
      6a:	00 00       	nop
      6c:	bc c3       	rjmp	.+1912   	; 0x7e6 <__vector_27>
      6e:	00 00       	nop
      70:	c4 c3       	rjmp	.+1928   	; 0x7fa <__vector_28>
      72:	00 00       	nop
      74:	cc c3       	rjmp	.+1944   	; 0x80e <__vector_29>
      76:	00 00       	nop
      78:	33 c4       	rjmp	.+2150   	; 0x8e0 <__vector_30>
      7a:	00 00       	nop
      7c:	6a c4       	rjmp	.+2260   	; 0x952 <__vector_31>
      7e:	00 00       	nop
      80:	80 c0       	rjmp	.+256    	; 0x182 <__bad_interrupt>
      82:	00 00       	nop
      84:	7e c0       	rjmp	.+252    	; 0x182 <__bad_interrupt>
      86:	00 00       	nop
      88:	7c c0       	rjmp	.+248    	; 0x182 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ba 02       	muls	r27, r26
      8e:	be 02       	muls	r27, r30
      90:	c2 02       	muls	r28, r18
      92:	c6 02       	muls	r28, r22
      94:	ca 02       	muls	r28, r26
      96:	d1 02       	muls	r29, r17
      98:	d8 02       	muls	r29, r24
      9a:	df 02       	muls	r29, r31
      9c:	e3 02       	muls	r30, r19
      9e:	ea 02       	muls	r30, r26
      a0:	f1 02       	muls	r31, r17
      a2:	f8 02       	muls	r31, r24
      a4:	fc 02       	muls	r31, r28
      a6:	03 03       	mulsu	r16, r19
      a8:	0a 03       	fmul	r16, r18
      aa:	26 03       	mulsu	r18, r22
      ac:	2a 03       	fmul	r18, r18
      ae:	2e 03       	fmul	r18, r22
      b0:	32 03       	mulsu	r19, r18
      b2:	38 03       	fmul	r19, r16
      b4:	3c 03       	fmul	r19, r20
      b6:	40 03       	mulsu	r20, r16
      b8:	44 03       	mulsu	r20, r20
      ba:	4d 03       	fmul	r20, r21
      bc:	51 03       	mulsu	r21, r17
      be:	55 03       	mulsu	r21, r21
      c0:	5e 03       	fmul	r21, r22
      c2:	07 63       	ori	r16, 0x37	; 55
      c4:	42 36       	cpi	r20, 0x62	; 98
      c6:	b7 9b       	sbis	0x16, 7	; 22
      c8:	d8 a7       	std	Y+40, r29	; 0x28
      ca:	1a 39       	cpi	r17, 0x9A	; 154
      cc:	68 56       	subi	r22, 0x68	; 104
      ce:	18 ae       	std	Y+56, r1	; 0x38
      d0:	ba ab       	std	Y+50, r27	; 0x32
      d2:	55 8c       	ldd	r5, Z+29	; 0x1d
      d4:	1d 3c       	cpi	r17, 0xCD	; 205
      d6:	b7 cc       	rjmp	.-1682   	; 0xfffffa46 <__eeprom_end+0xff7efa46>
      d8:	57 63       	ori	r21, 0x37	; 55
      da:	bd 6d       	ori	r27, 0xDD	; 221
      dc:	ed fd       	.word	0xfded	; ????
      de:	75 3e       	cpi	r23, 0xE5	; 229
      e0:	f6 17       	cp	r31, r22
      e2:	72 31       	cpi	r23, 0x12	; 18
      e4:	bf 00       	.word	0x00bf	; ????
      e6:	00 00       	nop
      e8:	80 3f       	cpi	r24, 0xF0	; 240
      ea:	08 00       	.word	0x0008	; ????
      ec:	00 00       	nop
      ee:	be 92       	st	-X, r11
      f0:	24 49       	sbci	r18, 0x94	; 148
      f2:	12 3e       	cpi	r17, 0xE2	; 226
      f4:	ab aa       	std	Y+51, r10	; 0x33
      f6:	aa 2a       	or	r10, r26
      f8:	be cd       	rjmp	.-1156   	; 0xfffffc76 <__eeprom_end+0xff7efc76>
      fa:	cc cc       	rjmp	.-1640   	; 0xfffffa94 <__eeprom_end+0xff7efa94>
      fc:	4c 3e       	cpi	r20, 0xEC	; 236
      fe:	00 00       	nop
     100:	00 80       	ld	r0, Z
     102:	be ab       	std	Y+54, r27	; 0x36
     104:	aa aa       	std	Y+50, r10	; 0x32
     106:	aa 3e       	cpi	r26, 0xEA	; 234
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	bf 00       	.word	0x00bf	; ????
     10e:	00 00       	nop
     110:	80 3f       	cpi	r24, 0xF0	; 240
     112:	00 00       	nop
     114:	00 00       	nop
     116:	00 08       	sbc	r0, r0
     118:	41 78       	andi	r20, 0x81	; 129
     11a:	d3 bb       	out	0x13, r29	; 19
     11c:	43 87       	std	Z+11, r20	; 0x0b
     11e:	d1 13       	cpse	r29, r17
     120:	3d 19       	sub	r19, r13
     122:	0e 3c       	cpi	r16, 0xCE	; 206
     124:	c3 bd       	out	0x23, r28	; 35
     126:	42 82       	std	Z+2, r4	; 0x02
     128:	ad 2b       	or	r26, r29
     12a:	3e 68       	ori	r19, 0x8E	; 142
     12c:	ec 82       	std	Y+4, r14	; 0x04
     12e:	76 be       	out	0x36, r7	; 54
     130:	d9 8f       	std	Y+25, r29	; 0x19
     132:	e1 a9       	ldd	r30, Z+49	; 0x31
     134:	3e 4c       	sbci	r19, 0xCE	; 206
     136:	80 ef       	ldi	r24, 0xF0	; 240
     138:	ff be       	out	0x3f, r15	; 63
     13a:	01 c4       	rjmp	.+2050   	; 0x93e <__vector_30+0x5e>
     13c:	ff 7f       	andi	r31, 0xFF	; 255
     13e:	3f 00       	.word	0x003f	; ????
     140:	00 00       	nop
	...

00000144 <__ctors_end>:
     144:	11 24       	eor	r1, r1
     146:	1f be       	out	0x3f, r1	; 63
     148:	cf ef       	ldi	r28, 0xFF	; 255
     14a:	d0 e1       	ldi	r29, 0x10	; 16
     14c:	de bf       	out	0x3e, r29	; 62
     14e:	cd bf       	out	0x3d, r28	; 61

00000150 <__do_copy_data>:
     150:	11 e0       	ldi	r17, 0x01	; 1
     152:	a0 e0       	ldi	r26, 0x00	; 0
     154:	b1 e0       	ldi	r27, 0x01	; 1
     156:	e4 ed       	ldi	r30, 0xD4	; 212
     158:	f5 e2       	ldi	r31, 0x25	; 37
     15a:	00 e0       	ldi	r16, 0x00	; 0
     15c:	0b bf       	out	0x3b, r16	; 59
     15e:	02 c0       	rjmp	.+4      	; 0x164 <__do_copy_data+0x14>
     160:	07 90       	elpm	r0, Z+
     162:	0d 92       	st	X+, r0
     164:	a0 30       	cpi	r26, 0x00	; 0
     166:	b1 07       	cpc	r27, r17
     168:	d9 f7       	brne	.-10     	; 0x160 <__do_copy_data+0x10>

0000016a <__do_clear_bss>:
     16a:	23 e0       	ldi	r18, 0x03	; 3
     16c:	a0 e0       	ldi	r26, 0x00	; 0
     16e:	b1 e0       	ldi	r27, 0x01	; 1
     170:	01 c0       	rjmp	.+2      	; 0x174 <.do_clear_bss_start>

00000172 <.do_clear_bss_loop>:
     172:	1d 92       	st	X+, r1

00000174 <.do_clear_bss_start>:
     174:	a5 36       	cpi	r26, 0x65	; 101
     176:	b2 07       	cpc	r27, r18
     178:	e1 f7       	brne	.-8      	; 0x172 <.do_clear_bss_loop>
     17a:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <main>
     17e:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <_exit>

00000182 <__bad_interrupt>:
     182:	3e cf       	rjmp	.-388    	; 0x0 <__vectors>

00000184 <__vector_21>:
ISR(ANALOG_INTERRUPT)
/*************************************************************************
Function: ANALOG interrupt
Purpose:  Read Analog Input
**************************************************************************/
{
     184:	1f 92       	push	r1
     186:	0f 92       	push	r0
     188:	0f b6       	in	r0, 0x3f	; 63
     18a:	0f 92       	push	r0
     18c:	11 24       	eor	r1, r1
     18e:	0b b6       	in	r0, 0x3b	; 59
     190:	0f 92       	push	r0
     192:	2f 93       	push	r18
     194:	3f 93       	push	r19
     196:	4f 93       	push	r20
     198:	5f 93       	push	r21
     19a:	8f 93       	push	r24
     19c:	9f 93       	push	r25
     19e:	ef 93       	push	r30
     1a0:	ff 93       	push	r31
	uint8_t Sreg;
	Sreg=STATUS_REGISTER;
     1a2:	2f b7       	in	r18, 0x3f	; 63
	STATUS_REGISTER&=~(1<<GLOBAL_INTERRUPT_ENABLE);
     1a4:	8f b7       	in	r24, 0x3f	; 63
     1a6:	8f 77       	andi	r24, 0x7F	; 127
     1a8:	8f bf       	out	0x3f, r24	; 63
	adc_tmp=ADCL;
     1aa:	84 b1       	in	r24, 0x04	; 4
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <adc_tmp+0x1>
     1b2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <adc_tmp>
	adc_tmp|=(ADCH<<8);
     1b6:	35 b1       	in	r19, 0x05	; 5
     1b8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <adc_tmp>
     1bc:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <adc_tmp+0x1>
     1c0:	93 2b       	or	r25, r19
     1c2:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <adc_tmp+0x1>
     1c6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <adc_tmp>
	if(adc_n_sample < (1<<ADC_NUMBER_SAMPLE)){
     1ca:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1ce:	84 30       	cpi	r24, 0x04	; 4
     1d0:	a0 f4       	brcc	.+40     	; 0x1fa <__vector_21+0x76>
		adc_n_sample++;
     1d2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1d6:	8f 5f       	subi	r24, 0xFF	; 255
     1d8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		adc_sample+=adc_tmp;
     1dc:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <adc_tmp>
     1e0:	50 91 02 01 	lds	r21, 0x0102	; 0x800102 <adc_tmp+0x1>
     1e4:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <adc_sample>
     1e8:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <adc_sample+0x1>
     1ec:	84 0f       	add	r24, r20
     1ee:	95 1f       	adc	r25, r21
     1f0:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <adc_sample+0x1>
     1f4:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <adc_sample>
     1f8:	43 c0       	rjmp	.+134    	; 0x280 <__vector_21+0xfc>
	}else{
		ADC_VALUE[ADC_SELECTOR]=adc_sample>>ADC_NUMBER_SAMPLE;
     1fa:	e0 91 05 01 	lds	r30, 0x0105	; 0x800105 <ADC_SELECTOR>
     1fe:	f0 91 06 01 	lds	r31, 0x0106	; 0x800106 <ADC_SELECTOR+0x1>
     202:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <adc_sample>
     206:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <adc_sample+0x1>
     20a:	95 95       	asr	r25
     20c:	87 95       	ror	r24
     20e:	95 95       	asr	r25
     210:	87 95       	ror	r24
     212:	ee 0f       	add	r30, r30
     214:	ff 1f       	adc	r31, r31
     216:	e7 5e       	subi	r30, 0xE7	; 231
     218:	fe 4f       	sbci	r31, 0xFE	; 254
     21a:	91 83       	std	Z+1, r25	; 0x01
     21c:	80 83       	st	Z, r24
		adc_n_sample=adc_sample=0;
     21e:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <adc_sample+0x1>
     222:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <adc_sample>
     226:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		/******/
		if(ADC_SELECTOR < ADC_N_CHANNEL)
     22a:	40 91 05 01 	lds	r20, 0x0105	; 0x800105 <ADC_SELECTOR>
     22e:	50 91 06 01 	lds	r21, 0x0106	; 0x800106 <ADC_SELECTOR+0x1>
     232:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <ADC_N_CHANNEL>
     236:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <ADC_N_CHANNEL+0x1>
     23a:	48 17       	cp	r20, r24
     23c:	59 07       	cpc	r21, r25
     23e:	54 f4       	brge	.+20     	; 0x254 <__vector_21+0xd0>
			ADC_SELECTOR++;
     240:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <ADC_SELECTOR>
     244:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <ADC_SELECTOR+0x1>
     248:	01 96       	adiw	r24, 0x01	; 1
     24a:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <ADC_SELECTOR+0x1>
     24e:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <ADC_SELECTOR>
     252:	04 c0       	rjmp	.+8      	; 0x25c <__vector_21+0xd8>
		else
			ADC_SELECTOR=0;
     254:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <ADC_SELECTOR+0x1>
     258:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <ADC_SELECTOR>
		ADC_SELECT &= ~MUX_MASK;
     25c:	87 b1       	in	r24, 0x07	; 7
     25e:	80 7e       	andi	r24, 0xE0	; 224
     260:	87 b9       	out	0x07, r24	; 7
		ADC_SELECT |= (ADC_CHANNEL_GAIN[ADC_SELECTOR] & MUX_MASK);
     262:	e0 91 05 01 	lds	r30, 0x0105	; 0x800105 <ADC_SELECTOR>
     266:	f0 91 06 01 	lds	r31, 0x0106	; 0x800106 <ADC_SELECTOR+0x1>
     26a:	ee 0f       	add	r30, r30
     26c:	ff 1f       	adc	r31, r31
     26e:	e7 5f       	subi	r30, 0xF7	; 247
     270:	fe 4f       	sbci	r31, 0xFE	; 254
     272:	80 81       	ld	r24, Z
     274:	91 81       	ldd	r25, Z+1	; 0x01
     276:	37 b1       	in	r19, 0x07	; 7
     278:	8f 71       	andi	r24, 0x1F	; 31
     27a:	99 27       	eor	r25, r25
     27c:	83 2b       	or	r24, r19
     27e:	87 b9       	out	0x07, r24	; 7
	}
	STATUS_REGISTER=Sreg;
     280:	2f bf       	out	0x3f, r18	; 63
}
     282:	ff 91       	pop	r31
     284:	ef 91       	pop	r30
     286:	9f 91       	pop	r25
     288:	8f 91       	pop	r24
     28a:	5f 91       	pop	r21
     28c:	4f 91       	pop	r20
     28e:	3f 91       	pop	r19
     290:	2f 91       	pop	r18
     292:	0f 90       	pop	r0
     294:	0b be       	out	0x3b, r0	; 59
     296:	0f 90       	pop	r0
     298:	0f be       	out	0x3f, r0	; 63
     29a:	0f 90       	pop	r0
     29c:	1f 90       	pop	r1
     29e:	18 95       	reti

000002a0 <TIMER_COUNTER0_start>:
	timer3.compareB=TIMER_COUNTER3_compareB;
	timer3.compareC=TIMER_COUNTER3_compareC;
	timer3.start=TIMER_COUNTER3_start;
	timer3.stop=TIMER_COUNTER3_stop;
	return timer3;
}
     2a0:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <timer0_state>
     2a4:	21 11       	cpse	r18, r1
     2a6:	43 c0       	rjmp	.+134    	; 0x32e <TIMER_COUNTER0_start+0x8e>
     2a8:	2f ef       	ldi	r18, 0xFF	; 255
     2aa:	21 bf       	out	0x31, r18	; 49
     2ac:	23 b7       	in	r18, 0x33	; 51
     2ae:	28 7f       	andi	r18, 0xF8	; 248
     2b0:	23 bf       	out	0x33, r18	; 51
     2b2:	80 34       	cpi	r24, 0x40	; 64
     2b4:	91 05       	cpc	r25, r1
     2b6:	11 f1       	breq	.+68     	; 0x2fc <TIMER_COUNTER0_start+0x5c>
     2b8:	48 f4       	brcc	.+18     	; 0x2cc <TIMER_COUNTER0_start+0x2c>
     2ba:	88 30       	cpi	r24, 0x08	; 8
     2bc:	91 05       	cpc	r25, r1
     2be:	b1 f0       	breq	.+44     	; 0x2ec <TIMER_COUNTER0_start+0x4c>
     2c0:	80 32       	cpi	r24, 0x20	; 32
     2c2:	91 05       	cpc	r25, r1
     2c4:	b9 f0       	breq	.+46     	; 0x2f4 <TIMER_COUNTER0_start+0x54>
     2c6:	01 97       	sbiw	r24, 0x01	; 1
     2c8:	49 f5       	brne	.+82     	; 0x31c <TIMER_COUNTER0_start+0x7c>
     2ca:	0c c0       	rjmp	.+24     	; 0x2e4 <TIMER_COUNTER0_start+0x44>
     2cc:	81 15       	cp	r24, r1
     2ce:	21 e0       	ldi	r18, 0x01	; 1
     2d0:	92 07       	cpc	r25, r18
     2d2:	e1 f0       	breq	.+56     	; 0x30c <TIMER_COUNTER0_start+0x6c>
     2d4:	81 15       	cp	r24, r1
     2d6:	24 e0       	ldi	r18, 0x04	; 4
     2d8:	92 07       	cpc	r25, r18
     2da:	e1 f0       	breq	.+56     	; 0x314 <TIMER_COUNTER0_start+0x74>
     2dc:	80 38       	cpi	r24, 0x80	; 128
     2de:	91 05       	cpc	r25, r1
     2e0:	e9 f4       	brne	.+58     	; 0x31c <TIMER_COUNTER0_start+0x7c>
     2e2:	10 c0       	rjmp	.+32     	; 0x304 <TIMER_COUNTER0_start+0x64>
     2e4:	83 b7       	in	r24, 0x33	; 51
     2e6:	81 60       	ori	r24, 0x01	; 1
     2e8:	83 bf       	out	0x33, r24	; 51
     2ea:	1b c0       	rjmp	.+54     	; 0x322 <TIMER_COUNTER0_start+0x82>
     2ec:	83 b7       	in	r24, 0x33	; 51
     2ee:	82 60       	ori	r24, 0x02	; 2
     2f0:	83 bf       	out	0x33, r24	; 51
     2f2:	17 c0       	rjmp	.+46     	; 0x322 <TIMER_COUNTER0_start+0x82>
     2f4:	83 b7       	in	r24, 0x33	; 51
     2f6:	83 60       	ori	r24, 0x03	; 3
     2f8:	83 bf       	out	0x33, r24	; 51
     2fa:	13 c0       	rjmp	.+38     	; 0x322 <TIMER_COUNTER0_start+0x82>
     2fc:	83 b7       	in	r24, 0x33	; 51
     2fe:	84 60       	ori	r24, 0x04	; 4
     300:	83 bf       	out	0x33, r24	; 51
     302:	0f c0       	rjmp	.+30     	; 0x322 <TIMER_COUNTER0_start+0x82>
     304:	83 b7       	in	r24, 0x33	; 51
     306:	85 60       	ori	r24, 0x05	; 5
     308:	83 bf       	out	0x33, r24	; 51
     30a:	0b c0       	rjmp	.+22     	; 0x322 <TIMER_COUNTER0_start+0x82>
     30c:	83 b7       	in	r24, 0x33	; 51
     30e:	86 60       	ori	r24, 0x06	; 6
     310:	83 bf       	out	0x33, r24	; 51
     312:	07 c0       	rjmp	.+14     	; 0x322 <TIMER_COUNTER0_start+0x82>
     314:	83 b7       	in	r24, 0x33	; 51
     316:	87 60       	ori	r24, 0x07	; 7
     318:	83 bf       	out	0x33, r24	; 51
     31a:	03 c0       	rjmp	.+6      	; 0x322 <TIMER_COUNTER0_start+0x82>
     31c:	83 b7       	in	r24, 0x33	; 51
     31e:	87 60       	ori	r24, 0x07	; 7
     320:	83 bf       	out	0x33, r24	; 51
     322:	8f b7       	in	r24, 0x3f	; 63
     324:	80 68       	ori	r24, 0x80	; 128
     326:	8f bf       	out	0x3f, r24	; 63
     328:	81 e0       	ldi	r24, 0x01	; 1
     32a:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <timer0_state>
     32e:	08 95       	ret

00000330 <TIMER_COUNTER0_compoutmode>:
     330:	93 b7       	in	r25, 0x33	; 51
     332:	9f 7c       	andi	r25, 0xCF	; 207
     334:	93 bf       	out	0x33, r25	; 51
     336:	82 30       	cpi	r24, 0x02	; 2
     338:	51 f0       	breq	.+20     	; 0x34e <TIMER_COUNTER0_compoutmode+0x1e>
     33a:	83 30       	cpi	r24, 0x03	; 3
     33c:	71 f0       	breq	.+28     	; 0x35a <TIMER_COUNTER0_compoutmode+0x2a>
     33e:	81 30       	cpi	r24, 0x01	; 1
     340:	89 f4       	brne	.+34     	; 0x364 <TIMER_COUNTER0_compoutmode+0x34>
     342:	80 e1       	ldi	r24, 0x10	; 16
     344:	87 bb       	out	0x17, r24	; 23
     346:	83 b7       	in	r24, 0x33	; 51
     348:	80 61       	ori	r24, 0x10	; 16
     34a:	83 bf       	out	0x33, r24	; 51
     34c:	08 95       	ret
     34e:	80 e1       	ldi	r24, 0x10	; 16
     350:	87 bb       	out	0x17, r24	; 23
     352:	83 b7       	in	r24, 0x33	; 51
     354:	80 62       	ori	r24, 0x20	; 32
     356:	83 bf       	out	0x33, r24	; 51
     358:	08 95       	ret
     35a:	80 e1       	ldi	r24, 0x10	; 16
     35c:	87 bb       	out	0x17, r24	; 23
     35e:	83 b7       	in	r24, 0x33	; 51
     360:	80 63       	ori	r24, 0x30	; 48
     362:	83 bf       	out	0x33, r24	; 51
     364:	08 95       	ret

00000366 <TIMER_COUNTER0_compare>:
     366:	81 bf       	out	0x31, r24	; 49
     368:	08 95       	ret

0000036a <TIMER_COUNTER0_stop>:
     36a:	83 b7       	in	r24, 0x33	; 51
     36c:	88 7f       	andi	r24, 0xF8	; 248
     36e:	83 bf       	out	0x33, r24	; 51
     370:	12 be       	out	0x32, r1	; 50
     372:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <timer0_state>
     376:	08 95       	ret

00000378 <TIMER_COUNTER1_start>:
     378:	20 91 2b 01 	lds	r18, 0x012B	; 0x80012b <timer1_state>
     37c:	21 11       	cpse	r18, r1
     37e:	45 c0       	rjmp	.+138    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     380:	2f ef       	ldi	r18, 0xFF	; 255
     382:	3f ef       	ldi	r19, 0xFF	; 255
     384:	3b bd       	out	0x2b, r19	; 43
     386:	2a bd       	out	0x2a, r18	; 42
     388:	2e b5       	in	r18, 0x2e	; 46
     38a:	28 7f       	andi	r18, 0xF8	; 248
     38c:	2e bd       	out	0x2e, r18	; 46
     38e:	88 30       	cpi	r24, 0x08	; 8
     390:	91 05       	cpc	r25, r1
     392:	d1 f0       	breq	.+52     	; 0x3c8 <TIMER_COUNTER1_start+0x50>
     394:	48 f4       	brcc	.+18     	; 0x3a8 <TIMER_COUNTER1_start+0x30>
     396:	83 30       	cpi	r24, 0x03	; 3
     398:	91 05       	cpc	r25, r1
     39a:	31 f1       	breq	.+76     	; 0x3e8 <TIMER_COUNTER1_start+0x70>
     39c:	85 30       	cpi	r24, 0x05	; 5
     39e:	91 05       	cpc	r25, r1
     3a0:	39 f1       	breq	.+78     	; 0x3f0 <TIMER_COUNTER1_start+0x78>
     3a2:	01 97       	sbiw	r24, 0x01	; 1
     3a4:	49 f5       	brne	.+82     	; 0x3f8 <TIMER_COUNTER1_start+0x80>
     3a6:	0c c0       	rjmp	.+24     	; 0x3c0 <TIMER_COUNTER1_start+0x48>
     3a8:	81 15       	cp	r24, r1
     3aa:	21 e0       	ldi	r18, 0x01	; 1
     3ac:	92 07       	cpc	r25, r18
     3ae:	a1 f0       	breq	.+40     	; 0x3d8 <TIMER_COUNTER1_start+0x60>
     3b0:	81 15       	cp	r24, r1
     3b2:	24 e0       	ldi	r18, 0x04	; 4
     3b4:	92 07       	cpc	r25, r18
     3b6:	a1 f0       	breq	.+40     	; 0x3e0 <TIMER_COUNTER1_start+0x68>
     3b8:	80 34       	cpi	r24, 0x40	; 64
     3ba:	91 05       	cpc	r25, r1
     3bc:	e9 f4       	brne	.+58     	; 0x3f8 <TIMER_COUNTER1_start+0x80>
     3be:	08 c0       	rjmp	.+16     	; 0x3d0 <TIMER_COUNTER1_start+0x58>
     3c0:	8e b5       	in	r24, 0x2e	; 46
     3c2:	81 60       	ori	r24, 0x01	; 1
     3c4:	8e bd       	out	0x2e, r24	; 46
     3c6:	1b c0       	rjmp	.+54     	; 0x3fe <TIMER_COUNTER1_start+0x86>
     3c8:	8e b5       	in	r24, 0x2e	; 46
     3ca:	82 60       	ori	r24, 0x02	; 2
     3cc:	8e bd       	out	0x2e, r24	; 46
     3ce:	17 c0       	rjmp	.+46     	; 0x3fe <TIMER_COUNTER1_start+0x86>
     3d0:	8e b5       	in	r24, 0x2e	; 46
     3d2:	83 60       	ori	r24, 0x03	; 3
     3d4:	8e bd       	out	0x2e, r24	; 46
     3d6:	13 c0       	rjmp	.+38     	; 0x3fe <TIMER_COUNTER1_start+0x86>
     3d8:	8e b5       	in	r24, 0x2e	; 46
     3da:	84 60       	ori	r24, 0x04	; 4
     3dc:	8e bd       	out	0x2e, r24	; 46
     3de:	0f c0       	rjmp	.+30     	; 0x3fe <TIMER_COUNTER1_start+0x86>
     3e0:	8e b5       	in	r24, 0x2e	; 46
     3e2:	85 60       	ori	r24, 0x05	; 5
     3e4:	8e bd       	out	0x2e, r24	; 46
     3e6:	0b c0       	rjmp	.+22     	; 0x3fe <TIMER_COUNTER1_start+0x86>
     3e8:	8e b5       	in	r24, 0x2e	; 46
     3ea:	86 60       	ori	r24, 0x06	; 6
     3ec:	8e bd       	out	0x2e, r24	; 46
     3ee:	07 c0       	rjmp	.+14     	; 0x3fe <TIMER_COUNTER1_start+0x86>
     3f0:	8e b5       	in	r24, 0x2e	; 46
     3f2:	87 60       	ori	r24, 0x07	; 7
     3f4:	8e bd       	out	0x2e, r24	; 46
     3f6:	03 c0       	rjmp	.+6      	; 0x3fe <TIMER_COUNTER1_start+0x86>
     3f8:	8e b5       	in	r24, 0x2e	; 46
     3fa:	85 60       	ori	r24, 0x05	; 5
     3fc:	8e bd       	out	0x2e, r24	; 46
     3fe:	8f b7       	in	r24, 0x3f	; 63
     400:	80 68       	ori	r24, 0x80	; 128
     402:	8f bf       	out	0x3f, r24	; 63
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <timer1_state>
     40a:	08 95       	ret

0000040c <TIMER_COUNTER1_compoutmodeA>:
     40c:	9f b5       	in	r25, 0x2f	; 47
     40e:	9f 73       	andi	r25, 0x3F	; 63
     410:	9f bd       	out	0x2f, r25	; 47
     412:	82 30       	cpi	r24, 0x02	; 2
     414:	49 f0       	breq	.+18     	; 0x428 <TIMER_COUNTER1_compoutmodeA+0x1c>
     416:	83 30       	cpi	r24, 0x03	; 3
     418:	61 f0       	breq	.+24     	; 0x432 <TIMER_COUNTER1_compoutmodeA+0x26>
     41a:	81 30       	cpi	r24, 0x01	; 1
     41c:	71 f4       	brne	.+28     	; 0x43a <TIMER_COUNTER1_compoutmodeA+0x2e>
     41e:	bd 9a       	sbi	0x17, 5	; 23
     420:	8f b5       	in	r24, 0x2f	; 47
     422:	80 64       	ori	r24, 0x40	; 64
     424:	8f bd       	out	0x2f, r24	; 47
     426:	08 95       	ret
     428:	bd 9a       	sbi	0x17, 5	; 23
     42a:	8f b5       	in	r24, 0x2f	; 47
     42c:	80 68       	ori	r24, 0x80	; 128
     42e:	8f bd       	out	0x2f, r24	; 47
     430:	08 95       	ret
     432:	bd 9a       	sbi	0x17, 5	; 23
     434:	8f b5       	in	r24, 0x2f	; 47
     436:	80 6c       	ori	r24, 0xC0	; 192
     438:	8f bd       	out	0x2f, r24	; 47
     43a:	08 95       	ret

0000043c <TIMER_COUNTER1_compoutmodeB>:
     43c:	9f b5       	in	r25, 0x2f	; 47
     43e:	9f 7c       	andi	r25, 0xCF	; 207
     440:	9f bd       	out	0x2f, r25	; 47
     442:	82 30       	cpi	r24, 0x02	; 2
     444:	49 f0       	breq	.+18     	; 0x458 <TIMER_COUNTER1_compoutmodeB+0x1c>
     446:	83 30       	cpi	r24, 0x03	; 3
     448:	61 f0       	breq	.+24     	; 0x462 <TIMER_COUNTER1_compoutmodeB+0x26>
     44a:	81 30       	cpi	r24, 0x01	; 1
     44c:	71 f4       	brne	.+28     	; 0x46a <TIMER_COUNTER1_compoutmodeB+0x2e>
     44e:	be 9a       	sbi	0x17, 6	; 23
     450:	8f b5       	in	r24, 0x2f	; 47
     452:	80 61       	ori	r24, 0x10	; 16
     454:	8f bd       	out	0x2f, r24	; 47
     456:	08 95       	ret
     458:	be 9a       	sbi	0x17, 6	; 23
     45a:	8f b5       	in	r24, 0x2f	; 47
     45c:	80 62       	ori	r24, 0x20	; 32
     45e:	8f bd       	out	0x2f, r24	; 47
     460:	08 95       	ret
     462:	be 9a       	sbi	0x17, 6	; 23
     464:	8f b5       	in	r24, 0x2f	; 47
     466:	80 63       	ori	r24, 0x30	; 48
     468:	8f bd       	out	0x2f, r24	; 47
     46a:	08 95       	ret

0000046c <TIMER_COUNTER1_compoutmodeC>:
     46c:	9f b5       	in	r25, 0x2f	; 47
     46e:	93 7f       	andi	r25, 0xF3	; 243
     470:	9f bd       	out	0x2f, r25	; 47
     472:	82 30       	cpi	r24, 0x02	; 2
     474:	49 f0       	breq	.+18     	; 0x488 <TIMER_COUNTER1_compoutmodeC+0x1c>
     476:	83 30       	cpi	r24, 0x03	; 3
     478:	61 f0       	breq	.+24     	; 0x492 <TIMER_COUNTER1_compoutmodeC+0x26>
     47a:	81 30       	cpi	r24, 0x01	; 1
     47c:	71 f4       	brne	.+28     	; 0x49a <TIMER_COUNTER1_compoutmodeC+0x2e>
     47e:	bf 9a       	sbi	0x17, 7	; 23
     480:	8f b5       	in	r24, 0x2f	; 47
     482:	84 60       	ori	r24, 0x04	; 4
     484:	8f bd       	out	0x2f, r24	; 47
     486:	08 95       	ret
     488:	bf 9a       	sbi	0x17, 7	; 23
     48a:	8f b5       	in	r24, 0x2f	; 47
     48c:	88 60       	ori	r24, 0x08	; 8
     48e:	8f bd       	out	0x2f, r24	; 47
     490:	08 95       	ret
     492:	bf 9a       	sbi	0x17, 7	; 23
     494:	8f b5       	in	r24, 0x2f	; 47
     496:	8c 60       	ori	r24, 0x0C	; 12
     498:	8f bd       	out	0x2f, r24	; 47
     49a:	08 95       	ret

0000049c <TIMER_COUNTER1_compareA>:
     49c:	9b bd       	out	0x2b, r25	; 43
     49e:	8a bd       	out	0x2a, r24	; 42
     4a0:	08 95       	ret

000004a2 <TIMER_COUNTER1_compareB>:
     4a2:	99 bd       	out	0x29, r25	; 41
     4a4:	88 bd       	out	0x28, r24	; 40
     4a6:	08 95       	ret

000004a8 <TIMER_COUNTER1_compareC>:
     4a8:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     4ac:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     4b0:	08 95       	ret

000004b2 <TIMER_COUNTER1_stop>:
     4b2:	8e b5       	in	r24, 0x2e	; 46
     4b4:	88 7f       	andi	r24, 0xF8	; 248
     4b6:	8e bd       	out	0x2e, r24	; 46
     4b8:	1d bc       	out	0x2d, r1	; 45
     4ba:	1c bc       	out	0x2c, r1	; 44
     4bc:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <timer1_state>
     4c0:	08 95       	ret

000004c2 <TIMER_COUNTER0enable>:
     4c2:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <timer0_state>
     4c6:	23 b7       	in	r18, 0x33	; 51
     4c8:	27 7b       	andi	r18, 0xB7	; 183
     4ca:	23 bf       	out	0x33, r18	; 51
     4cc:	62 30       	cpi	r22, 0x02	; 2
     4ce:	41 f0       	breq	.+16     	; 0x4e0 <TIMER_COUNTER0enable+0x1e>
     4d0:	63 30       	cpi	r22, 0x03	; 3
     4d2:	51 f0       	breq	.+20     	; 0x4e8 <TIMER_COUNTER0enable+0x26>
     4d4:	61 30       	cpi	r22, 0x01	; 1
     4d6:	59 f4       	brne	.+22     	; 0x4ee <TIMER_COUNTER0enable+0x2c>
     4d8:	23 b7       	in	r18, 0x33	; 51
     4da:	20 64       	ori	r18, 0x40	; 64
     4dc:	23 bf       	out	0x33, r18	; 51
     4de:	07 c0       	rjmp	.+14     	; 0x4ee <TIMER_COUNTER0enable+0x2c>
     4e0:	23 b7       	in	r18, 0x33	; 51
     4e2:	28 60       	ori	r18, 0x08	; 8
     4e4:	23 bf       	out	0x33, r18	; 51
     4e6:	03 c0       	rjmp	.+6      	; 0x4ee <TIMER_COUNTER0enable+0x2c>
     4e8:	23 b7       	in	r18, 0x33	; 51
     4ea:	28 64       	ori	r18, 0x48	; 72
     4ec:	23 bf       	out	0x33, r18	; 51
     4ee:	27 b7       	in	r18, 0x37	; 55
     4f0:	2e 7f       	andi	r18, 0xFE	; 254
     4f2:	27 bf       	out	0x37, r18	; 55
     4f4:	27 b7       	in	r18, 0x37	; 55
     4f6:	2d 7f       	andi	r18, 0xFD	; 253
     4f8:	27 bf       	out	0x37, r18	; 55
     4fa:	42 30       	cpi	r20, 0x02	; 2
     4fc:	41 f0       	breq	.+16     	; 0x50e <TIMER_COUNTER0enable+0x4c>
     4fe:	43 30       	cpi	r20, 0x03	; 3
     500:	51 f0       	breq	.+20     	; 0x516 <TIMER_COUNTER0enable+0x54>
     502:	41 30       	cpi	r20, 0x01	; 1
     504:	71 f4       	brne	.+28     	; 0x522 <TIMER_COUNTER0enable+0x60>
     506:	27 b7       	in	r18, 0x37	; 55
     508:	21 60       	ori	r18, 0x01	; 1
     50a:	27 bf       	out	0x37, r18	; 55
     50c:	0a c0       	rjmp	.+20     	; 0x522 <TIMER_COUNTER0enable+0x60>
     50e:	27 b7       	in	r18, 0x37	; 55
     510:	22 60       	ori	r18, 0x02	; 2
     512:	27 bf       	out	0x37, r18	; 55
     514:	06 c0       	rjmp	.+12     	; 0x522 <TIMER_COUNTER0enable+0x60>
     516:	27 b7       	in	r18, 0x37	; 55
     518:	21 60       	ori	r18, 0x01	; 1
     51a:	27 bf       	out	0x37, r18	; 55
     51c:	27 b7       	in	r18, 0x37	; 55
     51e:	22 60       	ori	r18, 0x02	; 2
     520:	27 bf       	out	0x37, r18	; 55
     522:	28 e9       	ldi	r18, 0x98	; 152
     524:	31 e0       	ldi	r19, 0x01	; 1
     526:	fc 01       	movw	r30, r24
     528:	31 83       	std	Z+1, r19	; 0x01
     52a:	20 83       	st	Z, r18
     52c:	23 eb       	ldi	r18, 0xB3	; 179
     52e:	31 e0       	ldi	r19, 0x01	; 1
     530:	37 83       	std	Z+7, r19	; 0x07
     532:	26 83       	std	Z+6, r18	; 0x06
     534:	20 e5       	ldi	r18, 0x50	; 80
     536:	31 e0       	ldi	r19, 0x01	; 1
     538:	35 87       	std	Z+13, r19	; 0x0d
     53a:	24 87       	std	Z+12, r18	; 0x0c
     53c:	25 eb       	ldi	r18, 0xB5	; 181
     53e:	31 e0       	ldi	r19, 0x01	; 1
     540:	37 87       	std	Z+15, r19	; 0x0f
     542:	26 87       	std	Z+14, r18	; 0x0e
     544:	08 95       	ret

00000546 <TIMER_COUNTER1enable>:
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	dc 01       	movw	r26, r24
     54c:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <timer1_state>
     550:	8f b5       	in	r24, 0x2f	; 47
     552:	8c 7f       	andi	r24, 0xFC	; 252
     554:	8f bd       	out	0x2f, r24	; 47
     556:	8e b5       	in	r24, 0x2e	; 46
     558:	87 7e       	andi	r24, 0xE7	; 231
     55a:	8e bd       	out	0x2e, r24	; 46
     55c:	06 2f       	mov	r16, r22
     55e:	10 e0       	ldi	r17, 0x00	; 0
     560:	f8 01       	movw	r30, r16
     562:	31 97       	sbiw	r30, 0x01	; 1
     564:	ef 30       	cpi	r30, 0x0F	; 15
     566:	f1 05       	cpc	r31, r1
     568:	08 f0       	brcs	.+2      	; 0x56c <TIMER_COUNTER1enable+0x26>
     56a:	5a c0       	rjmp	.+180    	; 0x620 <TIMER_COUNTER1enable+0xda>
     56c:	ea 5b       	subi	r30, 0xBA	; 186
     56e:	ff 4f       	sbci	r31, 0xFF	; 255
     570:	0c 94 c6 12 	jmp	0x258c	; 0x258c <__tablejump2__>
     574:	8f b5       	in	r24, 0x2f	; 47
     576:	81 60       	ori	r24, 0x01	; 1
     578:	8f bd       	out	0x2f, r24	; 47
     57a:	52 c0       	rjmp	.+164    	; 0x620 <TIMER_COUNTER1enable+0xda>
     57c:	8f b5       	in	r24, 0x2f	; 47
     57e:	82 60       	ori	r24, 0x02	; 2
     580:	8f bd       	out	0x2f, r24	; 47
     582:	4e c0       	rjmp	.+156    	; 0x620 <TIMER_COUNTER1enable+0xda>
     584:	8f b5       	in	r24, 0x2f	; 47
     586:	83 60       	ori	r24, 0x03	; 3
     588:	8f bd       	out	0x2f, r24	; 47
     58a:	4a c0       	rjmp	.+148    	; 0x620 <TIMER_COUNTER1enable+0xda>
     58c:	8e b5       	in	r24, 0x2e	; 46
     58e:	88 60       	ori	r24, 0x08	; 8
     590:	8e bd       	out	0x2e, r24	; 46
     592:	46 c0       	rjmp	.+140    	; 0x620 <TIMER_COUNTER1enable+0xda>
     594:	8f b5       	in	r24, 0x2f	; 47
     596:	81 60       	ori	r24, 0x01	; 1
     598:	8f bd       	out	0x2f, r24	; 47
     59a:	8e b5       	in	r24, 0x2e	; 46
     59c:	88 60       	ori	r24, 0x08	; 8
     59e:	8e bd       	out	0x2e, r24	; 46
     5a0:	3f c0       	rjmp	.+126    	; 0x620 <TIMER_COUNTER1enable+0xda>
     5a2:	8f b5       	in	r24, 0x2f	; 47
     5a4:	82 60       	ori	r24, 0x02	; 2
     5a6:	8f bd       	out	0x2f, r24	; 47
     5a8:	8e b5       	in	r24, 0x2e	; 46
     5aa:	88 60       	ori	r24, 0x08	; 8
     5ac:	8e bd       	out	0x2e, r24	; 46
     5ae:	38 c0       	rjmp	.+112    	; 0x620 <TIMER_COUNTER1enable+0xda>
     5b0:	8f b5       	in	r24, 0x2f	; 47
     5b2:	83 60       	ori	r24, 0x03	; 3
     5b4:	8f bd       	out	0x2f, r24	; 47
     5b6:	8e b5       	in	r24, 0x2e	; 46
     5b8:	88 60       	ori	r24, 0x08	; 8
     5ba:	8e bd       	out	0x2e, r24	; 46
     5bc:	31 c0       	rjmp	.+98     	; 0x620 <TIMER_COUNTER1enable+0xda>
     5be:	8e b5       	in	r24, 0x2e	; 46
     5c0:	80 61       	ori	r24, 0x10	; 16
     5c2:	8e bd       	out	0x2e, r24	; 46
     5c4:	2d c0       	rjmp	.+90     	; 0x620 <TIMER_COUNTER1enable+0xda>
     5c6:	8f b5       	in	r24, 0x2f	; 47
     5c8:	81 60       	ori	r24, 0x01	; 1
     5ca:	8f bd       	out	0x2f, r24	; 47
     5cc:	8e b5       	in	r24, 0x2e	; 46
     5ce:	80 61       	ori	r24, 0x10	; 16
     5d0:	8e bd       	out	0x2e, r24	; 46
     5d2:	26 c0       	rjmp	.+76     	; 0x620 <TIMER_COUNTER1enable+0xda>
     5d4:	8f b5       	in	r24, 0x2f	; 47
     5d6:	82 60       	ori	r24, 0x02	; 2
     5d8:	8f bd       	out	0x2f, r24	; 47
     5da:	8e b5       	in	r24, 0x2e	; 46
     5dc:	80 61       	ori	r24, 0x10	; 16
     5de:	8e bd       	out	0x2e, r24	; 46
     5e0:	1f c0       	rjmp	.+62     	; 0x620 <TIMER_COUNTER1enable+0xda>
     5e2:	8f b5       	in	r24, 0x2f	; 47
     5e4:	83 60       	ori	r24, 0x03	; 3
     5e6:	8f bd       	out	0x2f, r24	; 47
     5e8:	8e b5       	in	r24, 0x2e	; 46
     5ea:	80 61       	ori	r24, 0x10	; 16
     5ec:	8e bd       	out	0x2e, r24	; 46
     5ee:	18 c0       	rjmp	.+48     	; 0x620 <TIMER_COUNTER1enable+0xda>
     5f0:	8e b5       	in	r24, 0x2e	; 46
     5f2:	88 61       	ori	r24, 0x18	; 24
     5f4:	8e bd       	out	0x2e, r24	; 46
     5f6:	14 c0       	rjmp	.+40     	; 0x620 <TIMER_COUNTER1enable+0xda>
     5f8:	8f b5       	in	r24, 0x2f	; 47
     5fa:	81 60       	ori	r24, 0x01	; 1
     5fc:	8f bd       	out	0x2f, r24	; 47
     5fe:	8e b5       	in	r24, 0x2e	; 46
     600:	88 61       	ori	r24, 0x18	; 24
     602:	8e bd       	out	0x2e, r24	; 46
     604:	0d c0       	rjmp	.+26     	; 0x620 <TIMER_COUNTER1enable+0xda>
     606:	8f b5       	in	r24, 0x2f	; 47
     608:	82 60       	ori	r24, 0x02	; 2
     60a:	8f bd       	out	0x2f, r24	; 47
     60c:	8e b5       	in	r24, 0x2e	; 46
     60e:	88 61       	ori	r24, 0x18	; 24
     610:	8e bd       	out	0x2e, r24	; 46
     612:	06 c0       	rjmp	.+12     	; 0x620 <TIMER_COUNTER1enable+0xda>
     614:	8f b5       	in	r24, 0x2f	; 47
     616:	83 60       	ori	r24, 0x03	; 3
     618:	8f bd       	out	0x2f, r24	; 47
     61a:	8e b5       	in	r24, 0x2e	; 46
     61c:	88 61       	ori	r24, 0x18	; 24
     61e:	8e bd       	out	0x2e, r24	; 46
     620:	8f b5       	in	r24, 0x2f	; 47
     622:	83 70       	andi	r24, 0x03	; 3
     624:	8f bd       	out	0x2f, r24	; 47
     626:	87 b7       	in	r24, 0x37	; 55
     628:	83 7c       	andi	r24, 0xC3	; 195
     62a:	87 bf       	out	0x37, r24	; 55
     62c:	ed e7       	ldi	r30, 0x7D	; 125
     62e:	f0 e0       	ldi	r31, 0x00	; 0
     630:	80 81       	ld	r24, Z
     632:	8e 7f       	andi	r24, 0xFE	; 254
     634:	80 83       	st	Z, r24
     636:	50 e0       	ldi	r21, 0x00	; 0
     638:	fa 01       	movw	r30, r20
     63a:	31 97       	sbiw	r30, 0x01	; 1
     63c:	ec 30       	cpi	r30, 0x0C	; 12
     63e:	f1 05       	cpc	r31, r1
     640:	08 f0       	brcs	.+2      	; 0x644 <TIMER_COUNTER1enable+0xfe>
     642:	44 c0       	rjmp	.+136    	; 0x6cc <TIMER_COUNTER1enable+0x186>
     644:	eb 5a       	subi	r30, 0xAB	; 171
     646:	ff 4f       	sbci	r31, 0xFF	; 255
     648:	0c 94 c6 12 	jmp	0x258c	; 0x258c <__tablejump2__>
     64c:	87 b7       	in	r24, 0x37	; 55
     64e:	84 60       	ori	r24, 0x04	; 4
     650:	87 bf       	out	0x37, r24	; 55
     652:	3c c0       	rjmp	.+120    	; 0x6cc <TIMER_COUNTER1enable+0x186>
     654:	87 b7       	in	r24, 0x37	; 55
     656:	80 61       	ori	r24, 0x10	; 16
     658:	87 bf       	out	0x37, r24	; 55
     65a:	38 c0       	rjmp	.+112    	; 0x6cc <TIMER_COUNTER1enable+0x186>
     65c:	87 b7       	in	r24, 0x37	; 55
     65e:	88 60       	ori	r24, 0x08	; 8
     660:	87 bf       	out	0x37, r24	; 55
     662:	34 c0       	rjmp	.+104    	; 0x6cc <TIMER_COUNTER1enable+0x186>
     664:	ed e7       	ldi	r30, 0x7D	; 125
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	81 60       	ori	r24, 0x01	; 1
     66c:	80 83       	st	Z, r24
     66e:	2e c0       	rjmp	.+92     	; 0x6cc <TIMER_COUNTER1enable+0x186>
     670:	87 b7       	in	r24, 0x37	; 55
     672:	80 62       	ori	r24, 0x20	; 32
     674:	87 bf       	out	0x37, r24	; 55
     676:	2a c0       	rjmp	.+84     	; 0x6cc <TIMER_COUNTER1enable+0x186>
     678:	87 b7       	in	r24, 0x37	; 55
     67a:	84 61       	ori	r24, 0x14	; 20
     67c:	87 bf       	out	0x37, r24	; 55
     67e:	26 c0       	rjmp	.+76     	; 0x6cc <TIMER_COUNTER1enable+0x186>
     680:	87 b7       	in	r24, 0x37	; 55
     682:	8c 60       	ori	r24, 0x0C	; 12
     684:	87 bf       	out	0x37, r24	; 55
     686:	22 c0       	rjmp	.+68     	; 0x6cc <TIMER_COUNTER1enable+0x186>
     688:	87 b7       	in	r24, 0x37	; 55
     68a:	84 60       	ori	r24, 0x04	; 4
     68c:	87 bf       	out	0x37, r24	; 55
     68e:	ed e7       	ldi	r30, 0x7D	; 125
     690:	f0 e0       	ldi	r31, 0x00	; 0
     692:	80 81       	ld	r24, Z
     694:	81 60       	ori	r24, 0x01	; 1
     696:	80 83       	st	Z, r24
     698:	19 c0       	rjmp	.+50     	; 0x6cc <TIMER_COUNTER1enable+0x186>
     69a:	87 b7       	in	r24, 0x37	; 55
     69c:	84 62       	ori	r24, 0x24	; 36
     69e:	87 bf       	out	0x37, r24	; 55
     6a0:	15 c0       	rjmp	.+42     	; 0x6cc <TIMER_COUNTER1enable+0x186>
     6a2:	87 b7       	in	r24, 0x37	; 55
     6a4:	8c 61       	ori	r24, 0x1C	; 28
     6a6:	87 bf       	out	0x37, r24	; 55
     6a8:	11 c0       	rjmp	.+34     	; 0x6cc <TIMER_COUNTER1enable+0x186>
     6aa:	87 b7       	in	r24, 0x37	; 55
     6ac:	8c 61       	ori	r24, 0x1C	; 28
     6ae:	87 bf       	out	0x37, r24	; 55
     6b0:	ed e7       	ldi	r30, 0x7D	; 125
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	80 81       	ld	r24, Z
     6b6:	81 60       	ori	r24, 0x01	; 1
     6b8:	80 83       	st	Z, r24
     6ba:	08 c0       	rjmp	.+16     	; 0x6cc <TIMER_COUNTER1enable+0x186>
     6bc:	87 b7       	in	r24, 0x37	; 55
     6be:	88 61       	ori	r24, 0x18	; 24
     6c0:	87 bf       	out	0x37, r24	; 55
     6c2:	ed e7       	ldi	r30, 0x7D	; 125
     6c4:	f0 e0       	ldi	r31, 0x00	; 0
     6c6:	80 81       	ld	r24, Z
     6c8:	81 60       	ori	r24, 0x01	; 1
     6ca:	80 83       	st	Z, r24
     6cc:	86 e0       	ldi	r24, 0x06	; 6
     6ce:	92 e0       	ldi	r25, 0x02	; 2
     6d0:	11 96       	adiw	r26, 0x01	; 1
     6d2:	9c 93       	st	X, r25
     6d4:	8e 93       	st	-X, r24
     6d6:	8e e1       	ldi	r24, 0x1E	; 30
     6d8:	92 e0       	ldi	r25, 0x02	; 2
     6da:	13 96       	adiw	r26, 0x03	; 3
     6dc:	9c 93       	st	X, r25
     6de:	8e 93       	st	-X, r24
     6e0:	12 97       	sbiw	r26, 0x02	; 2
     6e2:	86 e3       	ldi	r24, 0x36	; 54
     6e4:	92 e0       	ldi	r25, 0x02	; 2
     6e6:	15 96       	adiw	r26, 0x05	; 5
     6e8:	9c 93       	st	X, r25
     6ea:	8e 93       	st	-X, r24
     6ec:	14 97       	sbiw	r26, 0x04	; 4
     6ee:	8e e4       	ldi	r24, 0x4E	; 78
     6f0:	92 e0       	ldi	r25, 0x02	; 2
     6f2:	17 96       	adiw	r26, 0x07	; 7
     6f4:	9c 93       	st	X, r25
     6f6:	8e 93       	st	-X, r24
     6f8:	16 97       	sbiw	r26, 0x06	; 6
     6fa:	81 e5       	ldi	r24, 0x51	; 81
     6fc:	92 e0       	ldi	r25, 0x02	; 2
     6fe:	19 96       	adiw	r26, 0x09	; 9
     700:	9c 93       	st	X, r25
     702:	8e 93       	st	-X, r24
     704:	18 97       	sbiw	r26, 0x08	; 8
     706:	84 e5       	ldi	r24, 0x54	; 84
     708:	92 e0       	ldi	r25, 0x02	; 2
     70a:	1b 96       	adiw	r26, 0x0b	; 11
     70c:	9c 93       	st	X, r25
     70e:	8e 93       	st	-X, r24
     710:	1a 97       	sbiw	r26, 0x0a	; 10
     712:	8c eb       	ldi	r24, 0xBC	; 188
     714:	91 e0       	ldi	r25, 0x01	; 1
     716:	1d 96       	adiw	r26, 0x0d	; 13
     718:	9c 93       	st	X, r25
     71a:	8e 93       	st	-X, r24
     71c:	1c 97       	sbiw	r26, 0x0c	; 12
     71e:	89 e5       	ldi	r24, 0x59	; 89
     720:	92 e0       	ldi	r25, 0x02	; 2
     722:	1f 96       	adiw	r26, 0x0f	; 15
     724:	9c 93       	st	X, r25
     726:	8e 93       	st	-X, r24
     728:	1e 97       	sbiw	r26, 0x0e	; 14
     72a:	cd 01       	movw	r24, r26
     72c:	1f 91       	pop	r17
     72e:	0f 91       	pop	r16
     730:	08 95       	ret

00000732 <__vector_16>:
	timer3_state=0;
}
/***Interrupt***/
// So that main will not freeze when not defined, therefore exclude here! before use.
//ISR(TIMER0_COMP_vect){ }
ISR(TIMER0_OVF_vect){ }
     732:	1f 92       	push	r1
     734:	0f 92       	push	r0
     736:	0f b6       	in	r0, 0x3f	; 63
     738:	0f 92       	push	r0
     73a:	11 24       	eor	r1, r1
     73c:	0f 90       	pop	r0
     73e:	0f be       	out	0x3f, r0	; 63
     740:	0f 90       	pop	r0
     742:	1f 90       	pop	r1
     744:	18 95       	reti

00000746 <__vector_11>:
ISR(TIMER1_CAPT_vect){ }
     746:	1f 92       	push	r1
     748:	0f 92       	push	r0
     74a:	0f b6       	in	r0, 0x3f	; 63
     74c:	0f 92       	push	r0
     74e:	11 24       	eor	r1, r1
     750:	0f 90       	pop	r0
     752:	0f be       	out	0x3f, r0	; 63
     754:	0f 90       	pop	r0
     756:	1f 90       	pop	r1
     758:	18 95       	reti

0000075a <__vector_12>:
ISR(TIMER1_COMPA_vect){ }
     75a:	1f 92       	push	r1
     75c:	0f 92       	push	r0
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	0f 92       	push	r0
     762:	11 24       	eor	r1, r1
     764:	0f 90       	pop	r0
     766:	0f be       	out	0x3f, r0	; 63
     768:	0f 90       	pop	r0
     76a:	1f 90       	pop	r1
     76c:	18 95       	reti

0000076e <__vector_13>:
ISR(TIMER1_COMPB_vect){ }
     76e:	1f 92       	push	r1
     770:	0f 92       	push	r0
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	0f 92       	push	r0
     776:	11 24       	eor	r1, r1
     778:	0f 90       	pop	r0
     77a:	0f be       	out	0x3f, r0	; 63
     77c:	0f 90       	pop	r0
     77e:	1f 90       	pop	r1
     780:	18 95       	reti

00000782 <__vector_24>:
ISR(TIMER1_COMPC_vect){ }
     782:	1f 92       	push	r1
     784:	0f 92       	push	r0
     786:	0f b6       	in	r0, 0x3f	; 63
     788:	0f 92       	push	r0
     78a:	11 24       	eor	r1, r1
     78c:	0f 90       	pop	r0
     78e:	0f be       	out	0x3f, r0	; 63
     790:	0f 90       	pop	r0
     792:	1f 90       	pop	r1
     794:	18 95       	reti

00000796 <__vector_14>:
ISR(TIMER1_OVF_vect){ }
     796:	1f 92       	push	r1
     798:	0f 92       	push	r0
     79a:	0f b6       	in	r0, 0x3f	; 63
     79c:	0f 92       	push	r0
     79e:	11 24       	eor	r1, r1
     7a0:	0f 90       	pop	r0
     7a2:	0f be       	out	0x3f, r0	; 63
     7a4:	0f 90       	pop	r0
     7a6:	1f 90       	pop	r1
     7a8:	18 95       	reti

000007aa <__vector_10>:
ISR(TIMER2_OVF_vect){ }
     7aa:	1f 92       	push	r1
     7ac:	0f 92       	push	r0
     7ae:	0f b6       	in	r0, 0x3f	; 63
     7b0:	0f 92       	push	r0
     7b2:	11 24       	eor	r1, r1
     7b4:	0f 90       	pop	r0
     7b6:	0f be       	out	0x3f, r0	; 63
     7b8:	0f 90       	pop	r0
     7ba:	1f 90       	pop	r1
     7bc:	18 95       	reti

000007be <__vector_25>:
ISR(TIMER3_CAPT_vect){ }
     7be:	1f 92       	push	r1
     7c0:	0f 92       	push	r0
     7c2:	0f b6       	in	r0, 0x3f	; 63
     7c4:	0f 92       	push	r0
     7c6:	11 24       	eor	r1, r1
     7c8:	0f 90       	pop	r0
     7ca:	0f be       	out	0x3f, r0	; 63
     7cc:	0f 90       	pop	r0
     7ce:	1f 90       	pop	r1
     7d0:	18 95       	reti

000007d2 <__vector_26>:
ISR(TIMER3_COMPA_vect){ }
     7d2:	1f 92       	push	r1
     7d4:	0f 92       	push	r0
     7d6:	0f b6       	in	r0, 0x3f	; 63
     7d8:	0f 92       	push	r0
     7da:	11 24       	eor	r1, r1
     7dc:	0f 90       	pop	r0
     7de:	0f be       	out	0x3f, r0	; 63
     7e0:	0f 90       	pop	r0
     7e2:	1f 90       	pop	r1
     7e4:	18 95       	reti

000007e6 <__vector_27>:
ISR(TIMER3_COMPB_vect){ }
     7e6:	1f 92       	push	r1
     7e8:	0f 92       	push	r0
     7ea:	0f b6       	in	r0, 0x3f	; 63
     7ec:	0f 92       	push	r0
     7ee:	11 24       	eor	r1, r1
     7f0:	0f 90       	pop	r0
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	0f 90       	pop	r0
     7f6:	1f 90       	pop	r1
     7f8:	18 95       	reti

000007fa <__vector_28>:
ISR(TIMER3_COMPC_vect){ }
     7fa:	1f 92       	push	r1
     7fc:	0f 92       	push	r0
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	0f 92       	push	r0
     802:	11 24       	eor	r1, r1
     804:	0f 90       	pop	r0
     806:	0f be       	out	0x3f, r0	; 63
     808:	0f 90       	pop	r0
     80a:	1f 90       	pop	r1
     80c:	18 95       	reti

0000080e <__vector_29>:
ISR(TIMER3_OVF_vect){ }
     80e:	1f 92       	push	r1
     810:	0f 92       	push	r0
     812:	0f b6       	in	r0, 0x3f	; 63
     814:	0f 92       	push	r0
     816:	11 24       	eor	r1, r1
     818:	0f 90       	pop	r0
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	0f 90       	pop	r0
     81e:	1f 90       	pop	r1
     820:	18 95       	reti

00000822 <__vector_18>:
	}else{
		uart1_index=0;
		ret=uart1_msg;
	}
	return ret;
}
     822:	1f 92       	push	r1
     824:	0f 92       	push	r0
     826:	0f b6       	in	r0, 0x3f	; 63
     828:	0f 92       	push	r0
     82a:	11 24       	eor	r1, r1
     82c:	0b b6       	in	r0, 0x3b	; 59
     82e:	0f 92       	push	r0
     830:	8f 93       	push	r24
     832:	9f 93       	push	r25
     834:	ef 93       	push	r30
     836:	ff 93       	push	r31
     838:	8b b1       	in	r24, 0x0b	; 11
     83a:	9a b1       	in	r25, 0x0a	; 10
     83c:	88 71       	andi	r24, 0x18	; 24
     83e:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <UART_LastRxError>
     842:	e0 91 79 02 	lds	r30, 0x0279	; 0x800279 <UART_RxHead>
     846:	ef 5f       	subi	r30, 0xFF	; 255
     848:	ef 73       	andi	r30, 0x3F	; 63
     84a:	90 91 7a 02 	lds	r25, 0x027A	; 0x80027a <UART_RxTail>
     84e:	e9 13       	cpse	r30, r25
     850:	04 c0       	rjmp	.+8      	; 0x85a <__vector_18+0x38>
     852:	82 e0       	ldi	r24, 0x02	; 2
     854:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <UART_LastRxError>
     858:	0f c0       	rjmp	.+30     	; 0x878 <__vector_18+0x56>
     85a:	9c b1       	in	r25, 0x0c	; 12
     85c:	e0 93 79 02 	sts	0x0279, r30	; 0x800279 <UART_RxHead>
     860:	88 23       	and	r24, r24
     862:	31 f0       	breq	.+12     	; 0x870 <__vector_18+0x4e>
     864:	f0 e0       	ldi	r31, 0x00	; 0
     866:	e4 58       	subi	r30, 0x84	; 132
     868:	fd 4f       	sbci	r31, 0xFD	; 253
     86a:	88 e5       	ldi	r24, 0x58	; 88
     86c:	80 83       	st	Z, r24
     86e:	04 c0       	rjmp	.+8      	; 0x878 <__vector_18+0x56>
     870:	f0 e0       	ldi	r31, 0x00	; 0
     872:	e4 58       	subi	r30, 0x84	; 132
     874:	fd 4f       	sbci	r31, 0xFD	; 253
     876:	90 83       	st	Z, r25
     878:	ff 91       	pop	r31
     87a:	ef 91       	pop	r30
     87c:	9f 91       	pop	r25
     87e:	8f 91       	pop	r24
     880:	0f 90       	pop	r0
     882:	0b be       	out	0x3b, r0	; 59
     884:	0f 90       	pop	r0
     886:	0f be       	out	0x3f, r0	; 63
     888:	0f 90       	pop	r0
     88a:	1f 90       	pop	r1
     88c:	18 95       	reti

0000088e <__vector_19>:
     88e:	1f 92       	push	r1
     890:	0f 92       	push	r0
     892:	0f b6       	in	r0, 0x3f	; 63
     894:	0f 92       	push	r0
     896:	11 24       	eor	r1, r1
     898:	0b b6       	in	r0, 0x3b	; 59
     89a:	0f 92       	push	r0
     89c:	8f 93       	push	r24
     89e:	9f 93       	push	r25
     8a0:	ef 93       	push	r30
     8a2:	ff 93       	push	r31
     8a4:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <UART_TxTail>
     8a8:	f0 e0       	ldi	r31, 0x00	; 0
     8aa:	e7 5c       	subi	r30, 0xC7	; 199
     8ac:	fd 4f       	sbci	r31, 0xFD	; 253
     8ae:	80 81       	ld	r24, Z
     8b0:	8c b9       	out	0x0c, r24	; 12
     8b2:	10 82       	st	Z, r1
     8b4:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <UART_TxTail>
     8b8:	8f 5f       	subi	r24, 0xFF	; 255
     8ba:	8f 73       	andi	r24, 0x3F	; 63
     8bc:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <UART_TxTail>
     8c0:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <UART_TxHead>
     8c4:	89 13       	cpse	r24, r25
     8c6:	01 c0       	rjmp	.+2      	; 0x8ca <__vector_19+0x3c>
     8c8:	55 98       	cbi	0x0a, 5	; 10
     8ca:	ff 91       	pop	r31
     8cc:	ef 91       	pop	r30
     8ce:	9f 91       	pop	r25
     8d0:	8f 91       	pop	r24
     8d2:	0f 90       	pop	r0
     8d4:	0b be       	out	0x3b, r0	; 59
     8d6:	0f 90       	pop	r0
     8d8:	0f be       	out	0x3f, r0	; 63
     8da:	0f 90       	pop	r0
     8dc:	1f 90       	pop	r1
     8de:	18 95       	reti

000008e0 <__vector_30>:
	UART1_TxHead = UART1_TxTail;
}
/***Interrupt***/
/***SIGNAL(UART1_RECEIVE_INTERRUPT)***/
SIGNAL(UART1_RECEIVE_INTERRUPT)
{
     8e0:	1f 92       	push	r1
     8e2:	0f 92       	push	r0
     8e4:	0f b6       	in	r0, 0x3f	; 63
     8e6:	0f 92       	push	r0
     8e8:	11 24       	eor	r1, r1
     8ea:	0b b6       	in	r0, 0x3b	; 59
     8ec:	0f 92       	push	r0
     8ee:	8f 93       	push	r24
     8f0:	9f 93       	push	r25
     8f2:	ef 93       	push	r30
     8f4:	ff 93       	push	r31
    unsigned char tmphead;
	unsigned char data;
	unsigned char bit9;
    unsigned char usr;
    /***read UART status register and UART data register***/
	usr  = UART1_STATUS;
     8f6:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    bit9 = UART1_CONTROL;
     8fa:	90 91 9a 00 	lds	r25, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    bit9 = 0x01 & (bit9>>1);
    /***/
    UART1_LastRxError = (usr & (_BV(FE1)|_BV(DOR1)));
     8fe:	88 71       	andi	r24, 0x18	; 24
     900:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <UART1_LastRxError>
	/***calculate buffer index***/
    tmphead = ( UART1_RxHead + 1) & UART_RX_BUFFER_MASK;
     904:	e0 91 b5 01 	lds	r30, 0x01B5	; 0x8001b5 <UART1_RxHead>
     908:	ef 5f       	subi	r30, 0xFF	; 255
     90a:	ef 73       	andi	r30, 0x3F	; 63
    if ( tmphead == UART1_RxTail ) {	
     90c:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <UART1_RxTail>
     910:	e9 13       	cpse	r30, r25
     912:	04 c0       	rjmp	.+8      	; 0x91c <__vector_30+0x3c>
        /***error: receive buffer overflow, caracter is lost***/
        UART1_LastRxError = UART_BUFFER_OVERFLOW >> 8; 
     914:	82 e0       	ldi	r24, 0x02	; 2
     916:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <UART1_LastRxError>
     91a:	10 c0       	rjmp	.+32     	; 0x93c <__vector_30+0x5c>
	}else{
		data = UART1_DATA;
     91c:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
        /***store new index***/
        UART1_RxHead = tmphead;
     920:	e0 93 b5 01 	sts	0x01B5, r30	; 0x8001b5 <UART1_RxHead>
		if(UART1_LastRxError){
     924:	88 23       	and	r24, r24
     926:	31 f0       	breq	.+12     	; 0x934 <__vector_30+0x54>
			/***store indication data error in buffer***/
			UART1_RxBuf[tmphead] = 'X';
     928:	f0 e0       	ldi	r31, 0x00	; 0
     92a:	ee 58       	subi	r30, 0x8E	; 142
     92c:	fe 4f       	sbci	r31, 0xFE	; 254
     92e:	88 e5       	ldi	r24, 0x58	; 88
     930:	80 83       	st	Z, r24
     932:	04 c0       	rjmp	.+8      	; 0x93c <__vector_30+0x5c>
		}else{
			/***store received data in buffer***/
			UART1_RxBuf[tmphead] = data;
     934:	f0 e0       	ldi	r31, 0x00	; 0
     936:	ee 58       	subi	r30, 0x8E	; 142
     938:	fe 4f       	sbci	r31, 0xFE	; 254
     93a:	90 83       	st	Z, r25
		}
    }
}
     93c:	ff 91       	pop	r31
     93e:	ef 91       	pop	r30
     940:	9f 91       	pop	r25
     942:	8f 91       	pop	r24
     944:	0f 90       	pop	r0
     946:	0b be       	out	0x3b, r0	; 59
     948:	0f 90       	pop	r0
     94a:	0f be       	out	0x3f, r0	; 63
     94c:	0f 90       	pop	r0
     94e:	1f 90       	pop	r1
     950:	18 95       	reti

00000952 <__vector_31>:
/***SIGNAL(UART1_TRANSMIT_INTERRUPT)***/
SIGNAL(UART1_TRANSMIT_INTERRUPT)
{
     952:	1f 92       	push	r1
     954:	0f 92       	push	r0
     956:	0f b6       	in	r0, 0x3f	; 63
     958:	0f 92       	push	r0
     95a:	11 24       	eor	r1, r1
     95c:	0b b6       	in	r0, 0x3b	; 59
     95e:	0f 92       	push	r0
     960:	8f 93       	push	r24
     962:	9f 93       	push	r25
     964:	ef 93       	push	r30
     966:	ff 93       	push	r31
	uint8_t tail = UART1_TxTail;
	UART1_DATA = UART1_TxBuf[tail];
     968:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <UART1_TxTail>
     96c:	f0 e0       	ldi	r31, 0x00	; 0
     96e:	e7 50       	subi	r30, 0x07	; 7
     970:	fe 4f       	sbci	r31, 0xFE	; 254
     972:	80 81       	ld	r24, Z
     974:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
	UART1_TxBuf[tail]='\0';
     978:	10 82       	st	Z, r1
	UART1_TxTail = (UART1_TxTail + 1) & UART_TX_BUFFER_MASK;
     97a:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <UART1_TxTail>
     97e:	8f 5f       	subi	r24, 0xFF	; 255
     980:	8f 73       	andi	r24, 0x3F	; 63
     982:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <UART1_TxTail>
	if ( UART1_TxTail != UART1_TxHead )
     986:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <UART1_TxHead>
     98a:	89 13       	cpse	r24, r25
     98c:	05 c0       	rjmp	.+10     	; 0x998 <__vector_31+0x46>
        ;
    else
		UART1_CONTROL &= ~_BV(UART1_UDRIE);
     98e:	ea e9       	ldi	r30, 0x9A	; 154
     990:	f0 e0       	ldi	r31, 0x00	; 0
     992:	80 81       	ld	r24, Z
     994:	8f 7d       	andi	r24, 0xDF	; 223
     996:	80 83       	st	Z, r24
}
     998:	ff 91       	pop	r31
     99a:	ef 91       	pop	r30
     99c:	9f 91       	pop	r25
     99e:	8f 91       	pop	r24
     9a0:	0f 90       	pop	r0
     9a2:	0b be       	out	0x3b, r0	; 59
     9a4:	0f 90       	pop	r0
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	0f 90       	pop	r0
     9aa:	1f 90       	pop	r1
     9ac:	18 95       	reti

000009ae <FUNCpinmatch>:
	return i;
}
uint8_t  bintobcd(uint8_t bin)
{
	return (((bin) / 10) << 4) + ((bin) % 10);
}
     9ae:	68 23       	and	r22, r24
     9b0:	44 23       	and	r20, r20
     9b2:	21 f0       	breq	.+8      	; 0x9bc <FUNCpinmatch+0xe>
     9b4:	86 17       	cp	r24, r22
     9b6:	21 f0       	breq	.+8      	; 0x9c0 <FUNCpinmatch+0x12>
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	08 95       	ret
     9bc:	61 11       	cpse	r22, r1
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	08 95       	ret

000009c2 <FUNChmerge>:
     9c2:	86 2b       	or	r24, r22
     9c4:	08 95       	ret

000009c6 <FUNClmerge>:
     9c6:	86 23       	and	r24, r22
     9c8:	08 95       	ret

000009ca <FUNChh>:
     9ca:	86 23       	and	r24, r22
     9cc:	08 95       	ret

000009ce <FUNCll>:
     9ce:	86 2b       	or	r24, r22
     9d0:	80 95       	com	r24
     9d2:	08 95       	ret

000009d4 <FUNClh>:
     9d4:	86 27       	eor	r24, r22
     9d6:	86 23       	and	r24, r22
     9d8:	08 95       	ret

000009da <FUNChl>:
     9da:	60 95       	com	r22
     9dc:	86 23       	and	r24, r22
     9de:	08 95       	ret

000009e0 <FUNCdiff>:
     9e0:	86 27       	eor	r24, r22
     9e2:	08 95       	ret

000009e4 <FUNCswap>:
     9e4:	cf 92       	push	r12
     9e6:	df 92       	push	r13
     9e8:	ef 92       	push	r14
     9ea:	ff 92       	push	r15
     9ec:	0f 93       	push	r16
     9ee:	1f 93       	push	r17
     9f0:	fc 01       	movw	r30, r24
     9f2:	00 81       	ld	r16, Z
     9f4:	11 81       	ldd	r17, Z+1	; 0x01
     9f6:	22 81       	ldd	r18, Z+2	; 0x02
     9f8:	33 81       	ldd	r19, Z+3	; 0x03
     9fa:	fb 01       	movw	r30, r22
     9fc:	c0 80       	ld	r12, Z
     9fe:	d1 80       	ldd	r13, Z+1	; 0x01
     a00:	e2 80       	ldd	r14, Z+2	; 0x02
     a02:	f3 80       	ldd	r15, Z+3	; 0x03
     a04:	fc 01       	movw	r30, r24
     a06:	c0 82       	st	Z, r12
     a08:	d1 82       	std	Z+1, r13	; 0x01
     a0a:	e2 82       	std	Z+2, r14	; 0x02
     a0c:	f3 82       	std	Z+3, r15	; 0x03
     a0e:	fb 01       	movw	r30, r22
     a10:	00 83       	st	Z, r16
     a12:	11 83       	std	Z+1, r17	; 0x01
     a14:	22 83       	std	Z+2, r18	; 0x02
     a16:	33 83       	std	Z+3, r19	; 0x03
     a18:	1f 91       	pop	r17
     a1a:	0f 91       	pop	r16
     a1c:	ff 90       	pop	r15
     a1e:	ef 90       	pop	r14
     a20:	df 90       	pop	r13
     a22:	cf 90       	pop	r12
     a24:	08 95       	ret

00000a26 <FUNCcopy>:
     a26:	fb 01       	movw	r30, r22
     a28:	20 81       	ld	r18, Z
     a2a:	fc 01       	movw	r30, r24
     a2c:	20 83       	st	Z, r18
     a2e:	22 23       	and	r18, r18
     a30:	39 f0       	breq	.+14     	; 0xa40 <FUNCcopy+0x1a>
     a32:	db 01       	movw	r26, r22
     a34:	11 96       	adiw	r26, 0x01	; 1
     a36:	31 96       	adiw	r30, 0x01	; 1
     a38:	9d 91       	ld	r25, X+
     a3a:	91 93       	st	Z+, r25
     a3c:	91 11       	cpse	r25, r1
     a3e:	fc cf       	rjmp	.-8      	; 0xa38 <FUNCcopy+0x12>
     a40:	08 95       	ret

00000a42 <FUNCsqueeze>:
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	ec 01       	movw	r28, r24
     a48:	98 81       	ld	r25, Y
     a4a:	99 23       	and	r25, r25
     a4c:	99 f0       	breq	.+38     	; 0xa74 <FUNCsqueeze+0x32>
     a4e:	fe 01       	movw	r30, r28
     a50:	31 96       	adiw	r30, 0x01	; 1
     a52:	20 e0       	ldi	r18, 0x00	; 0
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	49 2f       	mov	r20, r25
     a58:	50 e0       	ldi	r21, 0x00	; 0
     a5a:	46 17       	cp	r20, r22
     a5c:	57 07       	cpc	r21, r23
     a5e:	31 f0       	breq	.+12     	; 0xa6c <FUNCsqueeze+0x2a>
     a60:	de 01       	movw	r26, r28
     a62:	a2 0f       	add	r26, r18
     a64:	b3 1f       	adc	r27, r19
     a66:	9c 93       	st	X, r25
     a68:	2f 5f       	subi	r18, 0xFF	; 255
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	91 91       	ld	r25, Z+
     a6e:	91 11       	cpse	r25, r1
     a70:	f2 cf       	rjmp	.-28     	; 0xa56 <FUNCsqueeze+0x14>
     a72:	02 c0       	rjmp	.+4      	; 0xa78 <FUNCsqueeze+0x36>
     a74:	20 e0       	ldi	r18, 0x00	; 0
     a76:	30 e0       	ldi	r19, 0x00	; 0
     a78:	fe 01       	movw	r30, r28
     a7a:	e2 0f       	add	r30, r18
     a7c:	f3 1f       	adc	r31, r19
     a7e:	10 82       	st	Z, r1
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	08 95       	ret

00000a86 <FUNCshellsort>:
     a86:	2f 92       	push	r2
     a88:	3f 92       	push	r3
     a8a:	4f 92       	push	r4
     a8c:	5f 92       	push	r5
     a8e:	6f 92       	push	r6
     a90:	7f 92       	push	r7
     a92:	8f 92       	push	r8
     a94:	9f 92       	push	r9
     a96:	af 92       	push	r10
     a98:	bf 92       	push	r11
     a9a:	cf 92       	push	r12
     a9c:	df 92       	push	r13
     a9e:	ef 92       	push	r14
     aa0:	ff 92       	push	r15
     aa2:	0f 93       	push	r16
     aa4:	1f 93       	push	r17
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	00 d0       	rcall	.+0      	; 0xaac <FUNCshellsort+0x26>
     aac:	00 d0       	rcall	.+0      	; 0xaae <FUNCshellsort+0x28>
     aae:	cd b7       	in	r28, 0x3d	; 61
     ab0:	de b7       	in	r29, 0x3e	; 62
     ab2:	2c 01       	movw	r4, r24
     ab4:	1b 01       	movw	r2, r22
     ab6:	4b 01       	movw	r8, r22
     ab8:	77 23       	and	r23, r23
     aba:	1c f4       	brge	.+6      	; 0xac2 <FUNCshellsort+0x3c>
     abc:	2f ef       	ldi	r18, 0xFF	; 255
     abe:	82 1a       	sub	r8, r18
     ac0:	92 0a       	sbc	r9, r18
     ac2:	95 94       	asr	r9
     ac4:	87 94       	ror	r8
     ac6:	18 14       	cp	r1, r8
     ac8:	19 04       	cpc	r1, r9
     aca:	0c f4       	brge	.+2      	; 0xace <FUNCshellsort+0x48>
     acc:	51 c0       	rjmp	.+162    	; 0xb70 <FUNCshellsort+0xea>
     ace:	6a c0       	rjmp	.+212    	; 0xba4 <FUNCshellsort+0x11e>
     ad0:	96 01       	movw	r18, r12
     ad2:	dd 20       	and	r13, r13
     ad4:	9c f1       	brlt	.+102    	; 0xb3c <FUNCshellsort+0xb6>
     ad6:	f5 01       	movw	r30, r10
     ad8:	40 81       	ld	r20, Z
     ada:	51 81       	ldd	r21, Z+1	; 0x01
     adc:	f4 01       	movw	r30, r8
     ade:	60 81       	ld	r22, Z
     ae0:	71 81       	ldd	r23, Z+1	; 0x01
     ae2:	64 17       	cp	r22, r20
     ae4:	75 07       	cpc	r23, r21
     ae6:	54 f5       	brge	.+84     	; 0xb3c <FUNCshellsort+0xb6>
     ae8:	8c 01       	movw	r16, r24
     aea:	0a 0d       	add	r16, r10
     aec:	1b 1d       	adc	r17, r11
     aee:	d4 01       	movw	r26, r8
     af0:	bc 82       	std	Y+4, r11	; 0x04
     af2:	ab 82       	std	Y+3, r10	; 0x03
     af4:	ba 82       	std	Y+2, r11	; 0x02
     af6:	a9 82       	std	Y+1, r10	; 0x01
     af8:	eb 81       	ldd	r30, Y+3	; 0x03
     afa:	fc 81       	ldd	r31, Y+4	; 0x04
     afc:	71 83       	std	Z+1, r23	; 0x01
     afe:	60 83       	st	Z, r22
     b00:	11 96       	adiw	r26, 0x01	; 1
     b02:	5c 93       	st	X, r21
     b04:	4e 93       	st	-X, r20
     b06:	2e 19       	sub	r18, r14
     b08:	3f 09       	sbc	r19, r15
     b0a:	c2 f0       	brmi	.+48     	; 0xb3c <FUNCshellsort+0xb6>
     b0c:	f8 01       	movw	r30, r16
     b0e:	40 81       	ld	r20, Z
     b10:	51 81       	ldd	r21, Z+1	; 0x01
     b12:	e9 81       	ldd	r30, Y+1	; 0x01
     b14:	fa 81       	ldd	r31, Y+2	; 0x02
     b16:	60 81       	ld	r22, Z
     b18:	71 81       	ldd	r23, Z+1	; 0x01
     b1a:	08 0f       	add	r16, r24
     b1c:	19 1f       	adc	r17, r25
     b1e:	e8 0f       	add	r30, r24
     b20:	f9 1f       	adc	r31, r25
     b22:	fa 83       	std	Y+2, r31	; 0x02
     b24:	e9 83       	std	Y+1, r30	; 0x01
     b26:	eb 81       	ldd	r30, Y+3	; 0x03
     b28:	fc 81       	ldd	r31, Y+4	; 0x04
     b2a:	e8 0f       	add	r30, r24
     b2c:	f9 1f       	adc	r31, r25
     b2e:	fc 83       	std	Y+4, r31	; 0x04
     b30:	eb 83       	std	Y+3, r30	; 0x03
     b32:	a8 0f       	add	r26, r24
     b34:	b9 1f       	adc	r27, r25
     b36:	64 17       	cp	r22, r20
     b38:	75 07       	cpc	r23, r21
     b3a:	f4 f2       	brlt	.-68     	; 0xaf8 <FUNCshellsort+0x72>
     b3c:	ff ef       	ldi	r31, 0xFF	; 255
     b3e:	cf 1a       	sub	r12, r31
     b40:	df 0a       	sbc	r13, r31
     b42:	22 e0       	ldi	r18, 0x02	; 2
     b44:	a2 0e       	add	r10, r18
     b46:	b1 1c       	adc	r11, r1
     b48:	e2 e0       	ldi	r30, 0x02	; 2
     b4a:	8e 0e       	add	r8, r30
     b4c:	91 1c       	adc	r9, r1
     b4e:	c6 14       	cp	r12, r6
     b50:	d7 04       	cpc	r13, r7
     b52:	09 f0       	breq	.+2      	; 0xb56 <FUNCshellsort+0xd0>
     b54:	bd cf       	rjmp	.-134    	; 0xad0 <FUNCshellsort+0x4a>
     b56:	47 01       	movw	r8, r14
     b58:	ff 20       	and	r15, r15
     b5a:	1c f4       	brge	.+6      	; 0xb62 <FUNCshellsort+0xdc>
     b5c:	ff ef       	ldi	r31, 0xFF	; 255
     b5e:	8f 1a       	sub	r8, r31
     b60:	9f 0a       	sbc	r9, r31
     b62:	95 94       	asr	r9
     b64:	87 94       	ror	r8
     b66:	18 14       	cp	r1, r8
     b68:	19 04       	cpc	r1, r9
     b6a:	e4 f4       	brge	.+56     	; 0xba4 <FUNCshellsort+0x11e>
     b6c:	74 01       	movw	r14, r8
     b6e:	01 c0       	rjmp	.+2      	; 0xb72 <FUNCshellsort+0xec>
     b70:	74 01       	movw	r14, r8
     b72:	82 14       	cp	r8, r2
     b74:	93 04       	cpc	r9, r3
     b76:	7c f7       	brge	.-34     	; 0xb56 <FUNCshellsort+0xd0>
     b78:	64 01       	movw	r12, r8
     b7a:	ce 18       	sub	r12, r14
     b7c:	df 08       	sbc	r13, r15
     b7e:	56 01       	movw	r10, r12
     b80:	aa 0c       	add	r10, r10
     b82:	bb 1c       	adc	r11, r11
     b84:	a4 0c       	add	r10, r4
     b86:	b5 1c       	adc	r11, r5
     b88:	88 0c       	add	r8, r8
     b8a:	99 1c       	adc	r9, r9
     b8c:	84 0c       	add	r8, r4
     b8e:	95 1c       	adc	r9, r5
     b90:	31 01       	movw	r6, r2
     b92:	6e 18       	sub	r6, r14
     b94:	7f 08       	sbc	r7, r15
     b96:	c7 01       	movw	r24, r14
     b98:	88 0f       	add	r24, r24
     b9a:	99 1f       	adc	r25, r25
     b9c:	91 95       	neg	r25
     b9e:	81 95       	neg	r24
     ba0:	91 09       	sbc	r25, r1
     ba2:	96 cf       	rjmp	.-212    	; 0xad0 <FUNCshellsort+0x4a>
     ba4:	0f 90       	pop	r0
     ba6:	0f 90       	pop	r0
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	df 91       	pop	r29
     bae:	cf 91       	pop	r28
     bb0:	1f 91       	pop	r17
     bb2:	0f 91       	pop	r16
     bb4:	ff 90       	pop	r15
     bb6:	ef 90       	pop	r14
     bb8:	df 90       	pop	r13
     bba:	cf 90       	pop	r12
     bbc:	bf 90       	pop	r11
     bbe:	af 90       	pop	r10
     bc0:	9f 90       	pop	r9
     bc2:	8f 90       	pop	r8
     bc4:	7f 90       	pop	r7
     bc6:	6f 90       	pop	r6
     bc8:	5f 90       	pop	r5
     bca:	4f 90       	pop	r4
     bcc:	3f 90       	pop	r3
     bce:	2f 90       	pop	r2
     bd0:	08 95       	ret

00000bd2 <FUNCpmax>:
     bd2:	86 17       	cp	r24, r22
     bd4:	97 07       	cpc	r25, r23
     bd6:	0c f4       	brge	.+2      	; 0xbda <FUNCpmax+0x8>
     bd8:	cb 01       	movw	r24, r22
     bda:	08 95       	ret

00000bdc <FUNCgcd>:
     bdc:	9b 01       	movw	r18, r22
     bde:	67 2b       	or	r22, r23
     be0:	11 f4       	brne	.+4      	; 0xbe6 <FUNCgcd+0xa>
     be2:	08 95       	ret
     be4:	9a 01       	movw	r18, r20
     be6:	b9 01       	movw	r22, r18
     be8:	0e 94 75 12 	call	0x24ea	; 0x24ea <__divmodhi4>
     bec:	ac 01       	movw	r20, r24
     bee:	82 2f       	mov	r24, r18
     bf0:	93 2f       	mov	r25, r19
     bf2:	41 15       	cp	r20, r1
     bf4:	51 05       	cpc	r21, r1
     bf6:	b1 f7       	brne	.-20     	; 0xbe4 <FUNCgcd+0x8>
     bf8:	08 95       	ret

00000bfa <FUNCstrToInt>:
     bfa:	fc 01       	movw	r30, r24
     bfc:	90 81       	ld	r25, Z
     bfe:	80 ed       	ldi	r24, 0xD0	; 208
     c00:	89 0f       	add	r24, r25
     c02:	8a 30       	cpi	r24, 0x0A	; 10
     c04:	d0 f4       	brcc	.+52     	; 0xc3a <FUNCstrToInt+0x40>
     c06:	31 96       	adiw	r30, 0x01	; 1
     c08:	20 e0       	ldi	r18, 0x00	; 0
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	a9 01       	movw	r20, r18
     c0e:	44 0f       	add	r20, r20
     c10:	55 1f       	adc	r21, r21
     c12:	22 0f       	add	r18, r18
     c14:	33 1f       	adc	r19, r19
     c16:	22 0f       	add	r18, r18
     c18:	33 1f       	adc	r19, r19
     c1a:	22 0f       	add	r18, r18
     c1c:	33 1f       	adc	r19, r19
     c1e:	42 0f       	add	r20, r18
     c20:	53 1f       	adc	r21, r19
     c22:	29 2f       	mov	r18, r25
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	20 53       	subi	r18, 0x30	; 48
     c28:	31 09       	sbc	r19, r1
     c2a:	24 0f       	add	r18, r20
     c2c:	35 1f       	adc	r19, r21
     c2e:	91 91       	ld	r25, Z+
     c30:	80 ed       	ldi	r24, 0xD0	; 208
     c32:	89 0f       	add	r24, r25
     c34:	8a 30       	cpi	r24, 0x0A	; 10
     c36:	50 f3       	brcs	.-44     	; 0xc0c <FUNCstrToInt+0x12>
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <FUNCstrToInt+0x44>
     c3a:	20 e0       	ldi	r18, 0x00	; 0
     c3c:	30 e0       	ldi	r19, 0x00	; 0
     c3e:	c9 01       	movw	r24, r18
     c40:	08 95       	ret

00000c42 <FUNCfilter>:
     c42:	86 23       	and	r24, r22
     c44:	08 95       	ret

00000c46 <FUNCticks>:
     c46:	00 97       	sbiw	r24, 0x00	; 0
     c48:	39 f0       	breq	.+14     	; 0xc58 <FUNCticks+0x12>
     c4a:	20 e0       	ldi	r18, 0x00	; 0
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	2f 5f       	subi	r18, 0xFF	; 255
     c50:	3f 4f       	sbci	r19, 0xFF	; 255
     c52:	82 17       	cp	r24, r18
     c54:	93 07       	cpc	r25, r19
     c56:	d9 f7       	brne	.-10     	; 0xc4e <FUNCticks+0x8>
     c58:	08 95       	ret

00000c5a <FUNCtwocomptoint8bit>:
     c5a:	87 ff       	sbrs	r24, 7
     c5c:	08 c0       	rjmp	.+16     	; 0xc6e <FUNCtwocomptoint8bit+0x14>
     c5e:	91 95       	neg	r25
     c60:	81 95       	neg	r24
     c62:	91 09       	sbc	r25, r1
     c64:	99 27       	eor	r25, r25
     c66:	91 95       	neg	r25
     c68:	81 95       	neg	r24
     c6a:	91 09       	sbc	r25, r1
     c6c:	08 95       	ret
     c6e:	8f 77       	andi	r24, 0x7F	; 127
     c70:	99 27       	eor	r25, r25
     c72:	08 95       	ret

00000c74 <FUNCtwocomptoint10bit>:
     c74:	91 ff       	sbrs	r25, 1
     c76:	08 c0       	rjmp	.+16     	; 0xc88 <FUNCtwocomptoint10bit+0x14>
     c78:	91 95       	neg	r25
     c7a:	81 95       	neg	r24
     c7c:	91 09       	sbc	r25, r1
     c7e:	93 70       	andi	r25, 0x03	; 3
     c80:	91 95       	neg	r25
     c82:	81 95       	neg	r24
     c84:	91 09       	sbc	r25, r1
     c86:	08 95       	ret
     c88:	91 70       	andi	r25, 0x01	; 1
     c8a:	08 95       	ret

00000c8c <FUNCtwocomptointnbit>:
     c8c:	61 50       	subi	r22, 0x01	; 1
     c8e:	21 e0       	ldi	r18, 0x01	; 1
     c90:	30 e0       	ldi	r19, 0x00	; 0
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <FUNCtwocomptointnbit+0xc>
     c94:	22 0f       	add	r18, r18
     c96:	33 1f       	adc	r19, r19
     c98:	6a 95       	dec	r22
     c9a:	e2 f7       	brpl	.-8      	; 0xc94 <FUNCtwocomptointnbit+0x8>
     c9c:	a9 01       	movw	r20, r18
     c9e:	41 50       	subi	r20, 0x01	; 1
     ca0:	51 09       	sbc	r21, r1
     ca2:	b9 01       	movw	r22, r18
     ca4:	68 23       	and	r22, r24
     ca6:	79 23       	and	r23, r25
     ca8:	67 2b       	or	r22, r23
     caa:	29 f0       	breq	.+10     	; 0xcb6 <FUNCtwocomptointnbit+0x2a>
     cac:	84 23       	and	r24, r20
     cae:	95 23       	and	r25, r21
     cb0:	82 1b       	sub	r24, r18
     cb2:	93 0b       	sbc	r25, r19
     cb4:	08 95       	ret
     cb6:	84 23       	and	r24, r20
     cb8:	95 23       	and	r25, r21
     cba:	08 95       	ret

00000cbc <FUNCdec2bcd>:
     cbc:	9d ec       	ldi	r25, 0xCD	; 205
     cbe:	89 9f       	mul	r24, r25
     cc0:	91 2d       	mov	r25, r1
     cc2:	11 24       	eor	r1, r1
     cc4:	96 95       	lsr	r25
     cc6:	96 95       	lsr	r25
     cc8:	96 95       	lsr	r25
     cca:	39 2f       	mov	r19, r25
     ccc:	33 0f       	add	r19, r19
     cce:	23 2f       	mov	r18, r19
     cd0:	22 0f       	add	r18, r18
     cd2:	22 0f       	add	r18, r18
     cd4:	23 0f       	add	r18, r19
     cd6:	82 1b       	sub	r24, r18
     cd8:	20 e1       	ldi	r18, 0x10	; 16
     cda:	92 9f       	mul	r25, r18
     cdc:	80 0d       	add	r24, r0
     cde:	11 24       	eor	r1, r1
     ce0:	08 95       	ret

00000ce2 <FUNCbcd2dec>:
     ce2:	98 2f       	mov	r25, r24
     ce4:	92 95       	swap	r25
     ce6:	9f 70       	andi	r25, 0x0F	; 15
     ce8:	99 0f       	add	r25, r25
     cea:	29 2f       	mov	r18, r25
     cec:	22 0f       	add	r18, r18
     cee:	22 0f       	add	r18, r18
     cf0:	92 0f       	add	r25, r18
     cf2:	8f 70       	andi	r24, 0x0F	; 15
     cf4:	89 0f       	add	r24, r25
     cf6:	08 95       	ret

00000cf8 <FUNCresizestr>:
     cf8:	fc 01       	movw	r30, r24
     cfa:	db 01       	movw	r26, r22
     cfc:	a4 54       	subi	r26, 0x44	; 68
     cfe:	bd 4f       	sbci	r27, 0xFD	; 253
     d00:	1c 92       	st	X, r1
     d02:	16 16       	cp	r1, r22
     d04:	17 06       	cpc	r1, r23
     d06:	14 f5       	brge	.+68     	; 0xd4c <FUNCresizestr+0x54>
     d08:	90 81       	ld	r25, Z
     d0a:	91 11       	cpse	r25, r1
     d0c:	0c c0       	rjmp	.+24     	; 0xd26 <FUNCresizestr+0x2e>
     d0e:	17 c0       	rjmp	.+46     	; 0xd3e <FUNCresizestr+0x46>
     d10:	91 91       	ld	r25, Z+
     d12:	91 11       	cpse	r25, r1
     d14:	0d c0       	rjmp	.+26     	; 0xd30 <FUNCresizestr+0x38>
     d16:	15 c0       	rjmp	.+42     	; 0xd42 <FUNCresizestr+0x4a>
     d18:	81 93       	st	Z+, r24
     d1a:	2f 5f       	subi	r18, 0xFF	; 255
     d1c:	3f 4f       	sbci	r19, 0xFF	; 255
     d1e:	26 17       	cp	r18, r22
     d20:	37 07       	cpc	r19, r23
     d22:	d4 f3       	brlt	.-12     	; 0xd18 <FUNCresizestr+0x20>
     d24:	13 c0       	rjmp	.+38     	; 0xd4c <FUNCresizestr+0x54>
     d26:	ac eb       	ldi	r26, 0xBC	; 188
     d28:	b2 e0       	ldi	r27, 0x02	; 2
     d2a:	31 96       	adiw	r30, 0x01	; 1
     d2c:	20 e0       	ldi	r18, 0x00	; 0
     d2e:	30 e0       	ldi	r19, 0x00	; 0
     d30:	9d 93       	st	X+, r25
     d32:	2f 5f       	subi	r18, 0xFF	; 255
     d34:	3f 4f       	sbci	r19, 0xFF	; 255
     d36:	62 17       	cp	r22, r18
     d38:	73 07       	cpc	r23, r19
     d3a:	51 f7       	brne	.-44     	; 0xd10 <FUNCresizestr+0x18>
     d3c:	07 c0       	rjmp	.+14     	; 0xd4c <FUNCresizestr+0x54>
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	f9 01       	movw	r30, r18
     d44:	e4 54       	subi	r30, 0x44	; 68
     d46:	fd 4f       	sbci	r31, 0xFD	; 253
     d48:	80 e2       	ldi	r24, 0x20	; 32
     d4a:	e6 cf       	rjmp	.-52     	; 0xd18 <FUNCresizestr+0x20>
     d4c:	8c eb       	ldi	r24, 0xBC	; 188
     d4e:	92 e0       	ldi	r25, 0x02	; 2
     d50:	08 95       	ret

00000d52 <FUNCtrimmer>:
     d52:	4f 92       	push	r4
     d54:	5f 92       	push	r5
     d56:	6f 92       	push	r6
     d58:	7f 92       	push	r7
     d5a:	af 92       	push	r10
     d5c:	bf 92       	push	r11
     d5e:	cf 92       	push	r12
     d60:	df 92       	push	r13
     d62:	ef 92       	push	r14
     d64:	ff 92       	push	r15
     d66:	0f 93       	push	r16
     d68:	1f 93       	push	r17
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	29 01       	movw	r4, r18
     d74:	3a 01       	movw	r6, r20
     d76:	9b 01       	movw	r18, r22
     d78:	ac 01       	movw	r20, r24
     d7a:	24 19       	sub	r18, r4
     d7c:	35 09       	sbc	r19, r5
     d7e:	46 09       	sbc	r20, r6
     d80:	57 09       	sbc	r21, r7
     d82:	89 89       	ldd	r24, Y+17	; 0x11
     d84:	9a 89       	ldd	r25, Y+18	; 0x12
     d86:	ab 89       	ldd	r26, Y+19	; 0x13
     d88:	bc 89       	ldd	r27, Y+20	; 0x14
     d8a:	bc 01       	movw	r22, r24
     d8c:	cd 01       	movw	r24, r26
     d8e:	6a 19       	sub	r22, r10
     d90:	7b 09       	sbc	r23, r11
     d92:	8c 09       	sbc	r24, r12
     d94:	9d 09       	sbc	r25, r13
     d96:	0e 94 52 12 	call	0x24a4	; 0x24a4 <__mulsi3>
     d9a:	a8 01       	movw	r20, r16
     d9c:	97 01       	movw	r18, r14
     d9e:	24 19       	sub	r18, r4
     da0:	35 09       	sbc	r19, r5
     da2:	46 09       	sbc	r20, r6
     da4:	57 09       	sbc	r21, r7
     da6:	0e 94 aa 12 	call	0x2554	; 0x2554 <__divmodsi4>
     daa:	ca 01       	movw	r24, r20
     dac:	b9 01       	movw	r22, r18
     dae:	6a 0d       	add	r22, r10
     db0:	7b 1d       	adc	r23, r11
     db2:	8c 1d       	adc	r24, r12
     db4:	9d 1d       	adc	r25, r13
     db6:	df 91       	pop	r29
     db8:	cf 91       	pop	r28
     dba:	1f 91       	pop	r17
     dbc:	0f 91       	pop	r16
     dbe:	ff 90       	pop	r15
     dc0:	ef 90       	pop	r14
     dc2:	df 90       	pop	r13
     dc4:	cf 90       	pop	r12
     dc6:	bf 90       	pop	r11
     dc8:	af 90       	pop	r10
     dca:	7f 90       	pop	r7
     dcc:	6f 90       	pop	r6
     dce:	5f 90       	pop	r5
     dd0:	4f 90       	pop	r4
     dd2:	08 95       	ret

00000dd4 <Pwr>:
     dd4:	70 e0       	ldi	r23, 0x00	; 0
     dd6:	61 15       	cp	r22, r1
     dd8:	71 05       	cpc	r23, r1
     dda:	99 f0       	breq	.+38     	; 0xe02 <Pwr+0x2e>
     ddc:	41 e0       	ldi	r20, 0x01	; 1
     dde:	50 e0       	ldi	r21, 0x00	; 0
     de0:	21 e0       	ldi	r18, 0x01	; 1
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	fa 01       	movw	r30, r20
     de8:	e8 9f       	mul	r30, r24
     dea:	a0 01       	movw	r20, r0
     dec:	e9 9f       	mul	r30, r25
     dee:	50 0d       	add	r21, r0
     df0:	f8 9f       	mul	r31, r24
     df2:	50 0d       	add	r21, r0
     df4:	11 24       	eor	r1, r1
     df6:	2f 5f       	subi	r18, 0xFF	; 255
     df8:	3f 4f       	sbci	r19, 0xFF	; 255
     dfa:	62 17       	cp	r22, r18
     dfc:	73 07       	cpc	r23, r19
     dfe:	98 f7       	brcc	.-26     	; 0xde6 <Pwr+0x12>
     e00:	02 c0       	rjmp	.+4      	; 0xe06 <Pwr+0x32>
     e02:	41 e0       	ldi	r20, 0x01	; 1
     e04:	50 e0       	ldi	r21, 0x00	; 0
     e06:	ca 01       	movw	r24, r20
     e08:	08 95       	ret

00000e0a <StringLength>:
     e0a:	fc 01       	movw	r30, r24
     e0c:	20 81       	ld	r18, Z
     e0e:	22 23       	and	r18, r18
     e10:	41 f0       	breq	.+16     	; 0xe22 <StringLength+0x18>
     e12:	31 96       	adiw	r30, 0x01	; 1
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	01 96       	adiw	r24, 0x01	; 1
     e1a:	21 91       	ld	r18, Z+
     e1c:	21 11       	cpse	r18, r1
     e1e:	fc cf       	rjmp	.-8      	; 0xe18 <StringLength+0xe>
     e20:	08 95       	ret
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	08 95       	ret

00000e28 <FUNCtrim>:
     e28:	cf 93       	push	r28
     e2a:	df 93       	push	r29
     e2c:	ec 01       	movw	r28, r24
     e2e:	ed df       	rcall	.-38     	; 0xe0a <StringLength>
     e30:	9c 01       	movw	r18, r24
     e32:	21 50       	subi	r18, 0x01	; 1
     e34:	31 09       	sbc	r19, r1
     e36:	62 f0       	brmi	.+24     	; 0xe50 <FUNCtrim+0x28>
     e38:	fe 01       	movw	r30, r28
     e3a:	e8 0f       	add	r30, r24
     e3c:	f9 1f       	adc	r31, r25
     e3e:	92 91       	ld	r25, -Z
     e40:	90 32       	cpi	r25, 0x20	; 32
     e42:	19 f0       	breq	.+6      	; 0xe4a <FUNCtrim+0x22>
     e44:	99 50       	subi	r25, 0x09	; 9
     e46:	92 30       	cpi	r25, 0x02	; 2
     e48:	18 f4       	brcc	.+6      	; 0xe50 <FUNCtrim+0x28>
     e4a:	21 50       	subi	r18, 0x01	; 1
     e4c:	31 09       	sbc	r19, r1
     e4e:	b8 f7       	brcc	.-18     	; 0xe3e <FUNCtrim+0x16>
     e50:	c2 0f       	add	r28, r18
     e52:	d3 1f       	adc	r29, r19
     e54:	19 82       	std	Y+1, r1	; 0x01
     e56:	c9 01       	movw	r24, r18
     e58:	df 91       	pop	r29
     e5a:	cf 91       	pop	r28
     e5c:	08 95       	ret

00000e5e <Reverse>:
     e5e:	cf 93       	push	r28
     e60:	df 93       	push	r29
     e62:	ec 01       	movw	r28, r24
     e64:	d2 df       	rcall	.-92     	; 0xe0a <StringLength>
     e66:	9c 01       	movw	r18, r24
     e68:	21 50       	subi	r18, 0x01	; 1
     e6a:	31 09       	sbc	r19, r1
     e6c:	12 16       	cp	r1, r18
     e6e:	13 06       	cpc	r1, r19
     e70:	84 f4       	brge	.+32     	; 0xe92 <Reverse+0x34>
     e72:	de 01       	movw	r26, r28
     e74:	a8 0f       	add	r26, r24
     e76:	b9 1f       	adc	r27, r25
     e78:	fe 01       	movw	r30, r28
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	40 81       	ld	r20, Z
     e80:	5e 91       	ld	r21, -X
     e82:	51 93       	st	Z+, r21
     e84:	4c 93       	st	X, r20
     e86:	01 96       	adiw	r24, 0x01	; 1
     e88:	21 50       	subi	r18, 0x01	; 1
     e8a:	31 09       	sbc	r19, r1
     e8c:	82 17       	cp	r24, r18
     e8e:	93 07       	cpc	r25, r19
     e90:	b4 f3       	brlt	.-20     	; 0xe7e <Reverse+0x20>
     e92:	df 91       	pop	r29
     e94:	cf 91       	pop	r28
     e96:	08 95       	ret

00000e98 <FUNCi32toa>:
     e98:	8f 92       	push	r8
     e9a:	9f 92       	push	r9
     e9c:	af 92       	push	r10
     e9e:	bf 92       	push	r11
     ea0:	cf 92       	push	r12
     ea2:	df 92       	push	r13
     ea4:	ef 92       	push	r14
     ea6:	ff 92       	push	r15
     ea8:	0f 93       	push	r16
     eaa:	1f 93       	push	r17
     eac:	cf 93       	push	r28
     eae:	df 93       	push	r29
     eb0:	6b 01       	movw	r12, r22
     eb2:	7c 01       	movw	r14, r24
     eb4:	dc 01       	movw	r26, r24
     eb6:	cb 01       	movw	r24, r22
     eb8:	ff 20       	and	r15, r15
     eba:	3c f4       	brge	.+14     	; 0xeca <FUNCi32toa+0x32>
     ebc:	88 27       	eor	r24, r24
     ebe:	99 27       	eor	r25, r25
     ec0:	dc 01       	movw	r26, r24
     ec2:	8c 19       	sub	r24, r12
     ec4:	9d 09       	sbc	r25, r13
     ec6:	ae 09       	sbc	r26, r14
     ec8:	bf 09       	sbc	r27, r15
     eca:	bc 01       	movw	r22, r24
     ecc:	cd 01       	movw	r24, r26
     ece:	10 e0       	ldi	r17, 0x00	; 0
     ed0:	0f 2e       	mov	r0, r31
     ed2:	fa e0       	ldi	r31, 0x0A	; 10
     ed4:	8f 2e       	mov	r8, r31
     ed6:	91 2c       	mov	r9, r1
     ed8:	a1 2c       	mov	r10, r1
     eda:	b1 2c       	mov	r11, r1
     edc:	f0 2d       	mov	r31, r0
     ede:	01 c0       	rjmp	.+2      	; 0xee2 <FUNCi32toa+0x4a>
     ee0:	10 2f       	mov	r17, r16
     ee2:	01 e0       	ldi	r16, 0x01	; 1
     ee4:	01 0f       	add	r16, r17
     ee6:	c1 2f       	mov	r28, r17
     ee8:	d0 e0       	ldi	r29, 0x00	; 0
     eea:	c4 54       	subi	r28, 0x44	; 68
     eec:	dd 4f       	sbci	r29, 0xFD	; 253
     eee:	a5 01       	movw	r20, r10
     ef0:	94 01       	movw	r18, r8
     ef2:	0e 94 aa 12 	call	0x2554	; 0x2554 <__divmodsi4>
     ef6:	60 5d       	subi	r22, 0xD0	; 208
     ef8:	68 83       	st	Y, r22
     efa:	62 2f       	mov	r22, r18
     efc:	73 2f       	mov	r23, r19
     efe:	84 2f       	mov	r24, r20
     f00:	95 2f       	mov	r25, r21
     f02:	16 16       	cp	r1, r22
     f04:	17 06       	cpc	r1, r23
     f06:	18 06       	cpc	r1, r24
     f08:	19 06       	cpc	r1, r25
     f0a:	54 f3       	brlt	.-44     	; 0xee0 <FUNCi32toa+0x48>
     f0c:	ff 20       	and	r15, r15
     f0e:	44 f4       	brge	.+16     	; 0xf20 <FUNCi32toa+0x88>
     f10:	e0 2f       	mov	r30, r16
     f12:	f0 e0       	ldi	r31, 0x00	; 0
     f14:	e4 54       	subi	r30, 0x44	; 68
     f16:	fd 4f       	sbci	r31, 0xFD	; 253
     f18:	8d e2       	ldi	r24, 0x2D	; 45
     f1a:	80 83       	st	Z, r24
     f1c:	02 e0       	ldi	r16, 0x02	; 2
     f1e:	01 0f       	add	r16, r17
     f20:	e0 2f       	mov	r30, r16
     f22:	f0 e0       	ldi	r31, 0x00	; 0
     f24:	e4 54       	subi	r30, 0x44	; 68
     f26:	fd 4f       	sbci	r31, 0xFD	; 253
     f28:	10 82       	st	Z, r1
     f2a:	8c eb       	ldi	r24, 0xBC	; 188
     f2c:	92 e0       	ldi	r25, 0x02	; 2
     f2e:	97 df       	rcall	.-210    	; 0xe5e <Reverse>
     f30:	8c eb       	ldi	r24, 0xBC	; 188
     f32:	92 e0       	ldi	r25, 0x02	; 2
     f34:	df 91       	pop	r29
     f36:	cf 91       	pop	r28
     f38:	1f 91       	pop	r17
     f3a:	0f 91       	pop	r16
     f3c:	ff 90       	pop	r15
     f3e:	ef 90       	pop	r14
     f40:	df 90       	pop	r13
     f42:	cf 90       	pop	r12
     f44:	bf 90       	pop	r11
     f46:	af 90       	pop	r10
     f48:	9f 90       	pop	r9
     f4a:	8f 90       	pop	r8
     f4c:	08 95       	ret

00000f4e <FUNCi16toa>:
     f4e:	0f 93       	push	r16
     f50:	1f 93       	push	r17
     f52:	cf 93       	push	r28
     f54:	df 93       	push	r29
     f56:	ec 01       	movw	r28, r24
     f58:	99 23       	and	r25, r25
     f5a:	24 f4       	brge	.+8      	; 0xf64 <FUNCi16toa+0x16>
     f5c:	88 27       	eor	r24, r24
     f5e:	99 27       	eor	r25, r25
     f60:	8c 1b       	sub	r24, r28
     f62:	9d 0b       	sbc	r25, r29
     f64:	20 e0       	ldi	r18, 0x00	; 0
     f66:	0a e0       	ldi	r16, 0x0A	; 10
     f68:	10 e0       	ldi	r17, 0x00	; 0
     f6a:	01 c0       	rjmp	.+2      	; 0xf6e <FUNCi16toa+0x20>
     f6c:	23 2f       	mov	r18, r19
     f6e:	31 e0       	ldi	r19, 0x01	; 1
     f70:	32 0f       	add	r19, r18
     f72:	e2 2f       	mov	r30, r18
     f74:	f0 e0       	ldi	r31, 0x00	; 0
     f76:	e4 54       	subi	r30, 0x44	; 68
     f78:	fd 4f       	sbci	r31, 0xFD	; 253
     f7a:	b8 01       	movw	r22, r16
     f7c:	0e 94 75 12 	call	0x24ea	; 0x24ea <__divmodhi4>
     f80:	80 5d       	subi	r24, 0xD0	; 208
     f82:	80 83       	st	Z, r24
     f84:	86 2f       	mov	r24, r22
     f86:	97 2f       	mov	r25, r23
     f88:	18 16       	cp	r1, r24
     f8a:	19 06       	cpc	r1, r25
     f8c:	7c f3       	brlt	.-34     	; 0xf6c <FUNCi16toa+0x1e>
     f8e:	dd 23       	and	r29, r29
     f90:	44 f4       	brge	.+16     	; 0xfa2 <FUNCi16toa+0x54>
     f92:	e3 2f       	mov	r30, r19
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	e4 54       	subi	r30, 0x44	; 68
     f98:	fd 4f       	sbci	r31, 0xFD	; 253
     f9a:	8d e2       	ldi	r24, 0x2D	; 45
     f9c:	80 83       	st	Z, r24
     f9e:	32 e0       	ldi	r19, 0x02	; 2
     fa0:	32 0f       	add	r19, r18
     fa2:	e3 2f       	mov	r30, r19
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	e4 54       	subi	r30, 0x44	; 68
     fa8:	fd 4f       	sbci	r31, 0xFD	; 253
     faa:	10 82       	st	Z, r1
     fac:	8c eb       	ldi	r24, 0xBC	; 188
     fae:	92 e0       	ldi	r25, 0x02	; 2
     fb0:	56 df       	rcall	.-340    	; 0xe5e <Reverse>
     fb2:	8c eb       	ldi	r24, 0xBC	; 188
     fb4:	92 e0       	ldi	r25, 0x02	; 2
     fb6:	df 91       	pop	r29
     fb8:	cf 91       	pop	r28
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	08 95       	ret

00000fc0 <FUNCui16toa>:
     fc0:	cf 93       	push	r28
     fc2:	ac 01       	movw	r20, r24
     fc4:	e0 e0       	ldi	r30, 0x00	; 0
     fc6:	c1 e0       	ldi	r28, 0x01	; 1
     fc8:	ce 0f       	add	r28, r30
     fca:	f0 e0       	ldi	r31, 0x00	; 0
     fcc:	e4 54       	subi	r30, 0x44	; 68
     fce:	fd 4f       	sbci	r31, 0xFD	; 253
     fd0:	9a 01       	movw	r18, r20
     fd2:	ad ec       	ldi	r26, 0xCD	; 205
     fd4:	bc ec       	ldi	r27, 0xCC	; 204
     fd6:	0e 94 cf 12 	call	0x259e	; 0x259e <__umulhisi3>
     fda:	96 95       	lsr	r25
     fdc:	87 95       	ror	r24
     fde:	96 95       	lsr	r25
     fe0:	87 95       	ror	r24
     fe2:	96 95       	lsr	r25
     fe4:	87 95       	ror	r24
     fe6:	9c 01       	movw	r18, r24
     fe8:	22 0f       	add	r18, r18
     fea:	33 1f       	adc	r19, r19
     fec:	88 0f       	add	r24, r24
     fee:	99 1f       	adc	r25, r25
     ff0:	88 0f       	add	r24, r24
     ff2:	99 1f       	adc	r25, r25
     ff4:	88 0f       	add	r24, r24
     ff6:	99 1f       	adc	r25, r25
     ff8:	82 0f       	add	r24, r18
     ffa:	93 1f       	adc	r25, r19
     ffc:	9a 01       	movw	r18, r20
     ffe:	28 1b       	sub	r18, r24
    1000:	39 0b       	sbc	r19, r25
    1002:	c9 01       	movw	r24, r18
    1004:	80 5d       	subi	r24, 0xD0	; 208
    1006:	80 83       	st	Z, r24
    1008:	9a 01       	movw	r18, r20
    100a:	0e 94 cf 12 	call	0x259e	; 0x259e <__umulhisi3>
    100e:	ac 01       	movw	r20, r24
    1010:	56 95       	lsr	r21
    1012:	47 95       	ror	r20
    1014:	56 95       	lsr	r21
    1016:	47 95       	ror	r20
    1018:	56 95       	lsr	r21
    101a:	47 95       	ror	r20
    101c:	ec 2f       	mov	r30, r28
    101e:	41 15       	cp	r20, r1
    1020:	51 05       	cpc	r21, r1
    1022:	89 f6       	brne	.-94     	; 0xfc6 <FUNCui16toa+0x6>
    1024:	ec 2f       	mov	r30, r28
    1026:	f0 e0       	ldi	r31, 0x00	; 0
    1028:	e4 54       	subi	r30, 0x44	; 68
    102a:	fd 4f       	sbci	r31, 0xFD	; 253
    102c:	10 82       	st	Z, r1
    102e:	8c eb       	ldi	r24, 0xBC	; 188
    1030:	92 e0       	ldi	r25, 0x02	; 2
    1032:	15 df       	rcall	.-470    	; 0xe5e <Reverse>
    1034:	8c eb       	ldi	r24, 0xBC	; 188
    1036:	92 e0       	ldi	r25, 0x02	; 2
    1038:	cf 91       	pop	r28
    103a:	08 95       	ret

0000103c <FUNCbcd2bin>:
    103c:	98 2f       	mov	r25, r24
    103e:	92 95       	swap	r25
    1040:	9f 70       	andi	r25, 0x0F	; 15
    1042:	99 0f       	add	r25, r25
    1044:	29 2f       	mov	r18, r25
    1046:	22 0f       	add	r18, r18
    1048:	22 0f       	add	r18, r18
    104a:	92 0f       	add	r25, r18
    104c:	8f 70       	andi	r24, 0x0F	; 15
    104e:	89 0f       	add	r24, r25
    1050:	08 95       	ret

00001052 <FUNCbin2bcd>:
    1052:	ac 01       	movw	r20, r24
    1054:	9c 01       	movw	r18, r24
    1056:	ad ec       	ldi	r26, 0xCD	; 205
    1058:	bc ec       	ldi	r27, 0xCC	; 204
    105a:	0e 94 cf 12 	call	0x259e	; 0x259e <__umulhisi3>
    105e:	96 95       	lsr	r25
    1060:	87 95       	ror	r24
    1062:	96 95       	lsr	r25
    1064:	87 95       	ror	r24
    1066:	96 95       	lsr	r25
    1068:	87 95       	ror	r24
    106a:	bc 01       	movw	r22, r24
    106c:	66 0f       	add	r22, r22
    106e:	77 1f       	adc	r23, r23
    1070:	9c 01       	movw	r18, r24
    1072:	22 0f       	add	r18, r18
    1074:	33 1f       	adc	r19, r19
    1076:	22 0f       	add	r18, r18
    1078:	33 1f       	adc	r19, r19
    107a:	22 0f       	add	r18, r18
    107c:	33 1f       	adc	r19, r19
    107e:	26 0f       	add	r18, r22
    1080:	37 1f       	adc	r19, r23
    1082:	42 1b       	sub	r20, r18
    1084:	53 0b       	sbc	r21, r19
    1086:	34 2f       	mov	r19, r20
    1088:	20 e1       	ldi	r18, 0x10	; 16
    108a:	82 9f       	mul	r24, r18
    108c:	30 0d       	add	r19, r0
    108e:	11 24       	eor	r1, r1
    1090:	83 2f       	mov	r24, r19
    1092:	08 95       	ret

00001094 <FUNCgcd1>:
    1094:	cf 92       	push	r12
    1096:	df 92       	push	r13
    1098:	ef 92       	push	r14
    109a:	ff 92       	push	r15
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	cd b7       	in	r28, 0x3d	; 61
    10a2:	de b7       	in	r29, 0x3e	; 62
    10a4:	28 97       	sbiw	r28, 0x08	; 8
    10a6:	0f b6       	in	r0, 0x3f	; 63
    10a8:	f8 94       	cli
    10aa:	de bf       	out	0x3e, r29	; 62
    10ac:	0f be       	out	0x3f, r0	; 63
    10ae:	cd bf       	out	0x3d, r28	; 61
    10b0:	6b 01       	movw	r12, r22
    10b2:	7c 01       	movw	r14, r24
    10b4:	69 83       	std	Y+1, r22	; 0x01
    10b6:	7a 83       	std	Y+2, r23	; 0x02
    10b8:	8b 83       	std	Y+3, r24	; 0x03
    10ba:	9c 83       	std	Y+4, r25	; 0x04
    10bc:	2d 83       	std	Y+5, r18	; 0x05
    10be:	3e 83       	std	Y+6, r19	; 0x06
    10c0:	4f 83       	std	Y+7, r20	; 0x07
    10c2:	58 87       	std	Y+8, r21	; 0x08
    10c4:	c2 16       	cp	r12, r18
    10c6:	d3 06       	cpc	r13, r19
    10c8:	e4 06       	cpc	r14, r20
    10ca:	f5 06       	cpc	r15, r21
    10cc:	34 f4       	brge	.+12     	; 0x10da <FUNCgcd1+0x46>
    10ce:	be 01       	movw	r22, r28
    10d0:	6b 5f       	subi	r22, 0xFB	; 251
    10d2:	7f 4f       	sbci	r23, 0xFF	; 255
    10d4:	ce 01       	movw	r24, r28
    10d6:	01 96       	adiw	r24, 0x01	; 1
    10d8:	85 dc       	rcall	.-1782   	; 0x9e4 <FUNCswap>
    10da:	8d 81       	ldd	r24, Y+5	; 0x05
    10dc:	9e 81       	ldd	r25, Y+6	; 0x06
    10de:	af 81       	ldd	r26, Y+7	; 0x07
    10e0:	b8 85       	ldd	r27, Y+8	; 0x08
    10e2:	89 2b       	or	r24, r25
    10e4:	8a 2b       	or	r24, r26
    10e6:	8b 2b       	or	r24, r27
    10e8:	71 f4       	brne	.+28     	; 0x1106 <__stack+0x7>
    10ea:	69 81       	ldd	r22, Y+1	; 0x01
    10ec:	7a 81       	ldd	r23, Y+2	; 0x02
    10ee:	8b 81       	ldd	r24, Y+3	; 0x03
    10f0:	9c 81       	ldd	r25, Y+4	; 0x04
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	a9 01       	movw	r20, r18
    10f8:	0e 94 aa 12 	call	0x2554	; 0x2554 <__divmodsi4>
    10fc:	61 15       	cp	r22, r1
    10fe:	71 05       	cpc	r23, r1
    1100:	81 05       	cpc	r24, r1
    1102:	91 05       	cpc	r25, r1
    1104:	29 f4       	brne	.+10     	; 0x1110 <__stack+0x11>
    1106:	6d 81       	ldd	r22, Y+5	; 0x05
    1108:	7e 81       	ldd	r23, Y+6	; 0x06
    110a:	8f 81       	ldd	r24, Y+7	; 0x07
    110c:	98 85       	ldd	r25, Y+8	; 0x08
    110e:	05 c0       	rjmp	.+10     	; 0x111a <__stack+0x1b>
    1110:	6d 83       	std	Y+5, r22	; 0x05
    1112:	7e 83       	std	Y+6, r23	; 0x06
    1114:	8f 83       	std	Y+7, r24	; 0x07
    1116:	98 87       	std	Y+8, r25	; 0x08
    1118:	f6 cf       	rjmp	.-20     	; 0x1106 <__stack+0x7>
    111a:	28 96       	adiw	r28, 0x08	; 8
    111c:	0f b6       	in	r0, 0x3f	; 63
    111e:	f8 94       	cli
    1120:	de bf       	out	0x3e, r29	; 62
    1122:	0f be       	out	0x3f, r0	; 63
    1124:	cd bf       	out	0x3d, r28	; 61
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	ff 90       	pop	r15
    112c:	ef 90       	pop	r14
    112e:	df 90       	pop	r13
    1130:	cf 90       	pop	r12
    1132:	08 95       	ret

00001134 <FUNCpincheck>:
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	02 c0       	rjmp	.+4      	; 0x113c <FUNCpincheck+0x8>
    1138:	95 95       	asr	r25
    113a:	87 95       	ror	r24
    113c:	6a 95       	dec	r22
    113e:	e2 f7       	brpl	.-8      	; 0x1138 <FUNCpincheck+0x4>
    1140:	81 70       	andi	r24, 0x01	; 1
    1142:	08 95       	ret

00001144 <FUNCprint_binary>:
    1144:	ec eb       	ldi	r30, 0xBC	; 188
    1146:	f2 e0       	ldi	r31, 0x02	; 2
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	20 e8       	ldi	r18, 0x80	; 128
    114c:	50 e3       	ldi	r21, 0x30	; 48
    114e:	41 e3       	ldi	r20, 0x31	; 49
    1150:	38 2f       	mov	r19, r24
    1152:	32 23       	and	r19, r18
    1154:	11 f0       	breq	.+4      	; 0x115a <FUNCprint_binary+0x16>
    1156:	40 83       	st	Z, r20
    1158:	01 c0       	rjmp	.+2      	; 0x115c <FUNCprint_binary+0x18>
    115a:	50 83       	st	Z, r21
    115c:	26 95       	lsr	r18
    115e:	9f 5f       	subi	r25, 0xFF	; 255
    1160:	31 96       	adiw	r30, 0x01	; 1
    1162:	98 30       	cpi	r25, 0x08	; 8
    1164:	a9 f7       	brne	.-22     	; 0x1150 <FUNCprint_binary+0xc>
    1166:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <FUNCstr+0x8>
    116a:	8c eb       	ldi	r24, 0xBC	; 188
    116c:	92 e0       	ldi	r25, 0x02	; 2
    116e:	08 95       	ret

00001170 <FUNCmayia>:
    1170:	a4 2f       	mov	r26, r20
    1172:	b0 e0       	ldi	r27, 0x00	; 0
    1174:	10 97       	sbiw	r26, 0x00	; 0
    1176:	61 f0       	breq	.+24     	; 0x1190 <FUNCmayia+0x20>
    1178:	21 e0       	ldi	r18, 0x01	; 1
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	e1 e0       	ldi	r30, 0x01	; 1
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	ee 0f       	add	r30, r30
    1182:	ff 1f       	adc	r31, r31
    1184:	2f 5f       	subi	r18, 0xFF	; 255
    1186:	3f 4f       	sbci	r19, 0xFF	; 255
    1188:	a2 17       	cp	r26, r18
    118a:	b3 07       	cpc	r27, r19
    118c:	c8 f7       	brcc	.-14     	; 0x1180 <FUNCmayia+0x10>
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <FUNCmayia+0x24>
    1190:	e1 e0       	ldi	r30, 0x01	; 1
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	31 97       	sbiw	r30, 0x01	; 1
    1196:	6e 23       	and	r22, r30
    1198:	7f 23       	and	r23, r31
    119a:	8e 23       	and	r24, r30
    119c:	9f 23       	and	r25, r31
    119e:	86 27       	eor	r24, r22
    11a0:	97 27       	eor	r25, r23
    11a2:	68 23       	and	r22, r24
    11a4:	79 23       	and	r23, r25
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <FUNCmayia+0x3c>
    11a8:	66 0f       	add	r22, r22
    11aa:	77 1f       	adc	r23, r23
    11ac:	4a 95       	dec	r20
    11ae:	e2 f7       	brpl	.-8      	; 0x11a8 <FUNCmayia+0x38>
    11b0:	86 2b       	or	r24, r22
    11b2:	97 2b       	or	r25, r23
    11b4:	08 95       	ret

000011b6 <FUNCenable>:
    11b6:	fc 01       	movw	r30, r24
    11b8:	9f b7       	in	r25, 0x3f	; 63
    11ba:	8f b7       	in	r24, 0x3f	; 63
    11bc:	8f 77       	andi	r24, 0x7F	; 127
    11be:	8f bf       	out	0x3f, r24	; 63
    11c0:	9f bf       	out	0x3f, r25	; 63
    11c2:	8a ee       	ldi	r24, 0xEA	; 234
    11c4:	96 e0       	ldi	r25, 0x06	; 6
    11c6:	91 83       	std	Z+1, r25	; 0x01
    11c8:	80 83       	st	Z, r24
    11ca:	85 e0       	ldi	r24, 0x05	; 5
    11cc:	97 e0       	ldi	r25, 0x07	; 7
    11ce:	93 83       	std	Z+3, r25	; 0x03
    11d0:	82 83       	std	Z+2, r24	; 0x02
    11d2:	8f e2       	ldi	r24, 0x2F	; 47
    11d4:	97 e0       	ldi	r25, 0x07	; 7
    11d6:	95 83       	std	Z+5, r25	; 0x05
    11d8:	84 83       	std	Z+4, r24	; 0x04
    11da:	88 eb       	ldi	r24, 0xB8	; 184
    11dc:	98 e0       	ldi	r25, 0x08	; 8
    11de:	97 83       	std	Z+7, r25	; 0x07
    11e0:	86 83       	std	Z+6, r24	; 0x06
    11e2:	87 ed       	ldi	r24, 0xD7	; 215
    11e4:	94 e0       	ldi	r25, 0x04	; 4
    11e6:	91 87       	std	Z+9, r25	; 0x09
    11e8:	80 87       	std	Z+8, r24	; 0x08
    11ea:	85 ee       	ldi	r24, 0xE5	; 229
    11ec:	94 e0       	ldi	r25, 0x04	; 4
    11ee:	93 87       	std	Z+11, r25	; 0x0b
    11f0:	82 87       	std	Z+10, r24	; 0x0a
    11f2:	87 ee       	ldi	r24, 0xE7	; 231
    11f4:	94 e0       	ldi	r25, 0x04	; 4
    11f6:	95 87       	std	Z+13, r25	; 0x0d
    11f8:	84 87       	std	Z+12, r24	; 0x0c
    11fa:	8a ee       	ldi	r24, 0xEA	; 234
    11fc:	94 e0       	ldi	r25, 0x04	; 4
    11fe:	97 87       	std	Z+15, r25	; 0x0f
    1200:	86 87       	std	Z+14, r24	; 0x0e
    1202:	8d ee       	ldi	r24, 0xED	; 237
    1204:	94 e0       	ldi	r25, 0x04	; 4
    1206:	91 8b       	std	Z+17, r25	; 0x11
    1208:	80 8b       	std	Z+16, r24	; 0x10
    120a:	80 ef       	ldi	r24, 0xF0	; 240
    120c:	94 e0       	ldi	r25, 0x04	; 4
    120e:	93 8b       	std	Z+19, r25	; 0x13
    1210:	82 8b       	std	Z+18, r24	; 0x12
    1212:	81 ee       	ldi	r24, 0xE1	; 225
    1214:	94 e0       	ldi	r25, 0x04	; 4
    1216:	95 8b       	std	Z+21, r25	; 0x15
    1218:	84 8b       	std	Z+20, r24	; 0x14
    121a:	83 ee       	ldi	r24, 0xE3	; 227
    121c:	94 e0       	ldi	r25, 0x04	; 4
    121e:	97 8b       	std	Z+23, r25	; 0x17
    1220:	86 8b       	std	Z+22, r24	; 0x16
    1222:	82 ef       	ldi	r24, 0xF2	; 242
    1224:	94 e0       	ldi	r25, 0x04	; 4
    1226:	91 8f       	std	Z+25, r25	; 0x19
    1228:	80 8f       	std	Z+24, r24	; 0x18
    122a:	83 e1       	ldi	r24, 0x13	; 19
    122c:	95 e0       	ldi	r25, 0x05	; 5
    122e:	93 8f       	std	Z+27, r25	; 0x1b
    1230:	82 8f       	std	Z+26, r24	; 0x1a
    1232:	81 e2       	ldi	r24, 0x21	; 33
    1234:	95 e0       	ldi	r25, 0x05	; 5
    1236:	95 8f       	std	Z+29, r25	; 0x1d
    1238:	84 8f       	std	Z+28, r24	; 0x1c
    123a:	83 e4       	ldi	r24, 0x43	; 67
    123c:	95 e0       	ldi	r25, 0x05	; 5
    123e:	97 8f       	std	Z+31, r25	; 0x1f
    1240:	86 8f       	std	Z+30, r24	; 0x1e
    1242:	87 ea       	ldi	r24, 0xA7	; 167
    1244:	97 e0       	ldi	r25, 0x07	; 7
    1246:	91 a3       	std	Z+33, r25	; 0x21
    1248:	80 a3       	std	Z+32, r24	; 0x20
    124a:	80 ee       	ldi	r24, 0xE0	; 224
    124c:	97 e0       	ldi	r25, 0x07	; 7
    124e:	93 a3       	std	Z+35, r25	; 0x23
    1250:	82 a3       	std	Z+34, r24	; 0x22
    1252:	8c e4       	ldi	r24, 0x4C	; 76
    1254:	97 e0       	ldi	r25, 0x07	; 7
    1256:	95 a3       	std	Z+37, r25	; 0x25
    1258:	84 a3       	std	Z+36, r24	; 0x24
    125a:	84 e1       	ldi	r24, 0x14	; 20
    125c:	97 e0       	ldi	r25, 0x07	; 7
    125e:	97 a3       	std	Z+39, r25	; 0x27
    1260:	86 a3       	std	Z+38, r24	; 0x26
    1262:	89 ee       	ldi	r24, 0xE9	; 233
    1264:	95 e0       	ldi	r25, 0x05	; 5
    1266:	91 a7       	std	Z+41, r25	; 0x29
    1268:	80 a7       	std	Z+40, r24	; 0x28
    126a:	8e ee       	ldi	r24, 0xEE	; 238
    126c:	95 e0       	ldi	r25, 0x05	; 5
    126e:	93 a7       	std	Z+43, r25	; 0x2b
    1270:	82 a7       	std	Z+42, r24	; 0x2a
    1272:	8d ef       	ldi	r24, 0xFD	; 253
    1274:	95 e0       	ldi	r25, 0x05	; 5
    1276:	95 a7       	std	Z+45, r25	; 0x2d
    1278:	84 a7       	std	Z+44, r24	; 0x2c
    127a:	81 e2       	ldi	r24, 0x21	; 33
    127c:	96 e0       	ldi	r25, 0x06	; 6
    127e:	97 a7       	std	Z+47, r25	; 0x2f
    1280:	86 a7       	std	Z+46, r24	; 0x2e
    1282:	83 e2       	ldi	r24, 0x23	; 35
    1284:	96 e0       	ldi	r25, 0x06	; 6
    1286:	91 ab       	std	Z+49, r25	; 0x31
    1288:	80 ab       	std	Z+48, r24	; 0x30
    128a:	8d e2       	ldi	r24, 0x2D	; 45
    128c:	96 e0       	ldi	r25, 0x06	; 6
    128e:	93 ab       	std	Z+51, r25	; 0x33
    1290:	82 ab       	std	Z+50, r24	; 0x32
    1292:	8a e3       	ldi	r24, 0x3A	; 58
    1294:	96 e0       	ldi	r25, 0x06	; 6
    1296:	95 ab       	std	Z+53, r25	; 0x35
    1298:	84 ab       	std	Z+52, r24	; 0x34
    129a:	86 e4       	ldi	r24, 0x46	; 70
    129c:	96 e0       	ldi	r25, 0x06	; 6
    129e:	97 ab       	std	Z+55, r25	; 0x37
    12a0:	86 ab       	std	Z+54, r24	; 0x36
    12a2:	8e e5       	ldi	r24, 0x5E	; 94
    12a4:	96 e0       	ldi	r25, 0x06	; 6
    12a6:	91 af       	std	Z+57, r25	; 0x39
    12a8:	80 af       	std	Z+56, r24	; 0x38
    12aa:	81 e7       	ldi	r24, 0x71	; 113
    12ac:	96 e0       	ldi	r25, 0x06	; 6
    12ae:	93 af       	std	Z+59, r25	; 0x3b
    12b0:	82 af       	std	Z+58, r24	; 0x3a
    12b2:	8c e7       	ldi	r24, 0x7C	; 124
    12b4:	96 e0       	ldi	r25, 0x06	; 6
    12b6:	95 af       	std	Z+61, r25	; 0x3d
    12b8:	84 af       	std	Z+60, r24	; 0x3c
    12ba:	89 ea       	ldi	r24, 0xA9	; 169
    12bc:	96 e0       	ldi	r25, 0x06	; 6
    12be:	97 af       	std	Z+63, r25	; 0x3f
    12c0:	86 af       	std	Z+62, r24	; 0x3e
    12c2:	df 01       	movw	r26, r30
    12c4:	a0 5c       	subi	r26, 0xC0	; 192
    12c6:	bf 4f       	sbci	r27, 0xFF	; 255
    12c8:	8e e1       	ldi	r24, 0x1E	; 30
    12ca:	98 e0       	ldi	r25, 0x08	; 8
    12cc:	11 96       	adiw	r26, 0x01	; 1
    12ce:	9c 93       	st	X, r25
    12d0:	8e 93       	st	-X, r24
    12d2:	12 96       	adiw	r26, 0x02	; 2
    12d4:	89 e2       	ldi	r24, 0x29	; 41
    12d6:	98 e0       	ldi	r25, 0x08	; 8
    12d8:	11 96       	adiw	r26, 0x01	; 1
    12da:	9c 93       	st	X, r25
    12dc:	8e 93       	st	-X, r24
    12de:	12 96       	adiw	r26, 0x02	; 2
    12e0:	8a e4       	ldi	r24, 0x4A	; 74
    12e2:	98 e0       	ldi	r25, 0x08	; 8
    12e4:	11 96       	adiw	r26, 0x01	; 1
    12e6:	9c 93       	st	X, r25
    12e8:	8e 93       	st	-X, r24
    12ea:	12 96       	adiw	r26, 0x02	; 2
    12ec:	8a e9       	ldi	r24, 0x9A	; 154
    12ee:	98 e0       	ldi	r25, 0x08	; 8
    12f0:	11 96       	adiw	r26, 0x01	; 1
    12f2:	9c 93       	st	X, r25
    12f4:	8e 93       	st	-X, r24
    12f6:	12 96       	adiw	r26, 0x02	; 2
    12f8:	82 ea       	ldi	r24, 0xA2	; 162
    12fa:	98 e0       	ldi	r25, 0x08	; 8
    12fc:	11 96       	adiw	r26, 0x01	; 1
    12fe:	9c 93       	st	X, r25
    1300:	8e 93       	st	-X, r24
    1302:	12 96       	adiw	r26, 0x02	; 2
    1304:	80 ee       	ldi	r24, 0xE0	; 224
    1306:	99 e0       	ldi	r25, 0x09	; 9
    1308:	8d 93       	st	X+, r24
    130a:	9c 93       	st	X, r25
    130c:	cf 01       	movw	r24, r30
    130e:	08 95       	ret

00001310 <FUNCreverse>:
Thanks to:
https://www.geeksforgeeks.org/convert-floating-point-number-string/
******/
void FUNCreverse(char* str, int len)
{
	int i = 0, j = len - 1, temp;
    1310:	9b 01       	movw	r18, r22
    1312:	21 50       	subi	r18, 0x01	; 1
    1314:	31 09       	sbc	r19, r1
	while (i < j) {
    1316:	12 16       	cp	r1, r18
    1318:	13 06       	cpc	r1, r19
    131a:	84 f4       	brge	.+32     	; 0x133c <FUNCreverse+0x2c>
    131c:	fc 01       	movw	r30, r24
    131e:	e6 0f       	add	r30, r22
    1320:	f7 1f       	adc	r31, r23
    1322:	dc 01       	movw	r26, r24
    1324:	80 e0       	ldi	r24, 0x00	; 0
    1326:	90 e0       	ldi	r25, 0x00	; 0
		temp = str[i];
    1328:	4c 91       	ld	r20, X
		str[i] = str[j];
    132a:	52 91       	ld	r21, -Z
    132c:	5d 93       	st	X+, r21
		str[j] = temp;
    132e:	40 83       	st	Z, r20
		i++;
    1330:	01 96       	adiw	r24, 0x01	; 1
		j--;
    1332:	21 50       	subi	r18, 0x01	; 1
    1334:	31 09       	sbc	r19, r1
https://www.geeksforgeeks.org/convert-floating-point-number-string/
******/
void FUNCreverse(char* str, int len)
{
	int i = 0, j = len - 1, temp;
	while (i < j) {
    1336:	82 17       	cp	r24, r18
    1338:	93 07       	cpc	r25, r19
    133a:	b4 f3       	brlt	.-20     	; 0x1328 <FUNCreverse+0x18>
    133c:	08 95       	ret

0000133e <FUNCintToStr>:
		i++;
		j--;
	}
}
int FUNCintToStr(int x, char str[], int d)
{
    133e:	cf 92       	push	r12
    1340:	df 92       	push	r13
    1342:	ef 92       	push	r14
    1344:	ff 92       	push	r15
    1346:	0f 93       	push	r16
    1348:	1f 93       	push	r17
    134a:	cf 93       	push	r28
    134c:	df 93       	push	r29
    134e:	6b 01       	movw	r12, r22
    1350:	8a 01       	movw	r16, r20
	int i = 0; 
    while (x) { 
    1352:	00 97       	sbiw	r24, 0x00	; 0
    1354:	99 f0       	breq	.+38     	; 0x137c <FUNCintToStr+0x3e>
    1356:	eb 01       	movw	r28, r22
    1358:	e0 e0       	ldi	r30, 0x00	; 0
    135a:	f0 e0       	ldi	r31, 0x00	; 0
        str[i++] = (x % 10) + '0'; 
    135c:	0f 2e       	mov	r0, r31
    135e:	fa e0       	ldi	r31, 0x0A	; 10
    1360:	ef 2e       	mov	r14, r31
    1362:	f1 2c       	mov	r15, r1
    1364:	f0 2d       	mov	r31, r0
    1366:	31 96       	adiw	r30, 0x01	; 1
    1368:	b7 01       	movw	r22, r14
    136a:	0e 94 75 12 	call	0x24ea	; 0x24ea <__divmodhi4>
    136e:	80 5d       	subi	r24, 0xD0	; 208
    1370:	89 93       	st	Y+, r24
        x = x / 10; 
    1372:	86 2f       	mov	r24, r22
    1374:	97 2f       	mov	r25, r23
	}
}
int FUNCintToStr(int x, char str[], int d)
{
	int i = 0; 
    while (x) { 
    1376:	00 97       	sbiw	r24, 0x00	; 0
    1378:	b1 f7       	brne	.-20     	; 0x1366 <FUNCintToStr+0x28>
    137a:	02 c0       	rjmp	.+4      	; 0x1380 <FUNCintToStr+0x42>
		j--;
	}
}
int FUNCintToStr(int x, char str[], int d)
{
	int i = 0; 
    137c:	e0 e0       	ldi	r30, 0x00	; 0
    137e:	f0 e0       	ldi	r31, 0x00	; 0
        str[i++] = (x % 10) + '0'; 
        x = x / 10; 
    } 
    // If number of digits required is more, then 
    // add 0s at the beginning 
    while (i < d) 
    1380:	e0 17       	cp	r30, r16
    1382:	f1 07       	cpc	r31, r17
    1384:	5c f4       	brge	.+22     	; 0x139c <FUNCintToStr+0x5e>
    1386:	ec 0d       	add	r30, r12
    1388:	fd 1d       	adc	r31, r13
    138a:	96 01       	movw	r18, r12
    138c:	20 0f       	add	r18, r16
    138e:	31 1f       	adc	r19, r17
        str[i++] = '0';
    1390:	80 e3       	ldi	r24, 0x30	; 48
    1392:	81 93       	st	Z+, r24
        str[i++] = (x % 10) + '0'; 
        x = x / 10; 
    } 
    // If number of digits required is more, then 
    // add 0s at the beginning 
    while (i < d) 
    1394:	e2 17       	cp	r30, r18
    1396:	f3 07       	cpc	r31, r19
    1398:	e1 f7       	brne	.-8      	; 0x1392 <FUNCintToStr+0x54>
    139a:	01 c0       	rjmp	.+2      	; 0x139e <FUNCintToStr+0x60>
    139c:	8f 01       	movw	r16, r30
        str[i++] = '0';
	
    FUNCreverse(str, i); 
    139e:	b8 01       	movw	r22, r16
    13a0:	c6 01       	movw	r24, r12
    13a2:	b6 df       	rcall	.-148    	; 0x1310 <FUNCreverse>
    str[i] = '\0'; 
    13a4:	e6 01       	movw	r28, r12
    13a6:	c0 0f       	add	r28, r16
    13a8:	d1 1f       	adc	r29, r17
    13aa:	18 82       	st	Y, r1
    return i; 
}
    13ac:	c8 01       	movw	r24, r16
    13ae:	df 91       	pop	r29
    13b0:	cf 91       	pop	r28
    13b2:	1f 91       	pop	r17
    13b4:	0f 91       	pop	r16
    13b6:	ff 90       	pop	r15
    13b8:	ef 90       	pop	r14
    13ba:	df 90       	pop	r13
    13bc:	cf 90       	pop	r12
    13be:	08 95       	ret

000013c0 <FUNCftoa>:
void FUNCftoa(float n, char* res, int afterpoint)
{
    13c0:	2f 92       	push	r2
    13c2:	3f 92       	push	r3
    13c4:	4f 92       	push	r4
    13c6:	5f 92       	push	r5
    13c8:	6f 92       	push	r6
    13ca:	7f 92       	push	r7
    13cc:	8f 92       	push	r8
    13ce:	9f 92       	push	r9
    13d0:	af 92       	push	r10
    13d2:	bf 92       	push	r11
    13d4:	cf 92       	push	r12
    13d6:	df 92       	push	r13
    13d8:	ef 92       	push	r14
    13da:	ff 92       	push	r15
    13dc:	0f 93       	push	r16
    13de:	1f 93       	push	r17
    13e0:	cf 93       	push	r28
    13e2:	df 93       	push	r29
    13e4:	4b 01       	movw	r8, r22
    13e6:	5c 01       	movw	r10, r24
    13e8:	8a 01       	movw	r16, r20
    13ea:	e9 01       	movw	r28, r18
	// Extract integer part
	int ipart = (int)n;
    13ec:	d4 d5       	rcall	.+2984   	; 0x1f96 <__fixsfsi>
    13ee:	6b 01       	movw	r12, r22
    13f0:	7c 01       	movw	r14, r24
	
	// Extract floating part
	float fpart = n - (float)ipart;
	
	// convert integer part to string
	int i =	FUNCintToStr(ipart, res, 1);
    13f2:	41 e0       	ldi	r20, 0x01	; 1
    13f4:	50 e0       	ldi	r21, 0x00	; 0
    13f6:	b8 01       	movw	r22, r16
    13f8:	c6 01       	movw	r24, r12
    13fa:	a1 df       	rcall	.-190    	; 0x133e <FUNCintToStr>
    13fc:	1c 01       	movw	r2, r24
	
	// check for display option after point
	if (afterpoint != 0) {
    13fe:	20 97       	sbiw	r28, 0x00	; 0
    1400:	61 f1       	breq	.+88     	; 0x145a <FUNCftoa+0x9a>
		res[i] = '.'; // add dot
    1402:	f8 01       	movw	r30, r16
    1404:	e8 0f       	add	r30, r24
    1406:	f9 1f       	adc	r31, r25
    1408:	8e e2       	ldi	r24, 0x2E	; 46
    140a:	80 83       	st	Z, r24
	
		// Get the value of fraction part up to given no.
		// of points after dot. The third parameter
		// is needed to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
    140c:	be 01       	movw	r22, r28
    140e:	0d 2e       	mov	r0, r29
    1410:	00 0c       	add	r0, r0
    1412:	88 0b       	sbc	r24, r24
    1414:	99 0b       	sbc	r25, r25
    1416:	f2 d5       	rcall	.+3044   	; 0x1ffc <__floatsisf>
    1418:	9b 01       	movw	r18, r22
    141a:	ac 01       	movw	r20, r24
    141c:	60 e0       	ldi	r22, 0x00	; 0
    141e:	70 e0       	ldi	r23, 0x00	; 0
    1420:	80 e2       	ldi	r24, 0x20	; 32
    1422:	91 e4       	ldi	r25, 0x41	; 65
    1424:	da d6       	rcall	.+3508   	; 0x21da <pow>
    1426:	2b 01       	movw	r4, r22
    1428:	3c 01       	movw	r6, r24
{
	// Extract integer part
	int ipart = (int)n;
	
	// Extract floating part
	float fpart = n - (float)ipart;
    142a:	b6 01       	movw	r22, r12
    142c:	dd 0c       	add	r13, r13
    142e:	88 0b       	sbc	r24, r24
    1430:	99 0b       	sbc	r25, r25
    1432:	e4 d5       	rcall	.+3016   	; 0x1ffc <__floatsisf>
    1434:	9b 01       	movw	r18, r22
    1436:	ac 01       	movw	r20, r24
    1438:	c5 01       	movw	r24, r10
    143a:	b4 01       	movw	r22, r8
    143c:	df d4       	rcall	.+2494   	; 0x1dfc <__subsf3>
		// Get the value of fraction part up to given no.
		// of points after dot. The third parameter
		// is needed to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
	
		FUNCintToStr((int)fpart, res + i + 1, afterpoint);
    143e:	2f ef       	ldi	r18, 0xFF	; 255
    1440:	22 1a       	sub	r2, r18
    1442:	32 0a       	sbc	r3, r18
    1444:	02 0d       	add	r16, r2
    1446:	13 1d       	adc	r17, r3
    1448:	a3 01       	movw	r20, r6
    144a:	92 01       	movw	r18, r4
    144c:	63 d6       	rcall	.+3270   	; 0x2114 <__mulsf3>
    144e:	a3 d5       	rcall	.+2886   	; 0x1f96 <__fixsfsi>
    1450:	dc 01       	movw	r26, r24
    1452:	cb 01       	movw	r24, r22
    1454:	ae 01       	movw	r20, r28
    1456:	b8 01       	movw	r22, r16
    1458:	72 df       	rcall	.-284    	; 0x133e <FUNCintToStr>
	}
}
    145a:	df 91       	pop	r29
    145c:	cf 91       	pop	r28
    145e:	1f 91       	pop	r17
    1460:	0f 91       	pop	r16
    1462:	ff 90       	pop	r15
    1464:	ef 90       	pop	r14
    1466:	df 90       	pop	r13
    1468:	cf 90       	pop	r12
    146a:	bf 90       	pop	r11
    146c:	af 90       	pop	r10
    146e:	9f 90       	pop	r9
    1470:	8f 90       	pop	r8
    1472:	7f 90       	pop	r7
    1474:	6f 90       	pop	r6
    1476:	5f 90       	pop	r5
    1478:	4f 90       	pop	r4
    147a:	3f 90       	pop	r3
    147c:	2f 90       	pop	r2
    147e:	08 95       	ret

00001480 <LCD0_write>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1480:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1484:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    1488:	90 81       	ld	r25, Z
    148a:	9d 7f       	andi	r25, 0xFD	; 253
    148c:	90 83       	st	Z, r25
    148e:	67 2b       	or	r22, r23
    1490:	41 f0       	breq	.+16     	; 0x14a2 <LCD0_write+0x22>
    1492:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1496:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    149a:	90 81       	ld	r25, Z
    149c:	91 60       	ori	r25, 0x01	; 1
    149e:	90 83       	st	Z, r25
    14a0:	07 c0       	rjmp	.+14     	; 0x14b0 <LCD0_write+0x30>
    14a2:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    14a6:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    14aa:	90 81       	ld	r25, Z
    14ac:	9e 7f       	andi	r25, 0xFE	; 254
    14ae:	90 83       	st	Z, r25
    14b0:	e0 91 d8 02 	lds	r30, 0x02D8	; 0x8002d8 <lcd0_DDR>
    14b4:	f0 91 d9 02 	lds	r31, 0x02D9	; 0x8002d9 <lcd0_DDR+0x1>
    14b8:	90 81       	ld	r25, Z
    14ba:	90 6f       	ori	r25, 0xF0	; 240
    14bc:	90 83       	st	Z, r25
    14be:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    14c2:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    14c6:	90 81       	ld	r25, Z
    14c8:	94 60       	ori	r25, 0x04	; 4
    14ca:	90 83       	st	Z, r25
    14cc:	88 23       	and	r24, r24
    14ce:	44 f4       	brge	.+16     	; 0x14e0 <LCD0_write+0x60>
    14d0:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    14d4:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    14d8:	90 81       	ld	r25, Z
    14da:	90 68       	ori	r25, 0x80	; 128
    14dc:	90 83       	st	Z, r25
    14de:	07 c0       	rjmp	.+14     	; 0x14ee <LCD0_write+0x6e>
    14e0:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    14e4:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    14e8:	90 81       	ld	r25, Z
    14ea:	9f 77       	andi	r25, 0x7F	; 127
    14ec:	90 83       	st	Z, r25
    14ee:	86 ff       	sbrs	r24, 6
    14f0:	08 c0       	rjmp	.+16     	; 0x1502 <LCD0_write+0x82>
    14f2:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    14f6:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    14fa:	90 81       	ld	r25, Z
    14fc:	90 64       	ori	r25, 0x40	; 64
    14fe:	90 83       	st	Z, r25
    1500:	07 c0       	rjmp	.+14     	; 0x1510 <LCD0_write+0x90>
    1502:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1506:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    150a:	90 81       	ld	r25, Z
    150c:	9f 7b       	andi	r25, 0xBF	; 191
    150e:	90 83       	st	Z, r25
    1510:	85 ff       	sbrs	r24, 5
    1512:	08 c0       	rjmp	.+16     	; 0x1524 <LCD0_write+0xa4>
    1514:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1518:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    151c:	90 81       	ld	r25, Z
    151e:	90 62       	ori	r25, 0x20	; 32
    1520:	90 83       	st	Z, r25
    1522:	07 c0       	rjmp	.+14     	; 0x1532 <LCD0_write+0xb2>
    1524:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1528:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    152c:	90 81       	ld	r25, Z
    152e:	9f 7d       	andi	r25, 0xDF	; 223
    1530:	90 83       	st	Z, r25
    1532:	84 ff       	sbrs	r24, 4
    1534:	08 c0       	rjmp	.+16     	; 0x1546 <LCD0_write+0xc6>
    1536:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    153a:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    153e:	90 81       	ld	r25, Z
    1540:	90 61       	ori	r25, 0x10	; 16
    1542:	90 83       	st	Z, r25
    1544:	07 c0       	rjmp	.+14     	; 0x1554 <LCD0_write+0xd4>
    1546:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    154a:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    154e:	90 81       	ld	r25, Z
    1550:	9f 7e       	andi	r25, 0xEF	; 239
    1552:	90 83       	st	Z, r25
    1554:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1558:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    155c:	90 81       	ld	r25, Z
    155e:	9b 7f       	andi	r25, 0xFB	; 251
    1560:	90 83       	st	Z, r25
    1562:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1566:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    156a:	90 81       	ld	r25, Z
    156c:	94 60       	ori	r25, 0x04	; 4
    156e:	90 83       	st	Z, r25
    1570:	83 ff       	sbrs	r24, 3
    1572:	08 c0       	rjmp	.+16     	; 0x1584 <LCD0_write+0x104>
    1574:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1578:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    157c:	90 81       	ld	r25, Z
    157e:	90 68       	ori	r25, 0x80	; 128
    1580:	90 83       	st	Z, r25
    1582:	07 c0       	rjmp	.+14     	; 0x1592 <LCD0_write+0x112>
    1584:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1588:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    158c:	90 81       	ld	r25, Z
    158e:	9f 77       	andi	r25, 0x7F	; 127
    1590:	90 83       	st	Z, r25
    1592:	82 ff       	sbrs	r24, 2
    1594:	08 c0       	rjmp	.+16     	; 0x15a6 <LCD0_write+0x126>
    1596:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    159a:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    159e:	90 81       	ld	r25, Z
    15a0:	90 64       	ori	r25, 0x40	; 64
    15a2:	90 83       	st	Z, r25
    15a4:	07 c0       	rjmp	.+14     	; 0x15b4 <LCD0_write+0x134>
    15a6:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    15aa:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    15ae:	90 81       	ld	r25, Z
    15b0:	9f 7b       	andi	r25, 0xBF	; 191
    15b2:	90 83       	st	Z, r25
    15b4:	81 ff       	sbrs	r24, 1
    15b6:	08 c0       	rjmp	.+16     	; 0x15c8 <LCD0_write+0x148>
    15b8:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    15bc:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    15c0:	90 81       	ld	r25, Z
    15c2:	90 62       	ori	r25, 0x20	; 32
    15c4:	90 83       	st	Z, r25
    15c6:	07 c0       	rjmp	.+14     	; 0x15d6 <LCD0_write+0x156>
    15c8:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    15cc:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    15d0:	90 81       	ld	r25, Z
    15d2:	9f 7d       	andi	r25, 0xDF	; 223
    15d4:	90 83       	st	Z, r25
    15d6:	80 ff       	sbrs	r24, 0
    15d8:	08 c0       	rjmp	.+16     	; 0x15ea <LCD0_write+0x16a>
    15da:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    15de:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    15e2:	80 81       	ld	r24, Z
    15e4:	80 61       	ori	r24, 0x10	; 16
    15e6:	80 83       	st	Z, r24
    15e8:	07 c0       	rjmp	.+14     	; 0x15f8 <LCD0_write+0x178>
    15ea:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    15ee:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    15f2:	80 81       	ld	r24, Z
    15f4:	8f 7e       	andi	r24, 0xEF	; 239
    15f6:	80 83       	st	Z, r24
    15f8:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    15fc:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    1600:	80 81       	ld	r24, Z
    1602:	8b 7f       	andi	r24, 0xFB	; 251
    1604:	80 83       	st	Z, r24
    1606:	08 95       	ret

00001608 <LCD0_read>:
    1608:	e0 91 d8 02 	lds	r30, 0x02D8	; 0x8002d8 <lcd0_DDR>
    160c:	f0 91 d9 02 	lds	r31, 0x02D9	; 0x8002d9 <lcd0_DDR+0x1>
    1610:	20 81       	ld	r18, Z
    1612:	2f 70       	andi	r18, 0x0F	; 15
    1614:	20 83       	st	Z, r18
    1616:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    161a:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    161e:	20 81       	ld	r18, Z
    1620:	20 6f       	ori	r18, 0xF0	; 240
    1622:	20 83       	st	Z, r18
    1624:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1628:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    162c:	20 81       	ld	r18, Z
    162e:	22 60       	ori	r18, 0x02	; 2
    1630:	20 83       	st	Z, r18
    1632:	89 2b       	or	r24, r25
    1634:	41 f0       	breq	.+16     	; 0x1646 <LCD0_read+0x3e>
    1636:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    163a:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    163e:	80 81       	ld	r24, Z
    1640:	81 60       	ori	r24, 0x01	; 1
    1642:	80 83       	st	Z, r24
    1644:	07 c0       	rjmp	.+14     	; 0x1654 <LCD0_read+0x4c>
    1646:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    164a:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    164e:	80 81       	ld	r24, Z
    1650:	8e 7f       	andi	r24, 0xFE	; 254
    1652:	80 83       	st	Z, r24
    1654:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    1658:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    165c:	80 81       	ld	r24, Z
    165e:	84 60       	ori	r24, 0x04	; 4
    1660:	80 83       	st	Z, r24
    1662:	e0 91 d1 02 	lds	r30, 0x02D1	; 0x8002d1 <lcd0_PIN>
    1666:	f0 91 d2 02 	lds	r31, 0x02D2	; 0x8002d2 <lcd0_PIN+0x1>
    166a:	80 81       	ld	r24, Z
    166c:	88 23       	and	r24, r24
    166e:	14 f0       	brlt	.+4      	; 0x1674 <LCD0_read+0x6c>
    1670:	80 e0       	ldi	r24, 0x00	; 0
    1672:	01 c0       	rjmp	.+2      	; 0x1676 <LCD0_read+0x6e>
    1674:	80 e8       	ldi	r24, 0x80	; 128
    1676:	90 81       	ld	r25, Z
    1678:	96 ff       	sbrs	r25, 6
    167a:	02 c0       	rjmp	.+4      	; 0x1680 <LCD0_read+0x78>
    167c:	80 64       	ori	r24, 0x40	; 64
    167e:	01 c0       	rjmp	.+2      	; 0x1682 <LCD0_read+0x7a>
    1680:	8f 7b       	andi	r24, 0xBF	; 191
    1682:	90 81       	ld	r25, Z
    1684:	95 ff       	sbrs	r25, 5
    1686:	02 c0       	rjmp	.+4      	; 0x168c <LCD0_read+0x84>
    1688:	80 62       	ori	r24, 0x20	; 32
    168a:	01 c0       	rjmp	.+2      	; 0x168e <LCD0_read+0x86>
    168c:	8f 7d       	andi	r24, 0xDF	; 223
    168e:	90 81       	ld	r25, Z
    1690:	94 ff       	sbrs	r25, 4
    1692:	02 c0       	rjmp	.+4      	; 0x1698 <LCD0_read+0x90>
    1694:	80 61       	ori	r24, 0x10	; 16
    1696:	01 c0       	rjmp	.+2      	; 0x169a <LCD0_read+0x92>
    1698:	8f 7e       	andi	r24, 0xEF	; 239
    169a:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    169e:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    16a2:	90 81       	ld	r25, Z
    16a4:	9b 7f       	andi	r25, 0xFB	; 251
    16a6:	90 83       	st	Z, r25
    16a8:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    16ac:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    16b0:	90 81       	ld	r25, Z
    16b2:	94 60       	ori	r25, 0x04	; 4
    16b4:	90 83       	st	Z, r25
    16b6:	e0 91 d1 02 	lds	r30, 0x02D1	; 0x8002d1 <lcd0_PIN>
    16ba:	f0 91 d2 02 	lds	r31, 0x02D2	; 0x8002d2 <lcd0_PIN+0x1>
    16be:	90 81       	ld	r25, Z
    16c0:	99 23       	and	r25, r25
    16c2:	14 f4       	brge	.+4      	; 0x16c8 <LCD0_read+0xc0>
    16c4:	88 60       	ori	r24, 0x08	; 8
    16c6:	01 c0       	rjmp	.+2      	; 0x16ca <LCD0_read+0xc2>
    16c8:	87 7f       	andi	r24, 0xF7	; 247
    16ca:	90 81       	ld	r25, Z
    16cc:	96 ff       	sbrs	r25, 6
    16ce:	02 c0       	rjmp	.+4      	; 0x16d4 <LCD0_read+0xcc>
    16d0:	84 60       	ori	r24, 0x04	; 4
    16d2:	01 c0       	rjmp	.+2      	; 0x16d6 <LCD0_read+0xce>
    16d4:	8b 7f       	andi	r24, 0xFB	; 251
    16d6:	90 81       	ld	r25, Z
    16d8:	95 ff       	sbrs	r25, 5
    16da:	02 c0       	rjmp	.+4      	; 0x16e0 <LCD0_read+0xd8>
    16dc:	82 60       	ori	r24, 0x02	; 2
    16de:	01 c0       	rjmp	.+2      	; 0x16e2 <LCD0_read+0xda>
    16e0:	8d 7f       	andi	r24, 0xFD	; 253
    16e2:	90 81       	ld	r25, Z
    16e4:	94 ff       	sbrs	r25, 4
    16e6:	02 c0       	rjmp	.+4      	; 0x16ec <LCD0_read+0xe4>
    16e8:	81 60       	ori	r24, 0x01	; 1
    16ea:	01 c0       	rjmp	.+2      	; 0x16ee <LCD0_read+0xe6>
    16ec:	8e 7f       	andi	r24, 0xFE	; 254
    16ee:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    16f2:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    16f6:	90 81       	ld	r25, Z
    16f8:	9b 7f       	andi	r25, 0xFB	; 251
    16fa:	90 83       	st	Z, r25
    16fc:	08 95       	ret

000016fe <LCD0_BF>:
    16fe:	cf 93       	push	r28
    1700:	df 93       	push	r29
    1702:	80 e0       	ldi	r24, 0x00	; 0
    1704:	90 e0       	ldi	r25, 0x00	; 0
    1706:	80 df       	rcall	.-256    	; 0x1608 <LCD0_read>
    1708:	cb e0       	ldi	r28, 0x0B	; 11
    170a:	d0 e0       	ldi	r29, 0x00	; 0
    170c:	05 c0       	rjmp	.+10     	; 0x1718 <LCD0_BF+0x1a>
    170e:	80 e0       	ldi	r24, 0x00	; 0
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	7a df       	rcall	.-268    	; 0x1608 <LCD0_read>
    1714:	21 97       	sbiw	r28, 0x01	; 1
    1716:	11 f0       	breq	.+4      	; 0x171c <LCD0_BF+0x1e>
    1718:	88 23       	and	r24, r24
    171a:	cc f3       	brlt	.-14     	; 0x170e <LCD0_BF+0x10>
    171c:	df 91       	pop	r29
    171e:	cf 91       	pop	r28
    1720:	08 95       	ret

00001722 <LCD0_putch>:
    1722:	61 e0       	ldi	r22, 0x01	; 1
    1724:	70 e0       	ldi	r23, 0x00	; 0
    1726:	ac de       	rcall	.-680    	; 0x1480 <LCD0_write>
    1728:	ea cf       	rjmp	.-44     	; 0x16fe <LCD0_BF>
    172a:	08 95       	ret

0000172c <LCD0_getch>:
    172c:	cf 93       	push	r28
    172e:	81 e0       	ldi	r24, 0x01	; 1
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	6a df       	rcall	.-300    	; 0x1608 <LCD0_read>
    1734:	c8 2f       	mov	r28, r24
    1736:	e3 df       	rcall	.-58     	; 0x16fe <LCD0_BF>
    1738:	8c 2f       	mov	r24, r28
    173a:	cf 91       	pop	r28
    173c:	08 95       	ret

0000173e <LCD0_string>:
    173e:	cf 93       	push	r28
    1740:	df 93       	push	r29
    1742:	ec 01       	movw	r28, r24
    1744:	88 81       	ld	r24, Y
    1746:	88 23       	and	r24, r24
    1748:	41 f0       	breq	.+16     	; 0x175a <LCD0_string+0x1c>
    174a:	21 96       	adiw	r28, 0x01	; 1
    174c:	61 e0       	ldi	r22, 0x01	; 1
    174e:	70 e0       	ldi	r23, 0x00	; 0
    1750:	97 de       	rcall	.-722    	; 0x1480 <LCD0_write>
    1752:	d5 df       	rcall	.-86     	; 0x16fe <LCD0_BF>
    1754:	89 91       	ld	r24, Y+
    1756:	81 11       	cpse	r24, r1
    1758:	f9 cf       	rjmp	.-14     	; 0x174c <LCD0_string+0xe>
    175a:	df 91       	pop	r29
    175c:	cf 91       	pop	r28
    175e:	08 95       	ret

00001760 <LCD0_string_size>:
    1760:	0f 93       	push	r16
    1762:	1f 93       	push	r17
    1764:	cf 93       	push	r28
    1766:	df 93       	push	r29
    1768:	fc 01       	movw	r30, r24
    176a:	d6 2f       	mov	r29, r22
    176c:	80 81       	ld	r24, Z
    176e:	88 23       	and	r24, r24
    1770:	51 f0       	breq	.+20     	; 0x1786 <LCD0_string_size+0x26>
    1772:	8f 01       	movw	r16, r30
    1774:	0f 5f       	subi	r16, 0xFF	; 255
    1776:	1f 4f       	sbci	r17, 0xFF	; 255
    1778:	61 11       	cpse	r22, r1
    177a:	09 c0       	rjmp	.+18     	; 0x178e <LCD0_string_size+0x2e>
    177c:	1b c0       	rjmp	.+54     	; 0x17b4 <LCD0_string_size+0x54>
    177e:	cf 5f       	subi	r28, 0xFF	; 255
    1780:	dc 17       	cp	r29, r28
    1782:	30 f4       	brcc	.+12     	; 0x1790 <LCD0_string_size+0x30>
    1784:	01 c0       	rjmp	.+2      	; 0x1788 <LCD0_string_size+0x28>
    1786:	c0 e0       	ldi	r28, 0x00	; 0
    1788:	cd 17       	cp	r28, r29
    178a:	60 f0       	brcs	.+24     	; 0x17a4 <LCD0_string_size+0x44>
    178c:	13 c0       	rjmp	.+38     	; 0x17b4 <LCD0_string_size+0x54>
    178e:	c1 e0       	ldi	r28, 0x01	; 1
    1790:	61 e0       	ldi	r22, 0x01	; 1
    1792:	70 e0       	ldi	r23, 0x00	; 0
    1794:	75 de       	rcall	.-790    	; 0x1480 <LCD0_write>
    1796:	b3 df       	rcall	.-154    	; 0x16fe <LCD0_BF>
    1798:	f8 01       	movw	r30, r16
    179a:	81 91       	ld	r24, Z+
    179c:	8f 01       	movw	r16, r30
    179e:	81 11       	cpse	r24, r1
    17a0:	ee cf       	rjmp	.-36     	; 0x177e <LCD0_string_size+0x1e>
    17a2:	f2 cf       	rjmp	.-28     	; 0x1788 <LCD0_string_size+0x28>
    17a4:	cf 5f       	subi	r28, 0xFF	; 255
    17a6:	61 e0       	ldi	r22, 0x01	; 1
    17a8:	70 e0       	ldi	r23, 0x00	; 0
    17aa:	80 e2       	ldi	r24, 0x20	; 32
    17ac:	69 de       	rcall	.-814    	; 0x1480 <LCD0_write>
    17ae:	a7 df       	rcall	.-178    	; 0x16fe <LCD0_BF>
    17b0:	cd 17       	cp	r28, r29
    17b2:	c0 f3       	brcs	.-16     	; 0x17a4 <LCD0_string_size+0x44>
    17b4:	df 91       	pop	r29
    17b6:	cf 91       	pop	r28
    17b8:	1f 91       	pop	r17
    17ba:	0f 91       	pop	r16
    17bc:	08 95       	ret

000017be <LCD0_hspace>:
    17be:	cf 93       	push	r28
    17c0:	c8 2f       	mov	r28, r24
    17c2:	88 23       	and	r24, r24
    17c4:	39 f0       	breq	.+14     	; 0x17d4 <LCD0_hspace+0x16>
    17c6:	61 e0       	ldi	r22, 0x01	; 1
    17c8:	70 e0       	ldi	r23, 0x00	; 0
    17ca:	80 e2       	ldi	r24, 0x20	; 32
    17cc:	59 de       	rcall	.-846    	; 0x1480 <LCD0_write>
    17ce:	97 df       	rcall	.-210    	; 0x16fe <LCD0_BF>
    17d0:	c1 50       	subi	r28, 0x01	; 1
    17d2:	c9 f7       	brne	.-14     	; 0x17c6 <LCD0_hspace+0x8>
    17d4:	cf 91       	pop	r28
    17d6:	08 95       	ret

000017d8 <LCD0_gotoxy>:
    17d8:	26 2f       	mov	r18, r22
    17da:	81 30       	cpi	r24, 0x01	; 1
    17dc:	91 05       	cpc	r25, r1
    17de:	71 f0       	breq	.+28     	; 0x17fc <LCD0_gotoxy+0x24>
    17e0:	30 f0       	brcs	.+12     	; 0x17ee <LCD0_gotoxy+0x16>
    17e2:	82 30       	cpi	r24, 0x02	; 2
    17e4:	91 05       	cpc	r25, r1
    17e6:	89 f0       	breq	.+34     	; 0x180a <LCD0_gotoxy+0x32>
    17e8:	03 97       	sbiw	r24, 0x03	; 3
    17ea:	b1 f0       	breq	.+44     	; 0x1818 <LCD0_gotoxy+0x40>
    17ec:	08 95       	ret
    17ee:	60 e0       	ldi	r22, 0x00	; 0
    17f0:	70 e0       	ldi	r23, 0x00	; 0
    17f2:	80 e8       	ldi	r24, 0x80	; 128
    17f4:	82 0f       	add	r24, r18
    17f6:	44 de       	rcall	.-888    	; 0x1480 <LCD0_write>
    17f8:	82 cf       	rjmp	.-252    	; 0x16fe <LCD0_BF>
    17fa:	08 95       	ret
    17fc:	60 e0       	ldi	r22, 0x00	; 0
    17fe:	70 e0       	ldi	r23, 0x00	; 0
    1800:	80 ec       	ldi	r24, 0xC0	; 192
    1802:	82 0f       	add	r24, r18
    1804:	3d de       	rcall	.-902    	; 0x1480 <LCD0_write>
    1806:	7b cf       	rjmp	.-266    	; 0x16fe <LCD0_BF>
    1808:	08 95       	ret
    180a:	60 e0       	ldi	r22, 0x00	; 0
    180c:	70 e0       	ldi	r23, 0x00	; 0
    180e:	84 e9       	ldi	r24, 0x94	; 148
    1810:	82 0f       	add	r24, r18
    1812:	36 de       	rcall	.-916    	; 0x1480 <LCD0_write>
    1814:	74 cf       	rjmp	.-280    	; 0x16fe <LCD0_BF>
    1816:	08 95       	ret
    1818:	60 e0       	ldi	r22, 0x00	; 0
    181a:	70 e0       	ldi	r23, 0x00	; 0
    181c:	84 ed       	ldi	r24, 0xD4	; 212
    181e:	82 0f       	add	r24, r18
    1820:	2f de       	rcall	.-930    	; 0x1480 <LCD0_write>
    1822:	6d cf       	rjmp	.-294    	; 0x16fe <LCD0_BF>
    1824:	08 95       	ret

00001826 <LCD0_clear>:
    1826:	60 e0       	ldi	r22, 0x00	; 0
    1828:	70 e0       	ldi	r23, 0x00	; 0
    182a:	81 e0       	ldi	r24, 0x01	; 1
    182c:	29 de       	rcall	.-942    	; 0x1480 <LCD0_write>
    182e:	87 ee       	ldi	r24, 0xE7	; 231
    1830:	97 e1       	ldi	r25, 0x17	; 23
    1832:	01 97       	sbiw	r24, 0x01	; 1
    1834:	f1 f7       	brne	.-4      	; 0x1832 <LCD0_clear+0xc>
    1836:	00 c0       	rjmp	.+0      	; 0x1838 <LCD0_clear+0x12>
    1838:	00 00       	nop
    183a:	08 95       	ret

0000183c <LCD0_inic>:
	return lcd0;
}
void LCD0_inic(void)
{
	//LCD INIC
	*lcd0_DDR=(1<<RS)|(1<<RW)|(1<<EN)|(0<<NC);
    183c:	e0 91 d8 02 	lds	r30, 0x02D8	; 0x8002d8 <lcd0_DDR>
    1840:	f0 91 d9 02 	lds	r31, 0x02D9	; 0x8002d9 <lcd0_DDR+0x1>
    1844:	87 e0       	ldi	r24, 0x07	; 7
    1846:	80 83       	st	Z, r24
	*lcd0_PORT=(1<<NC);
    1848:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    184c:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    1850:	88 e0       	ldi	r24, 0x08	; 8
    1852:	80 83       	st	Z, r24
    1854:	2f ef       	ldi	r18, 0xFF	; 255
    1856:	83 ef       	ldi	r24, 0xF3	; 243
    1858:	91 e0       	ldi	r25, 0x01	; 1
    185a:	21 50       	subi	r18, 0x01	; 1
    185c:	80 40       	sbci	r24, 0x00	; 0
    185e:	90 40       	sbci	r25, 0x00	; 0
    1860:	e1 f7       	brne	.-8      	; 0x185a <LCD0_inic+0x1e>
    1862:	00 c0       	rjmp	.+0      	; 0x1864 <LCD0_inic+0x28>
    1864:	00 00       	nop
	/***INICIALIZACAO LCD**datasheet*/
	_delay_ms(40);
	LCD0_write(0x33,INST); //function set
    1866:	60 e0       	ldi	r22, 0x00	; 0
    1868:	70 e0       	ldi	r23, 0x00	; 0
    186a:	83 e3       	ldi	r24, 0x33	; 51
    186c:	09 de       	rcall	.-1006   	; 0x1480 <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    186e:	20 ed       	ldi	r18, 0xD0	; 208
    1870:	2a 95       	dec	r18
    1872:	f1 f7       	brne	.-4      	; 0x1870 <LCD0_inic+0x34>
	_delay_us(39);
	LCD0_write(0x33,INST); //function set
    1874:	60 e0       	ldi	r22, 0x00	; 0
    1876:	70 e0       	ldi	r23, 0x00	; 0
    1878:	83 e3       	ldi	r24, 0x33	; 51
    187a:	02 de       	rcall	.-1020   	; 0x1480 <LCD0_write>
    187c:	80 ed       	ldi	r24, 0xD0	; 208
    187e:	8a 95       	dec	r24
    1880:	f1 f7       	brne	.-4      	; 0x187e <LCD0_inic+0x42>
	_delay_us(39);
	LCD0_write(0x2B,INST); //function set
    1882:	60 e0       	ldi	r22, 0x00	; 0
    1884:	70 e0       	ldi	r23, 0x00	; 0
    1886:	8b e2       	ldi	r24, 0x2B	; 43
    1888:	fb dd       	rcall	.-1034   	; 0x1480 <LCD0_write>
    188a:	95 ec       	ldi	r25, 0xC5	; 197
    188c:	9a 95       	dec	r25
    188e:	f1 f7       	brne	.-4      	; 0x188c <LCD0_inic+0x50>
    1890:	00 00       	nop
	_delay_us(37);
	LCD0_write(0x0C,INST);// display on/off control
    1892:	60 e0       	ldi	r22, 0x00	; 0
    1894:	70 e0       	ldi	r23, 0x00	; 0
    1896:	8c e0       	ldi	r24, 0x0C	; 12
    1898:	f3 dd       	rcall	.-1050   	; 0x1480 <LCD0_write>
    189a:	25 ec       	ldi	r18, 0xC5	; 197
    189c:	2a 95       	dec	r18
    189e:	f1 f7       	brne	.-4      	; 0x189c <LCD0_inic+0x60>
	_delay_us(37);
	LCD0_write(0x01,INST);// clear display
    18a0:	00 00       	nop
    18a2:	60 e0       	ldi	r22, 0x00	; 0
    18a4:	70 e0       	ldi	r23, 0x00	; 0
    18a6:	81 e0       	ldi	r24, 0x01	; 1
    18a8:	eb dd       	rcall	.-1066   	; 0x1480 <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    18aa:	87 ee       	ldi	r24, 0xE7	; 231
    18ac:	97 e1       	ldi	r25, 0x17	; 23
    18ae:	01 97       	sbiw	r24, 0x01	; 1
    18b0:	f1 f7       	brne	.-4      	; 0x18ae <LCD0_inic+0x72>
    18b2:	00 c0       	rjmp	.+0      	; 0x18b4 <LCD0_inic+0x78>
	_delay_ms(1.53);
	LCD0_write(0x06,INST);// entry mode set (crazy settings)
    18b4:	00 00       	nop
    18b6:	60 e0       	ldi	r22, 0x00	; 0
    18b8:	70 e0       	ldi	r23, 0x00	; 0
    18ba:	86 e0       	ldi	r24, 0x06	; 6
    18bc:	e1 dd       	rcall	.-1086   	; 0x1480 <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    18be:	95 ec       	ldi	r25, 0xC5	; 197
    18c0:	9a 95       	dec	r25
    18c2:	f1 f7       	brne	.-4      	; 0x18c0 <LCD0_inic+0x84>
    18c4:	00 00       	nop
    18c6:	08 95       	ret

000018c8 <LCD0enable>:
void LCD1_strobe(unsigned int num);
void LCD1_reboot(void);
unsigned int LCD_ticks(unsigned int num);
/***Procedure & Function***/
LCD0 LCD0enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port)
{
    18c8:	1f 93       	push	r17
    18ca:	cf 93       	push	r28
    18cc:	df 93       	push	r29
    18ce:	ec 01       	movw	r28, r24
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    18d0:	1f b7       	in	r17, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    18d2:	8f b7       	in	r24, 0x3f	; 63
    18d4:	8f 77       	andi	r24, 0x7F	; 127
    18d6:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	LCD0 lcd0;
	//import parametros
	lcd0_DDR=ddr;
    18d8:	70 93 d9 02 	sts	0x02D9, r23	; 0x8002d9 <lcd0_DDR+0x1>
    18dc:	60 93 d8 02 	sts	0x02D8, r22	; 0x8002d8 <lcd0_DDR>
	lcd0_PIN=pin;
    18e0:	50 93 d2 02 	sts	0x02D2, r21	; 0x8002d2 <lcd0_PIN+0x1>
    18e4:	40 93 d1 02 	sts	0x02D1, r20	; 0x8002d1 <lcd0_PIN>
	lcd0_PORT=port;
    18e8:	30 93 dc 02 	sts	0x02DC, r19	; 0x8002dc <lcd0_PORT+0x1>
    18ec:	20 93 db 02 	sts	0x02DB, r18	; 0x8002db <lcd0_PORT>
	//inic variables
	*lcd0_DDR=0x00;
    18f0:	fb 01       	movw	r30, r22
    18f2:	10 82       	st	Z, r1
	*lcd0_PORT=0xFF;
    18f4:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PORT>
    18f8:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PORT+0x1>
    18fc:	8f ef       	ldi	r24, 0xFF	; 255
    18fe:	80 83       	st	Z, r24
	lcd0_detect=*lcd0_PIN & (1<<NC);
    1900:	e0 91 d1 02 	lds	r30, 0x02D1	; 0x8002d1 <lcd0_PIN>
    1904:	f0 91 d2 02 	lds	r31, 0x02D2	; 0x8002d2 <lcd0_PIN+0x1>
    1908:	80 81       	ld	r24, Z
    190a:	88 70       	andi	r24, 0x08	; 8
    190c:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <lcd0_detect>
	lcd0.hspace=LCD0_hspace;
	lcd0.clear=LCD0_clear;
	lcd0.gotoxy=LCD0_gotoxy;
	lcd0.reboot=LCD0_reboot;
	//LCD INIC
	LCD0_inic();
    1910:	95 df       	rcall	.-214    	; 0x183c <LCD0_inic>
	SREG=tSREG;
    1912:	1f bf       	out	0x3f, r17	; 63
	//
	return lcd0;
    1914:	80 e4       	ldi	r24, 0x40	; 64
    1916:	9a e0       	ldi	r25, 0x0A	; 10
    1918:	99 83       	std	Y+1, r25	; 0x01
    191a:	88 83       	st	Y, r24
    191c:	84 e0       	ldi	r24, 0x04	; 4
    191e:	9b e0       	ldi	r25, 0x0B	; 11
    1920:	9b 83       	std	Y+3, r25	; 0x03
    1922:	8a 83       	std	Y+2, r24	; 0x02
    1924:	8f e7       	ldi	r24, 0x7F	; 127
    1926:	9b e0       	ldi	r25, 0x0B	; 11
    1928:	9d 83       	std	Y+5, r25	; 0x05
    192a:	8c 83       	std	Y+4, r24	; 0x04
    192c:	81 e9       	ldi	r24, 0x91	; 145
    192e:	9b e0       	ldi	r25, 0x0B	; 11
    1930:	9f 83       	std	Y+7, r25	; 0x07
    1932:	8e 83       	std	Y+6, r24	; 0x06
    1934:	86 e9       	ldi	r24, 0x96	; 150
    1936:	9b e0       	ldi	r25, 0x0B	; 11
    1938:	99 87       	std	Y+9, r25	; 0x09
    193a:	88 87       	std	Y+8, r24	; 0x08
    193c:	8f e9       	ldi	r24, 0x9F	; 159
    193e:	9b e0       	ldi	r25, 0x0B	; 11
    1940:	9b 87       	std	Y+11, r25	; 0x0b
    1942:	8a 87       	std	Y+10, r24	; 0x0a
    1944:	80 eb       	ldi	r24, 0xB0	; 176
    1946:	9b e0       	ldi	r25, 0x0B	; 11
    1948:	9d 87       	std	Y+13, r25	; 0x0d
    194a:	8c 87       	std	Y+12, r24	; 0x0c
    194c:	8f ed       	ldi	r24, 0xDF	; 223
    194e:	9b e0       	ldi	r25, 0x0B	; 11
    1950:	9f 87       	std	Y+15, r25	; 0x0f
    1952:	8e 87       	std	Y+14, r24	; 0x0e
    1954:	83 e1       	ldi	r24, 0x13	; 19
    1956:	9c e0       	ldi	r25, 0x0C	; 12
    1958:	99 8b       	std	Y+17, r25	; 0x11
    195a:	88 8b       	std	Y+16, r24	; 0x10
    195c:	8c ee       	ldi	r24, 0xEC	; 236
    195e:	9b e0       	ldi	r25, 0x0B	; 11
    1960:	9b 8b       	std	Y+19, r25	; 0x13
    1962:	8a 8b       	std	Y+18, r24	; 0x12
    1964:	8b eb       	ldi	r24, 0xBB	; 187
    1966:	9c e0       	ldi	r25, 0x0C	; 12
    1968:	9d 8b       	std	Y+21, r25	; 0x15
    196a:	8c 8b       	std	Y+20, r24	; 0x14
}
    196c:	ce 01       	movw	r24, r28
    196e:	df 91       	pop	r29
    1970:	cf 91       	pop	r28
    1972:	1f 91       	pop	r17
    1974:	08 95       	ret

00001976 <LCD0_reboot>:
	*lcd0_PORT|=(1<<EN);
	LCD_ticks(num);
	*lcd0_PORT&=~(1<<EN);
}
void LCD0_reboot(void)
{
    1976:	cf 93       	push	r28
	//low high detect pin NC
	uint8_t i;
	uint8_t tmp;
	tmp=*lcd0_PIN & (1<<NC);
    1978:	e0 91 d1 02 	lds	r30, 0x02D1	; 0x8002d1 <lcd0_PIN>
    197c:	f0 91 d2 02 	lds	r31, 0x02D2	; 0x8002d2 <lcd0_PIN+0x1>
    1980:	c0 81       	ld	r28, Z
    1982:	c8 70       	andi	r28, 0x08	; 8
	i=tmp^lcd0_detect;
    1984:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <lcd0_detect>
    1988:	8c 27       	eor	r24, r28
	i&=tmp;
	if(i)
    198a:	8c 23       	and	r24, r28
    198c:	09 f0       	breq	.+2      	; 0x1990 <LCD0_reboot+0x1a>
		LCD0_inic();
    198e:	56 df       	rcall	.-340    	; 0x183c <LCD0_inic>
	lcd0_detect=tmp;
    1990:	c0 93 da 02 	sts	0x02DA, r28	; 0x8002da <lcd0_detect>
}
    1994:	cf 91       	pop	r28
    1996:	08 95       	ret

00001998 <HX711_set_readflag>:
	//
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=1;
    1998:	21 e0       	ldi	r18, 0x01	; 1
    199a:	fc 01       	movw	r30, r24
    199c:	20 83       	st	Z, r18
    199e:	08 95       	ret

000019a0 <HX711_read_bit>:
	self->readflag=0;
}
uint8_t HX711_read_bit(void)
{	
	uint16_t bool;
	*hx711_PORT|=(1<<hx711_clkpin);
    19a0:	e0 91 e2 02 	lds	r30, 0x02E2	; 0x8002e2 <hx711_PORT>
    19a4:	f0 91 e3 02 	lds	r31, 0x02E3	; 0x8002e3 <hx711_PORT+0x1>
    19a8:	20 81       	ld	r18, Z
    19aa:	81 e0       	ldi	r24, 0x01	; 1
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	00 90 e6 02 	lds	r0, 0x02E6	; 0x8002e6 <hx711_clkpin>
    19b2:	02 c0       	rjmp	.+4      	; 0x19b8 <HX711_read_bit+0x18>
    19b4:	88 0f       	add	r24, r24
    19b6:	99 1f       	adc	r25, r25
    19b8:	0a 94       	dec	r0
    19ba:	e2 f7       	brpl	.-8      	; 0x19b4 <HX711_read_bit+0x14>
    19bc:	82 2b       	or	r24, r18
    19be:	80 83       	st	Z, r24
    19c0:	8e e6       	ldi	r24, 0x6E	; 110
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	01 97       	sbiw	r24, 0x01	; 1
	/**0.1us minimum**/
	for(bool=0;bool<HX711_ticks;bool++);
    19c6:	f1 f7       	brne	.-4      	; 0x19c4 <HX711_read_bit+0x24>
	bool=*hx711_PIN & (1<<hx711_datapin);
    19c8:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <hx711_PIN>
    19cc:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <hx711_PIN+0x1>
    19d0:	40 81       	ld	r20, Z
    19d2:	21 e0       	ldi	r18, 0x01	; 1
    19d4:	30 e0       	ldi	r19, 0x00	; 0
    19d6:	c9 01       	movw	r24, r18
    19d8:	00 90 df 02 	lds	r0, 0x02DF	; 0x8002df <hx711_datapin>
    19dc:	02 c0       	rjmp	.+4      	; 0x19e2 <HX711_read_bit+0x42>
    19de:	88 0f       	add	r24, r24
    19e0:	99 1f       	adc	r25, r25
    19e2:	0a 94       	dec	r0
    19e4:	e2 f7       	brpl	.-8      	; 0x19de <HX711_read_bit+0x3e>
	*hx711_PORT&=~(1<<hx711_clkpin);
    19e6:	e0 91 e2 02 	lds	r30, 0x02E2	; 0x8002e2 <hx711_PORT>
    19ea:	f0 91 e3 02 	lds	r31, 0x02E3	; 0x8002e3 <hx711_PORT+0x1>
    19ee:	90 81       	ld	r25, Z
    19f0:	00 90 e6 02 	lds	r0, 0x02E6	; 0x8002e6 <hx711_clkpin>
    19f4:	02 c0       	rjmp	.+4      	; 0x19fa <HX711_read_bit+0x5a>
    19f6:	22 0f       	add	r18, r18
    19f8:	33 1f       	adc	r19, r19
    19fa:	0a 94       	dec	r0
    19fc:	e2 f7       	brpl	.-8      	; 0x19f6 <HX711_read_bit+0x56>
    19fe:	20 95       	com	r18
    1a00:	29 23       	and	r18, r25
    1a02:	20 83       	st	Z, r18
	return bool;
}
    1a04:	84 23       	and	r24, r20
    1a06:	08 95       	ret

00001a08 <HX711_set_amplify>:
// Gain selector
// AVDD connected to 5V, channel B gain=32
void HX711_set_amplify(HX711* self, uint8_t amplify)
{
	switch(amplify){
    1a08:	60 34       	cpi	r22, 0x40	; 64
    1a0a:	79 f0       	breq	.+30     	; 0x1a2a <HX711_set_amplify+0x22>
    1a0c:	60 38       	cpi	r22, 0x80	; 128
    1a0e:	19 f0       	breq	.+6      	; 0x1a16 <HX711_set_amplify+0xe>
    1a10:	60 32       	cpi	r22, 0x20	; 32
    1a12:	81 f4       	brne	.+32     	; 0x1a34 <HX711_set_amplify+0x2c>
    1a14:	05 c0       	rjmp	.+10     	; 0x1a20 <HX711_set_amplify+0x18>
		case 128:
			self->amplify=1; //channel A
    1a16:	21 e0       	ldi	r18, 0x01	; 1
    1a18:	fc 01       	movw	r30, r24
    1a1a:	21 83       	std	Z+1, r18	; 0x01
			self->ampcount=1;
    1a1c:	22 83       	std	Z+2, r18	; 0x02
			break;
    1a1e:	08 95       	ret
		case 32:
			self->amplify=2; //channel B
    1a20:	22 e0       	ldi	r18, 0x02	; 2
    1a22:	fc 01       	movw	r30, r24
    1a24:	21 83       	std	Z+1, r18	; 0x01
			self->ampcount=2; 
    1a26:	22 83       	std	Z+2, r18	; 0x02
			break;
    1a28:	08 95       	ret
		case 64:
			self->amplify=3; //channel A
    1a2a:	23 e0       	ldi	r18, 0x03	; 3
    1a2c:	fc 01       	movw	r30, r24
    1a2e:	21 83       	std	Z+1, r18	; 0x01
			self->ampcount=3;
    1a30:	22 83       	std	Z+2, r18	; 0x02
			break;
    1a32:	08 95       	ret
		default:
			self->amplify=1;
    1a34:	21 e0       	ldi	r18, 0x01	; 1
    1a36:	fc 01       	movw	r30, r24
    1a38:	21 83       	std	Z+1, r18	; 0x01
			self->ampcount=1;
    1a3a:	22 83       	std	Z+2, r18	; 0x02
    1a3c:	08 95       	ret

00001a3e <HX711_read>:
			break;
	}
}
uint32_t HX711_read(HX711* self)
{
    1a3e:	0f 93       	push	r16
    1a40:	1f 93       	push	r17
    1a42:	cf 93       	push	r28
    1a44:	df 93       	push	r29
    1a46:	ec 01       	movw	r28, r24
	uint8_t aindex, bindex;
	uint32_t value;
	aindex = self->bufferindex-1;
    1a48:	18 85       	ldd	r17, Y+8	; 0x08
	bindex = self->bitcount-1;
    1a4a:	0b 81       	ldd	r16, Y+3	; 0x03
	ptr=(int32_t*)self->buffer;
    1a4c:	04 96       	adiw	r24, 0x04	; 4
    1a4e:	90 93 e5 02 	sts	0x02E5, r25	; 0x8002e5 <ptr+0x1>
    1a52:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <ptr>
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
    1a56:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <hx711_PIN>
    1a5a:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <hx711_PIN+0x1>
    1a5e:	80 81       	ld	r24, Z
    1a60:	90 e0       	ldi	r25, 0x00	; 0
    1a62:	00 90 df 02 	lds	r0, 0x02DF	; 0x8002df <hx711_datapin>
    1a66:	02 c0       	rjmp	.+4      	; 0x1a6c <HX711_read+0x2e>
    1a68:	95 95       	asr	r25
    1a6a:	87 95       	ror	r24
    1a6c:	0a 94       	dec	r0
    1a6e:	e2 f7       	brpl	.-8      	; 0x1a68 <HX711_read+0x2a>
    1a70:	80 fd       	sbrc	r24, 0
    1a72:	06 c0       	rjmp	.+12     	; 0x1a80 <HX711_read+0x42>
    1a74:	88 81       	ld	r24, Y
    1a76:	81 11       	cpse	r24, r1
    1a78:	07 c0       	rjmp	.+14     	; 0x1a88 <HX711_read+0x4a>
	//
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=1;
    1a7a:	81 e0       	ldi	r24, 0x01	; 1
    1a7c:	88 83       	st	Y, r24
	bindex = self->bitcount-1;
	ptr=(int32_t*)self->buffer;
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
		HX711_set_readflag(self);
		PORTC&=~(1<<0);
    1a7e:	a8 98       	cbi	0x15, 0	; 21
	}
	/***Interrupt 24 times sequence***/
	if(self->readflag){
    1a80:	88 81       	ld	r24, Y
    1a82:	88 23       	and	r24, r24
    1a84:	09 f4       	brne	.+2      	; 0x1a88 <HX711_read+0x4a>
    1a86:	4d c0       	rjmp	.+154    	; 0x1b22 <HX711_read+0xe4>
		if(self->bitcount){
    1a88:	8b 81       	ldd	r24, Y+3	; 0x03
    1a8a:	88 23       	and	r24, r24
    1a8c:	29 f1       	breq	.+74     	; 0x1ad8 <HX711_read+0x9a>
			if (HX711_read_bit()) self->buffer[aindex] |= ONE<<(bindex-(aindex*8));
    1a8e:	88 df       	rcall	.-240    	; 0x19a0 <HX711_read_bit>
    1a90:	88 23       	and	r24, r24
    1a92:	a9 f0       	breq	.+42     	; 0x1abe <HX711_read+0x80>
    1a94:	11 50       	subi	r17, 0x01	; 1
    1a96:	81 2f       	mov	r24, r17
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	fe 01       	movw	r30, r28
    1a9c:	e8 0f       	add	r30, r24
    1a9e:	f9 1f       	adc	r31, r25
    1aa0:	01 50       	subi	r16, 0x01	; 1
    1aa2:	28 e0       	ldi	r18, 0x08	; 8
    1aa4:	12 9f       	mul	r17, r18
    1aa6:	00 19       	sub	r16, r0
    1aa8:	11 24       	eor	r1, r1
    1aaa:	81 e0       	ldi	r24, 0x01	; 1
    1aac:	90 e0       	ldi	r25, 0x00	; 0
    1aae:	02 c0       	rjmp	.+4      	; 0x1ab4 <HX711_read+0x76>
    1ab0:	88 0f       	add	r24, r24
    1ab2:	99 1f       	adc	r25, r25
    1ab4:	0a 95       	dec	r16
    1ab6:	e2 f7       	brpl	.-8      	; 0x1ab0 <HX711_read+0x72>
    1ab8:	94 81       	ldd	r25, Z+4	; 0x04
    1aba:	89 2b       	or	r24, r25
    1abc:	84 83       	std	Z+4, r24	; 0x04
			self->bitcount--;
    1abe:	8b 81       	ldd	r24, Y+3	; 0x03
    1ac0:	81 50       	subi	r24, 0x01	; 1
    1ac2:	8b 83       	std	Y+3, r24	; 0x03
			if(self->bitcount==16)
    1ac4:	80 31       	cpi	r24, 0x10	; 16
    1ac6:	19 f4       	brne	.+6      	; 0x1ace <HX711_read+0x90>
				self->bufferindex=2;
    1ac8:	82 e0       	ldi	r24, 0x02	; 2
    1aca:	88 87       	std	Y+8, r24	; 0x08
    1acc:	2a c0       	rjmp	.+84     	; 0x1b22 <HX711_read+0xe4>
			if(self->bitcount==8)
    1ace:	88 30       	cpi	r24, 0x08	; 8
    1ad0:	41 f5       	brne	.+80     	; 0x1b22 <HX711_read+0xe4>
				self->bufferindex=1;
    1ad2:	81 e0       	ldi	r24, 0x01	; 1
    1ad4:	88 87       	std	Y+8, r24	; 0x08
    1ad6:	25 c0       	rjmp	.+74     	; 0x1b22 <HX711_read+0xe4>
		}else{
			if(self->ampcount){
    1ad8:	8a 81       	ldd	r24, Y+2	; 0x02
    1ada:	88 23       	and	r24, r24
				HX711_read_bit();
    1adc:	29 f0       	breq	.+10     	; 0x1ae8 <HX711_read+0xaa>
    1ade:	60 df       	rcall	.-320    	; 0x19a0 <HX711_read_bit>
				self->ampcount--;
    1ae0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ae2:	81 50       	subi	r24, 0x01	; 1
    1ae4:	8a 83       	std	Y+2, r24	; 0x02
    1ae6:	1d c0       	rjmp	.+58     	; 0x1b22 <HX711_read+0xe4>
			}else{
				value=*(ptr);
    1ae8:	e0 91 e4 02 	lds	r30, 0x02E4	; 0x8002e4 <ptr>
    1aec:	f0 91 e5 02 	lds	r31, 0x02E5	; 0x8002e5 <ptr+0x1>
    1af0:	80 81       	ld	r24, Z
    1af2:	91 81       	ldd	r25, Z+1	; 0x01
    1af4:	a2 81       	ldd	r26, Z+2	; 0x02
    1af6:	b3 81       	ldd	r27, Z+3	; 0x03
				if(value>8388607)
    1af8:	00 97       	sbiw	r24, 0x00	; 0
    1afa:	20 e8       	ldi	r18, 0x80	; 128
    1afc:	a2 07       	cpc	r26, r18
    1afe:	b1 05       	cpc	r27, r1
    1b00:	08 f0       	brcs	.+2      	; 0x1b04 <HX711_read+0xc6>
					value-=16777216;
    1b02:	ba 95       	dec	r27
				self->reading=value;
    1b04:	89 87       	std	Y+9, r24	; 0x09
    1b06:	9a 87       	std	Y+10, r25	; 0x0a
    1b08:	ab 87       	std	Y+11, r26	; 0x0b
    1b0a:	bc 87       	std	Y+12, r27	; 0x0c
				self->bitcount=HX711_ADC_bits;
    1b0c:	88 e1       	ldi	r24, 0x18	; 24
    1b0e:	8b 83       	std	Y+3, r24	; 0x03
				self->bufferindex=HX711_VECT_SIZE-ONE;
    1b10:	83 e0       	ldi	r24, 0x03	; 3
    1b12:	88 87       	std	Y+8, r24	; 0x08
				self->ampcount=self->amplify;
    1b14:	89 81       	ldd	r24, Y+1	; 0x01
    1b16:	8a 83       	std	Y+2, r24	; 0x02
				self->buffer[0]=ZERO;
    1b18:	1c 82       	std	Y+4, r1	; 0x04
				self->buffer[1]=ZERO;
    1b1a:	1d 82       	std	Y+5, r1	; 0x05
				self->buffer[2]=ZERO;
    1b1c:	1e 82       	std	Y+6, r1	; 0x06
				self->buffer[3]=ZERO;
    1b1e:	1f 82       	std	Y+7, r1	; 0x07
{
	self->readflag=1;
}
void HX711_reset_readflag(HX711* self)
{
	self->readflag=0;
    1b20:	18 82       	st	Y, r1
				/***Reset ready for next query***/
				HX711_reset_readflag(self);
			}
		}
	}
	return self->reading;
    1b22:	69 85       	ldd	r22, Y+9	; 0x09
    1b24:	7a 85       	ldd	r23, Y+10	; 0x0a
    1b26:	8b 85       	ldd	r24, Y+11	; 0x0b
    1b28:	9c 85       	ldd	r25, Y+12	; 0x0c
}
    1b2a:	df 91       	pop	r29
    1b2c:	cf 91       	pop	r28
    1b2e:	1f 91       	pop	r17
    1b30:	0f 91       	pop	r16
    1b32:	08 95       	ret

00001b34 <HX711enable>:
uint8_t HX711_read_bit(void);
void HX711_set_amplify(HX711* self, uint8_t amplify);
uint32_t HX711_read(HX711* self);
/***Procedure & Function***/
HX711 HX711enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port, uint8_t datapin, uint8_t clkpin)
{
    1b34:	ef 92       	push	r14
    1b36:	0f 93       	push	r16
    1b38:	fc 01       	movw	r30, r24
    1b3a:	da 01       	movw	r26, r20
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    1b3c:	5f b7       	in	r21, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1b3e:	8f b7       	in	r24, 0x3f	; 63
    1b40:	8f 77       	andi	r24, 0x7F	; 127
    1b42:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	HX711 hx711;
	//import parametros
	hx711_DDR=ddr;
    1b44:	70 93 e8 02 	sts	0x02E8, r23	; 0x8002e8 <hx711_DDR+0x1>
    1b48:	60 93 e7 02 	sts	0x02E7, r22	; 0x8002e7 <hx711_DDR>
	hx711_PIN=pin;
    1b4c:	b0 93 e1 02 	sts	0x02E1, r27	; 0x8002e1 <hx711_PIN+0x1>
    1b50:	a0 93 e0 02 	sts	0x02E0, r26	; 0x8002e0 <hx711_PIN>
	hx711_PORT=port;
    1b54:	30 93 e3 02 	sts	0x02E3, r19	; 0x8002e3 <hx711_PORT+0x1>
    1b58:	20 93 e2 02 	sts	0x02E2, r18	; 0x8002e2 <hx711_PORT>
	hx711_datapin=datapin;
    1b5c:	00 93 df 02 	sts	0x02DF, r16	; 0x8002df <hx711_datapin>
	hx711_clkpin=clkpin;
    1b60:	e0 92 e6 02 	sts	0x02E6, r14	; 0x8002e6 <hx711_clkpin>
	//inic variables
	*hx711_DDR |= (1<<clkpin);
    1b64:	db 01       	movw	r26, r22
    1b66:	4c 91       	ld	r20, X
    1b68:	81 e0       	ldi	r24, 0x01	; 1
    1b6a:	90 e0       	ldi	r25, 0x00	; 0
    1b6c:	9c 01       	movw	r18, r24
    1b6e:	02 c0       	rjmp	.+4      	; 0x1b74 <HX711enable+0x40>
    1b70:	22 0f       	add	r18, r18
    1b72:	33 1f       	adc	r19, r19
    1b74:	ea 94       	dec	r14
    1b76:	e2 f7       	brpl	.-8      	; 0x1b70 <HX711enable+0x3c>
    1b78:	24 2b       	or	r18, r20
    1b7a:	2c 93       	st	X, r18
	*hx711_PORT |= (1<<datapin);
    1b7c:	a0 91 e2 02 	lds	r26, 0x02E2	; 0x8002e2 <hx711_PORT>
    1b80:	b0 91 e3 02 	lds	r27, 0x02E3	; 0x8002e3 <hx711_PORT+0x1>
    1b84:	2c 91       	ld	r18, X
    1b86:	02 c0       	rjmp	.+4      	; 0x1b8c <HX711enable+0x58>
    1b88:	88 0f       	add	r24, r24
    1b8a:	99 1f       	adc	r25, r25
    1b8c:	0a 95       	dec	r16
    1b8e:	e2 f7       	brpl	.-8      	; 0x1b88 <HX711enable+0x54>
    1b90:	82 2b       	or	r24, r18
    1b92:	8c 93       	st	X, r24
	//Direccionar apontadores para PROTOTIPOS
	hx711.set_readflag=HX711_set_readflag;
	hx711.read_bit=HX711_read_bit;
	hx711.set_amplify=HX711_set_amplify;
	hx711.read=HX711_read;
	SREG=tSREG;
    1b94:	5f bf       	out	0x3f, r21	; 63
	//
	return hx711;
    1b96:	10 82       	st	Z, r1
    1b98:	81 e0       	ldi	r24, 0x01	; 1
    1b9a:	81 83       	std	Z+1, r24	; 0x01
    1b9c:	82 83       	std	Z+2, r24	; 0x02
    1b9e:	88 e1       	ldi	r24, 0x18	; 24
    1ba0:	83 83       	std	Z+3, r24	; 0x03
    1ba2:	17 82       	std	Z+7, r1	; 0x07
    1ba4:	83 e0       	ldi	r24, 0x03	; 3
    1ba6:	80 87       	std	Z+8, r24	; 0x08
    1ba8:	11 86       	std	Z+9, r1	; 0x09
    1baa:	12 86       	std	Z+10, r1	; 0x0a
    1bac:	13 86       	std	Z+11, r1	; 0x0b
    1bae:	14 86       	std	Z+12, r1	; 0x0c
    1bb0:	8c ec       	ldi	r24, 0xCC	; 204
    1bb2:	9c e0       	ldi	r25, 0x0C	; 12
    1bb4:	96 87       	std	Z+14, r25	; 0x0e
    1bb6:	85 87       	std	Z+13, r24	; 0x0d
    1bb8:	80 ed       	ldi	r24, 0xD0	; 208
    1bba:	9c e0       	ldi	r25, 0x0C	; 12
    1bbc:	90 8b       	std	Z+16, r25	; 0x10
    1bbe:	87 87       	std	Z+15, r24	; 0x0f
    1bc0:	84 e0       	ldi	r24, 0x04	; 4
    1bc2:	9d e0       	ldi	r25, 0x0D	; 13
    1bc4:	92 8b       	std	Z+18, r25	; 0x12
    1bc6:	81 8b       	std	Z+17, r24	; 0x11
    1bc8:	8f e1       	ldi	r24, 0x1F	; 31
    1bca:	9d e0       	ldi	r25, 0x0D	; 13
    1bcc:	94 8b       	std	Z+20, r25	; 0x14
    1bce:	83 8b       	std	Z+19, r24	; 0x13
}
    1bd0:	cf 01       	movw	r24, r30
    1bd2:	0f 91       	pop	r16
    1bd4:	ef 90       	pop	r14
    1bd6:	08 95       	ret

00001bd8 <PORTINIT>:
/*
** procedure and function
*/
void PORTINIT(void)
{
	DDRC=0xFF;
    1bd8:	8f ef       	ldi	r24, 0xFF	; 255
    1bda:	84 bb       	out	0x14, r24	; 20
	PORTC=0xFF;
    1bdc:	85 bb       	out	0x15, r24	; 21
    1bde:	08 95       	ret

00001be0 <main>:
** Header
*/
void PORTINIT();
/****MAIN****/
int main(void)
{
    1be0:	cf 93       	push	r28
    1be2:	df 93       	push	r29
    1be4:	cd b7       	in	r28, 0x3d	; 61
    1be6:	de b7       	in	r29, 0x3e	; 62
    1be8:	cc 56       	subi	r28, 0x6C	; 108
    1bea:	d1 09       	sbc	r29, r1
    1bec:	0f b6       	in	r0, 0x3f	; 63
    1bee:	f8 94       	cli
    1bf0:	de bf       	out	0x3e, r29	; 62
    1bf2:	0f be       	out	0x3f, r0	; 63
    1bf4:	cd bf       	out	0x3d, r28	; 61
	//SREG|=1<<7;
	PORTINIT();
    1bf6:	f0 df       	rcall	.-32     	; 0x1bd8 <PORTINIT>
	/***INICIALIZE OBJECTS***/
	function = FUNCenable();
    1bf8:	ce 01       	movw	r24, r28
    1bfa:	81 96       	adiw	r24, 0x21	; 33
    1bfc:	dc da       	rcall	.-2632   	; 0x11b6 <FUNCenable>
    1bfe:	8c e4       	ldi	r24, 0x4C	; 76
    1c00:	fe 01       	movw	r30, r28
    1c02:	b1 96       	adiw	r30, 0x21	; 33
    1c04:	ae ee       	ldi	r26, 0xEE	; 238
    1c06:	b2 e0       	ldi	r27, 0x02	; 2
    1c08:	01 90       	ld	r0, Z+
    1c0a:	0d 92       	st	X+, r0
    1c0c:	8a 95       	dec	r24
    1c0e:	e1 f7       	brne	.-8      	; 0x1c08 <main+0x28>
	lcd0 = LCD0enable(&DDRA,&PINA,&PORTA);
    1c10:	2b e3       	ldi	r18, 0x3B	; 59
    1c12:	30 e0       	ldi	r19, 0x00	; 0
    1c14:	49 e3       	ldi	r20, 0x39	; 57
    1c16:	50 e0       	ldi	r21, 0x00	; 0
    1c18:	6a e3       	ldi	r22, 0x3A	; 58
    1c1a:	70 e0       	ldi	r23, 0x00	; 0
    1c1c:	ce 01       	movw	r24, r28
    1c1e:	81 96       	adiw	r24, 0x21	; 33
    1c20:	53 de       	rcall	.-858    	; 0x18c8 <LCD0enable>
    1c22:	86 e1       	ldi	r24, 0x16	; 22
    1c24:	fe 01       	movw	r30, r28
    1c26:	b1 96       	adiw	r30, 0x21	; 33
    1c28:	aa e3       	ldi	r26, 0x3A	; 58
    1c2a:	b3 e0       	ldi	r27, 0x03	; 3
    1c2c:	01 90       	ld	r0, Z+
    1c2e:	0d 92       	st	X+, r0
    1c30:	8a 95       	dec	r24
    1c32:	e1 f7       	brne	.-8      	; 0x1c2c <main+0x4c>
	TIMER_COUNTER0 timer0 = TIMER_COUNTER0enable(2,2); //2,2
    1c34:	42 e0       	ldi	r20, 0x02	; 2
    1c36:	62 e0       	ldi	r22, 0x02	; 2
    1c38:	ce 01       	movw	r24, r28
    1c3a:	01 96       	adiw	r24, 0x01	; 1
    1c3c:	0e 94 61 02 	call	0x4c2	; 0x4c2 <TIMER_COUNTER0enable>
	TIMER_COUNTER1 timer1 = TIMER_COUNTER1enable(4,0);
    1c40:	40 e0       	ldi	r20, 0x00	; 0
    1c42:	64 e0       	ldi	r22, 0x04	; 4
    1c44:	ce 01       	movw	r24, r28
    1c46:	41 96       	adiw	r24, 0x11	; 17
    1c48:	0e 94 a3 02 	call	0x546	; 0x546 <TIMER_COUNTER1enable>
	hx = HX711enable(&DDRF, &PINF, &PORTF, 6, 7);
    1c4c:	0f 2e       	mov	r0, r31
    1c4e:	f7 e0       	ldi	r31, 0x07	; 7
    1c50:	ef 2e       	mov	r14, r31
    1c52:	f0 2d       	mov	r31, r0
    1c54:	06 e0       	ldi	r16, 0x06	; 6
    1c56:	22 e6       	ldi	r18, 0x62	; 98
    1c58:	30 e0       	ldi	r19, 0x00	; 0
    1c5a:	40 e2       	ldi	r20, 0x20	; 32
    1c5c:	50 e0       	ldi	r21, 0x00	; 0
    1c5e:	61 e6       	ldi	r22, 0x61	; 97
    1c60:	70 e0       	ldi	r23, 0x00	; 0
    1c62:	ce 01       	movw	r24, r28
    1c64:	81 96       	adiw	r24, 0x21	; 33
    1c66:	66 df       	rcall	.-308    	; 0x1b34 <HX711enable>
    1c68:	85 e1       	ldi	r24, 0x15	; 21
    1c6a:	fe 01       	movw	r30, r28
    1c6c:	b1 96       	adiw	r30, 0x21	; 33
    1c6e:	a0 e5       	ldi	r26, 0x50	; 80
    1c70:	b3 e0       	ldi	r27, 0x03	; 3
    1c72:	01 90       	ld	r0, Z+
    1c74:	0d 92       	st	X+, r0
    1c76:	8a 95       	dec	r24
    1c78:	e1 f7       	brne	.-8      	; 0x1c72 <main+0x92>
	/***Parameters timers***/
	//vector[0]=255;
	//vector[1]=255;
	//vector[2]=255;
	//uint8_t* ptr=vector; 
	timer0.compare(100);
    1c7a:	ef 81       	ldd	r30, Y+7	; 0x07
    1c7c:	f8 85       	ldd	r31, Y+8	; 0x08
    1c7e:	84 e6       	ldi	r24, 0x64	; 100
    1c80:	09 95       	icall
	timer0.start(1);//1	1024
    1c82:	ed 85       	ldd	r30, Y+13	; 0x0d
    1c84:	fe 85       	ldd	r31, Y+14	; 0x0e
    1c86:	81 e0       	ldi	r24, 0x01	; 1
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	09 95       	icall
	timer0.compoutmode(1);
    1c8c:	e9 81       	ldd	r30, Y+1	; 0x01
    1c8e:	fa 81       	ldd	r31, Y+2	; 0x02
    1c90:	81 e0       	ldi	r24, 0x01	; 1
    1c92:	09 95       	icall
	timer1.compareA(50);
    1c94:	ef 89       	ldd	r30, Y+23	; 0x17
    1c96:	f8 8d       	ldd	r31, Y+24	; 0x18
    1c98:	82 e3       	ldi	r24, 0x32	; 50
    1c9a:	90 e0       	ldi	r25, 0x00	; 0
    1c9c:	09 95       	icall
	timer1.compoutmodeA(1);
    1c9e:	e9 89       	ldd	r30, Y+17	; 0x11
    1ca0:	fa 89       	ldd	r31, Y+18	; 0x12
    1ca2:	81 e0       	ldi	r24, 0x01	; 1
    1ca4:	09 95       	icall
	timer1.start(256);
    1ca6:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1ca8:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1caa:	80 e0       	ldi	r24, 0x00	; 0
    1cac:	91 e0       	ldi	r25, 0x01	; 1
    1cae:	09 95       	icall
	hx.set_amplify(&hx,64);
    1cb0:	e0 91 61 03 	lds	r30, 0x0361	; 0x800361 <hx+0x11>
    1cb4:	f0 91 62 03 	lds	r31, 0x0362	; 0x800362 <hx+0x12>
    1cb8:	60 e4       	ldi	r22, 0x40	; 64
    1cba:	80 e5       	ldi	r24, 0x50	; 80
    1cbc:	93 e0       	ldi	r25, 0x03	; 3
    1cbe:	09 95       	icall
	/**********/
	//TODO:: Please write your application code
	while(TRUE){
		/***PREAMBLE***/
		lcd0.reboot();
    1cc0:	0a e3       	ldi	r16, 0x3A	; 58
    1cc2:	13 e0       	ldi	r17, 0x03	; 3
    1cc4:	d8 01       	movw	r26, r16
    1cc6:	54 96       	adiw	r26, 0x14	; 20
    1cc8:	ed 91       	ld	r30, X+
    1cca:	fc 91       	ld	r31, X
    1ccc:	55 97       	sbiw	r26, 0x15	; 21
    1cce:	09 95       	icall
    1cd0:	f9 cf       	rjmp	.-14     	; 0x1cc4 <main+0xe4>

00001cd2 <__vector_15>:
}
/*
** interrupt
*/
ISR(TIMER0_COMP_vect)
{
    1cd2:	1f 92       	push	r1
    1cd4:	0f 92       	push	r0
    1cd6:	0f b6       	in	r0, 0x3f	; 63
    1cd8:	0f 92       	push	r0
    1cda:	11 24       	eor	r1, r1
    1cdc:	0b b6       	in	r0, 0x3b	; 59
    1cde:	0f 92       	push	r0
    1ce0:	8f 92       	push	r8
    1ce2:	9f 92       	push	r9
    1ce4:	af 92       	push	r10
    1ce6:	bf 92       	push	r11
    1ce8:	cf 92       	push	r12
    1cea:	df 92       	push	r13
    1cec:	ef 92       	push	r14
    1cee:	ff 92       	push	r15
    1cf0:	0f 93       	push	r16
    1cf2:	1f 93       	push	r17
    1cf4:	2f 93       	push	r18
    1cf6:	3f 93       	push	r19
    1cf8:	4f 93       	push	r20
    1cfa:	5f 93       	push	r21
    1cfc:	6f 93       	push	r22
    1cfe:	7f 93       	push	r23
    1d00:	8f 93       	push	r24
    1d02:	9f 93       	push	r25
    1d04:	af 93       	push	r26
    1d06:	bf 93       	push	r27
    1d08:	cf 93       	push	r28
    1d0a:	ef 93       	push	r30
    1d0c:	ff 93       	push	r31
	uint8_t Sreg;
	Sreg=SREG;
    1d0e:	cf b7       	in	r28, 0x3f	; 63
	SREG&=~(1<<7);
    1d10:	8f b7       	in	r24, 0x3f	; 63
    1d12:	8f 77       	andi	r24, 0x7F	; 127
    1d14:	8f bf       	out	0x3f, r24	; 63
	uint32_t value;
	
	value=hx.read(&hx);
    1d16:	e0 91 63 03 	lds	r30, 0x0363	; 0x800363 <hx+0x13>
    1d1a:	f0 91 64 03 	lds	r31, 0x0364	; 0x800364 <hx+0x14>
    1d1e:	80 e5       	ldi	r24, 0x50	; 80
    1d20:	93 e0       	ldi	r25, 0x03	; 3
    1d22:	09 95       	icall
    1d24:	4b 01       	movw	r8, r22
    1d26:	5c 01       	movw	r10, r24
	
	if(count_1 > 0){
    1d28:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <count_1>
    1d2c:	88 23       	and	r24, r24
    1d2e:	09 f4       	brne	.+2      	; 0x1d32 <__vector_15+0x60>
    1d30:	41 c0       	rjmp	.+130    	; 0x1db4 <__vector_15+0xe2>
		count_2++;
    1d32:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <count_2>
    1d36:	8f 5f       	subi	r24, 0xFF	; 255
    1d38:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <count_2>
		lcd0.gotoxy(0,0);
    1d3c:	0a e3       	ldi	r16, 0x3A	; 58
    1d3e:	13 e0       	ldi	r17, 0x03	; 3
    1d40:	d8 01       	movw	r26, r16
    1d42:	52 96       	adiw	r26, 0x12	; 18
    1d44:	ed 91       	ld	r30, X+
    1d46:	fc 91       	ld	r31, X
    1d48:	53 97       	sbiw	r26, 0x13	; 19
    1d4a:	60 e0       	ldi	r22, 0x00	; 0
    1d4c:	70 e0       	ldi	r23, 0x00	; 0
    1d4e:	80 e0       	ldi	r24, 0x00	; 0
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	09 95       	icall
		lcd0.string_size(function.i16toa(count_2), 15);
    1d54:	f8 01       	movw	r30, r16
    1d56:	c4 84       	ldd	r12, Z+12	; 0x0c
    1d58:	d5 84       	ldd	r13, Z+13	; 0x0d
    1d5a:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <count_2>
    1d5e:	0f 2e       	mov	r0, r31
    1d60:	fe ee       	ldi	r31, 0xEE	; 238
    1d62:	ef 2e       	mov	r14, r31
    1d64:	f2 e0       	ldi	r31, 0x02	; 2
    1d66:	ff 2e       	mov	r15, r31
    1d68:	f0 2d       	mov	r31, r0
    1d6a:	d7 01       	movw	r26, r14
    1d6c:	90 96       	adiw	r26, 0x20	; 32
    1d6e:	ed 91       	ld	r30, X+
    1d70:	fc 91       	ld	r31, X
    1d72:	91 97       	sbiw	r26, 0x21	; 33
    1d74:	90 e0       	ldi	r25, 0x00	; 0
    1d76:	09 95       	icall
    1d78:	6f e0       	ldi	r22, 0x0F	; 15
    1d7a:	f6 01       	movw	r30, r12
    1d7c:	09 95       	icall
		lcd0.gotoxy(1,0);
    1d7e:	d8 01       	movw	r26, r16
    1d80:	52 96       	adiw	r26, 0x12	; 18
    1d82:	ed 91       	ld	r30, X+
    1d84:	fc 91       	ld	r31, X
    1d86:	53 97       	sbiw	r26, 0x13	; 19
    1d88:	60 e0       	ldi	r22, 0x00	; 0
    1d8a:	70 e0       	ldi	r23, 0x00	; 0
    1d8c:	81 e0       	ldi	r24, 0x01	; 1
    1d8e:	90 e0       	ldi	r25, 0x00	; 0
    1d90:	09 95       	icall
		lcd0.string_size(function.i32toa(value), 15);
    1d92:	f8 01       	movw	r30, r16
    1d94:	04 85       	ldd	r16, Z+12	; 0x0c
    1d96:	15 85       	ldd	r17, Z+13	; 0x0d
    1d98:	d7 01       	movw	r26, r14
    1d9a:	94 96       	adiw	r26, 0x24	; 36
    1d9c:	ed 91       	ld	r30, X+
    1d9e:	fc 91       	ld	r31, X
    1da0:	95 97       	sbiw	r26, 0x25	; 37
    1da2:	c5 01       	movw	r24, r10
    1da4:	b4 01       	movw	r22, r8
    1da6:	09 95       	icall
    1da8:	6f e0       	ldi	r22, 0x0F	; 15
    1daa:	f8 01       	movw	r30, r16
    1dac:	09 95       	icall
		PORTC|=(1<<0);
    1dae:	a8 9a       	sbi	0x15, 0	; 21
		
		
		
		count_1=0;
    1db0:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <count_1>
	}
	count_1++;
    1db4:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <count_1>
    1db8:	8f 5f       	subi	r24, 0xFF	; 255
    1dba:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <count_1>
	SREG=Sreg;
    1dbe:	cf bf       	out	0x3f, r28	; 63
}
    1dc0:	ff 91       	pop	r31
    1dc2:	ef 91       	pop	r30
    1dc4:	cf 91       	pop	r28
    1dc6:	bf 91       	pop	r27
    1dc8:	af 91       	pop	r26
    1dca:	9f 91       	pop	r25
    1dcc:	8f 91       	pop	r24
    1dce:	7f 91       	pop	r23
    1dd0:	6f 91       	pop	r22
    1dd2:	5f 91       	pop	r21
    1dd4:	4f 91       	pop	r20
    1dd6:	3f 91       	pop	r19
    1dd8:	2f 91       	pop	r18
    1dda:	1f 91       	pop	r17
    1ddc:	0f 91       	pop	r16
    1dde:	ff 90       	pop	r15
    1de0:	ef 90       	pop	r14
    1de2:	df 90       	pop	r13
    1de4:	cf 90       	pop	r12
    1de6:	bf 90       	pop	r11
    1de8:	af 90       	pop	r10
    1dea:	9f 90       	pop	r9
    1dec:	8f 90       	pop	r8
    1dee:	0f 90       	pop	r0
    1df0:	0b be       	out	0x3b, r0	; 59
    1df2:	0f 90       	pop	r0
    1df4:	0f be       	out	0x3f, r0	; 63
    1df6:	0f 90       	pop	r0
    1df8:	1f 90       	pop	r1
    1dfa:	18 95       	reti

00001dfc <__subsf3>:
    1dfc:	50 58       	subi	r21, 0x80	; 128

00001dfe <__addsf3>:
    1dfe:	bb 27       	eor	r27, r27
    1e00:	aa 27       	eor	r26, r26
    1e02:	0e d0       	rcall	.+28     	; 0x1e20 <__addsf3x>
    1e04:	4d c1       	rjmp	.+666    	; 0x20a0 <__fp_round>
    1e06:	3e d1       	rcall	.+636    	; 0x2084 <__fp_pscA>
    1e08:	30 f0       	brcs	.+12     	; 0x1e16 <__addsf3+0x18>
    1e0a:	43 d1       	rcall	.+646    	; 0x2092 <__fp_pscB>
    1e0c:	20 f0       	brcs	.+8      	; 0x1e16 <__addsf3+0x18>
    1e0e:	31 f4       	brne	.+12     	; 0x1e1c <__addsf3+0x1e>
    1e10:	9f 3f       	cpi	r25, 0xFF	; 255
    1e12:	11 f4       	brne	.+4      	; 0x1e18 <__addsf3+0x1a>
    1e14:	1e f4       	brtc	.+6      	; 0x1e1c <__addsf3+0x1e>
    1e16:	33 c1       	rjmp	.+614    	; 0x207e <__fp_nan>
    1e18:	0e f4       	brtc	.+2      	; 0x1e1c <__addsf3+0x1e>
    1e1a:	e0 95       	com	r30
    1e1c:	e7 fb       	bst	r30, 7
    1e1e:	29 c1       	rjmp	.+594    	; 0x2072 <__fp_inf>

00001e20 <__addsf3x>:
    1e20:	e9 2f       	mov	r30, r25
    1e22:	4f d1       	rcall	.+670    	; 0x20c2 <__fp_split3>
    1e24:	80 f3       	brcs	.-32     	; 0x1e06 <__addsf3+0x8>
    1e26:	ba 17       	cp	r27, r26
    1e28:	62 07       	cpc	r22, r18
    1e2a:	73 07       	cpc	r23, r19
    1e2c:	84 07       	cpc	r24, r20
    1e2e:	95 07       	cpc	r25, r21
    1e30:	18 f0       	brcs	.+6      	; 0x1e38 <__addsf3x+0x18>
    1e32:	71 f4       	brne	.+28     	; 0x1e50 <__addsf3x+0x30>
    1e34:	9e f5       	brtc	.+102    	; 0x1e9c <__addsf3x+0x7c>
    1e36:	67 c1       	rjmp	.+718    	; 0x2106 <__fp_zero>
    1e38:	0e f4       	brtc	.+2      	; 0x1e3c <__addsf3x+0x1c>
    1e3a:	e0 95       	com	r30
    1e3c:	0b 2e       	mov	r0, r27
    1e3e:	ba 2f       	mov	r27, r26
    1e40:	a0 2d       	mov	r26, r0
    1e42:	0b 01       	movw	r0, r22
    1e44:	b9 01       	movw	r22, r18
    1e46:	90 01       	movw	r18, r0
    1e48:	0c 01       	movw	r0, r24
    1e4a:	ca 01       	movw	r24, r20
    1e4c:	a0 01       	movw	r20, r0
    1e4e:	11 24       	eor	r1, r1
    1e50:	ff 27       	eor	r31, r31
    1e52:	59 1b       	sub	r21, r25
    1e54:	99 f0       	breq	.+38     	; 0x1e7c <__addsf3x+0x5c>
    1e56:	59 3f       	cpi	r21, 0xF9	; 249
    1e58:	50 f4       	brcc	.+20     	; 0x1e6e <__addsf3x+0x4e>
    1e5a:	50 3e       	cpi	r21, 0xE0	; 224
    1e5c:	68 f1       	brcs	.+90     	; 0x1eb8 <__addsf3x+0x98>
    1e5e:	1a 16       	cp	r1, r26
    1e60:	f0 40       	sbci	r31, 0x00	; 0
    1e62:	a2 2f       	mov	r26, r18
    1e64:	23 2f       	mov	r18, r19
    1e66:	34 2f       	mov	r19, r20
    1e68:	44 27       	eor	r20, r20
    1e6a:	58 5f       	subi	r21, 0xF8	; 248
    1e6c:	f3 cf       	rjmp	.-26     	; 0x1e54 <__addsf3x+0x34>
    1e6e:	46 95       	lsr	r20
    1e70:	37 95       	ror	r19
    1e72:	27 95       	ror	r18
    1e74:	a7 95       	ror	r26
    1e76:	f0 40       	sbci	r31, 0x00	; 0
    1e78:	53 95       	inc	r21
    1e7a:	c9 f7       	brne	.-14     	; 0x1e6e <__addsf3x+0x4e>
    1e7c:	7e f4       	brtc	.+30     	; 0x1e9c <__addsf3x+0x7c>
    1e7e:	1f 16       	cp	r1, r31
    1e80:	ba 0b       	sbc	r27, r26
    1e82:	62 0b       	sbc	r22, r18
    1e84:	73 0b       	sbc	r23, r19
    1e86:	84 0b       	sbc	r24, r20
    1e88:	ba f0       	brmi	.+46     	; 0x1eb8 <__addsf3x+0x98>
    1e8a:	91 50       	subi	r25, 0x01	; 1
    1e8c:	a1 f0       	breq	.+40     	; 0x1eb6 <__addsf3x+0x96>
    1e8e:	ff 0f       	add	r31, r31
    1e90:	bb 1f       	adc	r27, r27
    1e92:	66 1f       	adc	r22, r22
    1e94:	77 1f       	adc	r23, r23
    1e96:	88 1f       	adc	r24, r24
    1e98:	c2 f7       	brpl	.-16     	; 0x1e8a <__addsf3x+0x6a>
    1e9a:	0e c0       	rjmp	.+28     	; 0x1eb8 <__addsf3x+0x98>
    1e9c:	ba 0f       	add	r27, r26
    1e9e:	62 1f       	adc	r22, r18
    1ea0:	73 1f       	adc	r23, r19
    1ea2:	84 1f       	adc	r24, r20
    1ea4:	48 f4       	brcc	.+18     	; 0x1eb8 <__addsf3x+0x98>
    1ea6:	87 95       	ror	r24
    1ea8:	77 95       	ror	r23
    1eaa:	67 95       	ror	r22
    1eac:	b7 95       	ror	r27
    1eae:	f7 95       	ror	r31
    1eb0:	9e 3f       	cpi	r25, 0xFE	; 254
    1eb2:	08 f0       	brcs	.+2      	; 0x1eb6 <__addsf3x+0x96>
    1eb4:	b3 cf       	rjmp	.-154    	; 0x1e1c <__addsf3+0x1e>
    1eb6:	93 95       	inc	r25
    1eb8:	88 0f       	add	r24, r24
    1eba:	08 f0       	brcs	.+2      	; 0x1ebe <__addsf3x+0x9e>
    1ebc:	99 27       	eor	r25, r25
    1ebe:	ee 0f       	add	r30, r30
    1ec0:	97 95       	ror	r25
    1ec2:	87 95       	ror	r24
    1ec4:	08 95       	ret

00001ec6 <__divsf3>:
    1ec6:	0c d0       	rcall	.+24     	; 0x1ee0 <__divsf3x>
    1ec8:	eb c0       	rjmp	.+470    	; 0x20a0 <__fp_round>
    1eca:	e3 d0       	rcall	.+454    	; 0x2092 <__fp_pscB>
    1ecc:	40 f0       	brcs	.+16     	; 0x1ede <__divsf3+0x18>
    1ece:	da d0       	rcall	.+436    	; 0x2084 <__fp_pscA>
    1ed0:	30 f0       	brcs	.+12     	; 0x1ede <__divsf3+0x18>
    1ed2:	21 f4       	brne	.+8      	; 0x1edc <__divsf3+0x16>
    1ed4:	5f 3f       	cpi	r21, 0xFF	; 255
    1ed6:	19 f0       	breq	.+6      	; 0x1ede <__divsf3+0x18>
    1ed8:	cc c0       	rjmp	.+408    	; 0x2072 <__fp_inf>
    1eda:	51 11       	cpse	r21, r1
    1edc:	15 c1       	rjmp	.+554    	; 0x2108 <__fp_szero>
    1ede:	cf c0       	rjmp	.+414    	; 0x207e <__fp_nan>

00001ee0 <__divsf3x>:
    1ee0:	f0 d0       	rcall	.+480    	; 0x20c2 <__fp_split3>
    1ee2:	98 f3       	brcs	.-26     	; 0x1eca <__divsf3+0x4>

00001ee4 <__divsf3_pse>:
    1ee4:	99 23       	and	r25, r25
    1ee6:	c9 f3       	breq	.-14     	; 0x1eda <__divsf3+0x14>
    1ee8:	55 23       	and	r21, r21
    1eea:	b1 f3       	breq	.-20     	; 0x1ed8 <__divsf3+0x12>
    1eec:	95 1b       	sub	r25, r21
    1eee:	55 0b       	sbc	r21, r21
    1ef0:	bb 27       	eor	r27, r27
    1ef2:	aa 27       	eor	r26, r26
    1ef4:	62 17       	cp	r22, r18
    1ef6:	73 07       	cpc	r23, r19
    1ef8:	84 07       	cpc	r24, r20
    1efa:	38 f0       	brcs	.+14     	; 0x1f0a <__divsf3_pse+0x26>
    1efc:	9f 5f       	subi	r25, 0xFF	; 255
    1efe:	5f 4f       	sbci	r21, 0xFF	; 255
    1f00:	22 0f       	add	r18, r18
    1f02:	33 1f       	adc	r19, r19
    1f04:	44 1f       	adc	r20, r20
    1f06:	aa 1f       	adc	r26, r26
    1f08:	a9 f3       	breq	.-22     	; 0x1ef4 <__divsf3_pse+0x10>
    1f0a:	33 d0       	rcall	.+102    	; 0x1f72 <__divsf3_pse+0x8e>
    1f0c:	0e 2e       	mov	r0, r30
    1f0e:	3a f0       	brmi	.+14     	; 0x1f1e <__divsf3_pse+0x3a>
    1f10:	e0 e8       	ldi	r30, 0x80	; 128
    1f12:	30 d0       	rcall	.+96     	; 0x1f74 <__divsf3_pse+0x90>
    1f14:	91 50       	subi	r25, 0x01	; 1
    1f16:	50 40       	sbci	r21, 0x00	; 0
    1f18:	e6 95       	lsr	r30
    1f1a:	00 1c       	adc	r0, r0
    1f1c:	ca f7       	brpl	.-14     	; 0x1f10 <__divsf3_pse+0x2c>
    1f1e:	29 d0       	rcall	.+82     	; 0x1f72 <__divsf3_pse+0x8e>
    1f20:	fe 2f       	mov	r31, r30
    1f22:	27 d0       	rcall	.+78     	; 0x1f72 <__divsf3_pse+0x8e>
    1f24:	66 0f       	add	r22, r22
    1f26:	77 1f       	adc	r23, r23
    1f28:	88 1f       	adc	r24, r24
    1f2a:	bb 1f       	adc	r27, r27
    1f2c:	26 17       	cp	r18, r22
    1f2e:	37 07       	cpc	r19, r23
    1f30:	48 07       	cpc	r20, r24
    1f32:	ab 07       	cpc	r26, r27
    1f34:	b0 e8       	ldi	r27, 0x80	; 128
    1f36:	09 f0       	breq	.+2      	; 0x1f3a <__divsf3_pse+0x56>
    1f38:	bb 0b       	sbc	r27, r27
    1f3a:	80 2d       	mov	r24, r0
    1f3c:	bf 01       	movw	r22, r30
    1f3e:	ff 27       	eor	r31, r31
    1f40:	93 58       	subi	r25, 0x83	; 131
    1f42:	5f 4f       	sbci	r21, 0xFF	; 255
    1f44:	2a f0       	brmi	.+10     	; 0x1f50 <__divsf3_pse+0x6c>
    1f46:	9e 3f       	cpi	r25, 0xFE	; 254
    1f48:	51 05       	cpc	r21, r1
    1f4a:	68 f0       	brcs	.+26     	; 0x1f66 <__divsf3_pse+0x82>
    1f4c:	92 c0       	rjmp	.+292    	; 0x2072 <__fp_inf>
    1f4e:	dc c0       	rjmp	.+440    	; 0x2108 <__fp_szero>
    1f50:	5f 3f       	cpi	r21, 0xFF	; 255
    1f52:	ec f3       	brlt	.-6      	; 0x1f4e <__divsf3_pse+0x6a>
    1f54:	98 3e       	cpi	r25, 0xE8	; 232
    1f56:	dc f3       	brlt	.-10     	; 0x1f4e <__divsf3_pse+0x6a>
    1f58:	86 95       	lsr	r24
    1f5a:	77 95       	ror	r23
    1f5c:	67 95       	ror	r22
    1f5e:	b7 95       	ror	r27
    1f60:	f7 95       	ror	r31
    1f62:	9f 5f       	subi	r25, 0xFF	; 255
    1f64:	c9 f7       	brne	.-14     	; 0x1f58 <__divsf3_pse+0x74>
    1f66:	88 0f       	add	r24, r24
    1f68:	91 1d       	adc	r25, r1
    1f6a:	96 95       	lsr	r25
    1f6c:	87 95       	ror	r24
    1f6e:	97 f9       	bld	r25, 7
    1f70:	08 95       	ret
    1f72:	e1 e0       	ldi	r30, 0x01	; 1
    1f74:	66 0f       	add	r22, r22
    1f76:	77 1f       	adc	r23, r23
    1f78:	88 1f       	adc	r24, r24
    1f7a:	bb 1f       	adc	r27, r27
    1f7c:	62 17       	cp	r22, r18
    1f7e:	73 07       	cpc	r23, r19
    1f80:	84 07       	cpc	r24, r20
    1f82:	ba 07       	cpc	r27, r26
    1f84:	20 f0       	brcs	.+8      	; 0x1f8e <__divsf3_pse+0xaa>
    1f86:	62 1b       	sub	r22, r18
    1f88:	73 0b       	sbc	r23, r19
    1f8a:	84 0b       	sbc	r24, r20
    1f8c:	ba 0b       	sbc	r27, r26
    1f8e:	ee 1f       	adc	r30, r30
    1f90:	88 f7       	brcc	.-30     	; 0x1f74 <__divsf3_pse+0x90>
    1f92:	e0 95       	com	r30
    1f94:	08 95       	ret

00001f96 <__fixsfsi>:
    1f96:	04 d0       	rcall	.+8      	; 0x1fa0 <__fixunssfsi>
    1f98:	68 94       	set
    1f9a:	b1 11       	cpse	r27, r1
    1f9c:	b5 c0       	rjmp	.+362    	; 0x2108 <__fp_szero>
    1f9e:	08 95       	ret

00001fa0 <__fixunssfsi>:
    1fa0:	98 d0       	rcall	.+304    	; 0x20d2 <__fp_splitA>
    1fa2:	88 f0       	brcs	.+34     	; 0x1fc6 <__fixunssfsi+0x26>
    1fa4:	9f 57       	subi	r25, 0x7F	; 127
    1fa6:	90 f0       	brcs	.+36     	; 0x1fcc <__fixunssfsi+0x2c>
    1fa8:	b9 2f       	mov	r27, r25
    1faa:	99 27       	eor	r25, r25
    1fac:	b7 51       	subi	r27, 0x17	; 23
    1fae:	a0 f0       	brcs	.+40     	; 0x1fd8 <__fixunssfsi+0x38>
    1fb0:	d1 f0       	breq	.+52     	; 0x1fe6 <__fixunssfsi+0x46>
    1fb2:	66 0f       	add	r22, r22
    1fb4:	77 1f       	adc	r23, r23
    1fb6:	88 1f       	adc	r24, r24
    1fb8:	99 1f       	adc	r25, r25
    1fba:	1a f0       	brmi	.+6      	; 0x1fc2 <__fixunssfsi+0x22>
    1fbc:	ba 95       	dec	r27
    1fbe:	c9 f7       	brne	.-14     	; 0x1fb2 <__fixunssfsi+0x12>
    1fc0:	12 c0       	rjmp	.+36     	; 0x1fe6 <__fixunssfsi+0x46>
    1fc2:	b1 30       	cpi	r27, 0x01	; 1
    1fc4:	81 f0       	breq	.+32     	; 0x1fe6 <__fixunssfsi+0x46>
    1fc6:	9f d0       	rcall	.+318    	; 0x2106 <__fp_zero>
    1fc8:	b1 e0       	ldi	r27, 0x01	; 1
    1fca:	08 95       	ret
    1fcc:	9c c0       	rjmp	.+312    	; 0x2106 <__fp_zero>
    1fce:	67 2f       	mov	r22, r23
    1fd0:	78 2f       	mov	r23, r24
    1fd2:	88 27       	eor	r24, r24
    1fd4:	b8 5f       	subi	r27, 0xF8	; 248
    1fd6:	39 f0       	breq	.+14     	; 0x1fe6 <__fixunssfsi+0x46>
    1fd8:	b9 3f       	cpi	r27, 0xF9	; 249
    1fda:	cc f3       	brlt	.-14     	; 0x1fce <__fixunssfsi+0x2e>
    1fdc:	86 95       	lsr	r24
    1fde:	77 95       	ror	r23
    1fe0:	67 95       	ror	r22
    1fe2:	b3 95       	inc	r27
    1fe4:	d9 f7       	brne	.-10     	; 0x1fdc <__fixunssfsi+0x3c>
    1fe6:	3e f4       	brtc	.+14     	; 0x1ff6 <__fixunssfsi+0x56>
    1fe8:	90 95       	com	r25
    1fea:	80 95       	com	r24
    1fec:	70 95       	com	r23
    1fee:	61 95       	neg	r22
    1ff0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ff2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ff4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ff6:	08 95       	ret

00001ff8 <__floatunsisf>:
    1ff8:	e8 94       	clt
    1ffa:	09 c0       	rjmp	.+18     	; 0x200e <__floatsisf+0x12>

00001ffc <__floatsisf>:
    1ffc:	97 fb       	bst	r25, 7
    1ffe:	3e f4       	brtc	.+14     	; 0x200e <__floatsisf+0x12>
    2000:	90 95       	com	r25
    2002:	80 95       	com	r24
    2004:	70 95       	com	r23
    2006:	61 95       	neg	r22
    2008:	7f 4f       	sbci	r23, 0xFF	; 255
    200a:	8f 4f       	sbci	r24, 0xFF	; 255
    200c:	9f 4f       	sbci	r25, 0xFF	; 255
    200e:	99 23       	and	r25, r25
    2010:	a9 f0       	breq	.+42     	; 0x203c <__floatsisf+0x40>
    2012:	f9 2f       	mov	r31, r25
    2014:	96 e9       	ldi	r25, 0x96	; 150
    2016:	bb 27       	eor	r27, r27
    2018:	93 95       	inc	r25
    201a:	f6 95       	lsr	r31
    201c:	87 95       	ror	r24
    201e:	77 95       	ror	r23
    2020:	67 95       	ror	r22
    2022:	b7 95       	ror	r27
    2024:	f1 11       	cpse	r31, r1
    2026:	f8 cf       	rjmp	.-16     	; 0x2018 <__floatsisf+0x1c>
    2028:	fa f4       	brpl	.+62     	; 0x2068 <__floatsisf+0x6c>
    202a:	bb 0f       	add	r27, r27
    202c:	11 f4       	brne	.+4      	; 0x2032 <__floatsisf+0x36>
    202e:	60 ff       	sbrs	r22, 0
    2030:	1b c0       	rjmp	.+54     	; 0x2068 <__floatsisf+0x6c>
    2032:	6f 5f       	subi	r22, 0xFF	; 255
    2034:	7f 4f       	sbci	r23, 0xFF	; 255
    2036:	8f 4f       	sbci	r24, 0xFF	; 255
    2038:	9f 4f       	sbci	r25, 0xFF	; 255
    203a:	16 c0       	rjmp	.+44     	; 0x2068 <__floatsisf+0x6c>
    203c:	88 23       	and	r24, r24
    203e:	11 f0       	breq	.+4      	; 0x2044 <__floatsisf+0x48>
    2040:	96 e9       	ldi	r25, 0x96	; 150
    2042:	11 c0       	rjmp	.+34     	; 0x2066 <__floatsisf+0x6a>
    2044:	77 23       	and	r23, r23
    2046:	21 f0       	breq	.+8      	; 0x2050 <__floatsisf+0x54>
    2048:	9e e8       	ldi	r25, 0x8E	; 142
    204a:	87 2f       	mov	r24, r23
    204c:	76 2f       	mov	r23, r22
    204e:	05 c0       	rjmp	.+10     	; 0x205a <__floatsisf+0x5e>
    2050:	66 23       	and	r22, r22
    2052:	71 f0       	breq	.+28     	; 0x2070 <__floatsisf+0x74>
    2054:	96 e8       	ldi	r25, 0x86	; 134
    2056:	86 2f       	mov	r24, r22
    2058:	70 e0       	ldi	r23, 0x00	; 0
    205a:	60 e0       	ldi	r22, 0x00	; 0
    205c:	2a f0       	brmi	.+10     	; 0x2068 <__floatsisf+0x6c>
    205e:	9a 95       	dec	r25
    2060:	66 0f       	add	r22, r22
    2062:	77 1f       	adc	r23, r23
    2064:	88 1f       	adc	r24, r24
    2066:	da f7       	brpl	.-10     	; 0x205e <__floatsisf+0x62>
    2068:	88 0f       	add	r24, r24
    206a:	96 95       	lsr	r25
    206c:	87 95       	ror	r24
    206e:	97 f9       	bld	r25, 7
    2070:	08 95       	ret

00002072 <__fp_inf>:
    2072:	97 f9       	bld	r25, 7
    2074:	9f 67       	ori	r25, 0x7F	; 127
    2076:	80 e8       	ldi	r24, 0x80	; 128
    2078:	70 e0       	ldi	r23, 0x00	; 0
    207a:	60 e0       	ldi	r22, 0x00	; 0
    207c:	08 95       	ret

0000207e <__fp_nan>:
    207e:	9f ef       	ldi	r25, 0xFF	; 255
    2080:	80 ec       	ldi	r24, 0xC0	; 192
    2082:	08 95       	ret

00002084 <__fp_pscA>:
    2084:	00 24       	eor	r0, r0
    2086:	0a 94       	dec	r0
    2088:	16 16       	cp	r1, r22
    208a:	17 06       	cpc	r1, r23
    208c:	18 06       	cpc	r1, r24
    208e:	09 06       	cpc	r0, r25
    2090:	08 95       	ret

00002092 <__fp_pscB>:
    2092:	00 24       	eor	r0, r0
    2094:	0a 94       	dec	r0
    2096:	12 16       	cp	r1, r18
    2098:	13 06       	cpc	r1, r19
    209a:	14 06       	cpc	r1, r20
    209c:	05 06       	cpc	r0, r21
    209e:	08 95       	ret

000020a0 <__fp_round>:
    20a0:	09 2e       	mov	r0, r25
    20a2:	03 94       	inc	r0
    20a4:	00 0c       	add	r0, r0
    20a6:	11 f4       	brne	.+4      	; 0x20ac <__fp_round+0xc>
    20a8:	88 23       	and	r24, r24
    20aa:	52 f0       	brmi	.+20     	; 0x20c0 <__fp_round+0x20>
    20ac:	bb 0f       	add	r27, r27
    20ae:	40 f4       	brcc	.+16     	; 0x20c0 <__fp_round+0x20>
    20b0:	bf 2b       	or	r27, r31
    20b2:	11 f4       	brne	.+4      	; 0x20b8 <__fp_round+0x18>
    20b4:	60 ff       	sbrs	r22, 0
    20b6:	04 c0       	rjmp	.+8      	; 0x20c0 <__fp_round+0x20>
    20b8:	6f 5f       	subi	r22, 0xFF	; 255
    20ba:	7f 4f       	sbci	r23, 0xFF	; 255
    20bc:	8f 4f       	sbci	r24, 0xFF	; 255
    20be:	9f 4f       	sbci	r25, 0xFF	; 255
    20c0:	08 95       	ret

000020c2 <__fp_split3>:
    20c2:	57 fd       	sbrc	r21, 7
    20c4:	90 58       	subi	r25, 0x80	; 128
    20c6:	44 0f       	add	r20, r20
    20c8:	55 1f       	adc	r21, r21
    20ca:	59 f0       	breq	.+22     	; 0x20e2 <__fp_splitA+0x10>
    20cc:	5f 3f       	cpi	r21, 0xFF	; 255
    20ce:	71 f0       	breq	.+28     	; 0x20ec <__fp_splitA+0x1a>
    20d0:	47 95       	ror	r20

000020d2 <__fp_splitA>:
    20d2:	88 0f       	add	r24, r24
    20d4:	97 fb       	bst	r25, 7
    20d6:	99 1f       	adc	r25, r25
    20d8:	61 f0       	breq	.+24     	; 0x20f2 <__fp_splitA+0x20>
    20da:	9f 3f       	cpi	r25, 0xFF	; 255
    20dc:	79 f0       	breq	.+30     	; 0x20fc <__fp_splitA+0x2a>
    20de:	87 95       	ror	r24
    20e0:	08 95       	ret
    20e2:	12 16       	cp	r1, r18
    20e4:	13 06       	cpc	r1, r19
    20e6:	14 06       	cpc	r1, r20
    20e8:	55 1f       	adc	r21, r21
    20ea:	f2 cf       	rjmp	.-28     	; 0x20d0 <__fp_split3+0xe>
    20ec:	46 95       	lsr	r20
    20ee:	f1 df       	rcall	.-30     	; 0x20d2 <__fp_splitA>
    20f0:	08 c0       	rjmp	.+16     	; 0x2102 <__fp_splitA+0x30>
    20f2:	16 16       	cp	r1, r22
    20f4:	17 06       	cpc	r1, r23
    20f6:	18 06       	cpc	r1, r24
    20f8:	99 1f       	adc	r25, r25
    20fa:	f1 cf       	rjmp	.-30     	; 0x20de <__fp_splitA+0xc>
    20fc:	86 95       	lsr	r24
    20fe:	71 05       	cpc	r23, r1
    2100:	61 05       	cpc	r22, r1
    2102:	08 94       	sec
    2104:	08 95       	ret

00002106 <__fp_zero>:
    2106:	e8 94       	clt

00002108 <__fp_szero>:
    2108:	bb 27       	eor	r27, r27
    210a:	66 27       	eor	r22, r22
    210c:	77 27       	eor	r23, r23
    210e:	cb 01       	movw	r24, r22
    2110:	97 f9       	bld	r25, 7
    2112:	08 95       	ret

00002114 <__mulsf3>:
    2114:	0b d0       	rcall	.+22     	; 0x212c <__mulsf3x>
    2116:	c4 cf       	rjmp	.-120    	; 0x20a0 <__fp_round>
    2118:	b5 df       	rcall	.-150    	; 0x2084 <__fp_pscA>
    211a:	28 f0       	brcs	.+10     	; 0x2126 <__mulsf3+0x12>
    211c:	ba df       	rcall	.-140    	; 0x2092 <__fp_pscB>
    211e:	18 f0       	brcs	.+6      	; 0x2126 <__mulsf3+0x12>
    2120:	95 23       	and	r25, r21
    2122:	09 f0       	breq	.+2      	; 0x2126 <__mulsf3+0x12>
    2124:	a6 cf       	rjmp	.-180    	; 0x2072 <__fp_inf>
    2126:	ab cf       	rjmp	.-170    	; 0x207e <__fp_nan>
    2128:	11 24       	eor	r1, r1
    212a:	ee cf       	rjmp	.-36     	; 0x2108 <__fp_szero>

0000212c <__mulsf3x>:
    212c:	ca df       	rcall	.-108    	; 0x20c2 <__fp_split3>
    212e:	a0 f3       	brcs	.-24     	; 0x2118 <__mulsf3+0x4>

00002130 <__mulsf3_pse>:
    2130:	95 9f       	mul	r25, r21
    2132:	d1 f3       	breq	.-12     	; 0x2128 <__mulsf3+0x14>
    2134:	95 0f       	add	r25, r21
    2136:	50 e0       	ldi	r21, 0x00	; 0
    2138:	55 1f       	adc	r21, r21
    213a:	62 9f       	mul	r22, r18
    213c:	f0 01       	movw	r30, r0
    213e:	72 9f       	mul	r23, r18
    2140:	bb 27       	eor	r27, r27
    2142:	f0 0d       	add	r31, r0
    2144:	b1 1d       	adc	r27, r1
    2146:	63 9f       	mul	r22, r19
    2148:	aa 27       	eor	r26, r26
    214a:	f0 0d       	add	r31, r0
    214c:	b1 1d       	adc	r27, r1
    214e:	aa 1f       	adc	r26, r26
    2150:	64 9f       	mul	r22, r20
    2152:	66 27       	eor	r22, r22
    2154:	b0 0d       	add	r27, r0
    2156:	a1 1d       	adc	r26, r1
    2158:	66 1f       	adc	r22, r22
    215a:	82 9f       	mul	r24, r18
    215c:	22 27       	eor	r18, r18
    215e:	b0 0d       	add	r27, r0
    2160:	a1 1d       	adc	r26, r1
    2162:	62 1f       	adc	r22, r18
    2164:	73 9f       	mul	r23, r19
    2166:	b0 0d       	add	r27, r0
    2168:	a1 1d       	adc	r26, r1
    216a:	62 1f       	adc	r22, r18
    216c:	83 9f       	mul	r24, r19
    216e:	a0 0d       	add	r26, r0
    2170:	61 1d       	adc	r22, r1
    2172:	22 1f       	adc	r18, r18
    2174:	74 9f       	mul	r23, r20
    2176:	33 27       	eor	r19, r19
    2178:	a0 0d       	add	r26, r0
    217a:	61 1d       	adc	r22, r1
    217c:	23 1f       	adc	r18, r19
    217e:	84 9f       	mul	r24, r20
    2180:	60 0d       	add	r22, r0
    2182:	21 1d       	adc	r18, r1
    2184:	82 2f       	mov	r24, r18
    2186:	76 2f       	mov	r23, r22
    2188:	6a 2f       	mov	r22, r26
    218a:	11 24       	eor	r1, r1
    218c:	9f 57       	subi	r25, 0x7F	; 127
    218e:	50 40       	sbci	r21, 0x00	; 0
    2190:	8a f0       	brmi	.+34     	; 0x21b4 <__mulsf3_pse+0x84>
    2192:	e1 f0       	breq	.+56     	; 0x21cc <__mulsf3_pse+0x9c>
    2194:	88 23       	and	r24, r24
    2196:	4a f0       	brmi	.+18     	; 0x21aa <__mulsf3_pse+0x7a>
    2198:	ee 0f       	add	r30, r30
    219a:	ff 1f       	adc	r31, r31
    219c:	bb 1f       	adc	r27, r27
    219e:	66 1f       	adc	r22, r22
    21a0:	77 1f       	adc	r23, r23
    21a2:	88 1f       	adc	r24, r24
    21a4:	91 50       	subi	r25, 0x01	; 1
    21a6:	50 40       	sbci	r21, 0x00	; 0
    21a8:	a9 f7       	brne	.-22     	; 0x2194 <__mulsf3_pse+0x64>
    21aa:	9e 3f       	cpi	r25, 0xFE	; 254
    21ac:	51 05       	cpc	r21, r1
    21ae:	70 f0       	brcs	.+28     	; 0x21cc <__mulsf3_pse+0x9c>
    21b0:	60 cf       	rjmp	.-320    	; 0x2072 <__fp_inf>
    21b2:	aa cf       	rjmp	.-172    	; 0x2108 <__fp_szero>
    21b4:	5f 3f       	cpi	r21, 0xFF	; 255
    21b6:	ec f3       	brlt	.-6      	; 0x21b2 <__mulsf3_pse+0x82>
    21b8:	98 3e       	cpi	r25, 0xE8	; 232
    21ba:	dc f3       	brlt	.-10     	; 0x21b2 <__mulsf3_pse+0x82>
    21bc:	86 95       	lsr	r24
    21be:	77 95       	ror	r23
    21c0:	67 95       	ror	r22
    21c2:	b7 95       	ror	r27
    21c4:	f7 95       	ror	r31
    21c6:	e7 95       	ror	r30
    21c8:	9f 5f       	subi	r25, 0xFF	; 255
    21ca:	c1 f7       	brne	.-16     	; 0x21bc <__mulsf3_pse+0x8c>
    21cc:	fe 2b       	or	r31, r30
    21ce:	88 0f       	add	r24, r24
    21d0:	91 1d       	adc	r25, r1
    21d2:	96 95       	lsr	r25
    21d4:	87 95       	ror	r24
    21d6:	97 f9       	bld	r25, 7
    21d8:	08 95       	ret

000021da <pow>:
    21da:	fa 01       	movw	r30, r20
    21dc:	ee 0f       	add	r30, r30
    21de:	ff 1f       	adc	r31, r31
    21e0:	30 96       	adiw	r30, 0x00	; 0
    21e2:	21 05       	cpc	r18, r1
    21e4:	31 05       	cpc	r19, r1
    21e6:	99 f1       	breq	.+102    	; 0x224e <pow+0x74>
    21e8:	61 15       	cp	r22, r1
    21ea:	71 05       	cpc	r23, r1
    21ec:	61 f4       	brne	.+24     	; 0x2206 <pow+0x2c>
    21ee:	80 38       	cpi	r24, 0x80	; 128
    21f0:	bf e3       	ldi	r27, 0x3F	; 63
    21f2:	9b 07       	cpc	r25, r27
    21f4:	49 f1       	breq	.+82     	; 0x2248 <pow+0x6e>
    21f6:	68 94       	set
    21f8:	90 38       	cpi	r25, 0x80	; 128
    21fa:	81 05       	cpc	r24, r1
    21fc:	61 f0       	breq	.+24     	; 0x2216 <pow+0x3c>
    21fe:	80 38       	cpi	r24, 0x80	; 128
    2200:	bf ef       	ldi	r27, 0xFF	; 255
    2202:	9b 07       	cpc	r25, r27
    2204:	41 f0       	breq	.+16     	; 0x2216 <pow+0x3c>
    2206:	99 23       	and	r25, r25
    2208:	42 f5       	brpl	.+80     	; 0x225a <pow+0x80>
    220a:	ff 3f       	cpi	r31, 0xFF	; 255
    220c:	e1 05       	cpc	r30, r1
    220e:	31 05       	cpc	r19, r1
    2210:	21 05       	cpc	r18, r1
    2212:	11 f1       	breq	.+68     	; 0x2258 <pow+0x7e>
    2214:	e8 94       	clt
    2216:	08 94       	sec
    2218:	e7 95       	ror	r30
    221a:	d9 01       	movw	r26, r18
    221c:	aa 23       	and	r26, r26
    221e:	29 f4       	brne	.+10     	; 0x222a <pow+0x50>
    2220:	ab 2f       	mov	r26, r27
    2222:	be 2f       	mov	r27, r30
    2224:	f8 5f       	subi	r31, 0xF8	; 248
    2226:	d0 f3       	brcs	.-12     	; 0x221c <pow+0x42>
    2228:	10 c0       	rjmp	.+32     	; 0x224a <pow+0x70>
    222a:	ff 5f       	subi	r31, 0xFF	; 255
    222c:	70 f4       	brcc	.+28     	; 0x224a <pow+0x70>
    222e:	a6 95       	lsr	r26
    2230:	e0 f7       	brcc	.-8      	; 0x222a <pow+0x50>
    2232:	f7 39       	cpi	r31, 0x97	; 151
    2234:	50 f0       	brcs	.+20     	; 0x224a <pow+0x70>
    2236:	19 f0       	breq	.+6      	; 0x223e <pow+0x64>
    2238:	ff 3a       	cpi	r31, 0xAF	; 175
    223a:	38 f4       	brcc	.+14     	; 0x224a <pow+0x70>
    223c:	9f 77       	andi	r25, 0x7F	; 127
    223e:	9f 93       	push	r25
    2240:	0c d0       	rcall	.+24     	; 0x225a <pow+0x80>
    2242:	0f 90       	pop	r0
    2244:	07 fc       	sbrc	r0, 7
    2246:	90 58       	subi	r25, 0x80	; 128
    2248:	08 95       	ret
    224a:	3e f0       	brts	.+14     	; 0x225a <pow+0x80>
    224c:	18 cf       	rjmp	.-464    	; 0x207e <__fp_nan>
    224e:	60 e0       	ldi	r22, 0x00	; 0
    2250:	70 e0       	ldi	r23, 0x00	; 0
    2252:	80 e8       	ldi	r24, 0x80	; 128
    2254:	9f e3       	ldi	r25, 0x3F	; 63
    2256:	08 95       	ret
    2258:	4f e7       	ldi	r20, 0x7F	; 127
    225a:	9f 77       	andi	r25, 0x7F	; 127
    225c:	5f 93       	push	r21
    225e:	4f 93       	push	r20
    2260:	3f 93       	push	r19
    2262:	2f 93       	push	r18
    2264:	9e d0       	rcall	.+316    	; 0x23a2 <log>
    2266:	2f 91       	pop	r18
    2268:	3f 91       	pop	r19
    226a:	4f 91       	pop	r20
    226c:	5f 91       	pop	r21
    226e:	52 df       	rcall	.-348    	; 0x2114 <__mulsf3>
    2270:	05 c0       	rjmp	.+10     	; 0x227c <exp>
    2272:	19 f4       	brne	.+6      	; 0x227a <pow+0xa0>
    2274:	0e f0       	brts	.+2      	; 0x2278 <pow+0x9e>
    2276:	fd ce       	rjmp	.-518    	; 0x2072 <__fp_inf>
    2278:	46 cf       	rjmp	.-372    	; 0x2106 <__fp_zero>
    227a:	01 cf       	rjmp	.-510    	; 0x207e <__fp_nan>

0000227c <exp>:
    227c:	2a df       	rcall	.-428    	; 0x20d2 <__fp_splitA>
    227e:	c8 f3       	brcs	.-14     	; 0x2272 <pow+0x98>
    2280:	96 38       	cpi	r25, 0x86	; 134
    2282:	c0 f7       	brcc	.-16     	; 0x2274 <pow+0x9a>
    2284:	07 f8       	bld	r0, 7
    2286:	0f 92       	push	r0
    2288:	e8 94       	clt
    228a:	2b e3       	ldi	r18, 0x3B	; 59
    228c:	3a ea       	ldi	r19, 0xAA	; 170
    228e:	48 eb       	ldi	r20, 0xB8	; 184
    2290:	5f e7       	ldi	r21, 0x7F	; 127
    2292:	4e df       	rcall	.-356    	; 0x2130 <__mulsf3_pse>
    2294:	0f 92       	push	r0
    2296:	0f 92       	push	r0
    2298:	0f 92       	push	r0
    229a:	4d b7       	in	r20, 0x3d	; 61
    229c:	5e b7       	in	r21, 0x3e	; 62
    229e:	0f 92       	push	r0
    22a0:	c0 d0       	rcall	.+384    	; 0x2422 <modf>
    22a2:	e2 ec       	ldi	r30, 0xC2	; 194
    22a4:	f0 e0       	ldi	r31, 0x00	; 0
    22a6:	16 d0       	rcall	.+44     	; 0x22d4 <__fp_powser>
    22a8:	4f 91       	pop	r20
    22aa:	5f 91       	pop	r21
    22ac:	ef 91       	pop	r30
    22ae:	ff 91       	pop	r31
    22b0:	e5 95       	asr	r30
    22b2:	ee 1f       	adc	r30, r30
    22b4:	ff 1f       	adc	r31, r31
    22b6:	49 f0       	breq	.+18     	; 0x22ca <exp+0x4e>
    22b8:	fe 57       	subi	r31, 0x7E	; 126
    22ba:	e0 68       	ori	r30, 0x80	; 128
    22bc:	44 27       	eor	r20, r20
    22be:	ee 0f       	add	r30, r30
    22c0:	44 1f       	adc	r20, r20
    22c2:	fa 95       	dec	r31
    22c4:	e1 f7       	brne	.-8      	; 0x22be <exp+0x42>
    22c6:	41 95       	neg	r20
    22c8:	55 0b       	sbc	r21, r21
    22ca:	32 d0       	rcall	.+100    	; 0x2330 <ldexp>
    22cc:	0f 90       	pop	r0
    22ce:	07 fe       	sbrs	r0, 7
    22d0:	26 c0       	rjmp	.+76     	; 0x231e <inverse>
    22d2:	08 95       	ret

000022d4 <__fp_powser>:
    22d4:	df 93       	push	r29
    22d6:	cf 93       	push	r28
    22d8:	1f 93       	push	r17
    22da:	0f 93       	push	r16
    22dc:	ff 92       	push	r15
    22de:	ef 92       	push	r14
    22e0:	df 92       	push	r13
    22e2:	7b 01       	movw	r14, r22
    22e4:	8c 01       	movw	r16, r24
    22e6:	68 94       	set
    22e8:	05 c0       	rjmp	.+10     	; 0x22f4 <__fp_powser+0x20>
    22ea:	da 2e       	mov	r13, r26
    22ec:	ef 01       	movw	r28, r30
    22ee:	1e df       	rcall	.-452    	; 0x212c <__mulsf3x>
    22f0:	fe 01       	movw	r30, r28
    22f2:	e8 94       	clt
    22f4:	a5 91       	lpm	r26, Z+
    22f6:	25 91       	lpm	r18, Z+
    22f8:	35 91       	lpm	r19, Z+
    22fa:	45 91       	lpm	r20, Z+
    22fc:	55 91       	lpm	r21, Z+
    22fe:	ae f3       	brts	.-22     	; 0x22ea <__fp_powser+0x16>
    2300:	ef 01       	movw	r28, r30
    2302:	8e dd       	rcall	.-1252   	; 0x1e20 <__addsf3x>
    2304:	fe 01       	movw	r30, r28
    2306:	97 01       	movw	r18, r14
    2308:	a8 01       	movw	r20, r16
    230a:	da 94       	dec	r13
    230c:	79 f7       	brne	.-34     	; 0x22ec <__fp_powser+0x18>
    230e:	df 90       	pop	r13
    2310:	ef 90       	pop	r14
    2312:	ff 90       	pop	r15
    2314:	0f 91       	pop	r16
    2316:	1f 91       	pop	r17
    2318:	cf 91       	pop	r28
    231a:	df 91       	pop	r29
    231c:	08 95       	ret

0000231e <inverse>:
    231e:	9b 01       	movw	r18, r22
    2320:	ac 01       	movw	r20, r24
    2322:	60 e0       	ldi	r22, 0x00	; 0
    2324:	70 e0       	ldi	r23, 0x00	; 0
    2326:	80 e8       	ldi	r24, 0x80	; 128
    2328:	9f e3       	ldi	r25, 0x3F	; 63
    232a:	cd cd       	rjmp	.-1126   	; 0x1ec6 <__divsf3>
    232c:	a2 ce       	rjmp	.-700    	; 0x2072 <__fp_inf>
    232e:	ac c0       	rjmp	.+344    	; 0x2488 <__fp_mpack>

00002330 <ldexp>:
    2330:	d0 de       	rcall	.-608    	; 0x20d2 <__fp_splitA>
    2332:	e8 f3       	brcs	.-6      	; 0x232e <inverse+0x10>
    2334:	99 23       	and	r25, r25
    2336:	d9 f3       	breq	.-10     	; 0x232e <inverse+0x10>
    2338:	94 0f       	add	r25, r20
    233a:	51 1d       	adc	r21, r1
    233c:	bb f3       	brvs	.-18     	; 0x232c <inverse+0xe>
    233e:	91 50       	subi	r25, 0x01	; 1
    2340:	50 40       	sbci	r21, 0x00	; 0
    2342:	94 f0       	brlt	.+36     	; 0x2368 <ldexp+0x38>
    2344:	59 f0       	breq	.+22     	; 0x235c <ldexp+0x2c>
    2346:	88 23       	and	r24, r24
    2348:	32 f0       	brmi	.+12     	; 0x2356 <ldexp+0x26>
    234a:	66 0f       	add	r22, r22
    234c:	77 1f       	adc	r23, r23
    234e:	88 1f       	adc	r24, r24
    2350:	91 50       	subi	r25, 0x01	; 1
    2352:	50 40       	sbci	r21, 0x00	; 0
    2354:	c1 f7       	brne	.-16     	; 0x2346 <ldexp+0x16>
    2356:	9e 3f       	cpi	r25, 0xFE	; 254
    2358:	51 05       	cpc	r21, r1
    235a:	44 f7       	brge	.-48     	; 0x232c <inverse+0xe>
    235c:	88 0f       	add	r24, r24
    235e:	91 1d       	adc	r25, r1
    2360:	96 95       	lsr	r25
    2362:	87 95       	ror	r24
    2364:	97 f9       	bld	r25, 7
    2366:	08 95       	ret
    2368:	5f 3f       	cpi	r21, 0xFF	; 255
    236a:	ac f0       	brlt	.+42     	; 0x2396 <ldexp+0x66>
    236c:	98 3e       	cpi	r25, 0xE8	; 232
    236e:	9c f0       	brlt	.+38     	; 0x2396 <ldexp+0x66>
    2370:	bb 27       	eor	r27, r27
    2372:	86 95       	lsr	r24
    2374:	77 95       	ror	r23
    2376:	67 95       	ror	r22
    2378:	b7 95       	ror	r27
    237a:	08 f4       	brcc	.+2      	; 0x237e <ldexp+0x4e>
    237c:	b1 60       	ori	r27, 0x01	; 1
    237e:	93 95       	inc	r25
    2380:	c1 f7       	brne	.-16     	; 0x2372 <ldexp+0x42>
    2382:	bb 0f       	add	r27, r27
    2384:	58 f7       	brcc	.-42     	; 0x235c <ldexp+0x2c>
    2386:	11 f4       	brne	.+4      	; 0x238c <ldexp+0x5c>
    2388:	60 ff       	sbrs	r22, 0
    238a:	e8 cf       	rjmp	.-48     	; 0x235c <ldexp+0x2c>
    238c:	6f 5f       	subi	r22, 0xFF	; 255
    238e:	7f 4f       	sbci	r23, 0xFF	; 255
    2390:	8f 4f       	sbci	r24, 0xFF	; 255
    2392:	9f 4f       	sbci	r25, 0xFF	; 255
    2394:	e3 cf       	rjmp	.-58     	; 0x235c <ldexp+0x2c>
    2396:	b8 ce       	rjmp	.-656    	; 0x2108 <__fp_szero>
    2398:	0e f0       	brts	.+2      	; 0x239c <ldexp+0x6c>
    239a:	76 c0       	rjmp	.+236    	; 0x2488 <__fp_mpack>
    239c:	70 ce       	rjmp	.-800    	; 0x207e <__fp_nan>
    239e:	68 94       	set
    23a0:	68 ce       	rjmp	.-816    	; 0x2072 <__fp_inf>

000023a2 <log>:
    23a2:	97 de       	rcall	.-722    	; 0x20d2 <__fp_splitA>
    23a4:	c8 f3       	brcs	.-14     	; 0x2398 <ldexp+0x68>
    23a6:	99 23       	and	r25, r25
    23a8:	d1 f3       	breq	.-12     	; 0x239e <ldexp+0x6e>
    23aa:	c6 f3       	brts	.-16     	; 0x239c <ldexp+0x6c>
    23ac:	df 93       	push	r29
    23ae:	cf 93       	push	r28
    23b0:	1f 93       	push	r17
    23b2:	0f 93       	push	r16
    23b4:	ff 92       	push	r15
    23b6:	c9 2f       	mov	r28, r25
    23b8:	dd 27       	eor	r29, r29
    23ba:	88 23       	and	r24, r24
    23bc:	2a f0       	brmi	.+10     	; 0x23c8 <log+0x26>
    23be:	21 97       	sbiw	r28, 0x01	; 1
    23c0:	66 0f       	add	r22, r22
    23c2:	77 1f       	adc	r23, r23
    23c4:	88 1f       	adc	r24, r24
    23c6:	da f7       	brpl	.-10     	; 0x23be <log+0x1c>
    23c8:	20 e0       	ldi	r18, 0x00	; 0
    23ca:	30 e0       	ldi	r19, 0x00	; 0
    23cc:	40 e8       	ldi	r20, 0x80	; 128
    23ce:	5f eb       	ldi	r21, 0xBF	; 191
    23d0:	9f e3       	ldi	r25, 0x3F	; 63
    23d2:	88 39       	cpi	r24, 0x98	; 152
    23d4:	20 f0       	brcs	.+8      	; 0x23de <log+0x3c>
    23d6:	80 3e       	cpi	r24, 0xE0	; 224
    23d8:	30 f0       	brcs	.+12     	; 0x23e6 <log+0x44>
    23da:	21 96       	adiw	r28, 0x01	; 1
    23dc:	8f 77       	andi	r24, 0x7F	; 127
    23de:	0f dd       	rcall	.-1506   	; 0x1dfe <__addsf3>
    23e0:	ea ee       	ldi	r30, 0xEA	; 234
    23e2:	f0 e0       	ldi	r31, 0x00	; 0
    23e4:	03 c0       	rjmp	.+6      	; 0x23ec <log+0x4a>
    23e6:	0b dd       	rcall	.-1514   	; 0x1dfe <__addsf3>
    23e8:	e7 e1       	ldi	r30, 0x17	; 23
    23ea:	f1 e0       	ldi	r31, 0x01	; 1
    23ec:	73 df       	rcall	.-282    	; 0x22d4 <__fp_powser>
    23ee:	8b 01       	movw	r16, r22
    23f0:	be 01       	movw	r22, r28
    23f2:	ec 01       	movw	r28, r24
    23f4:	fb 2e       	mov	r15, r27
    23f6:	6f 57       	subi	r22, 0x7F	; 127
    23f8:	71 09       	sbc	r23, r1
    23fa:	75 95       	asr	r23
    23fc:	77 1f       	adc	r23, r23
    23fe:	88 0b       	sbc	r24, r24
    2400:	99 0b       	sbc	r25, r25
    2402:	fc dd       	rcall	.-1032   	; 0x1ffc <__floatsisf>
    2404:	28 e1       	ldi	r18, 0x18	; 24
    2406:	32 e7       	ldi	r19, 0x72	; 114
    2408:	41 e3       	ldi	r20, 0x31	; 49
    240a:	5f e3       	ldi	r21, 0x3F	; 63
    240c:	8f de       	rcall	.-738    	; 0x212c <__mulsf3x>
    240e:	af 2d       	mov	r26, r15
    2410:	98 01       	movw	r18, r16
    2412:	ae 01       	movw	r20, r28
    2414:	ff 90       	pop	r15
    2416:	0f 91       	pop	r16
    2418:	1f 91       	pop	r17
    241a:	cf 91       	pop	r28
    241c:	df 91       	pop	r29
    241e:	00 dd       	rcall	.-1536   	; 0x1e20 <__addsf3x>
    2420:	3f ce       	rjmp	.-898    	; 0x20a0 <__fp_round>

00002422 <modf>:
    2422:	fa 01       	movw	r30, r20
    2424:	dc 01       	movw	r26, r24
    2426:	aa 0f       	add	r26, r26
    2428:	bb 1f       	adc	r27, r27
    242a:	9b 01       	movw	r18, r22
    242c:	ac 01       	movw	r20, r24
    242e:	bf 57       	subi	r27, 0x7F	; 127
    2430:	28 f4       	brcc	.+10     	; 0x243c <modf+0x1a>
    2432:	22 27       	eor	r18, r18
    2434:	33 27       	eor	r19, r19
    2436:	44 27       	eor	r20, r20
    2438:	50 78       	andi	r21, 0x80	; 128
    243a:	1f c0       	rjmp	.+62     	; 0x247a <modf+0x58>
    243c:	b7 51       	subi	r27, 0x17	; 23
    243e:	88 f4       	brcc	.+34     	; 0x2462 <modf+0x40>
    2440:	ab 2f       	mov	r26, r27
    2442:	00 24       	eor	r0, r0
    2444:	46 95       	lsr	r20
    2446:	37 95       	ror	r19
    2448:	27 95       	ror	r18
    244a:	01 1c       	adc	r0, r1
    244c:	a3 95       	inc	r26
    244e:	d2 f3       	brmi	.-12     	; 0x2444 <modf+0x22>
    2450:	00 20       	and	r0, r0
    2452:	69 f0       	breq	.+26     	; 0x246e <modf+0x4c>
    2454:	22 0f       	add	r18, r18
    2456:	33 1f       	adc	r19, r19
    2458:	44 1f       	adc	r20, r20
    245a:	b3 95       	inc	r27
    245c:	da f3       	brmi	.-10     	; 0x2454 <modf+0x32>
    245e:	0d d0       	rcall	.+26     	; 0x247a <modf+0x58>
    2460:	cd cc       	rjmp	.-1638   	; 0x1dfc <__subsf3>
    2462:	61 30       	cpi	r22, 0x01	; 1
    2464:	71 05       	cpc	r23, r1
    2466:	a0 e8       	ldi	r26, 0x80	; 128
    2468:	8a 07       	cpc	r24, r26
    246a:	b9 46       	sbci	r27, 0x69	; 105
    246c:	30 f4       	brcc	.+12     	; 0x247a <modf+0x58>
    246e:	9b 01       	movw	r18, r22
    2470:	ac 01       	movw	r20, r24
    2472:	66 27       	eor	r22, r22
    2474:	77 27       	eor	r23, r23
    2476:	88 27       	eor	r24, r24
    2478:	90 78       	andi	r25, 0x80	; 128
    247a:	30 96       	adiw	r30, 0x00	; 0
    247c:	21 f0       	breq	.+8      	; 0x2486 <modf+0x64>
    247e:	20 83       	st	Z, r18
    2480:	31 83       	std	Z+1, r19	; 0x01
    2482:	42 83       	std	Z+2, r20	; 0x02
    2484:	53 83       	std	Z+3, r21	; 0x03
    2486:	08 95       	ret

00002488 <__fp_mpack>:
    2488:	9f 3f       	cpi	r25, 0xFF	; 255
    248a:	31 f0       	breq	.+12     	; 0x2498 <__fp_mpack_finite+0xc>

0000248c <__fp_mpack_finite>:
    248c:	91 50       	subi	r25, 0x01	; 1
    248e:	20 f4       	brcc	.+8      	; 0x2498 <__fp_mpack_finite+0xc>
    2490:	87 95       	ror	r24
    2492:	77 95       	ror	r23
    2494:	67 95       	ror	r22
    2496:	b7 95       	ror	r27
    2498:	88 0f       	add	r24, r24
    249a:	91 1d       	adc	r25, r1
    249c:	96 95       	lsr	r25
    249e:	87 95       	ror	r24
    24a0:	97 f9       	bld	r25, 7
    24a2:	08 95       	ret

000024a4 <__mulsi3>:
    24a4:	db 01       	movw	r26, r22
    24a6:	8f 93       	push	r24
    24a8:	9f 93       	push	r25
    24aa:	88 d0       	rcall	.+272    	; 0x25bc <__muluhisi3>
    24ac:	bf 91       	pop	r27
    24ae:	af 91       	pop	r26
    24b0:	a2 9f       	mul	r26, r18
    24b2:	80 0d       	add	r24, r0
    24b4:	91 1d       	adc	r25, r1
    24b6:	a3 9f       	mul	r26, r19
    24b8:	90 0d       	add	r25, r0
    24ba:	b2 9f       	mul	r27, r18
    24bc:	90 0d       	add	r25, r0
    24be:	11 24       	eor	r1, r1
    24c0:	08 95       	ret

000024c2 <__udivmodhi4>:
    24c2:	aa 1b       	sub	r26, r26
    24c4:	bb 1b       	sub	r27, r27
    24c6:	51 e1       	ldi	r21, 0x11	; 17
    24c8:	07 c0       	rjmp	.+14     	; 0x24d8 <__udivmodhi4_ep>

000024ca <__udivmodhi4_loop>:
    24ca:	aa 1f       	adc	r26, r26
    24cc:	bb 1f       	adc	r27, r27
    24ce:	a6 17       	cp	r26, r22
    24d0:	b7 07       	cpc	r27, r23
    24d2:	10 f0       	brcs	.+4      	; 0x24d8 <__udivmodhi4_ep>
    24d4:	a6 1b       	sub	r26, r22
    24d6:	b7 0b       	sbc	r27, r23

000024d8 <__udivmodhi4_ep>:
    24d8:	88 1f       	adc	r24, r24
    24da:	99 1f       	adc	r25, r25
    24dc:	5a 95       	dec	r21
    24de:	a9 f7       	brne	.-22     	; 0x24ca <__udivmodhi4_loop>
    24e0:	80 95       	com	r24
    24e2:	90 95       	com	r25
    24e4:	bc 01       	movw	r22, r24
    24e6:	cd 01       	movw	r24, r26
    24e8:	08 95       	ret

000024ea <__divmodhi4>:
    24ea:	97 fb       	bst	r25, 7
    24ec:	07 2e       	mov	r0, r23
    24ee:	16 f4       	brtc	.+4      	; 0x24f4 <__divmodhi4+0xa>
    24f0:	00 94       	com	r0
    24f2:	06 d0       	rcall	.+12     	; 0x2500 <__divmodhi4_neg1>
    24f4:	77 fd       	sbrc	r23, 7
    24f6:	08 d0       	rcall	.+16     	; 0x2508 <__divmodhi4_neg2>
    24f8:	e4 df       	rcall	.-56     	; 0x24c2 <__udivmodhi4>
    24fa:	07 fc       	sbrc	r0, 7
    24fc:	05 d0       	rcall	.+10     	; 0x2508 <__divmodhi4_neg2>
    24fe:	3e f4       	brtc	.+14     	; 0x250e <__divmodhi4_exit>

00002500 <__divmodhi4_neg1>:
    2500:	90 95       	com	r25
    2502:	81 95       	neg	r24
    2504:	9f 4f       	sbci	r25, 0xFF	; 255
    2506:	08 95       	ret

00002508 <__divmodhi4_neg2>:
    2508:	70 95       	com	r23
    250a:	61 95       	neg	r22
    250c:	7f 4f       	sbci	r23, 0xFF	; 255

0000250e <__divmodhi4_exit>:
    250e:	08 95       	ret

00002510 <__udivmodsi4>:
    2510:	a1 e2       	ldi	r26, 0x21	; 33
    2512:	1a 2e       	mov	r1, r26
    2514:	aa 1b       	sub	r26, r26
    2516:	bb 1b       	sub	r27, r27
    2518:	fd 01       	movw	r30, r26
    251a:	0d c0       	rjmp	.+26     	; 0x2536 <__udivmodsi4_ep>

0000251c <__udivmodsi4_loop>:
    251c:	aa 1f       	adc	r26, r26
    251e:	bb 1f       	adc	r27, r27
    2520:	ee 1f       	adc	r30, r30
    2522:	ff 1f       	adc	r31, r31
    2524:	a2 17       	cp	r26, r18
    2526:	b3 07       	cpc	r27, r19
    2528:	e4 07       	cpc	r30, r20
    252a:	f5 07       	cpc	r31, r21
    252c:	20 f0       	brcs	.+8      	; 0x2536 <__udivmodsi4_ep>
    252e:	a2 1b       	sub	r26, r18
    2530:	b3 0b       	sbc	r27, r19
    2532:	e4 0b       	sbc	r30, r20
    2534:	f5 0b       	sbc	r31, r21

00002536 <__udivmodsi4_ep>:
    2536:	66 1f       	adc	r22, r22
    2538:	77 1f       	adc	r23, r23
    253a:	88 1f       	adc	r24, r24
    253c:	99 1f       	adc	r25, r25
    253e:	1a 94       	dec	r1
    2540:	69 f7       	brne	.-38     	; 0x251c <__udivmodsi4_loop>
    2542:	60 95       	com	r22
    2544:	70 95       	com	r23
    2546:	80 95       	com	r24
    2548:	90 95       	com	r25
    254a:	9b 01       	movw	r18, r22
    254c:	ac 01       	movw	r20, r24
    254e:	bd 01       	movw	r22, r26
    2550:	cf 01       	movw	r24, r30
    2552:	08 95       	ret

00002554 <__divmodsi4>:
    2554:	05 2e       	mov	r0, r21
    2556:	97 fb       	bst	r25, 7
    2558:	16 f4       	brtc	.+4      	; 0x255e <__divmodsi4+0xa>
    255a:	00 94       	com	r0
    255c:	0f d0       	rcall	.+30     	; 0x257c <__negsi2>
    255e:	57 fd       	sbrc	r21, 7
    2560:	05 d0       	rcall	.+10     	; 0x256c <__divmodsi4_neg2>
    2562:	d6 df       	rcall	.-84     	; 0x2510 <__udivmodsi4>
    2564:	07 fc       	sbrc	r0, 7
    2566:	02 d0       	rcall	.+4      	; 0x256c <__divmodsi4_neg2>
    2568:	46 f4       	brtc	.+16     	; 0x257a <__divmodsi4_exit>
    256a:	08 c0       	rjmp	.+16     	; 0x257c <__negsi2>

0000256c <__divmodsi4_neg2>:
    256c:	50 95       	com	r21
    256e:	40 95       	com	r20
    2570:	30 95       	com	r19
    2572:	21 95       	neg	r18
    2574:	3f 4f       	sbci	r19, 0xFF	; 255
    2576:	4f 4f       	sbci	r20, 0xFF	; 255
    2578:	5f 4f       	sbci	r21, 0xFF	; 255

0000257a <__divmodsi4_exit>:
    257a:	08 95       	ret

0000257c <__negsi2>:
    257c:	90 95       	com	r25
    257e:	80 95       	com	r24
    2580:	70 95       	com	r23
    2582:	61 95       	neg	r22
    2584:	7f 4f       	sbci	r23, 0xFF	; 255
    2586:	8f 4f       	sbci	r24, 0xFF	; 255
    2588:	9f 4f       	sbci	r25, 0xFF	; 255
    258a:	08 95       	ret

0000258c <__tablejump2__>:
    258c:	ee 0f       	add	r30, r30
    258e:	ff 1f       	adc	r31, r31
    2590:	00 24       	eor	r0, r0
    2592:	00 1c       	adc	r0, r0
    2594:	0b be       	out	0x3b, r0	; 59
    2596:	07 90       	elpm	r0, Z+
    2598:	f6 91       	elpm	r31, Z
    259a:	e0 2d       	mov	r30, r0
    259c:	09 94       	ijmp

0000259e <__umulhisi3>:
    259e:	a2 9f       	mul	r26, r18
    25a0:	b0 01       	movw	r22, r0
    25a2:	b3 9f       	mul	r27, r19
    25a4:	c0 01       	movw	r24, r0
    25a6:	a3 9f       	mul	r26, r19
    25a8:	70 0d       	add	r23, r0
    25aa:	81 1d       	adc	r24, r1
    25ac:	11 24       	eor	r1, r1
    25ae:	91 1d       	adc	r25, r1
    25b0:	b2 9f       	mul	r27, r18
    25b2:	70 0d       	add	r23, r0
    25b4:	81 1d       	adc	r24, r1
    25b6:	11 24       	eor	r1, r1
    25b8:	91 1d       	adc	r25, r1
    25ba:	08 95       	ret

000025bc <__muluhisi3>:
    25bc:	f0 df       	rcall	.-32     	; 0x259e <__umulhisi3>
    25be:	a5 9f       	mul	r26, r21
    25c0:	90 0d       	add	r25, r0
    25c2:	b4 9f       	mul	r27, r20
    25c4:	90 0d       	add	r25, r0
    25c6:	a4 9f       	mul	r26, r20
    25c8:	80 0d       	add	r24, r0
    25ca:	91 1d       	adc	r25, r1
    25cc:	11 24       	eor	r1, r1
    25ce:	08 95       	ret

000025d0 <_exit>:
    25d0:	f8 94       	cli

000025d2 <__stop_program>:
    25d2:	ff cf       	rjmp	.-2      	; 0x25d2 <__stop_program>
