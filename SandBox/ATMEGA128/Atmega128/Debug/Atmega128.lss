
Atmega128.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00002918  000029ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002918  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000238  00800110  00800110  000029bc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000029bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000029ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000740  00000000  00000000  00002a28  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000692c  00000000  00000000  00003168  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001a60  00000000  00000000  00009a94  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003c95  00000000  00000000  0000b4f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001090  00000000  00000000  0000f18c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000146d  00000000  00000000  0001021c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000531b  00000000  00000000  00011689  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000550  00000000  00000000  000169a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a1 c0       	rjmp	.+322    	; 0x144 <__ctors_end>
       2:	00 00       	nop
       4:	be c0       	rjmp	.+380    	; 0x182 <__bad_interrupt>
       6:	00 00       	nop
       8:	bc c0       	rjmp	.+376    	; 0x182 <__bad_interrupt>
       a:	00 00       	nop
       c:	ba c0       	rjmp	.+372    	; 0x182 <__bad_interrupt>
       e:	00 00       	nop
      10:	b8 c0       	rjmp	.+368    	; 0x182 <__bad_interrupt>
      12:	00 00       	nop
      14:	b6 c0       	rjmp	.+364    	; 0x182 <__bad_interrupt>
      16:	00 00       	nop
      18:	b4 c0       	rjmp	.+360    	; 0x182 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b2 c0       	rjmp	.+356    	; 0x182 <__bad_interrupt>
      1e:	00 00       	nop
      20:	b0 c0       	rjmp	.+352    	; 0x182 <__bad_interrupt>
      22:	00 00       	nop
      24:	ae c0       	rjmp	.+348    	; 0x182 <__bad_interrupt>
      26:	00 00       	nop
      28:	c0 c3       	rjmp	.+1920   	; 0x7aa <__vector_10>
      2a:	00 00       	nop
      2c:	8c c3       	rjmp	.+1816   	; 0x746 <__vector_11>
      2e:	00 00       	nop
      30:	94 c3       	rjmp	.+1832   	; 0x75a <__vector_12>
      32:	00 00       	nop
      34:	9c c3       	rjmp	.+1848   	; 0x76e <__vector_13>
      36:	00 00       	nop
      38:	ae c3       	rjmp	.+1884   	; 0x796 <__vector_14>
      3a:	00 00       	nop
      3c:	0c 94 d1 0f 	jmp	0x1fa2	; 0x1fa2 <__vector_15>
      40:	78 c3       	rjmp	.+1776   	; 0x732 <__vector_16>
      42:	00 00       	nop
      44:	9e c0       	rjmp	.+316    	; 0x182 <__bad_interrupt>
      46:	00 00       	nop
      48:	ec c3       	rjmp	.+2008   	; 0x822 <__vector_18>
      4a:	00 00       	nop
      4c:	20 c4       	rjmp	.+2112   	; 0x88e <__vector_19>
      4e:	00 00       	nop
      50:	98 c0       	rjmp	.+304    	; 0x182 <__bad_interrupt>
      52:	00 00       	nop
      54:	97 c0       	rjmp	.+302    	; 0x184 <__vector_21>
      56:	00 00       	nop
      58:	94 c0       	rjmp	.+296    	; 0x182 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	92 c0       	rjmp	.+292    	; 0x182 <__bad_interrupt>
      5e:	00 00       	nop
      60:	90 c3       	rjmp	.+1824   	; 0x782 <__vector_24>
      62:	00 00       	nop
      64:	ac c3       	rjmp	.+1880   	; 0x7be <__vector_25>
      66:	00 00       	nop
      68:	b4 c3       	rjmp	.+1896   	; 0x7d2 <__vector_26>
      6a:	00 00       	nop
      6c:	bc c3       	rjmp	.+1912   	; 0x7e6 <__vector_27>
      6e:	00 00       	nop
      70:	c4 c3       	rjmp	.+1928   	; 0x7fa <__vector_28>
      72:	00 00       	nop
      74:	cc c3       	rjmp	.+1944   	; 0x80e <__vector_29>
      76:	00 00       	nop
      78:	33 c4       	rjmp	.+2150   	; 0x8e0 <__vector_30>
      7a:	00 00       	nop
      7c:	6a c4       	rjmp	.+2260   	; 0x952 <__vector_31>
      7e:	00 00       	nop
      80:	80 c0       	rjmp	.+256    	; 0x182 <__bad_interrupt>
      82:	00 00       	nop
      84:	7e c0       	rjmp	.+252    	; 0x182 <__bad_interrupt>
      86:	00 00       	nop
      88:	7c c0       	rjmp	.+248    	; 0x182 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ba 02       	muls	r27, r26
      8e:	be 02       	muls	r27, r30
      90:	c2 02       	muls	r28, r18
      92:	c6 02       	muls	r28, r22
      94:	ca 02       	muls	r28, r26
      96:	d1 02       	muls	r29, r17
      98:	d8 02       	muls	r29, r24
      9a:	df 02       	muls	r29, r31
      9c:	e3 02       	muls	r30, r19
      9e:	ea 02       	muls	r30, r26
      a0:	f1 02       	muls	r31, r17
      a2:	f8 02       	muls	r31, r24
      a4:	fc 02       	muls	r31, r28
      a6:	03 03       	mulsu	r16, r19
      a8:	0a 03       	fmul	r16, r18
      aa:	26 03       	mulsu	r18, r22
      ac:	2a 03       	fmul	r18, r18
      ae:	2e 03       	fmul	r18, r22
      b0:	32 03       	mulsu	r19, r18
      b2:	38 03       	fmul	r19, r16
      b4:	3c 03       	fmul	r19, r20
      b6:	40 03       	mulsu	r20, r16
      b8:	44 03       	mulsu	r20, r20
      ba:	4d 03       	fmul	r20, r21
      bc:	51 03       	mulsu	r21, r17
      be:	55 03       	mulsu	r21, r21
      c0:	5e 03       	fmul	r21, r22
      c2:	07 63       	ori	r16, 0x37	; 55
      c4:	42 36       	cpi	r20, 0x62	; 98
      c6:	b7 9b       	sbis	0x16, 7	; 22
      c8:	d8 a7       	std	Y+40, r29	; 0x28
      ca:	1a 39       	cpi	r17, 0x9A	; 154
      cc:	68 56       	subi	r22, 0x68	; 104
      ce:	18 ae       	std	Y+56, r1	; 0x38
      d0:	ba ab       	std	Y+50, r27	; 0x32
      d2:	55 8c       	ldd	r5, Z+29	; 0x1d
      d4:	1d 3c       	cpi	r17, 0xCD	; 205
      d6:	b7 cc       	rjmp	.-1682   	; 0xfffffa46 <__eeprom_end+0xff7efa46>
      d8:	57 63       	ori	r21, 0x37	; 55
      da:	bd 6d       	ori	r27, 0xDD	; 221
      dc:	ed fd       	.word	0xfded	; ????
      de:	75 3e       	cpi	r23, 0xE5	; 229
      e0:	f6 17       	cp	r31, r22
      e2:	72 31       	cpi	r23, 0x12	; 18
      e4:	bf 00       	.word	0x00bf	; ????
      e6:	00 00       	nop
      e8:	80 3f       	cpi	r24, 0xF0	; 240
      ea:	08 00       	.word	0x0008	; ????
      ec:	00 00       	nop
      ee:	be 92       	st	-X, r11
      f0:	24 49       	sbci	r18, 0x94	; 148
      f2:	12 3e       	cpi	r17, 0xE2	; 226
      f4:	ab aa       	std	Y+51, r10	; 0x33
      f6:	aa 2a       	or	r10, r26
      f8:	be cd       	rjmp	.-1156   	; 0xfffffc76 <__eeprom_end+0xff7efc76>
      fa:	cc cc       	rjmp	.-1640   	; 0xfffffa94 <__eeprom_end+0xff7efa94>
      fc:	4c 3e       	cpi	r20, 0xEC	; 236
      fe:	00 00       	nop
     100:	00 80       	ld	r0, Z
     102:	be ab       	std	Y+54, r27	; 0x36
     104:	aa aa       	std	Y+50, r10	; 0x32
     106:	aa 3e       	cpi	r26, 0xEA	; 234
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	bf 00       	.word	0x00bf	; ????
     10e:	00 00       	nop
     110:	80 3f       	cpi	r24, 0xF0	; 240
     112:	00 00       	nop
     114:	00 00       	nop
     116:	00 08       	sbc	r0, r0
     118:	41 78       	andi	r20, 0x81	; 129
     11a:	d3 bb       	out	0x13, r29	; 19
     11c:	43 87       	std	Z+11, r20	; 0x0b
     11e:	d1 13       	cpse	r29, r17
     120:	3d 19       	sub	r19, r13
     122:	0e 3c       	cpi	r16, 0xCE	; 206
     124:	c3 bd       	out	0x23, r28	; 35
     126:	42 82       	std	Z+2, r4	; 0x02
     128:	ad 2b       	or	r26, r29
     12a:	3e 68       	ori	r19, 0x8E	; 142
     12c:	ec 82       	std	Y+4, r14	; 0x04
     12e:	76 be       	out	0x36, r7	; 54
     130:	d9 8f       	std	Y+25, r29	; 0x19
     132:	e1 a9       	ldd	r30, Z+49	; 0x31
     134:	3e 4c       	sbci	r19, 0xCE	; 206
     136:	80 ef       	ldi	r24, 0xF0	; 240
     138:	ff be       	out	0x3f, r15	; 63
     13a:	01 c4       	rjmp	.+2050   	; 0x93e <__vector_30+0x5e>
     13c:	ff 7f       	andi	r31, 0xFF	; 255
     13e:	3f 00       	.word	0x003f	; ????
     140:	00 00       	nop
	...

00000144 <__ctors_end>:
     144:	11 24       	eor	r1, r1
     146:	1f be       	out	0x3f, r1	; 63
     148:	cf ef       	ldi	r28, 0xFF	; 255
     14a:	d0 e1       	ldi	r29, 0x10	; 16
     14c:	de bf       	out	0x3e, r29	; 62
     14e:	cd bf       	out	0x3d, r28	; 61

00000150 <__do_copy_data>:
     150:	11 e0       	ldi	r17, 0x01	; 1
     152:	a0 e0       	ldi	r26, 0x00	; 0
     154:	b1 e0       	ldi	r27, 0x01	; 1
     156:	e8 e1       	ldi	r30, 0x18	; 24
     158:	f9 e2       	ldi	r31, 0x29	; 41
     15a:	00 e0       	ldi	r16, 0x00	; 0
     15c:	0b bf       	out	0x3b, r16	; 59
     15e:	02 c0       	rjmp	.+4      	; 0x164 <__do_copy_data+0x14>
     160:	07 90       	elpm	r0, Z+
     162:	0d 92       	st	X+, r0
     164:	a0 31       	cpi	r26, 0x10	; 16
     166:	b1 07       	cpc	r27, r17
     168:	d9 f7       	brne	.-10     	; 0x160 <__do_copy_data+0x10>

0000016a <__do_clear_bss>:
     16a:	23 e0       	ldi	r18, 0x03	; 3
     16c:	a0 e1       	ldi	r26, 0x10	; 16
     16e:	b1 e0       	ldi	r27, 0x01	; 1
     170:	01 c0       	rjmp	.+2      	; 0x174 <.do_clear_bss_start>

00000172 <.do_clear_bss_loop>:
     172:	1d 92       	st	X+, r1

00000174 <.do_clear_bss_start>:
     174:	a8 34       	cpi	r26, 0x48	; 72
     176:	b2 07       	cpc	r27, r18
     178:	e1 f7       	brne	.-8      	; 0x172 <.do_clear_bss_loop>
     17a:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <main>
     17e:	0c 94 8a 14 	jmp	0x2914	; 0x2914 <_exit>

00000182 <__bad_interrupt>:
     182:	3e cf       	rjmp	.-388    	; 0x0 <__vectors>

00000184 <__vector_21>:
ISR(ANALOG_INTERRUPT)
/*************************************************************************
Function: ANALOG interrupt
Purpose:  Read Analog Input
**************************************************************************/
{
     184:	1f 92       	push	r1
     186:	0f 92       	push	r0
     188:	0f b6       	in	r0, 0x3f	; 63
     18a:	0f 92       	push	r0
     18c:	11 24       	eor	r1, r1
     18e:	0b b6       	in	r0, 0x3b	; 59
     190:	0f 92       	push	r0
     192:	2f 93       	push	r18
     194:	3f 93       	push	r19
     196:	4f 93       	push	r20
     198:	5f 93       	push	r21
     19a:	8f 93       	push	r24
     19c:	9f 93       	push	r25
     19e:	ef 93       	push	r30
     1a0:	ff 93       	push	r31
	uint8_t Sreg;
	Sreg=STATUS_REGISTER;
     1a2:	2f b7       	in	r18, 0x3f	; 63
	STATUS_REGISTER&=~(1<<GLOBAL_INTERRUPT_ENABLE);
     1a4:	8f b7       	in	r24, 0x3f	; 63
     1a6:	8f 77       	andi	r24, 0x7F	; 127
     1a8:	8f bf       	out	0x3f, r24	; 63
	adc_tmp=ADCL;
     1aa:	84 b1       	in	r24, 0x04	; 4
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <adc_tmp+0x1>
     1b2:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <adc_tmp>
	adc_tmp|=(ADCH<<8);
     1b6:	35 b1       	in	r19, 0x05	; 5
     1b8:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <adc_tmp>
     1bc:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <adc_tmp+0x1>
     1c0:	93 2b       	or	r25, r19
     1c2:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <adc_tmp+0x1>
     1c6:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <adc_tmp>
	if(adc_n_sample < (1<<ADC_NUMBER_SAMPLE)){
     1ca:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
     1ce:	84 30       	cpi	r24, 0x04	; 4
     1d0:	a0 f4       	brcc	.+40     	; 0x1fa <__vector_21+0x76>
		adc_n_sample++;
     1d2:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
     1d6:	8f 5f       	subi	r24, 0xFF	; 255
     1d8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
		adc_sample+=adc_tmp;
     1dc:	40 91 11 01 	lds	r20, 0x0111	; 0x800111 <adc_tmp>
     1e0:	50 91 12 01 	lds	r21, 0x0112	; 0x800112 <adc_tmp+0x1>
     1e4:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <adc_sample>
     1e8:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <adc_sample+0x1>
     1ec:	84 0f       	add	r24, r20
     1ee:	95 1f       	adc	r25, r21
     1f0:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <adc_sample+0x1>
     1f4:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <adc_sample>
     1f8:	43 c0       	rjmp	.+134    	; 0x280 <__vector_21+0xfc>
	}else{
		ADC_VALUE[ADC_SELECTOR]=adc_sample>>ADC_NUMBER_SAMPLE;
     1fa:	e0 91 15 01 	lds	r30, 0x0115	; 0x800115 <ADC_SELECTOR>
     1fe:	f0 91 16 01 	lds	r31, 0x0116	; 0x800116 <ADC_SELECTOR+0x1>
     202:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <adc_sample>
     206:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <adc_sample+0x1>
     20a:	95 95       	asr	r25
     20c:	87 95       	ror	r24
     20e:	95 95       	asr	r25
     210:	87 95       	ror	r24
     212:	ee 0f       	add	r30, r30
     214:	ff 1f       	adc	r31, r31
     216:	e7 5d       	subi	r30, 0xD7	; 215
     218:	fe 4f       	sbci	r31, 0xFE	; 254
     21a:	91 83       	std	Z+1, r25	; 0x01
     21c:	80 83       	st	Z, r24
		adc_n_sample=adc_sample=0;
     21e:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <adc_sample+0x1>
     222:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <adc_sample>
     226:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
		/******/
		if(ADC_SELECTOR < ADC_N_CHANNEL)
     22a:	40 91 15 01 	lds	r20, 0x0115	; 0x800115 <ADC_SELECTOR>
     22e:	50 91 16 01 	lds	r21, 0x0116	; 0x800116 <ADC_SELECTOR+0x1>
     232:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <ADC_N_CHANNEL>
     236:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <ADC_N_CHANNEL+0x1>
     23a:	48 17       	cp	r20, r24
     23c:	59 07       	cpc	r21, r25
     23e:	54 f4       	brge	.+20     	; 0x254 <__vector_21+0xd0>
			ADC_SELECTOR++;
     240:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <ADC_SELECTOR>
     244:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <ADC_SELECTOR+0x1>
     248:	01 96       	adiw	r24, 0x01	; 1
     24a:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <ADC_SELECTOR+0x1>
     24e:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <ADC_SELECTOR>
     252:	04 c0       	rjmp	.+8      	; 0x25c <__vector_21+0xd8>
		else
			ADC_SELECTOR=0;
     254:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <ADC_SELECTOR+0x1>
     258:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <ADC_SELECTOR>
		ADC_SELECT &= ~MUX_MASK;
     25c:	87 b1       	in	r24, 0x07	; 7
     25e:	80 7e       	andi	r24, 0xE0	; 224
     260:	87 b9       	out	0x07, r24	; 7
		ADC_SELECT |= (ADC_CHANNEL_GAIN[ADC_SELECTOR] & MUX_MASK);
     262:	e0 91 15 01 	lds	r30, 0x0115	; 0x800115 <ADC_SELECTOR>
     266:	f0 91 16 01 	lds	r31, 0x0116	; 0x800116 <ADC_SELECTOR+0x1>
     26a:	ee 0f       	add	r30, r30
     26c:	ff 1f       	adc	r31, r31
     26e:	e7 5e       	subi	r30, 0xE7	; 231
     270:	fe 4f       	sbci	r31, 0xFE	; 254
     272:	80 81       	ld	r24, Z
     274:	91 81       	ldd	r25, Z+1	; 0x01
     276:	37 b1       	in	r19, 0x07	; 7
     278:	8f 71       	andi	r24, 0x1F	; 31
     27a:	99 27       	eor	r25, r25
     27c:	83 2b       	or	r24, r19
     27e:	87 b9       	out	0x07, r24	; 7
	}
	STATUS_REGISTER=Sreg;
     280:	2f bf       	out	0x3f, r18	; 63
}
     282:	ff 91       	pop	r31
     284:	ef 91       	pop	r30
     286:	9f 91       	pop	r25
     288:	8f 91       	pop	r24
     28a:	5f 91       	pop	r21
     28c:	4f 91       	pop	r20
     28e:	3f 91       	pop	r19
     290:	2f 91       	pop	r18
     292:	0f 90       	pop	r0
     294:	0b be       	out	0x3b, r0	; 59
     296:	0f 90       	pop	r0
     298:	0f be       	out	0x3f, r0	; 63
     29a:	0f 90       	pop	r0
     29c:	1f 90       	pop	r1
     29e:	18 95       	reti

000002a0 <TIMER_COUNTER0_start>:
	timer3.compareB=TIMER_COUNTER3_compareB;
	timer3.compareC=TIMER_COUNTER3_compareC;
	timer3.start=TIMER_COUNTER3_start;
	timer3.stop=TIMER_COUNTER3_stop;
	return timer3;
}
     2a0:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <timer0_state>
     2a4:	21 11       	cpse	r18, r1
     2a6:	41 c0       	rjmp	.+130    	; 0x32a <TIMER_COUNTER0_start+0x8a>
     2a8:	23 b7       	in	r18, 0x33	; 51
     2aa:	28 7f       	andi	r18, 0xF8	; 248
     2ac:	23 bf       	out	0x33, r18	; 51
     2ae:	80 34       	cpi	r24, 0x40	; 64
     2b0:	91 05       	cpc	r25, r1
     2b2:	11 f1       	breq	.+68     	; 0x2f8 <TIMER_COUNTER0_start+0x58>
     2b4:	48 f4       	brcc	.+18     	; 0x2c8 <TIMER_COUNTER0_start+0x28>
     2b6:	88 30       	cpi	r24, 0x08	; 8
     2b8:	91 05       	cpc	r25, r1
     2ba:	b1 f0       	breq	.+44     	; 0x2e8 <TIMER_COUNTER0_start+0x48>
     2bc:	80 32       	cpi	r24, 0x20	; 32
     2be:	91 05       	cpc	r25, r1
     2c0:	b9 f0       	breq	.+46     	; 0x2f0 <TIMER_COUNTER0_start+0x50>
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	49 f5       	brne	.+82     	; 0x318 <TIMER_COUNTER0_start+0x78>
     2c6:	0c c0       	rjmp	.+24     	; 0x2e0 <TIMER_COUNTER0_start+0x40>
     2c8:	81 15       	cp	r24, r1
     2ca:	21 e0       	ldi	r18, 0x01	; 1
     2cc:	92 07       	cpc	r25, r18
     2ce:	e1 f0       	breq	.+56     	; 0x308 <TIMER_COUNTER0_start+0x68>
     2d0:	81 15       	cp	r24, r1
     2d2:	24 e0       	ldi	r18, 0x04	; 4
     2d4:	92 07       	cpc	r25, r18
     2d6:	e1 f0       	breq	.+56     	; 0x310 <TIMER_COUNTER0_start+0x70>
     2d8:	80 38       	cpi	r24, 0x80	; 128
     2da:	91 05       	cpc	r25, r1
     2dc:	e9 f4       	brne	.+58     	; 0x318 <TIMER_COUNTER0_start+0x78>
     2de:	10 c0       	rjmp	.+32     	; 0x300 <TIMER_COUNTER0_start+0x60>
     2e0:	83 b7       	in	r24, 0x33	; 51
     2e2:	81 60       	ori	r24, 0x01	; 1
     2e4:	83 bf       	out	0x33, r24	; 51
     2e6:	1b c0       	rjmp	.+54     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2e8:	83 b7       	in	r24, 0x33	; 51
     2ea:	82 60       	ori	r24, 0x02	; 2
     2ec:	83 bf       	out	0x33, r24	; 51
     2ee:	17 c0       	rjmp	.+46     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2f0:	83 b7       	in	r24, 0x33	; 51
     2f2:	83 60       	ori	r24, 0x03	; 3
     2f4:	83 bf       	out	0x33, r24	; 51
     2f6:	13 c0       	rjmp	.+38     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2f8:	83 b7       	in	r24, 0x33	; 51
     2fa:	84 60       	ori	r24, 0x04	; 4
     2fc:	83 bf       	out	0x33, r24	; 51
     2fe:	0f c0       	rjmp	.+30     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     300:	83 b7       	in	r24, 0x33	; 51
     302:	85 60       	ori	r24, 0x05	; 5
     304:	83 bf       	out	0x33, r24	; 51
     306:	0b c0       	rjmp	.+22     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     308:	83 b7       	in	r24, 0x33	; 51
     30a:	86 60       	ori	r24, 0x06	; 6
     30c:	83 bf       	out	0x33, r24	; 51
     30e:	07 c0       	rjmp	.+14     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     310:	83 b7       	in	r24, 0x33	; 51
     312:	87 60       	ori	r24, 0x07	; 7
     314:	83 bf       	out	0x33, r24	; 51
     316:	03 c0       	rjmp	.+6      	; 0x31e <TIMER_COUNTER0_start+0x7e>
     318:	83 b7       	in	r24, 0x33	; 51
     31a:	87 60       	ori	r24, 0x07	; 7
     31c:	83 bf       	out	0x33, r24	; 51
     31e:	8f b7       	in	r24, 0x3f	; 63
     320:	80 68       	ori	r24, 0x80	; 128
     322:	8f bf       	out	0x3f, r24	; 63
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timer0_state>
     32a:	08 95       	ret

0000032c <TIMER_COUNTER0_compoutmode>:
     32c:	93 b7       	in	r25, 0x33	; 51
     32e:	9f 7c       	andi	r25, 0xCF	; 207
     330:	93 bf       	out	0x33, r25	; 51
     332:	82 30       	cpi	r24, 0x02	; 2
     334:	51 f0       	breq	.+20     	; 0x34a <TIMER_COUNTER0_compoutmode+0x1e>
     336:	83 30       	cpi	r24, 0x03	; 3
     338:	71 f0       	breq	.+28     	; 0x356 <TIMER_COUNTER0_compoutmode+0x2a>
     33a:	81 30       	cpi	r24, 0x01	; 1
     33c:	89 f4       	brne	.+34     	; 0x360 <TIMER_COUNTER0_compoutmode+0x34>
     33e:	80 e1       	ldi	r24, 0x10	; 16
     340:	87 bb       	out	0x17, r24	; 23
     342:	83 b7       	in	r24, 0x33	; 51
     344:	80 61       	ori	r24, 0x10	; 16
     346:	83 bf       	out	0x33, r24	; 51
     348:	08 95       	ret
     34a:	80 e1       	ldi	r24, 0x10	; 16
     34c:	87 bb       	out	0x17, r24	; 23
     34e:	83 b7       	in	r24, 0x33	; 51
     350:	80 62       	ori	r24, 0x20	; 32
     352:	83 bf       	out	0x33, r24	; 51
     354:	08 95       	ret
     356:	80 e1       	ldi	r24, 0x10	; 16
     358:	87 bb       	out	0x17, r24	; 23
     35a:	83 b7       	in	r24, 0x33	; 51
     35c:	80 63       	ori	r24, 0x30	; 48
     35e:	83 bf       	out	0x33, r24	; 51
     360:	08 95       	ret

00000362 <TIMER_COUNTER0_compare>:
     362:	81 bf       	out	0x31, r24	; 49
     364:	08 95       	ret

00000366 <TIMER_COUNTER0_stop>:
     366:	83 b7       	in	r24, 0x33	; 51
     368:	88 7f       	andi	r24, 0xF8	; 248
     36a:	83 bf       	out	0x33, r24	; 51
     36c:	12 be       	out	0x32, r1	; 50
     36e:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <timer0_state>
     372:	08 95       	ret

00000374 <TIMER_COUNTER1_start>:
     374:	20 91 39 01 	lds	r18, 0x0139	; 0x800139 <timer1_state>
     378:	21 11       	cpse	r18, r1
     37a:	41 c0       	rjmp	.+130    	; 0x3fe <TIMER_COUNTER1_start+0x8a>
     37c:	2e b5       	in	r18, 0x2e	; 46
     37e:	28 7f       	andi	r18, 0xF8	; 248
     380:	2e bd       	out	0x2e, r18	; 46
     382:	88 30       	cpi	r24, 0x08	; 8
     384:	91 05       	cpc	r25, r1
     386:	d1 f0       	breq	.+52     	; 0x3bc <TIMER_COUNTER1_start+0x48>
     388:	48 f4       	brcc	.+18     	; 0x39c <TIMER_COUNTER1_start+0x28>
     38a:	83 30       	cpi	r24, 0x03	; 3
     38c:	91 05       	cpc	r25, r1
     38e:	31 f1       	breq	.+76     	; 0x3dc <TIMER_COUNTER1_start+0x68>
     390:	85 30       	cpi	r24, 0x05	; 5
     392:	91 05       	cpc	r25, r1
     394:	39 f1       	breq	.+78     	; 0x3e4 <TIMER_COUNTER1_start+0x70>
     396:	01 97       	sbiw	r24, 0x01	; 1
     398:	49 f5       	brne	.+82     	; 0x3ec <TIMER_COUNTER1_start+0x78>
     39a:	0c c0       	rjmp	.+24     	; 0x3b4 <TIMER_COUNTER1_start+0x40>
     39c:	81 15       	cp	r24, r1
     39e:	21 e0       	ldi	r18, 0x01	; 1
     3a0:	92 07       	cpc	r25, r18
     3a2:	a1 f0       	breq	.+40     	; 0x3cc <TIMER_COUNTER1_start+0x58>
     3a4:	81 15       	cp	r24, r1
     3a6:	24 e0       	ldi	r18, 0x04	; 4
     3a8:	92 07       	cpc	r25, r18
     3aa:	a1 f0       	breq	.+40     	; 0x3d4 <TIMER_COUNTER1_start+0x60>
     3ac:	80 34       	cpi	r24, 0x40	; 64
     3ae:	91 05       	cpc	r25, r1
     3b0:	e9 f4       	brne	.+58     	; 0x3ec <TIMER_COUNTER1_start+0x78>
     3b2:	08 c0       	rjmp	.+16     	; 0x3c4 <TIMER_COUNTER1_start+0x50>
     3b4:	8e b5       	in	r24, 0x2e	; 46
     3b6:	81 60       	ori	r24, 0x01	; 1
     3b8:	8e bd       	out	0x2e, r24	; 46
     3ba:	1b c0       	rjmp	.+54     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3bc:	8e b5       	in	r24, 0x2e	; 46
     3be:	82 60       	ori	r24, 0x02	; 2
     3c0:	8e bd       	out	0x2e, r24	; 46
     3c2:	17 c0       	rjmp	.+46     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3c4:	8e b5       	in	r24, 0x2e	; 46
     3c6:	83 60       	ori	r24, 0x03	; 3
     3c8:	8e bd       	out	0x2e, r24	; 46
     3ca:	13 c0       	rjmp	.+38     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3cc:	8e b5       	in	r24, 0x2e	; 46
     3ce:	84 60       	ori	r24, 0x04	; 4
     3d0:	8e bd       	out	0x2e, r24	; 46
     3d2:	0f c0       	rjmp	.+30     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3d4:	8e b5       	in	r24, 0x2e	; 46
     3d6:	85 60       	ori	r24, 0x05	; 5
     3d8:	8e bd       	out	0x2e, r24	; 46
     3da:	0b c0       	rjmp	.+22     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3dc:	8e b5       	in	r24, 0x2e	; 46
     3de:	86 60       	ori	r24, 0x06	; 6
     3e0:	8e bd       	out	0x2e, r24	; 46
     3e2:	07 c0       	rjmp	.+14     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3e4:	8e b5       	in	r24, 0x2e	; 46
     3e6:	87 60       	ori	r24, 0x07	; 7
     3e8:	8e bd       	out	0x2e, r24	; 46
     3ea:	03 c0       	rjmp	.+6      	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3ec:	8e b5       	in	r24, 0x2e	; 46
     3ee:	85 60       	ori	r24, 0x05	; 5
     3f0:	8e bd       	out	0x2e, r24	; 46
     3f2:	8f b7       	in	r24, 0x3f	; 63
     3f4:	80 68       	ori	r24, 0x80	; 128
     3f6:	8f bf       	out	0x3f, r24	; 63
     3f8:	81 e0       	ldi	r24, 0x01	; 1
     3fa:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <timer1_state>
     3fe:	08 95       	ret

00000400 <TIMER_COUNTER1_compoutmodeA>:
     400:	9f b5       	in	r25, 0x2f	; 47
     402:	9f 73       	andi	r25, 0x3F	; 63
     404:	9f bd       	out	0x2f, r25	; 47
     406:	82 30       	cpi	r24, 0x02	; 2
     408:	49 f0       	breq	.+18     	; 0x41c <TIMER_COUNTER1_compoutmodeA+0x1c>
     40a:	83 30       	cpi	r24, 0x03	; 3
     40c:	61 f0       	breq	.+24     	; 0x426 <TIMER_COUNTER1_compoutmodeA+0x26>
     40e:	81 30       	cpi	r24, 0x01	; 1
     410:	71 f4       	brne	.+28     	; 0x42e <TIMER_COUNTER1_compoutmodeA+0x2e>
     412:	bd 9a       	sbi	0x17, 5	; 23
     414:	8f b5       	in	r24, 0x2f	; 47
     416:	80 64       	ori	r24, 0x40	; 64
     418:	8f bd       	out	0x2f, r24	; 47
     41a:	08 95       	ret
     41c:	bd 9a       	sbi	0x17, 5	; 23
     41e:	8f b5       	in	r24, 0x2f	; 47
     420:	80 68       	ori	r24, 0x80	; 128
     422:	8f bd       	out	0x2f, r24	; 47
     424:	08 95       	ret
     426:	bd 9a       	sbi	0x17, 5	; 23
     428:	8f b5       	in	r24, 0x2f	; 47
     42a:	80 6c       	ori	r24, 0xC0	; 192
     42c:	8f bd       	out	0x2f, r24	; 47
     42e:	08 95       	ret

00000430 <TIMER_COUNTER1_compoutmodeB>:
     430:	9f b5       	in	r25, 0x2f	; 47
     432:	9f 7c       	andi	r25, 0xCF	; 207
     434:	9f bd       	out	0x2f, r25	; 47
     436:	82 30       	cpi	r24, 0x02	; 2
     438:	49 f0       	breq	.+18     	; 0x44c <TIMER_COUNTER1_compoutmodeB+0x1c>
     43a:	83 30       	cpi	r24, 0x03	; 3
     43c:	61 f0       	breq	.+24     	; 0x456 <TIMER_COUNTER1_compoutmodeB+0x26>
     43e:	81 30       	cpi	r24, 0x01	; 1
     440:	71 f4       	brne	.+28     	; 0x45e <TIMER_COUNTER1_compoutmodeB+0x2e>
     442:	be 9a       	sbi	0x17, 6	; 23
     444:	8f b5       	in	r24, 0x2f	; 47
     446:	80 61       	ori	r24, 0x10	; 16
     448:	8f bd       	out	0x2f, r24	; 47
     44a:	08 95       	ret
     44c:	be 9a       	sbi	0x17, 6	; 23
     44e:	8f b5       	in	r24, 0x2f	; 47
     450:	80 62       	ori	r24, 0x20	; 32
     452:	8f bd       	out	0x2f, r24	; 47
     454:	08 95       	ret
     456:	be 9a       	sbi	0x17, 6	; 23
     458:	8f b5       	in	r24, 0x2f	; 47
     45a:	80 63       	ori	r24, 0x30	; 48
     45c:	8f bd       	out	0x2f, r24	; 47
     45e:	08 95       	ret

00000460 <TIMER_COUNTER1_compoutmodeC>:
     460:	9f b5       	in	r25, 0x2f	; 47
     462:	93 7f       	andi	r25, 0xF3	; 243
     464:	9f bd       	out	0x2f, r25	; 47
     466:	82 30       	cpi	r24, 0x02	; 2
     468:	49 f0       	breq	.+18     	; 0x47c <TIMER_COUNTER1_compoutmodeC+0x1c>
     46a:	83 30       	cpi	r24, 0x03	; 3
     46c:	61 f0       	breq	.+24     	; 0x486 <TIMER_COUNTER1_compoutmodeC+0x26>
     46e:	81 30       	cpi	r24, 0x01	; 1
     470:	71 f4       	brne	.+28     	; 0x48e <TIMER_COUNTER1_compoutmodeC+0x2e>
     472:	bf 9a       	sbi	0x17, 7	; 23
     474:	8f b5       	in	r24, 0x2f	; 47
     476:	84 60       	ori	r24, 0x04	; 4
     478:	8f bd       	out	0x2f, r24	; 47
     47a:	08 95       	ret
     47c:	bf 9a       	sbi	0x17, 7	; 23
     47e:	8f b5       	in	r24, 0x2f	; 47
     480:	88 60       	ori	r24, 0x08	; 8
     482:	8f bd       	out	0x2f, r24	; 47
     484:	08 95       	ret
     486:	bf 9a       	sbi	0x17, 7	; 23
     488:	8f b5       	in	r24, 0x2f	; 47
     48a:	8c 60       	ori	r24, 0x0C	; 12
     48c:	8f bd       	out	0x2f, r24	; 47
     48e:	08 95       	ret

00000490 <TIMER_COUNTER1_compareA>:
     490:	9b bd       	out	0x2b, r25	; 43
     492:	8a bd       	out	0x2a, r24	; 42
     494:	08 95       	ret

00000496 <TIMER_COUNTER1_compareB>:
     496:	99 bd       	out	0x29, r25	; 41
     498:	88 bd       	out	0x28, r24	; 40
     49a:	08 95       	ret

0000049c <TIMER_COUNTER1_compareC>:
     49c:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     4a0:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     4a4:	08 95       	ret

000004a6 <TIMER_COUNTER1_stop>:
     4a6:	8e b5       	in	r24, 0x2e	; 46
     4a8:	88 7f       	andi	r24, 0xF8	; 248
     4aa:	8e bd       	out	0x2e, r24	; 46
     4ac:	1d bc       	out	0x2d, r1	; 45
     4ae:	1c bc       	out	0x2c, r1	; 44
     4b0:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <timer1_state>
     4b4:	08 95       	ret

000004b6 <TIMER_COUNTER0enable>:
     4b6:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <timer0_state>
     4ba:	2f ef       	ldi	r18, 0xFF	; 255
     4bc:	21 bf       	out	0x31, r18	; 49
     4be:	23 b7       	in	r18, 0x33	; 51
     4c0:	27 7b       	andi	r18, 0xB7	; 183
     4c2:	23 bf       	out	0x33, r18	; 51
     4c4:	62 30       	cpi	r22, 0x02	; 2
     4c6:	41 f0       	breq	.+16     	; 0x4d8 <TIMER_COUNTER0enable+0x22>
     4c8:	63 30       	cpi	r22, 0x03	; 3
     4ca:	51 f0       	breq	.+20     	; 0x4e0 <TIMER_COUNTER0enable+0x2a>
     4cc:	61 30       	cpi	r22, 0x01	; 1
     4ce:	59 f4       	brne	.+22     	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4d0:	23 b7       	in	r18, 0x33	; 51
     4d2:	20 64       	ori	r18, 0x40	; 64
     4d4:	23 bf       	out	0x33, r18	; 51
     4d6:	07 c0       	rjmp	.+14     	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4d8:	23 b7       	in	r18, 0x33	; 51
     4da:	28 60       	ori	r18, 0x08	; 8
     4dc:	23 bf       	out	0x33, r18	; 51
     4de:	03 c0       	rjmp	.+6      	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4e0:	23 b7       	in	r18, 0x33	; 51
     4e2:	28 64       	ori	r18, 0x48	; 72
     4e4:	23 bf       	out	0x33, r18	; 51
     4e6:	27 b7       	in	r18, 0x37	; 55
     4e8:	2e 7f       	andi	r18, 0xFE	; 254
     4ea:	27 bf       	out	0x37, r18	; 55
     4ec:	27 b7       	in	r18, 0x37	; 55
     4ee:	2d 7f       	andi	r18, 0xFD	; 253
     4f0:	27 bf       	out	0x37, r18	; 55
     4f2:	42 30       	cpi	r20, 0x02	; 2
     4f4:	41 f0       	breq	.+16     	; 0x506 <TIMER_COUNTER0enable+0x50>
     4f6:	43 30       	cpi	r20, 0x03	; 3
     4f8:	51 f0       	breq	.+20     	; 0x50e <TIMER_COUNTER0enable+0x58>
     4fa:	41 30       	cpi	r20, 0x01	; 1
     4fc:	71 f4       	brne	.+28     	; 0x51a <TIMER_COUNTER0enable+0x64>
     4fe:	27 b7       	in	r18, 0x37	; 55
     500:	21 60       	ori	r18, 0x01	; 1
     502:	27 bf       	out	0x37, r18	; 55
     504:	0a c0       	rjmp	.+20     	; 0x51a <TIMER_COUNTER0enable+0x64>
     506:	27 b7       	in	r18, 0x37	; 55
     508:	22 60       	ori	r18, 0x02	; 2
     50a:	27 bf       	out	0x37, r18	; 55
     50c:	06 c0       	rjmp	.+12     	; 0x51a <TIMER_COUNTER0enable+0x64>
     50e:	27 b7       	in	r18, 0x37	; 55
     510:	21 60       	ori	r18, 0x01	; 1
     512:	27 bf       	out	0x37, r18	; 55
     514:	27 b7       	in	r18, 0x37	; 55
     516:	22 60       	ori	r18, 0x02	; 2
     518:	27 bf       	out	0x37, r18	; 55
     51a:	26 e9       	ldi	r18, 0x96	; 150
     51c:	31 e0       	ldi	r19, 0x01	; 1
     51e:	fc 01       	movw	r30, r24
     520:	31 83       	std	Z+1, r19	; 0x01
     522:	20 83       	st	Z, r18
     524:	21 eb       	ldi	r18, 0xB1	; 177
     526:	31 e0       	ldi	r19, 0x01	; 1
     528:	37 83       	std	Z+7, r19	; 0x07
     52a:	26 83       	std	Z+6, r18	; 0x06
     52c:	20 e5       	ldi	r18, 0x50	; 80
     52e:	31 e0       	ldi	r19, 0x01	; 1
     530:	35 87       	std	Z+13, r19	; 0x0d
     532:	24 87       	std	Z+12, r18	; 0x0c
     534:	23 eb       	ldi	r18, 0xB3	; 179
     536:	31 e0       	ldi	r19, 0x01	; 1
     538:	37 87       	std	Z+15, r19	; 0x0f
     53a:	26 87       	std	Z+14, r18	; 0x0e
     53c:	08 95       	ret

0000053e <TIMER_COUNTER1enable>:
     53e:	0f 93       	push	r16
     540:	1f 93       	push	r17
     542:	dc 01       	movw	r26, r24
     544:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <timer1_state>
     548:	8f ef       	ldi	r24, 0xFF	; 255
     54a:	9f ef       	ldi	r25, 0xFF	; 255
     54c:	9b bd       	out	0x2b, r25	; 43
     54e:	8a bd       	out	0x2a, r24	; 42
     550:	8f b5       	in	r24, 0x2f	; 47
     552:	8c 7f       	andi	r24, 0xFC	; 252
     554:	8f bd       	out	0x2f, r24	; 47
     556:	8e b5       	in	r24, 0x2e	; 46
     558:	87 7e       	andi	r24, 0xE7	; 231
     55a:	8e bd       	out	0x2e, r24	; 46
     55c:	06 2f       	mov	r16, r22
     55e:	10 e0       	ldi	r17, 0x00	; 0
     560:	f8 01       	movw	r30, r16
     562:	31 97       	sbiw	r30, 0x01	; 1
     564:	ef 30       	cpi	r30, 0x0F	; 15
     566:	f1 05       	cpc	r31, r1
     568:	08 f0       	brcs	.+2      	; 0x56c <TIMER_COUNTER1enable+0x2e>
     56a:	5a c0       	rjmp	.+180    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     56c:	ea 5b       	subi	r30, 0xBA	; 186
     56e:	ff 4f       	sbci	r31, 0xFF	; 255
     570:	0c 94 01 14 	jmp	0x2802	; 0x2802 <__tablejump2__>
     574:	8f b5       	in	r24, 0x2f	; 47
     576:	81 60       	ori	r24, 0x01	; 1
     578:	8f bd       	out	0x2f, r24	; 47
     57a:	52 c0       	rjmp	.+164    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     57c:	8f b5       	in	r24, 0x2f	; 47
     57e:	82 60       	ori	r24, 0x02	; 2
     580:	8f bd       	out	0x2f, r24	; 47
     582:	4e c0       	rjmp	.+156    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     584:	8f b5       	in	r24, 0x2f	; 47
     586:	83 60       	ori	r24, 0x03	; 3
     588:	8f bd       	out	0x2f, r24	; 47
     58a:	4a c0       	rjmp	.+148    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     58c:	8e b5       	in	r24, 0x2e	; 46
     58e:	88 60       	ori	r24, 0x08	; 8
     590:	8e bd       	out	0x2e, r24	; 46
     592:	46 c0       	rjmp	.+140    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     594:	8f b5       	in	r24, 0x2f	; 47
     596:	81 60       	ori	r24, 0x01	; 1
     598:	8f bd       	out	0x2f, r24	; 47
     59a:	8e b5       	in	r24, 0x2e	; 46
     59c:	88 60       	ori	r24, 0x08	; 8
     59e:	8e bd       	out	0x2e, r24	; 46
     5a0:	3f c0       	rjmp	.+126    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5a2:	8f b5       	in	r24, 0x2f	; 47
     5a4:	82 60       	ori	r24, 0x02	; 2
     5a6:	8f bd       	out	0x2f, r24	; 47
     5a8:	8e b5       	in	r24, 0x2e	; 46
     5aa:	88 60       	ori	r24, 0x08	; 8
     5ac:	8e bd       	out	0x2e, r24	; 46
     5ae:	38 c0       	rjmp	.+112    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5b0:	8f b5       	in	r24, 0x2f	; 47
     5b2:	83 60       	ori	r24, 0x03	; 3
     5b4:	8f bd       	out	0x2f, r24	; 47
     5b6:	8e b5       	in	r24, 0x2e	; 46
     5b8:	88 60       	ori	r24, 0x08	; 8
     5ba:	8e bd       	out	0x2e, r24	; 46
     5bc:	31 c0       	rjmp	.+98     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5be:	8e b5       	in	r24, 0x2e	; 46
     5c0:	80 61       	ori	r24, 0x10	; 16
     5c2:	8e bd       	out	0x2e, r24	; 46
     5c4:	2d c0       	rjmp	.+90     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5c6:	8f b5       	in	r24, 0x2f	; 47
     5c8:	81 60       	ori	r24, 0x01	; 1
     5ca:	8f bd       	out	0x2f, r24	; 47
     5cc:	8e b5       	in	r24, 0x2e	; 46
     5ce:	80 61       	ori	r24, 0x10	; 16
     5d0:	8e bd       	out	0x2e, r24	; 46
     5d2:	26 c0       	rjmp	.+76     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5d4:	8f b5       	in	r24, 0x2f	; 47
     5d6:	82 60       	ori	r24, 0x02	; 2
     5d8:	8f bd       	out	0x2f, r24	; 47
     5da:	8e b5       	in	r24, 0x2e	; 46
     5dc:	80 61       	ori	r24, 0x10	; 16
     5de:	8e bd       	out	0x2e, r24	; 46
     5e0:	1f c0       	rjmp	.+62     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5e2:	8f b5       	in	r24, 0x2f	; 47
     5e4:	83 60       	ori	r24, 0x03	; 3
     5e6:	8f bd       	out	0x2f, r24	; 47
     5e8:	8e b5       	in	r24, 0x2e	; 46
     5ea:	80 61       	ori	r24, 0x10	; 16
     5ec:	8e bd       	out	0x2e, r24	; 46
     5ee:	18 c0       	rjmp	.+48     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5f0:	8e b5       	in	r24, 0x2e	; 46
     5f2:	88 61       	ori	r24, 0x18	; 24
     5f4:	8e bd       	out	0x2e, r24	; 46
     5f6:	14 c0       	rjmp	.+40     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5f8:	8f b5       	in	r24, 0x2f	; 47
     5fa:	81 60       	ori	r24, 0x01	; 1
     5fc:	8f bd       	out	0x2f, r24	; 47
     5fe:	8e b5       	in	r24, 0x2e	; 46
     600:	88 61       	ori	r24, 0x18	; 24
     602:	8e bd       	out	0x2e, r24	; 46
     604:	0d c0       	rjmp	.+26     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     606:	8f b5       	in	r24, 0x2f	; 47
     608:	82 60       	ori	r24, 0x02	; 2
     60a:	8f bd       	out	0x2f, r24	; 47
     60c:	8e b5       	in	r24, 0x2e	; 46
     60e:	88 61       	ori	r24, 0x18	; 24
     610:	8e bd       	out	0x2e, r24	; 46
     612:	06 c0       	rjmp	.+12     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     614:	8f b5       	in	r24, 0x2f	; 47
     616:	83 60       	ori	r24, 0x03	; 3
     618:	8f bd       	out	0x2f, r24	; 47
     61a:	8e b5       	in	r24, 0x2e	; 46
     61c:	88 61       	ori	r24, 0x18	; 24
     61e:	8e bd       	out	0x2e, r24	; 46
     620:	8f b5       	in	r24, 0x2f	; 47
     622:	83 70       	andi	r24, 0x03	; 3
     624:	8f bd       	out	0x2f, r24	; 47
     626:	87 b7       	in	r24, 0x37	; 55
     628:	83 7c       	andi	r24, 0xC3	; 195
     62a:	87 bf       	out	0x37, r24	; 55
     62c:	ed e7       	ldi	r30, 0x7D	; 125
     62e:	f0 e0       	ldi	r31, 0x00	; 0
     630:	80 81       	ld	r24, Z
     632:	8e 7f       	andi	r24, 0xFE	; 254
     634:	80 83       	st	Z, r24
     636:	50 e0       	ldi	r21, 0x00	; 0
     638:	fa 01       	movw	r30, r20
     63a:	31 97       	sbiw	r30, 0x01	; 1
     63c:	ec 30       	cpi	r30, 0x0C	; 12
     63e:	f1 05       	cpc	r31, r1
     640:	08 f0       	brcs	.+2      	; 0x644 <TIMER_COUNTER1enable+0x106>
     642:	44 c0       	rjmp	.+136    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     644:	eb 5a       	subi	r30, 0xAB	; 171
     646:	ff 4f       	sbci	r31, 0xFF	; 255
     648:	0c 94 01 14 	jmp	0x2802	; 0x2802 <__tablejump2__>
     64c:	87 b7       	in	r24, 0x37	; 55
     64e:	84 60       	ori	r24, 0x04	; 4
     650:	87 bf       	out	0x37, r24	; 55
     652:	3c c0       	rjmp	.+120    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     654:	87 b7       	in	r24, 0x37	; 55
     656:	80 61       	ori	r24, 0x10	; 16
     658:	87 bf       	out	0x37, r24	; 55
     65a:	38 c0       	rjmp	.+112    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     65c:	87 b7       	in	r24, 0x37	; 55
     65e:	88 60       	ori	r24, 0x08	; 8
     660:	87 bf       	out	0x37, r24	; 55
     662:	34 c0       	rjmp	.+104    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     664:	ed e7       	ldi	r30, 0x7D	; 125
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	81 60       	ori	r24, 0x01	; 1
     66c:	80 83       	st	Z, r24
     66e:	2e c0       	rjmp	.+92     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     670:	87 b7       	in	r24, 0x37	; 55
     672:	80 62       	ori	r24, 0x20	; 32
     674:	87 bf       	out	0x37, r24	; 55
     676:	2a c0       	rjmp	.+84     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     678:	87 b7       	in	r24, 0x37	; 55
     67a:	84 61       	ori	r24, 0x14	; 20
     67c:	87 bf       	out	0x37, r24	; 55
     67e:	26 c0       	rjmp	.+76     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     680:	87 b7       	in	r24, 0x37	; 55
     682:	8c 60       	ori	r24, 0x0C	; 12
     684:	87 bf       	out	0x37, r24	; 55
     686:	22 c0       	rjmp	.+68     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     688:	87 b7       	in	r24, 0x37	; 55
     68a:	84 60       	ori	r24, 0x04	; 4
     68c:	87 bf       	out	0x37, r24	; 55
     68e:	ed e7       	ldi	r30, 0x7D	; 125
     690:	f0 e0       	ldi	r31, 0x00	; 0
     692:	80 81       	ld	r24, Z
     694:	81 60       	ori	r24, 0x01	; 1
     696:	80 83       	st	Z, r24
     698:	19 c0       	rjmp	.+50     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     69a:	87 b7       	in	r24, 0x37	; 55
     69c:	84 62       	ori	r24, 0x24	; 36
     69e:	87 bf       	out	0x37, r24	; 55
     6a0:	15 c0       	rjmp	.+42     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6a2:	87 b7       	in	r24, 0x37	; 55
     6a4:	8c 61       	ori	r24, 0x1C	; 28
     6a6:	87 bf       	out	0x37, r24	; 55
     6a8:	11 c0       	rjmp	.+34     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6aa:	87 b7       	in	r24, 0x37	; 55
     6ac:	8c 61       	ori	r24, 0x1C	; 28
     6ae:	87 bf       	out	0x37, r24	; 55
     6b0:	ed e7       	ldi	r30, 0x7D	; 125
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	80 81       	ld	r24, Z
     6b6:	81 60       	ori	r24, 0x01	; 1
     6b8:	80 83       	st	Z, r24
     6ba:	08 c0       	rjmp	.+16     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6bc:	87 b7       	in	r24, 0x37	; 55
     6be:	88 61       	ori	r24, 0x18	; 24
     6c0:	87 bf       	out	0x37, r24	; 55
     6c2:	ed e7       	ldi	r30, 0x7D	; 125
     6c4:	f0 e0       	ldi	r31, 0x00	; 0
     6c6:	80 81       	ld	r24, Z
     6c8:	81 60       	ori	r24, 0x01	; 1
     6ca:	80 83       	st	Z, r24
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	92 e0       	ldi	r25, 0x02	; 2
     6d0:	11 96       	adiw	r26, 0x01	; 1
     6d2:	9c 93       	st	X, r25
     6d4:	8e 93       	st	-X, r24
     6d6:	88 e1       	ldi	r24, 0x18	; 24
     6d8:	92 e0       	ldi	r25, 0x02	; 2
     6da:	13 96       	adiw	r26, 0x03	; 3
     6dc:	9c 93       	st	X, r25
     6de:	8e 93       	st	-X, r24
     6e0:	12 97       	sbiw	r26, 0x02	; 2
     6e2:	80 e3       	ldi	r24, 0x30	; 48
     6e4:	92 e0       	ldi	r25, 0x02	; 2
     6e6:	15 96       	adiw	r26, 0x05	; 5
     6e8:	9c 93       	st	X, r25
     6ea:	8e 93       	st	-X, r24
     6ec:	14 97       	sbiw	r26, 0x04	; 4
     6ee:	88 e4       	ldi	r24, 0x48	; 72
     6f0:	92 e0       	ldi	r25, 0x02	; 2
     6f2:	17 96       	adiw	r26, 0x07	; 7
     6f4:	9c 93       	st	X, r25
     6f6:	8e 93       	st	-X, r24
     6f8:	16 97       	sbiw	r26, 0x06	; 6
     6fa:	8b e4       	ldi	r24, 0x4B	; 75
     6fc:	92 e0       	ldi	r25, 0x02	; 2
     6fe:	19 96       	adiw	r26, 0x09	; 9
     700:	9c 93       	st	X, r25
     702:	8e 93       	st	-X, r24
     704:	18 97       	sbiw	r26, 0x08	; 8
     706:	8e e4       	ldi	r24, 0x4E	; 78
     708:	92 e0       	ldi	r25, 0x02	; 2
     70a:	1b 96       	adiw	r26, 0x0b	; 11
     70c:	9c 93       	st	X, r25
     70e:	8e 93       	st	-X, r24
     710:	1a 97       	sbiw	r26, 0x0a	; 10
     712:	8a eb       	ldi	r24, 0xBA	; 186
     714:	91 e0       	ldi	r25, 0x01	; 1
     716:	1d 96       	adiw	r26, 0x0d	; 13
     718:	9c 93       	st	X, r25
     71a:	8e 93       	st	-X, r24
     71c:	1c 97       	sbiw	r26, 0x0c	; 12
     71e:	83 e5       	ldi	r24, 0x53	; 83
     720:	92 e0       	ldi	r25, 0x02	; 2
     722:	1f 96       	adiw	r26, 0x0f	; 15
     724:	9c 93       	st	X, r25
     726:	8e 93       	st	-X, r24
     728:	1e 97       	sbiw	r26, 0x0e	; 14
     72a:	cd 01       	movw	r24, r26
     72c:	1f 91       	pop	r17
     72e:	0f 91       	pop	r16
     730:	08 95       	ret

00000732 <__vector_16>:
	timer3_state=0;
}
/***Interrupt***/
// So that main will not freeze when not defined, therefore exclude here! before use.
//ISR(TIMER0_COMP_vect){ }
ISR(TIMER0_OVF_vect){ }
     732:	1f 92       	push	r1
     734:	0f 92       	push	r0
     736:	0f b6       	in	r0, 0x3f	; 63
     738:	0f 92       	push	r0
     73a:	11 24       	eor	r1, r1
     73c:	0f 90       	pop	r0
     73e:	0f be       	out	0x3f, r0	; 63
     740:	0f 90       	pop	r0
     742:	1f 90       	pop	r1
     744:	18 95       	reti

00000746 <__vector_11>:
ISR(TIMER1_CAPT_vect){ }
     746:	1f 92       	push	r1
     748:	0f 92       	push	r0
     74a:	0f b6       	in	r0, 0x3f	; 63
     74c:	0f 92       	push	r0
     74e:	11 24       	eor	r1, r1
     750:	0f 90       	pop	r0
     752:	0f be       	out	0x3f, r0	; 63
     754:	0f 90       	pop	r0
     756:	1f 90       	pop	r1
     758:	18 95       	reti

0000075a <__vector_12>:
ISR(TIMER1_COMPA_vect){ }
     75a:	1f 92       	push	r1
     75c:	0f 92       	push	r0
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	0f 92       	push	r0
     762:	11 24       	eor	r1, r1
     764:	0f 90       	pop	r0
     766:	0f be       	out	0x3f, r0	; 63
     768:	0f 90       	pop	r0
     76a:	1f 90       	pop	r1
     76c:	18 95       	reti

0000076e <__vector_13>:
ISR(TIMER1_COMPB_vect){ }
     76e:	1f 92       	push	r1
     770:	0f 92       	push	r0
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	0f 92       	push	r0
     776:	11 24       	eor	r1, r1
     778:	0f 90       	pop	r0
     77a:	0f be       	out	0x3f, r0	; 63
     77c:	0f 90       	pop	r0
     77e:	1f 90       	pop	r1
     780:	18 95       	reti

00000782 <__vector_24>:
ISR(TIMER1_COMPC_vect){ }
     782:	1f 92       	push	r1
     784:	0f 92       	push	r0
     786:	0f b6       	in	r0, 0x3f	; 63
     788:	0f 92       	push	r0
     78a:	11 24       	eor	r1, r1
     78c:	0f 90       	pop	r0
     78e:	0f be       	out	0x3f, r0	; 63
     790:	0f 90       	pop	r0
     792:	1f 90       	pop	r1
     794:	18 95       	reti

00000796 <__vector_14>:
ISR(TIMER1_OVF_vect){ }
     796:	1f 92       	push	r1
     798:	0f 92       	push	r0
     79a:	0f b6       	in	r0, 0x3f	; 63
     79c:	0f 92       	push	r0
     79e:	11 24       	eor	r1, r1
     7a0:	0f 90       	pop	r0
     7a2:	0f be       	out	0x3f, r0	; 63
     7a4:	0f 90       	pop	r0
     7a6:	1f 90       	pop	r1
     7a8:	18 95       	reti

000007aa <__vector_10>:
ISR(TIMER2_OVF_vect){ }
     7aa:	1f 92       	push	r1
     7ac:	0f 92       	push	r0
     7ae:	0f b6       	in	r0, 0x3f	; 63
     7b0:	0f 92       	push	r0
     7b2:	11 24       	eor	r1, r1
     7b4:	0f 90       	pop	r0
     7b6:	0f be       	out	0x3f, r0	; 63
     7b8:	0f 90       	pop	r0
     7ba:	1f 90       	pop	r1
     7bc:	18 95       	reti

000007be <__vector_25>:
ISR(TIMER3_CAPT_vect){ }
     7be:	1f 92       	push	r1
     7c0:	0f 92       	push	r0
     7c2:	0f b6       	in	r0, 0x3f	; 63
     7c4:	0f 92       	push	r0
     7c6:	11 24       	eor	r1, r1
     7c8:	0f 90       	pop	r0
     7ca:	0f be       	out	0x3f, r0	; 63
     7cc:	0f 90       	pop	r0
     7ce:	1f 90       	pop	r1
     7d0:	18 95       	reti

000007d2 <__vector_26>:
ISR(TIMER3_COMPA_vect){ }
     7d2:	1f 92       	push	r1
     7d4:	0f 92       	push	r0
     7d6:	0f b6       	in	r0, 0x3f	; 63
     7d8:	0f 92       	push	r0
     7da:	11 24       	eor	r1, r1
     7dc:	0f 90       	pop	r0
     7de:	0f be       	out	0x3f, r0	; 63
     7e0:	0f 90       	pop	r0
     7e2:	1f 90       	pop	r1
     7e4:	18 95       	reti

000007e6 <__vector_27>:
ISR(TIMER3_COMPB_vect){ }
     7e6:	1f 92       	push	r1
     7e8:	0f 92       	push	r0
     7ea:	0f b6       	in	r0, 0x3f	; 63
     7ec:	0f 92       	push	r0
     7ee:	11 24       	eor	r1, r1
     7f0:	0f 90       	pop	r0
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	0f 90       	pop	r0
     7f6:	1f 90       	pop	r1
     7f8:	18 95       	reti

000007fa <__vector_28>:
ISR(TIMER3_COMPC_vect){ }
     7fa:	1f 92       	push	r1
     7fc:	0f 92       	push	r0
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	0f 92       	push	r0
     802:	11 24       	eor	r1, r1
     804:	0f 90       	pop	r0
     806:	0f be       	out	0x3f, r0	; 63
     808:	0f 90       	pop	r0
     80a:	1f 90       	pop	r1
     80c:	18 95       	reti

0000080e <__vector_29>:
ISR(TIMER3_OVF_vect){ }
     80e:	1f 92       	push	r1
     810:	0f 92       	push	r0
     812:	0f b6       	in	r0, 0x3f	; 63
     814:	0f 92       	push	r0
     816:	11 24       	eor	r1, r1
     818:	0f 90       	pop	r0
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	0f 90       	pop	r0
     81e:	1f 90       	pop	r1
     820:	18 95       	reti

00000822 <__vector_18>:
	}else{
		uart1_index=0;
		ret=uart1_msg;
	}
	return ret;
}
     822:	1f 92       	push	r1
     824:	0f 92       	push	r0
     826:	0f b6       	in	r0, 0x3f	; 63
     828:	0f 92       	push	r0
     82a:	11 24       	eor	r1, r1
     82c:	0b b6       	in	r0, 0x3b	; 59
     82e:	0f 92       	push	r0
     830:	8f 93       	push	r24
     832:	9f 93       	push	r25
     834:	ef 93       	push	r30
     836:	ff 93       	push	r31
     838:	8b b1       	in	r24, 0x0b	; 11
     83a:	9a b1       	in	r25, 0x0a	; 10
     83c:	88 71       	andi	r24, 0x18	; 24
     83e:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <UART_LastRxError>
     842:	e0 91 87 02 	lds	r30, 0x0287	; 0x800287 <UART_RxHead>
     846:	ef 5f       	subi	r30, 0xFF	; 255
     848:	ef 73       	andi	r30, 0x3F	; 63
     84a:	90 91 88 02 	lds	r25, 0x0288	; 0x800288 <UART_RxTail>
     84e:	e9 13       	cpse	r30, r25
     850:	04 c0       	rjmp	.+8      	; 0x85a <__vector_18+0x38>
     852:	82 e0       	ldi	r24, 0x02	; 2
     854:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <UART_LastRxError>
     858:	0f c0       	rjmp	.+30     	; 0x878 <__vector_18+0x56>
     85a:	9c b1       	in	r25, 0x0c	; 12
     85c:	e0 93 87 02 	sts	0x0287, r30	; 0x800287 <UART_RxHead>
     860:	88 23       	and	r24, r24
     862:	31 f0       	breq	.+12     	; 0x870 <__vector_18+0x4e>
     864:	f0 e0       	ldi	r31, 0x00	; 0
     866:	e6 57       	subi	r30, 0x76	; 118
     868:	fd 4f       	sbci	r31, 0xFD	; 253
     86a:	88 e5       	ldi	r24, 0x58	; 88
     86c:	80 83       	st	Z, r24
     86e:	04 c0       	rjmp	.+8      	; 0x878 <__vector_18+0x56>
     870:	f0 e0       	ldi	r31, 0x00	; 0
     872:	e6 57       	subi	r30, 0x76	; 118
     874:	fd 4f       	sbci	r31, 0xFD	; 253
     876:	90 83       	st	Z, r25
     878:	ff 91       	pop	r31
     87a:	ef 91       	pop	r30
     87c:	9f 91       	pop	r25
     87e:	8f 91       	pop	r24
     880:	0f 90       	pop	r0
     882:	0b be       	out	0x3b, r0	; 59
     884:	0f 90       	pop	r0
     886:	0f be       	out	0x3f, r0	; 63
     888:	0f 90       	pop	r0
     88a:	1f 90       	pop	r1
     88c:	18 95       	reti

0000088e <__vector_19>:
     88e:	1f 92       	push	r1
     890:	0f 92       	push	r0
     892:	0f b6       	in	r0, 0x3f	; 63
     894:	0f 92       	push	r0
     896:	11 24       	eor	r1, r1
     898:	0b b6       	in	r0, 0x3b	; 59
     89a:	0f 92       	push	r0
     89c:	8f 93       	push	r24
     89e:	9f 93       	push	r25
     8a0:	ef 93       	push	r30
     8a2:	ff 93       	push	r31
     8a4:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <UART_TxTail>
     8a8:	f0 e0       	ldi	r31, 0x00	; 0
     8aa:	e9 5b       	subi	r30, 0xB9	; 185
     8ac:	fd 4f       	sbci	r31, 0xFD	; 253
     8ae:	80 81       	ld	r24, Z
     8b0:	8c b9       	out	0x0c, r24	; 12
     8b2:	10 82       	st	Z, r1
     8b4:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <UART_TxTail>
     8b8:	8f 5f       	subi	r24, 0xFF	; 255
     8ba:	8f 73       	andi	r24, 0x3F	; 63
     8bc:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <UART_TxTail>
     8c0:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <UART_TxHead>
     8c4:	89 13       	cpse	r24, r25
     8c6:	01 c0       	rjmp	.+2      	; 0x8ca <__vector_19+0x3c>
     8c8:	55 98       	cbi	0x0a, 5	; 10
     8ca:	ff 91       	pop	r31
     8cc:	ef 91       	pop	r30
     8ce:	9f 91       	pop	r25
     8d0:	8f 91       	pop	r24
     8d2:	0f 90       	pop	r0
     8d4:	0b be       	out	0x3b, r0	; 59
     8d6:	0f 90       	pop	r0
     8d8:	0f be       	out	0x3f, r0	; 63
     8da:	0f 90       	pop	r0
     8dc:	1f 90       	pop	r1
     8de:	18 95       	reti

000008e0 <__vector_30>:
	UART1_TxHead = UART1_TxTail;
}
/***Interrupt***/
/***SIGNAL(UART1_RECEIVE_INTERRUPT)***/
SIGNAL(UART1_RECEIVE_INTERRUPT)
{
     8e0:	1f 92       	push	r1
     8e2:	0f 92       	push	r0
     8e4:	0f b6       	in	r0, 0x3f	; 63
     8e6:	0f 92       	push	r0
     8e8:	11 24       	eor	r1, r1
     8ea:	0b b6       	in	r0, 0x3b	; 59
     8ec:	0f 92       	push	r0
     8ee:	8f 93       	push	r24
     8f0:	9f 93       	push	r25
     8f2:	ef 93       	push	r30
     8f4:	ff 93       	push	r31
    unsigned char tmphead;
	unsigned char data;
	unsigned char bit9;
    unsigned char usr;
    /***read UART status register and UART data register***/
	usr  = UART1_STATUS;
     8f6:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    bit9 = UART1_CONTROL;
     8fa:	90 91 9a 00 	lds	r25, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    bit9 = 0x01 & (bit9>>1);
    /***/
    UART1_LastRxError = (usr & (_BV(FE1)|_BV(DOR1)));
     8fe:	88 71       	andi	r24, 0x18	; 24
     900:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <UART1_LastRxError>
	/***calculate buffer index***/
    tmphead = ( UART1_RxHead + 1) & UART_RX_BUFFER_MASK;
     904:	e0 91 c3 01 	lds	r30, 0x01C3	; 0x8001c3 <UART1_RxHead>
     908:	ef 5f       	subi	r30, 0xFF	; 255
     90a:	ef 73       	andi	r30, 0x3F	; 63
    if ( tmphead == UART1_RxTail ) {	
     90c:	90 91 89 02 	lds	r25, 0x0289	; 0x800289 <UART1_RxTail>
     910:	e9 13       	cpse	r30, r25
     912:	04 c0       	rjmp	.+8      	; 0x91c <__vector_30+0x3c>
        /***error: receive buffer overflow, caracter is lost***/
        UART1_LastRxError = UART_BUFFER_OVERFLOW >> 8; 
     914:	82 e0       	ldi	r24, 0x02	; 2
     916:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <UART1_LastRxError>
     91a:	10 c0       	rjmp	.+32     	; 0x93c <__vector_30+0x5c>
	}else{
		data = UART1_DATA;
     91c:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
        /***store new index***/
        UART1_RxHead = tmphead;
     920:	e0 93 c3 01 	sts	0x01C3, r30	; 0x8001c3 <UART1_RxHead>
		if(UART1_LastRxError){
     924:	88 23       	and	r24, r24
     926:	31 f0       	breq	.+12     	; 0x934 <__vector_30+0x54>
			/***store indication data error in buffer***/
			UART1_RxBuf[tmphead] = 'X';
     928:	f0 e0       	ldi	r31, 0x00	; 0
     92a:	e0 58       	subi	r30, 0x80	; 128
     92c:	fe 4f       	sbci	r31, 0xFE	; 254
     92e:	88 e5       	ldi	r24, 0x58	; 88
     930:	80 83       	st	Z, r24
     932:	04 c0       	rjmp	.+8      	; 0x93c <__vector_30+0x5c>
		}else{
			/***store received data in buffer***/
			UART1_RxBuf[tmphead] = data;
     934:	f0 e0       	ldi	r31, 0x00	; 0
     936:	e0 58       	subi	r30, 0x80	; 128
     938:	fe 4f       	sbci	r31, 0xFE	; 254
     93a:	90 83       	st	Z, r25
		}
    }
}
     93c:	ff 91       	pop	r31
     93e:	ef 91       	pop	r30
     940:	9f 91       	pop	r25
     942:	8f 91       	pop	r24
     944:	0f 90       	pop	r0
     946:	0b be       	out	0x3b, r0	; 59
     948:	0f 90       	pop	r0
     94a:	0f be       	out	0x3f, r0	; 63
     94c:	0f 90       	pop	r0
     94e:	1f 90       	pop	r1
     950:	18 95       	reti

00000952 <__vector_31>:
/***SIGNAL(UART1_TRANSMIT_INTERRUPT)***/
SIGNAL(UART1_TRANSMIT_INTERRUPT)
{
     952:	1f 92       	push	r1
     954:	0f 92       	push	r0
     956:	0f b6       	in	r0, 0x3f	; 63
     958:	0f 92       	push	r0
     95a:	11 24       	eor	r1, r1
     95c:	0b b6       	in	r0, 0x3b	; 59
     95e:	0f 92       	push	r0
     960:	8f 93       	push	r24
     962:	9f 93       	push	r25
     964:	ef 93       	push	r30
     966:	ff 93       	push	r31
	uint8_t tail = UART1_TxTail;
	UART1_DATA = UART1_TxBuf[tail];
     968:	e0 91 7f 01 	lds	r30, 0x017F	; 0x80017f <UART1_TxTail>
     96c:	f0 e0       	ldi	r31, 0x00	; 0
     96e:	e9 5f       	subi	r30, 0xF9	; 249
     970:	fd 4f       	sbci	r31, 0xFD	; 253
     972:	80 81       	ld	r24, Z
     974:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
	UART1_TxBuf[tail]='\0';
     978:	10 82       	st	Z, r1
	UART1_TxTail = (UART1_TxTail + 1) & UART_TX_BUFFER_MASK;
     97a:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <UART1_TxTail>
     97e:	8f 5f       	subi	r24, 0xFF	; 255
     980:	8f 73       	andi	r24, 0x3F	; 63
     982:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <UART1_TxTail>
	if ( UART1_TxTail != UART1_TxHead )
     986:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <UART1_TxHead>
     98a:	89 13       	cpse	r24, r25
     98c:	05 c0       	rjmp	.+10     	; 0x998 <__vector_31+0x46>
        ;
    else
		UART1_CONTROL &= ~_BV(UART1_UDRIE);
     98e:	ea e9       	ldi	r30, 0x9A	; 154
     990:	f0 e0       	ldi	r31, 0x00	; 0
     992:	80 81       	ld	r24, Z
     994:	8f 7d       	andi	r24, 0xDF	; 223
     996:	80 83       	st	Z, r24
}
     998:	ff 91       	pop	r31
     99a:	ef 91       	pop	r30
     99c:	9f 91       	pop	r25
     99e:	8f 91       	pop	r24
     9a0:	0f 90       	pop	r0
     9a2:	0b be       	out	0x3b, r0	; 59
     9a4:	0f 90       	pop	r0
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	0f 90       	pop	r0
     9aa:	1f 90       	pop	r1
     9ac:	18 95       	reti

000009ae <EEPROMenable>:
#include "eeprom.h"
/***Constant & Macro***/
/***Global File Variable***/
/***Header***/
/***Procedure & Function***/
EEPROM EEPROMenable(void){
     9ae:	fc 01       	movw	r30, r24
	eprom.write_float=eeprom_write_float;
	eprom.update_float=eeprom_update_float;
	eprom.read_block=eeprom_read_block;
	eprom.write_block=eeprom_write_block;
	eprom.update_block=eeprom_update_block;
	return eprom;
     9b0:	83 e3       	ldi	r24, 0x33	; 51
     9b2:	94 e1       	ldi	r25, 0x14	; 20
     9b4:	91 83       	std	Z+1, r25	; 0x01
     9b6:	80 83       	st	Z, r24
     9b8:	85 e7       	ldi	r24, 0x75	; 117
     9ba:	94 e1       	ldi	r25, 0x14	; 20
     9bc:	93 83       	std	Z+3, r25	; 0x03
     9be:	82 83       	std	Z+2, r24	; 0x02
     9c0:	8f e4       	ldi	r24, 0x4F	; 79
     9c2:	94 e1       	ldi	r25, 0x14	; 20
     9c4:	95 83       	std	Z+5, r25	; 0x05
     9c6:	84 83       	std	Z+4, r24	; 0x04
     9c8:	8b e3       	ldi	r24, 0x3B	; 59
     9ca:	94 e1       	ldi	r25, 0x14	; 20
     9cc:	97 83       	std	Z+7, r25	; 0x07
     9ce:	86 83       	std	Z+6, r24	; 0x06
     9d0:	87 e8       	ldi	r24, 0x87	; 135
     9d2:	94 e1       	ldi	r25, 0x14	; 20
     9d4:	91 87       	std	Z+9, r25	; 0x09
     9d6:	80 87       	std	Z+8, r24	; 0x08
     9d8:	88 e6       	ldi	r24, 0x68	; 104
     9da:	94 e1       	ldi	r25, 0x14	; 20
     9dc:	93 87       	std	Z+11, r25	; 0x0b
     9de:	82 87       	std	Z+10, r24	; 0x0a
     9e0:	82 e8       	ldi	r24, 0x82	; 130
     9e2:	94 e1       	ldi	r25, 0x14	; 20
     9e4:	97 87       	std	Z+15, r25	; 0x0f
     9e6:	86 87       	std	Z+14, r24	; 0x0e
     9e8:	82 e8       	ldi	r24, 0x82	; 130
     9ea:	94 e1       	ldi	r25, 0x14	; 20
     9ec:	95 8b       	std	Z+21, r25	; 0x15
     9ee:	84 8b       	std	Z+20, r24	; 0x14
     9f0:	80 e6       	ldi	r24, 0x60	; 96
     9f2:	94 e1       	ldi	r25, 0x14	; 20
     9f4:	97 8b       	std	Z+23, r25	; 0x17
     9f6:	86 8b       	std	Z+22, r24	; 0x16
     9f8:	83 e2       	ldi	r24, 0x23	; 35
     9fa:	94 e1       	ldi	r25, 0x14	; 20
     9fc:	91 8f       	std	Z+25, r25	; 0x19
     9fe:	80 8f       	std	Z+24, r24	; 0x18
     a00:	8c e6       	ldi	r24, 0x6C	; 108
     a02:	94 e1       	ldi	r25, 0x14	; 20
     a04:	93 8f       	std	Z+27, r25	; 0x1b
     a06:	82 8f       	std	Z+26, r24	; 0x1a
     a08:	80 e4       	ldi	r24, 0x40	; 64
     a0a:	94 e1       	ldi	r25, 0x14	; 20
     a0c:	95 8f       	std	Z+29, r25	; 0x1d
     a0e:	84 8f       	std	Z+28, r24	; 0x1c
}
     a10:	cf 01       	movw	r24, r30
     a12:	08 95       	ret

00000a14 <FUNCpinmatch>:
	return i;
}
uint8_t  bintobcd(uint8_t bin)
{
	return (((bin) / 10) << 4) + ((bin) % 10);
}
     a14:	68 23       	and	r22, r24
     a16:	44 23       	and	r20, r20
     a18:	21 f0       	breq	.+8      	; 0xa22 <FUNCpinmatch+0xe>
     a1a:	86 17       	cp	r24, r22
     a1c:	21 f0       	breq	.+8      	; 0xa26 <FUNCpinmatch+0x12>
     a1e:	80 e0       	ldi	r24, 0x00	; 0
     a20:	08 95       	ret
     a22:	61 11       	cpse	r22, r1
     a24:	80 e0       	ldi	r24, 0x00	; 0
     a26:	08 95       	ret

00000a28 <FUNChmerge>:
     a28:	86 2b       	or	r24, r22
     a2a:	08 95       	ret

00000a2c <FUNClmerge>:
     a2c:	86 23       	and	r24, r22
     a2e:	08 95       	ret

00000a30 <FUNChh>:
     a30:	86 23       	and	r24, r22
     a32:	08 95       	ret

00000a34 <FUNCll>:
     a34:	86 2b       	or	r24, r22
     a36:	80 95       	com	r24
     a38:	08 95       	ret

00000a3a <FUNClh>:
     a3a:	86 27       	eor	r24, r22
     a3c:	86 23       	and	r24, r22
     a3e:	08 95       	ret

00000a40 <FUNChl>:
     a40:	60 95       	com	r22
     a42:	86 23       	and	r24, r22
     a44:	08 95       	ret

00000a46 <FUNCdiff>:
     a46:	86 27       	eor	r24, r22
     a48:	08 95       	ret

00000a4a <FUNCswap>:
     a4a:	cf 92       	push	r12
     a4c:	df 92       	push	r13
     a4e:	ef 92       	push	r14
     a50:	ff 92       	push	r15
     a52:	0f 93       	push	r16
     a54:	1f 93       	push	r17
     a56:	fc 01       	movw	r30, r24
     a58:	00 81       	ld	r16, Z
     a5a:	11 81       	ldd	r17, Z+1	; 0x01
     a5c:	22 81       	ldd	r18, Z+2	; 0x02
     a5e:	33 81       	ldd	r19, Z+3	; 0x03
     a60:	fb 01       	movw	r30, r22
     a62:	c0 80       	ld	r12, Z
     a64:	d1 80       	ldd	r13, Z+1	; 0x01
     a66:	e2 80       	ldd	r14, Z+2	; 0x02
     a68:	f3 80       	ldd	r15, Z+3	; 0x03
     a6a:	fc 01       	movw	r30, r24
     a6c:	c0 82       	st	Z, r12
     a6e:	d1 82       	std	Z+1, r13	; 0x01
     a70:	e2 82       	std	Z+2, r14	; 0x02
     a72:	f3 82       	std	Z+3, r15	; 0x03
     a74:	fb 01       	movw	r30, r22
     a76:	00 83       	st	Z, r16
     a78:	11 83       	std	Z+1, r17	; 0x01
     a7a:	22 83       	std	Z+2, r18	; 0x02
     a7c:	33 83       	std	Z+3, r19	; 0x03
     a7e:	1f 91       	pop	r17
     a80:	0f 91       	pop	r16
     a82:	ff 90       	pop	r15
     a84:	ef 90       	pop	r14
     a86:	df 90       	pop	r13
     a88:	cf 90       	pop	r12
     a8a:	08 95       	ret

00000a8c <FUNCcopy>:
     a8c:	fb 01       	movw	r30, r22
     a8e:	20 81       	ld	r18, Z
     a90:	fc 01       	movw	r30, r24
     a92:	20 83       	st	Z, r18
     a94:	22 23       	and	r18, r18
     a96:	39 f0       	breq	.+14     	; 0xaa6 <FUNCcopy+0x1a>
     a98:	db 01       	movw	r26, r22
     a9a:	11 96       	adiw	r26, 0x01	; 1
     a9c:	31 96       	adiw	r30, 0x01	; 1
     a9e:	9d 91       	ld	r25, X+
     aa0:	91 93       	st	Z+, r25
     aa2:	91 11       	cpse	r25, r1
     aa4:	fc cf       	rjmp	.-8      	; 0xa9e <FUNCcopy+0x12>
     aa6:	08 95       	ret

00000aa8 <FUNCsqueeze>:
     aa8:	cf 93       	push	r28
     aaa:	df 93       	push	r29
     aac:	ec 01       	movw	r28, r24
     aae:	98 81       	ld	r25, Y
     ab0:	99 23       	and	r25, r25
     ab2:	99 f0       	breq	.+38     	; 0xada <FUNCsqueeze+0x32>
     ab4:	fe 01       	movw	r30, r28
     ab6:	31 96       	adiw	r30, 0x01	; 1
     ab8:	20 e0       	ldi	r18, 0x00	; 0
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	49 2f       	mov	r20, r25
     abe:	50 e0       	ldi	r21, 0x00	; 0
     ac0:	46 17       	cp	r20, r22
     ac2:	57 07       	cpc	r21, r23
     ac4:	31 f0       	breq	.+12     	; 0xad2 <FUNCsqueeze+0x2a>
     ac6:	de 01       	movw	r26, r28
     ac8:	a2 0f       	add	r26, r18
     aca:	b3 1f       	adc	r27, r19
     acc:	9c 93       	st	X, r25
     ace:	2f 5f       	subi	r18, 0xFF	; 255
     ad0:	3f 4f       	sbci	r19, 0xFF	; 255
     ad2:	91 91       	ld	r25, Z+
     ad4:	91 11       	cpse	r25, r1
     ad6:	f2 cf       	rjmp	.-28     	; 0xabc <FUNCsqueeze+0x14>
     ad8:	02 c0       	rjmp	.+4      	; 0xade <FUNCsqueeze+0x36>
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	fe 01       	movw	r30, r28
     ae0:	e2 0f       	add	r30, r18
     ae2:	f3 1f       	adc	r31, r19
     ae4:	10 82       	st	Z, r1
     ae6:	df 91       	pop	r29
     ae8:	cf 91       	pop	r28
     aea:	08 95       	ret

00000aec <FUNCshellsort>:
     aec:	2f 92       	push	r2
     aee:	3f 92       	push	r3
     af0:	4f 92       	push	r4
     af2:	5f 92       	push	r5
     af4:	6f 92       	push	r6
     af6:	7f 92       	push	r7
     af8:	8f 92       	push	r8
     afa:	9f 92       	push	r9
     afc:	af 92       	push	r10
     afe:	bf 92       	push	r11
     b00:	cf 92       	push	r12
     b02:	df 92       	push	r13
     b04:	ef 92       	push	r14
     b06:	ff 92       	push	r15
     b08:	0f 93       	push	r16
     b0a:	1f 93       	push	r17
     b0c:	cf 93       	push	r28
     b0e:	df 93       	push	r29
     b10:	00 d0       	rcall	.+0      	; 0xb12 <FUNCshellsort+0x26>
     b12:	00 d0       	rcall	.+0      	; 0xb14 <FUNCshellsort+0x28>
     b14:	cd b7       	in	r28, 0x3d	; 61
     b16:	de b7       	in	r29, 0x3e	; 62
     b18:	2c 01       	movw	r4, r24
     b1a:	1b 01       	movw	r2, r22
     b1c:	4b 01       	movw	r8, r22
     b1e:	77 23       	and	r23, r23
     b20:	1c f4       	brge	.+6      	; 0xb28 <FUNCshellsort+0x3c>
     b22:	2f ef       	ldi	r18, 0xFF	; 255
     b24:	82 1a       	sub	r8, r18
     b26:	92 0a       	sbc	r9, r18
     b28:	95 94       	asr	r9
     b2a:	87 94       	ror	r8
     b2c:	18 14       	cp	r1, r8
     b2e:	19 04       	cpc	r1, r9
     b30:	0c f4       	brge	.+2      	; 0xb34 <FUNCshellsort+0x48>
     b32:	51 c0       	rjmp	.+162    	; 0xbd6 <FUNCshellsort+0xea>
     b34:	6a c0       	rjmp	.+212    	; 0xc0a <FUNCshellsort+0x11e>
     b36:	96 01       	movw	r18, r12
     b38:	dd 20       	and	r13, r13
     b3a:	9c f1       	brlt	.+102    	; 0xba2 <FUNCshellsort+0xb6>
     b3c:	f5 01       	movw	r30, r10
     b3e:	40 81       	ld	r20, Z
     b40:	51 81       	ldd	r21, Z+1	; 0x01
     b42:	f4 01       	movw	r30, r8
     b44:	60 81       	ld	r22, Z
     b46:	71 81       	ldd	r23, Z+1	; 0x01
     b48:	64 17       	cp	r22, r20
     b4a:	75 07       	cpc	r23, r21
     b4c:	54 f5       	brge	.+84     	; 0xba2 <FUNCshellsort+0xb6>
     b4e:	8c 01       	movw	r16, r24
     b50:	0a 0d       	add	r16, r10
     b52:	1b 1d       	adc	r17, r11
     b54:	d4 01       	movw	r26, r8
     b56:	bc 82       	std	Y+4, r11	; 0x04
     b58:	ab 82       	std	Y+3, r10	; 0x03
     b5a:	ba 82       	std	Y+2, r11	; 0x02
     b5c:	a9 82       	std	Y+1, r10	; 0x01
     b5e:	eb 81       	ldd	r30, Y+3	; 0x03
     b60:	fc 81       	ldd	r31, Y+4	; 0x04
     b62:	71 83       	std	Z+1, r23	; 0x01
     b64:	60 83       	st	Z, r22
     b66:	11 96       	adiw	r26, 0x01	; 1
     b68:	5c 93       	st	X, r21
     b6a:	4e 93       	st	-X, r20
     b6c:	2e 19       	sub	r18, r14
     b6e:	3f 09       	sbc	r19, r15
     b70:	c2 f0       	brmi	.+48     	; 0xba2 <FUNCshellsort+0xb6>
     b72:	f8 01       	movw	r30, r16
     b74:	40 81       	ld	r20, Z
     b76:	51 81       	ldd	r21, Z+1	; 0x01
     b78:	e9 81       	ldd	r30, Y+1	; 0x01
     b7a:	fa 81       	ldd	r31, Y+2	; 0x02
     b7c:	60 81       	ld	r22, Z
     b7e:	71 81       	ldd	r23, Z+1	; 0x01
     b80:	08 0f       	add	r16, r24
     b82:	19 1f       	adc	r17, r25
     b84:	e8 0f       	add	r30, r24
     b86:	f9 1f       	adc	r31, r25
     b88:	fa 83       	std	Y+2, r31	; 0x02
     b8a:	e9 83       	std	Y+1, r30	; 0x01
     b8c:	eb 81       	ldd	r30, Y+3	; 0x03
     b8e:	fc 81       	ldd	r31, Y+4	; 0x04
     b90:	e8 0f       	add	r30, r24
     b92:	f9 1f       	adc	r31, r25
     b94:	fc 83       	std	Y+4, r31	; 0x04
     b96:	eb 83       	std	Y+3, r30	; 0x03
     b98:	a8 0f       	add	r26, r24
     b9a:	b9 1f       	adc	r27, r25
     b9c:	64 17       	cp	r22, r20
     b9e:	75 07       	cpc	r23, r21
     ba0:	f4 f2       	brlt	.-68     	; 0xb5e <FUNCshellsort+0x72>
     ba2:	ff ef       	ldi	r31, 0xFF	; 255
     ba4:	cf 1a       	sub	r12, r31
     ba6:	df 0a       	sbc	r13, r31
     ba8:	22 e0       	ldi	r18, 0x02	; 2
     baa:	a2 0e       	add	r10, r18
     bac:	b1 1c       	adc	r11, r1
     bae:	e2 e0       	ldi	r30, 0x02	; 2
     bb0:	8e 0e       	add	r8, r30
     bb2:	91 1c       	adc	r9, r1
     bb4:	c6 14       	cp	r12, r6
     bb6:	d7 04       	cpc	r13, r7
     bb8:	09 f0       	breq	.+2      	; 0xbbc <FUNCshellsort+0xd0>
     bba:	bd cf       	rjmp	.-134    	; 0xb36 <FUNCshellsort+0x4a>
     bbc:	47 01       	movw	r8, r14
     bbe:	ff 20       	and	r15, r15
     bc0:	1c f4       	brge	.+6      	; 0xbc8 <FUNCshellsort+0xdc>
     bc2:	ff ef       	ldi	r31, 0xFF	; 255
     bc4:	8f 1a       	sub	r8, r31
     bc6:	9f 0a       	sbc	r9, r31
     bc8:	95 94       	asr	r9
     bca:	87 94       	ror	r8
     bcc:	18 14       	cp	r1, r8
     bce:	19 04       	cpc	r1, r9
     bd0:	e4 f4       	brge	.+56     	; 0xc0a <FUNCshellsort+0x11e>
     bd2:	74 01       	movw	r14, r8
     bd4:	01 c0       	rjmp	.+2      	; 0xbd8 <FUNCshellsort+0xec>
     bd6:	74 01       	movw	r14, r8
     bd8:	82 14       	cp	r8, r2
     bda:	93 04       	cpc	r9, r3
     bdc:	7c f7       	brge	.-34     	; 0xbbc <FUNCshellsort+0xd0>
     bde:	64 01       	movw	r12, r8
     be0:	ce 18       	sub	r12, r14
     be2:	df 08       	sbc	r13, r15
     be4:	56 01       	movw	r10, r12
     be6:	aa 0c       	add	r10, r10
     be8:	bb 1c       	adc	r11, r11
     bea:	a4 0c       	add	r10, r4
     bec:	b5 1c       	adc	r11, r5
     bee:	88 0c       	add	r8, r8
     bf0:	99 1c       	adc	r9, r9
     bf2:	84 0c       	add	r8, r4
     bf4:	95 1c       	adc	r9, r5
     bf6:	31 01       	movw	r6, r2
     bf8:	6e 18       	sub	r6, r14
     bfa:	7f 08       	sbc	r7, r15
     bfc:	c7 01       	movw	r24, r14
     bfe:	88 0f       	add	r24, r24
     c00:	99 1f       	adc	r25, r25
     c02:	91 95       	neg	r25
     c04:	81 95       	neg	r24
     c06:	91 09       	sbc	r25, r1
     c08:	96 cf       	rjmp	.-212    	; 0xb36 <FUNCshellsort+0x4a>
     c0a:	0f 90       	pop	r0
     c0c:	0f 90       	pop	r0
     c0e:	0f 90       	pop	r0
     c10:	0f 90       	pop	r0
     c12:	df 91       	pop	r29
     c14:	cf 91       	pop	r28
     c16:	1f 91       	pop	r17
     c18:	0f 91       	pop	r16
     c1a:	ff 90       	pop	r15
     c1c:	ef 90       	pop	r14
     c1e:	df 90       	pop	r13
     c20:	cf 90       	pop	r12
     c22:	bf 90       	pop	r11
     c24:	af 90       	pop	r10
     c26:	9f 90       	pop	r9
     c28:	8f 90       	pop	r8
     c2a:	7f 90       	pop	r7
     c2c:	6f 90       	pop	r6
     c2e:	5f 90       	pop	r5
     c30:	4f 90       	pop	r4
     c32:	3f 90       	pop	r3
     c34:	2f 90       	pop	r2
     c36:	08 95       	ret

00000c38 <FUNCpmax>:
     c38:	86 17       	cp	r24, r22
     c3a:	97 07       	cpc	r25, r23
     c3c:	0c f4       	brge	.+2      	; 0xc40 <FUNCpmax+0x8>
     c3e:	cb 01       	movw	r24, r22
     c40:	08 95       	ret

00000c42 <FUNCgcd>:
     c42:	9b 01       	movw	r18, r22
     c44:	67 2b       	or	r22, r23
     c46:	11 f4       	brne	.+4      	; 0xc4c <FUNCgcd+0xa>
     c48:	08 95       	ret
     c4a:	9a 01       	movw	r18, r20
     c4c:	b9 01       	movw	r22, r18
     c4e:	0e 94 b0 13 	call	0x2760	; 0x2760 <__divmodhi4>
     c52:	ac 01       	movw	r20, r24
     c54:	82 2f       	mov	r24, r18
     c56:	93 2f       	mov	r25, r19
     c58:	41 15       	cp	r20, r1
     c5a:	51 05       	cpc	r21, r1
     c5c:	b1 f7       	brne	.-20     	; 0xc4a <FUNCgcd+0x8>
     c5e:	08 95       	ret

00000c60 <FUNCstrToInt>:
     c60:	fc 01       	movw	r30, r24
     c62:	90 81       	ld	r25, Z
     c64:	80 ed       	ldi	r24, 0xD0	; 208
     c66:	89 0f       	add	r24, r25
     c68:	8a 30       	cpi	r24, 0x0A	; 10
     c6a:	d0 f4       	brcc	.+52     	; 0xca0 <FUNCstrToInt+0x40>
     c6c:	31 96       	adiw	r30, 0x01	; 1
     c6e:	20 e0       	ldi	r18, 0x00	; 0
     c70:	30 e0       	ldi	r19, 0x00	; 0
     c72:	a9 01       	movw	r20, r18
     c74:	44 0f       	add	r20, r20
     c76:	55 1f       	adc	r21, r21
     c78:	22 0f       	add	r18, r18
     c7a:	33 1f       	adc	r19, r19
     c7c:	22 0f       	add	r18, r18
     c7e:	33 1f       	adc	r19, r19
     c80:	22 0f       	add	r18, r18
     c82:	33 1f       	adc	r19, r19
     c84:	42 0f       	add	r20, r18
     c86:	53 1f       	adc	r21, r19
     c88:	29 2f       	mov	r18, r25
     c8a:	30 e0       	ldi	r19, 0x00	; 0
     c8c:	20 53       	subi	r18, 0x30	; 48
     c8e:	31 09       	sbc	r19, r1
     c90:	24 0f       	add	r18, r20
     c92:	35 1f       	adc	r19, r21
     c94:	91 91       	ld	r25, Z+
     c96:	80 ed       	ldi	r24, 0xD0	; 208
     c98:	89 0f       	add	r24, r25
     c9a:	8a 30       	cpi	r24, 0x0A	; 10
     c9c:	50 f3       	brcs	.-44     	; 0xc72 <FUNCstrToInt+0x12>
     c9e:	02 c0       	rjmp	.+4      	; 0xca4 <FUNCstrToInt+0x44>
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	c9 01       	movw	r24, r18
     ca6:	08 95       	ret

00000ca8 <FUNCfilter>:
     ca8:	86 23       	and	r24, r22
     caa:	08 95       	ret

00000cac <FUNCticks>:
     cac:	00 97       	sbiw	r24, 0x00	; 0
     cae:	39 f0       	breq	.+14     	; 0xcbe <FUNCticks+0x12>
     cb0:	20 e0       	ldi	r18, 0x00	; 0
     cb2:	30 e0       	ldi	r19, 0x00	; 0
     cb4:	2f 5f       	subi	r18, 0xFF	; 255
     cb6:	3f 4f       	sbci	r19, 0xFF	; 255
     cb8:	82 17       	cp	r24, r18
     cba:	93 07       	cpc	r25, r19
     cbc:	d9 f7       	brne	.-10     	; 0xcb4 <FUNCticks+0x8>
     cbe:	08 95       	ret

00000cc0 <FUNCtwocomptoint8bit>:
     cc0:	87 ff       	sbrs	r24, 7
     cc2:	08 c0       	rjmp	.+16     	; 0xcd4 <FUNCtwocomptoint8bit+0x14>
     cc4:	91 95       	neg	r25
     cc6:	81 95       	neg	r24
     cc8:	91 09       	sbc	r25, r1
     cca:	99 27       	eor	r25, r25
     ccc:	91 95       	neg	r25
     cce:	81 95       	neg	r24
     cd0:	91 09       	sbc	r25, r1
     cd2:	08 95       	ret
     cd4:	8f 77       	andi	r24, 0x7F	; 127
     cd6:	99 27       	eor	r25, r25
     cd8:	08 95       	ret

00000cda <FUNCtwocomptoint10bit>:
     cda:	91 ff       	sbrs	r25, 1
     cdc:	08 c0       	rjmp	.+16     	; 0xcee <FUNCtwocomptoint10bit+0x14>
     cde:	91 95       	neg	r25
     ce0:	81 95       	neg	r24
     ce2:	91 09       	sbc	r25, r1
     ce4:	93 70       	andi	r25, 0x03	; 3
     ce6:	91 95       	neg	r25
     ce8:	81 95       	neg	r24
     cea:	91 09       	sbc	r25, r1
     cec:	08 95       	ret
     cee:	91 70       	andi	r25, 0x01	; 1
     cf0:	08 95       	ret

00000cf2 <FUNCtwocomptointnbit>:
     cf2:	61 50       	subi	r22, 0x01	; 1
     cf4:	21 e0       	ldi	r18, 0x01	; 1
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	02 c0       	rjmp	.+4      	; 0xcfe <FUNCtwocomptointnbit+0xc>
     cfa:	22 0f       	add	r18, r18
     cfc:	33 1f       	adc	r19, r19
     cfe:	6a 95       	dec	r22
     d00:	e2 f7       	brpl	.-8      	; 0xcfa <FUNCtwocomptointnbit+0x8>
     d02:	a9 01       	movw	r20, r18
     d04:	41 50       	subi	r20, 0x01	; 1
     d06:	51 09       	sbc	r21, r1
     d08:	b9 01       	movw	r22, r18
     d0a:	68 23       	and	r22, r24
     d0c:	79 23       	and	r23, r25
     d0e:	67 2b       	or	r22, r23
     d10:	29 f0       	breq	.+10     	; 0xd1c <FUNCtwocomptointnbit+0x2a>
     d12:	84 23       	and	r24, r20
     d14:	95 23       	and	r25, r21
     d16:	82 1b       	sub	r24, r18
     d18:	93 0b       	sbc	r25, r19
     d1a:	08 95       	ret
     d1c:	84 23       	and	r24, r20
     d1e:	95 23       	and	r25, r21
     d20:	08 95       	ret

00000d22 <FUNCdec2bcd>:
     d22:	9d ec       	ldi	r25, 0xCD	; 205
     d24:	89 9f       	mul	r24, r25
     d26:	91 2d       	mov	r25, r1
     d28:	11 24       	eor	r1, r1
     d2a:	96 95       	lsr	r25
     d2c:	96 95       	lsr	r25
     d2e:	96 95       	lsr	r25
     d30:	39 2f       	mov	r19, r25
     d32:	33 0f       	add	r19, r19
     d34:	23 2f       	mov	r18, r19
     d36:	22 0f       	add	r18, r18
     d38:	22 0f       	add	r18, r18
     d3a:	23 0f       	add	r18, r19
     d3c:	82 1b       	sub	r24, r18
     d3e:	20 e1       	ldi	r18, 0x10	; 16
     d40:	92 9f       	mul	r25, r18
     d42:	80 0d       	add	r24, r0
     d44:	11 24       	eor	r1, r1
     d46:	08 95       	ret

00000d48 <FUNCbcd2dec>:
     d48:	98 2f       	mov	r25, r24
     d4a:	92 95       	swap	r25
     d4c:	9f 70       	andi	r25, 0x0F	; 15
     d4e:	99 0f       	add	r25, r25
     d50:	29 2f       	mov	r18, r25
     d52:	22 0f       	add	r18, r18
     d54:	22 0f       	add	r18, r18
     d56:	92 0f       	add	r25, r18
     d58:	8f 70       	andi	r24, 0x0F	; 15
     d5a:	89 0f       	add	r24, r25
     d5c:	08 95       	ret

00000d5e <FUNCresizestr>:
     d5e:	fc 01       	movw	r30, r24
     d60:	db 01       	movw	r26, r22
     d62:	a6 53       	subi	r26, 0x36	; 54
     d64:	bd 4f       	sbci	r27, 0xFD	; 253
     d66:	1c 92       	st	X, r1
     d68:	16 16       	cp	r1, r22
     d6a:	17 06       	cpc	r1, r23
     d6c:	14 f5       	brge	.+68     	; 0xdb2 <FUNCresizestr+0x54>
     d6e:	90 81       	ld	r25, Z
     d70:	91 11       	cpse	r25, r1
     d72:	0c c0       	rjmp	.+24     	; 0xd8c <FUNCresizestr+0x2e>
     d74:	17 c0       	rjmp	.+46     	; 0xda4 <FUNCresizestr+0x46>
     d76:	91 91       	ld	r25, Z+
     d78:	91 11       	cpse	r25, r1
     d7a:	0d c0       	rjmp	.+26     	; 0xd96 <FUNCresizestr+0x38>
     d7c:	15 c0       	rjmp	.+42     	; 0xda8 <FUNCresizestr+0x4a>
     d7e:	81 93       	st	Z+, r24
     d80:	2f 5f       	subi	r18, 0xFF	; 255
     d82:	3f 4f       	sbci	r19, 0xFF	; 255
     d84:	26 17       	cp	r18, r22
     d86:	37 07       	cpc	r19, r23
     d88:	d4 f3       	brlt	.-12     	; 0xd7e <FUNCresizestr+0x20>
     d8a:	13 c0       	rjmp	.+38     	; 0xdb2 <FUNCresizestr+0x54>
     d8c:	aa ec       	ldi	r26, 0xCA	; 202
     d8e:	b2 e0       	ldi	r27, 0x02	; 2
     d90:	31 96       	adiw	r30, 0x01	; 1
     d92:	20 e0       	ldi	r18, 0x00	; 0
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	9d 93       	st	X+, r25
     d98:	2f 5f       	subi	r18, 0xFF	; 255
     d9a:	3f 4f       	sbci	r19, 0xFF	; 255
     d9c:	62 17       	cp	r22, r18
     d9e:	73 07       	cpc	r23, r19
     da0:	51 f7       	brne	.-44     	; 0xd76 <FUNCresizestr+0x18>
     da2:	07 c0       	rjmp	.+14     	; 0xdb2 <FUNCresizestr+0x54>
     da4:	20 e0       	ldi	r18, 0x00	; 0
     da6:	30 e0       	ldi	r19, 0x00	; 0
     da8:	f9 01       	movw	r30, r18
     daa:	e6 53       	subi	r30, 0x36	; 54
     dac:	fd 4f       	sbci	r31, 0xFD	; 253
     dae:	80 e2       	ldi	r24, 0x20	; 32
     db0:	e6 cf       	rjmp	.-52     	; 0xd7e <FUNCresizestr+0x20>
     db2:	8a ec       	ldi	r24, 0xCA	; 202
     db4:	92 e0       	ldi	r25, 0x02	; 2
     db6:	08 95       	ret

00000db8 <FUNCtrimmer>:
     db8:	4f 92       	push	r4
     dba:	5f 92       	push	r5
     dbc:	6f 92       	push	r6
     dbe:	7f 92       	push	r7
     dc0:	af 92       	push	r10
     dc2:	bf 92       	push	r11
     dc4:	cf 92       	push	r12
     dc6:	df 92       	push	r13
     dc8:	ef 92       	push	r14
     dca:	ff 92       	push	r15
     dcc:	0f 93       	push	r16
     dce:	1f 93       	push	r17
     dd0:	cf 93       	push	r28
     dd2:	df 93       	push	r29
     dd4:	cd b7       	in	r28, 0x3d	; 61
     dd6:	de b7       	in	r29, 0x3e	; 62
     dd8:	29 01       	movw	r4, r18
     dda:	3a 01       	movw	r6, r20
     ddc:	9b 01       	movw	r18, r22
     dde:	ac 01       	movw	r20, r24
     de0:	24 19       	sub	r18, r4
     de2:	35 09       	sbc	r19, r5
     de4:	46 09       	sbc	r20, r6
     de6:	57 09       	sbc	r21, r7
     de8:	89 89       	ldd	r24, Y+17	; 0x11
     dea:	9a 89       	ldd	r25, Y+18	; 0x12
     dec:	ab 89       	ldd	r26, Y+19	; 0x13
     dee:	bc 89       	ldd	r27, Y+20	; 0x14
     df0:	bc 01       	movw	r22, r24
     df2:	cd 01       	movw	r24, r26
     df4:	6a 19       	sub	r22, r10
     df6:	7b 09       	sbc	r23, r11
     df8:	8c 09       	sbc	r24, r12
     dfa:	9d 09       	sbc	r25, r13
     dfc:	0e 94 8d 13 	call	0x271a	; 0x271a <__mulsi3>
     e00:	a8 01       	movw	r20, r16
     e02:	97 01       	movw	r18, r14
     e04:	24 19       	sub	r18, r4
     e06:	35 09       	sbc	r19, r5
     e08:	46 09       	sbc	r20, r6
     e0a:	57 09       	sbc	r21, r7
     e0c:	0e 94 e5 13 	call	0x27ca	; 0x27ca <__divmodsi4>
     e10:	ca 01       	movw	r24, r20
     e12:	b9 01       	movw	r22, r18
     e14:	6a 0d       	add	r22, r10
     e16:	7b 1d       	adc	r23, r11
     e18:	8c 1d       	adc	r24, r12
     e1a:	9d 1d       	adc	r25, r13
     e1c:	df 91       	pop	r29
     e1e:	cf 91       	pop	r28
     e20:	1f 91       	pop	r17
     e22:	0f 91       	pop	r16
     e24:	ff 90       	pop	r15
     e26:	ef 90       	pop	r14
     e28:	df 90       	pop	r13
     e2a:	cf 90       	pop	r12
     e2c:	bf 90       	pop	r11
     e2e:	af 90       	pop	r10
     e30:	7f 90       	pop	r7
     e32:	6f 90       	pop	r6
     e34:	5f 90       	pop	r5
     e36:	4f 90       	pop	r4
     e38:	08 95       	ret

00000e3a <Pwr>:
     e3a:	70 e0       	ldi	r23, 0x00	; 0
     e3c:	61 15       	cp	r22, r1
     e3e:	71 05       	cpc	r23, r1
     e40:	99 f0       	breq	.+38     	; 0xe68 <Pwr+0x2e>
     e42:	41 e0       	ldi	r20, 0x01	; 1
     e44:	50 e0       	ldi	r21, 0x00	; 0
     e46:	21 e0       	ldi	r18, 0x01	; 1
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	fa 01       	movw	r30, r20
     e4e:	e8 9f       	mul	r30, r24
     e50:	a0 01       	movw	r20, r0
     e52:	e9 9f       	mul	r30, r25
     e54:	50 0d       	add	r21, r0
     e56:	f8 9f       	mul	r31, r24
     e58:	50 0d       	add	r21, r0
     e5a:	11 24       	eor	r1, r1
     e5c:	2f 5f       	subi	r18, 0xFF	; 255
     e5e:	3f 4f       	sbci	r19, 0xFF	; 255
     e60:	62 17       	cp	r22, r18
     e62:	73 07       	cpc	r23, r19
     e64:	98 f7       	brcc	.-26     	; 0xe4c <Pwr+0x12>
     e66:	02 c0       	rjmp	.+4      	; 0xe6c <Pwr+0x32>
     e68:	41 e0       	ldi	r20, 0x01	; 1
     e6a:	50 e0       	ldi	r21, 0x00	; 0
     e6c:	ca 01       	movw	r24, r20
     e6e:	08 95       	ret

00000e70 <StringLength>:
     e70:	fc 01       	movw	r30, r24
     e72:	20 81       	ld	r18, Z
     e74:	22 23       	and	r18, r18
     e76:	41 f0       	breq	.+16     	; 0xe88 <StringLength+0x18>
     e78:	31 96       	adiw	r30, 0x01	; 1
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	01 96       	adiw	r24, 0x01	; 1
     e80:	21 91       	ld	r18, Z+
     e82:	21 11       	cpse	r18, r1
     e84:	fc cf       	rjmp	.-8      	; 0xe7e <StringLength+0xe>
     e86:	08 95       	ret
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	08 95       	ret

00000e8e <FUNCtrim>:
     e8e:	cf 93       	push	r28
     e90:	df 93       	push	r29
     e92:	ec 01       	movw	r28, r24
     e94:	ed df       	rcall	.-38     	; 0xe70 <StringLength>
     e96:	9c 01       	movw	r18, r24
     e98:	21 50       	subi	r18, 0x01	; 1
     e9a:	31 09       	sbc	r19, r1
     e9c:	62 f0       	brmi	.+24     	; 0xeb6 <FUNCtrim+0x28>
     e9e:	fe 01       	movw	r30, r28
     ea0:	e8 0f       	add	r30, r24
     ea2:	f9 1f       	adc	r31, r25
     ea4:	92 91       	ld	r25, -Z
     ea6:	90 32       	cpi	r25, 0x20	; 32
     ea8:	19 f0       	breq	.+6      	; 0xeb0 <FUNCtrim+0x22>
     eaa:	99 50       	subi	r25, 0x09	; 9
     eac:	92 30       	cpi	r25, 0x02	; 2
     eae:	18 f4       	brcc	.+6      	; 0xeb6 <FUNCtrim+0x28>
     eb0:	21 50       	subi	r18, 0x01	; 1
     eb2:	31 09       	sbc	r19, r1
     eb4:	b8 f7       	brcc	.-18     	; 0xea4 <FUNCtrim+0x16>
     eb6:	c2 0f       	add	r28, r18
     eb8:	d3 1f       	adc	r29, r19
     eba:	19 82       	std	Y+1, r1	; 0x01
     ebc:	c9 01       	movw	r24, r18
     ebe:	df 91       	pop	r29
     ec0:	cf 91       	pop	r28
     ec2:	08 95       	ret

00000ec4 <Reverse>:
     ec4:	cf 93       	push	r28
     ec6:	df 93       	push	r29
     ec8:	ec 01       	movw	r28, r24
     eca:	d2 df       	rcall	.-92     	; 0xe70 <StringLength>
     ecc:	9c 01       	movw	r18, r24
     ece:	21 50       	subi	r18, 0x01	; 1
     ed0:	31 09       	sbc	r19, r1
     ed2:	12 16       	cp	r1, r18
     ed4:	13 06       	cpc	r1, r19
     ed6:	84 f4       	brge	.+32     	; 0xef8 <Reverse+0x34>
     ed8:	de 01       	movw	r26, r28
     eda:	a8 0f       	add	r26, r24
     edc:	b9 1f       	adc	r27, r25
     ede:	fe 01       	movw	r30, r28
     ee0:	80 e0       	ldi	r24, 0x00	; 0
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	40 81       	ld	r20, Z
     ee6:	5e 91       	ld	r21, -X
     ee8:	51 93       	st	Z+, r21
     eea:	4c 93       	st	X, r20
     eec:	01 96       	adiw	r24, 0x01	; 1
     eee:	21 50       	subi	r18, 0x01	; 1
     ef0:	31 09       	sbc	r19, r1
     ef2:	82 17       	cp	r24, r18
     ef4:	93 07       	cpc	r25, r19
     ef6:	b4 f3       	brlt	.-20     	; 0xee4 <Reverse+0x20>
     ef8:	df 91       	pop	r29
     efa:	cf 91       	pop	r28
     efc:	08 95       	ret

00000efe <FUNCi32toa>:
     efe:	8f 92       	push	r8
     f00:	9f 92       	push	r9
     f02:	af 92       	push	r10
     f04:	bf 92       	push	r11
     f06:	cf 92       	push	r12
     f08:	df 92       	push	r13
     f0a:	ef 92       	push	r14
     f0c:	ff 92       	push	r15
     f0e:	0f 93       	push	r16
     f10:	1f 93       	push	r17
     f12:	cf 93       	push	r28
     f14:	df 93       	push	r29
     f16:	6b 01       	movw	r12, r22
     f18:	7c 01       	movw	r14, r24
     f1a:	dc 01       	movw	r26, r24
     f1c:	cb 01       	movw	r24, r22
     f1e:	ff 20       	and	r15, r15
     f20:	3c f4       	brge	.+14     	; 0xf30 <FUNCi32toa+0x32>
     f22:	88 27       	eor	r24, r24
     f24:	99 27       	eor	r25, r25
     f26:	dc 01       	movw	r26, r24
     f28:	8c 19       	sub	r24, r12
     f2a:	9d 09       	sbc	r25, r13
     f2c:	ae 09       	sbc	r26, r14
     f2e:	bf 09       	sbc	r27, r15
     f30:	bc 01       	movw	r22, r24
     f32:	cd 01       	movw	r24, r26
     f34:	10 e0       	ldi	r17, 0x00	; 0
     f36:	0f 2e       	mov	r0, r31
     f38:	fa e0       	ldi	r31, 0x0A	; 10
     f3a:	8f 2e       	mov	r8, r31
     f3c:	91 2c       	mov	r9, r1
     f3e:	a1 2c       	mov	r10, r1
     f40:	b1 2c       	mov	r11, r1
     f42:	f0 2d       	mov	r31, r0
     f44:	01 c0       	rjmp	.+2      	; 0xf48 <FUNCi32toa+0x4a>
     f46:	10 2f       	mov	r17, r16
     f48:	01 e0       	ldi	r16, 0x01	; 1
     f4a:	01 0f       	add	r16, r17
     f4c:	c1 2f       	mov	r28, r17
     f4e:	d0 e0       	ldi	r29, 0x00	; 0
     f50:	c6 53       	subi	r28, 0x36	; 54
     f52:	dd 4f       	sbci	r29, 0xFD	; 253
     f54:	a5 01       	movw	r20, r10
     f56:	94 01       	movw	r18, r8
     f58:	0e 94 e5 13 	call	0x27ca	; 0x27ca <__divmodsi4>
     f5c:	60 5d       	subi	r22, 0xD0	; 208
     f5e:	68 83       	st	Y, r22
     f60:	62 2f       	mov	r22, r18
     f62:	73 2f       	mov	r23, r19
     f64:	84 2f       	mov	r24, r20
     f66:	95 2f       	mov	r25, r21
     f68:	16 16       	cp	r1, r22
     f6a:	17 06       	cpc	r1, r23
     f6c:	18 06       	cpc	r1, r24
     f6e:	19 06       	cpc	r1, r25
     f70:	54 f3       	brlt	.-44     	; 0xf46 <FUNCi32toa+0x48>
     f72:	ff 20       	and	r15, r15
     f74:	44 f4       	brge	.+16     	; 0xf86 <FUNCi32toa+0x88>
     f76:	e0 2f       	mov	r30, r16
     f78:	f0 e0       	ldi	r31, 0x00	; 0
     f7a:	e6 53       	subi	r30, 0x36	; 54
     f7c:	fd 4f       	sbci	r31, 0xFD	; 253
     f7e:	8d e2       	ldi	r24, 0x2D	; 45
     f80:	80 83       	st	Z, r24
     f82:	02 e0       	ldi	r16, 0x02	; 2
     f84:	01 0f       	add	r16, r17
     f86:	e0 2f       	mov	r30, r16
     f88:	f0 e0       	ldi	r31, 0x00	; 0
     f8a:	e6 53       	subi	r30, 0x36	; 54
     f8c:	fd 4f       	sbci	r31, 0xFD	; 253
     f8e:	10 82       	st	Z, r1
     f90:	8a ec       	ldi	r24, 0xCA	; 202
     f92:	92 e0       	ldi	r25, 0x02	; 2
     f94:	97 df       	rcall	.-210    	; 0xec4 <Reverse>
     f96:	8a ec       	ldi	r24, 0xCA	; 202
     f98:	92 e0       	ldi	r25, 0x02	; 2
     f9a:	df 91       	pop	r29
     f9c:	cf 91       	pop	r28
     f9e:	1f 91       	pop	r17
     fa0:	0f 91       	pop	r16
     fa2:	ff 90       	pop	r15
     fa4:	ef 90       	pop	r14
     fa6:	df 90       	pop	r13
     fa8:	cf 90       	pop	r12
     faa:	bf 90       	pop	r11
     fac:	af 90       	pop	r10
     fae:	9f 90       	pop	r9
     fb0:	8f 90       	pop	r8
     fb2:	08 95       	ret

00000fb4 <FUNCi16toa>:
     fb4:	0f 93       	push	r16
     fb6:	1f 93       	push	r17
     fb8:	cf 93       	push	r28
     fba:	df 93       	push	r29
     fbc:	ec 01       	movw	r28, r24
     fbe:	99 23       	and	r25, r25
     fc0:	24 f4       	brge	.+8      	; 0xfca <FUNCi16toa+0x16>
     fc2:	88 27       	eor	r24, r24
     fc4:	99 27       	eor	r25, r25
     fc6:	8c 1b       	sub	r24, r28
     fc8:	9d 0b       	sbc	r25, r29
     fca:	20 e0       	ldi	r18, 0x00	; 0
     fcc:	0a e0       	ldi	r16, 0x0A	; 10
     fce:	10 e0       	ldi	r17, 0x00	; 0
     fd0:	01 c0       	rjmp	.+2      	; 0xfd4 <FUNCi16toa+0x20>
     fd2:	23 2f       	mov	r18, r19
     fd4:	31 e0       	ldi	r19, 0x01	; 1
     fd6:	32 0f       	add	r19, r18
     fd8:	e2 2f       	mov	r30, r18
     fda:	f0 e0       	ldi	r31, 0x00	; 0
     fdc:	e6 53       	subi	r30, 0x36	; 54
     fde:	fd 4f       	sbci	r31, 0xFD	; 253
     fe0:	b8 01       	movw	r22, r16
     fe2:	0e 94 b0 13 	call	0x2760	; 0x2760 <__divmodhi4>
     fe6:	80 5d       	subi	r24, 0xD0	; 208
     fe8:	80 83       	st	Z, r24
     fea:	86 2f       	mov	r24, r22
     fec:	97 2f       	mov	r25, r23
     fee:	18 16       	cp	r1, r24
     ff0:	19 06       	cpc	r1, r25
     ff2:	7c f3       	brlt	.-34     	; 0xfd2 <FUNCi16toa+0x1e>
     ff4:	dd 23       	and	r29, r29
     ff6:	44 f4       	brge	.+16     	; 0x1008 <FUNCi16toa+0x54>
     ff8:	e3 2f       	mov	r30, r19
     ffa:	f0 e0       	ldi	r31, 0x00	; 0
     ffc:	e6 53       	subi	r30, 0x36	; 54
     ffe:	fd 4f       	sbci	r31, 0xFD	; 253
    1000:	8d e2       	ldi	r24, 0x2D	; 45
    1002:	80 83       	st	Z, r24
    1004:	32 e0       	ldi	r19, 0x02	; 2
    1006:	32 0f       	add	r19, r18
    1008:	e3 2f       	mov	r30, r19
    100a:	f0 e0       	ldi	r31, 0x00	; 0
    100c:	e6 53       	subi	r30, 0x36	; 54
    100e:	fd 4f       	sbci	r31, 0xFD	; 253
    1010:	10 82       	st	Z, r1
    1012:	8a ec       	ldi	r24, 0xCA	; 202
    1014:	92 e0       	ldi	r25, 0x02	; 2
    1016:	56 df       	rcall	.-340    	; 0xec4 <Reverse>
    1018:	8a ec       	ldi	r24, 0xCA	; 202
    101a:	92 e0       	ldi	r25, 0x02	; 2
    101c:	df 91       	pop	r29
    101e:	cf 91       	pop	r28
    1020:	1f 91       	pop	r17
    1022:	0f 91       	pop	r16
    1024:	08 95       	ret

00001026 <FUNCui16toa>:
    1026:	cf 93       	push	r28
    1028:	ac 01       	movw	r20, r24
    102a:	e0 e0       	ldi	r30, 0x00	; 0
    102c:	c1 e0       	ldi	r28, 0x01	; 1
    102e:	ce 0f       	add	r28, r30
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	e6 53       	subi	r30, 0x36	; 54
    1034:	fd 4f       	sbci	r31, 0xFD	; 253
    1036:	9a 01       	movw	r18, r20
    1038:	ad ec       	ldi	r26, 0xCD	; 205
    103a:	bc ec       	ldi	r27, 0xCC	; 204
    103c:	0e 94 0a 14 	call	0x2814	; 0x2814 <__umulhisi3>
    1040:	96 95       	lsr	r25
    1042:	87 95       	ror	r24
    1044:	96 95       	lsr	r25
    1046:	87 95       	ror	r24
    1048:	96 95       	lsr	r25
    104a:	87 95       	ror	r24
    104c:	9c 01       	movw	r18, r24
    104e:	22 0f       	add	r18, r18
    1050:	33 1f       	adc	r19, r19
    1052:	88 0f       	add	r24, r24
    1054:	99 1f       	adc	r25, r25
    1056:	88 0f       	add	r24, r24
    1058:	99 1f       	adc	r25, r25
    105a:	88 0f       	add	r24, r24
    105c:	99 1f       	adc	r25, r25
    105e:	82 0f       	add	r24, r18
    1060:	93 1f       	adc	r25, r19
    1062:	9a 01       	movw	r18, r20
    1064:	28 1b       	sub	r18, r24
    1066:	39 0b       	sbc	r19, r25
    1068:	c9 01       	movw	r24, r18
    106a:	80 5d       	subi	r24, 0xD0	; 208
    106c:	80 83       	st	Z, r24
    106e:	9a 01       	movw	r18, r20
    1070:	0e 94 0a 14 	call	0x2814	; 0x2814 <__umulhisi3>
    1074:	ac 01       	movw	r20, r24
    1076:	56 95       	lsr	r21
    1078:	47 95       	ror	r20
    107a:	56 95       	lsr	r21
    107c:	47 95       	ror	r20
    107e:	56 95       	lsr	r21
    1080:	47 95       	ror	r20
    1082:	ec 2f       	mov	r30, r28
    1084:	41 15       	cp	r20, r1
    1086:	51 05       	cpc	r21, r1
    1088:	89 f6       	brne	.-94     	; 0x102c <FUNCui16toa+0x6>
    108a:	ec 2f       	mov	r30, r28
    108c:	f0 e0       	ldi	r31, 0x00	; 0
    108e:	e6 53       	subi	r30, 0x36	; 54
    1090:	fd 4f       	sbci	r31, 0xFD	; 253
    1092:	10 82       	st	Z, r1
    1094:	8a ec       	ldi	r24, 0xCA	; 202
    1096:	92 e0       	ldi	r25, 0x02	; 2
    1098:	15 df       	rcall	.-470    	; 0xec4 <Reverse>
    109a:	8a ec       	ldi	r24, 0xCA	; 202
    109c:	92 e0       	ldi	r25, 0x02	; 2
    109e:	cf 91       	pop	r28
    10a0:	08 95       	ret

000010a2 <FUNCbcd2bin>:
    10a2:	98 2f       	mov	r25, r24
    10a4:	92 95       	swap	r25
    10a6:	9f 70       	andi	r25, 0x0F	; 15
    10a8:	99 0f       	add	r25, r25
    10aa:	29 2f       	mov	r18, r25
    10ac:	22 0f       	add	r18, r18
    10ae:	22 0f       	add	r18, r18
    10b0:	92 0f       	add	r25, r18
    10b2:	8f 70       	andi	r24, 0x0F	; 15
    10b4:	89 0f       	add	r24, r25
    10b6:	08 95       	ret

000010b8 <FUNCbin2bcd>:
    10b8:	ac 01       	movw	r20, r24
    10ba:	9c 01       	movw	r18, r24
    10bc:	ad ec       	ldi	r26, 0xCD	; 205
    10be:	bc ec       	ldi	r27, 0xCC	; 204
    10c0:	0e 94 0a 14 	call	0x2814	; 0x2814 <__umulhisi3>
    10c4:	96 95       	lsr	r25
    10c6:	87 95       	ror	r24
    10c8:	96 95       	lsr	r25
    10ca:	87 95       	ror	r24
    10cc:	96 95       	lsr	r25
    10ce:	87 95       	ror	r24
    10d0:	bc 01       	movw	r22, r24
    10d2:	66 0f       	add	r22, r22
    10d4:	77 1f       	adc	r23, r23
    10d6:	9c 01       	movw	r18, r24
    10d8:	22 0f       	add	r18, r18
    10da:	33 1f       	adc	r19, r19
    10dc:	22 0f       	add	r18, r18
    10de:	33 1f       	adc	r19, r19
    10e0:	22 0f       	add	r18, r18
    10e2:	33 1f       	adc	r19, r19
    10e4:	26 0f       	add	r18, r22
    10e6:	37 1f       	adc	r19, r23
    10e8:	42 1b       	sub	r20, r18
    10ea:	53 0b       	sbc	r21, r19
    10ec:	34 2f       	mov	r19, r20
    10ee:	20 e1       	ldi	r18, 0x10	; 16
    10f0:	82 9f       	mul	r24, r18
    10f2:	30 0d       	add	r19, r0
    10f4:	11 24       	eor	r1, r1
    10f6:	83 2f       	mov	r24, r19
    10f8:	08 95       	ret

000010fa <FUNCgcd1>:
    10fa:	cf 92       	push	r12
    10fc:	df 92       	push	r13
    10fe:	ef 92       	push	r14
    1100:	ff 92       	push	r15
    1102:	cf 93       	push	r28
    1104:	df 93       	push	r29
    1106:	cd b7       	in	r28, 0x3d	; 61
    1108:	de b7       	in	r29, 0x3e	; 62
    110a:	28 97       	sbiw	r28, 0x08	; 8
    110c:	0f b6       	in	r0, 0x3f	; 63
    110e:	f8 94       	cli
    1110:	de bf       	out	0x3e, r29	; 62
    1112:	0f be       	out	0x3f, r0	; 63
    1114:	cd bf       	out	0x3d, r28	; 61
    1116:	6b 01       	movw	r12, r22
    1118:	7c 01       	movw	r14, r24
    111a:	69 83       	std	Y+1, r22	; 0x01
    111c:	7a 83       	std	Y+2, r23	; 0x02
    111e:	8b 83       	std	Y+3, r24	; 0x03
    1120:	9c 83       	std	Y+4, r25	; 0x04
    1122:	2d 83       	std	Y+5, r18	; 0x05
    1124:	3e 83       	std	Y+6, r19	; 0x06
    1126:	4f 83       	std	Y+7, r20	; 0x07
    1128:	58 87       	std	Y+8, r21	; 0x08
    112a:	c2 16       	cp	r12, r18
    112c:	d3 06       	cpc	r13, r19
    112e:	e4 06       	cpc	r14, r20
    1130:	f5 06       	cpc	r15, r21
    1132:	34 f4       	brge	.+12     	; 0x1140 <__stack+0x41>
    1134:	be 01       	movw	r22, r28
    1136:	6b 5f       	subi	r22, 0xFB	; 251
    1138:	7f 4f       	sbci	r23, 0xFF	; 255
    113a:	ce 01       	movw	r24, r28
    113c:	01 96       	adiw	r24, 0x01	; 1
    113e:	85 dc       	rcall	.-1782   	; 0xa4a <FUNCswap>
    1140:	8d 81       	ldd	r24, Y+5	; 0x05
    1142:	9e 81       	ldd	r25, Y+6	; 0x06
    1144:	af 81       	ldd	r26, Y+7	; 0x07
    1146:	b8 85       	ldd	r27, Y+8	; 0x08
    1148:	89 2b       	or	r24, r25
    114a:	8a 2b       	or	r24, r26
    114c:	8b 2b       	or	r24, r27
    114e:	71 f4       	brne	.+28     	; 0x116c <__stack+0x6d>
    1150:	69 81       	ldd	r22, Y+1	; 0x01
    1152:	7a 81       	ldd	r23, Y+2	; 0x02
    1154:	8b 81       	ldd	r24, Y+3	; 0x03
    1156:	9c 81       	ldd	r25, Y+4	; 0x04
    1158:	20 e0       	ldi	r18, 0x00	; 0
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	a9 01       	movw	r20, r18
    115e:	0e 94 e5 13 	call	0x27ca	; 0x27ca <__divmodsi4>
    1162:	61 15       	cp	r22, r1
    1164:	71 05       	cpc	r23, r1
    1166:	81 05       	cpc	r24, r1
    1168:	91 05       	cpc	r25, r1
    116a:	29 f4       	brne	.+10     	; 0x1176 <__stack+0x77>
    116c:	6d 81       	ldd	r22, Y+5	; 0x05
    116e:	7e 81       	ldd	r23, Y+6	; 0x06
    1170:	8f 81       	ldd	r24, Y+7	; 0x07
    1172:	98 85       	ldd	r25, Y+8	; 0x08
    1174:	05 c0       	rjmp	.+10     	; 0x1180 <__stack+0x81>
    1176:	6d 83       	std	Y+5, r22	; 0x05
    1178:	7e 83       	std	Y+6, r23	; 0x06
    117a:	8f 83       	std	Y+7, r24	; 0x07
    117c:	98 87       	std	Y+8, r25	; 0x08
    117e:	f6 cf       	rjmp	.-20     	; 0x116c <__stack+0x6d>
    1180:	28 96       	adiw	r28, 0x08	; 8
    1182:	0f b6       	in	r0, 0x3f	; 63
    1184:	f8 94       	cli
    1186:	de bf       	out	0x3e, r29	; 62
    1188:	0f be       	out	0x3f, r0	; 63
    118a:	cd bf       	out	0x3d, r28	; 61
    118c:	df 91       	pop	r29
    118e:	cf 91       	pop	r28
    1190:	ff 90       	pop	r15
    1192:	ef 90       	pop	r14
    1194:	df 90       	pop	r13
    1196:	cf 90       	pop	r12
    1198:	08 95       	ret

0000119a <FUNCpincheck>:
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	02 c0       	rjmp	.+4      	; 0x11a2 <FUNCpincheck+0x8>
    119e:	95 95       	asr	r25
    11a0:	87 95       	ror	r24
    11a2:	6a 95       	dec	r22
    11a4:	e2 f7       	brpl	.-8      	; 0x119e <FUNCpincheck+0x4>
    11a6:	81 70       	andi	r24, 0x01	; 1
    11a8:	08 95       	ret

000011aa <FUNCprint_binary>:
    11aa:	ea ec       	ldi	r30, 0xCA	; 202
    11ac:	f2 e0       	ldi	r31, 0x02	; 2
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	20 e8       	ldi	r18, 0x80	; 128
    11b2:	50 e3       	ldi	r21, 0x30	; 48
    11b4:	41 e3       	ldi	r20, 0x31	; 49
    11b6:	38 2f       	mov	r19, r24
    11b8:	32 23       	and	r19, r18
    11ba:	11 f0       	breq	.+4      	; 0x11c0 <FUNCprint_binary+0x16>
    11bc:	40 83       	st	Z, r20
    11be:	01 c0       	rjmp	.+2      	; 0x11c2 <FUNCprint_binary+0x18>
    11c0:	50 83       	st	Z, r21
    11c2:	26 95       	lsr	r18
    11c4:	9f 5f       	subi	r25, 0xFF	; 255
    11c6:	31 96       	adiw	r30, 0x01	; 1
    11c8:	98 30       	cpi	r25, 0x08	; 8
    11ca:	a9 f7       	brne	.-22     	; 0x11b6 <FUNCprint_binary+0xc>
    11cc:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <FUNCstr+0x8>
    11d0:	8a ec       	ldi	r24, 0xCA	; 202
    11d2:	92 e0       	ldi	r25, 0x02	; 2
    11d4:	08 95       	ret

000011d6 <FUNCmayia>:
    11d6:	a4 2f       	mov	r26, r20
    11d8:	b0 e0       	ldi	r27, 0x00	; 0
    11da:	10 97       	sbiw	r26, 0x00	; 0
    11dc:	61 f0       	breq	.+24     	; 0x11f6 <FUNCmayia+0x20>
    11de:	21 e0       	ldi	r18, 0x01	; 1
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	e1 e0       	ldi	r30, 0x01	; 1
    11e4:	f0 e0       	ldi	r31, 0x00	; 0
    11e6:	ee 0f       	add	r30, r30
    11e8:	ff 1f       	adc	r31, r31
    11ea:	2f 5f       	subi	r18, 0xFF	; 255
    11ec:	3f 4f       	sbci	r19, 0xFF	; 255
    11ee:	a2 17       	cp	r26, r18
    11f0:	b3 07       	cpc	r27, r19
    11f2:	c8 f7       	brcc	.-14     	; 0x11e6 <FUNCmayia+0x10>
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <FUNCmayia+0x24>
    11f6:	e1 e0       	ldi	r30, 0x01	; 1
    11f8:	f0 e0       	ldi	r31, 0x00	; 0
    11fa:	31 97       	sbiw	r30, 0x01	; 1
    11fc:	6e 23       	and	r22, r30
    11fe:	7f 23       	and	r23, r31
    1200:	8e 23       	and	r24, r30
    1202:	9f 23       	and	r25, r31
    1204:	86 27       	eor	r24, r22
    1206:	97 27       	eor	r25, r23
    1208:	68 23       	and	r22, r24
    120a:	79 23       	and	r23, r25
    120c:	02 c0       	rjmp	.+4      	; 0x1212 <FUNCmayia+0x3c>
    120e:	66 0f       	add	r22, r22
    1210:	77 1f       	adc	r23, r23
    1212:	4a 95       	dec	r20
    1214:	e2 f7       	brpl	.-8      	; 0x120e <FUNCmayia+0x38>
    1216:	86 2b       	or	r24, r22
    1218:	97 2b       	or	r25, r23
    121a:	08 95       	ret

0000121c <FUNCenable>:
    121c:	fc 01       	movw	r30, r24
    121e:	9f b7       	in	r25, 0x3f	; 63
    1220:	8f b7       	in	r24, 0x3f	; 63
    1222:	8f 77       	andi	r24, 0x7F	; 127
    1224:	8f bf       	out	0x3f, r24	; 63
    1226:	9f bf       	out	0x3f, r25	; 63
    1228:	8d e1       	ldi	r24, 0x1D	; 29
    122a:	97 e0       	ldi	r25, 0x07	; 7
    122c:	91 83       	std	Z+1, r25	; 0x01
    122e:	80 83       	st	Z, r24
    1230:	88 e3       	ldi	r24, 0x38	; 56
    1232:	97 e0       	ldi	r25, 0x07	; 7
    1234:	93 83       	std	Z+3, r25	; 0x03
    1236:	82 83       	std	Z+2, r24	; 0x02
    1238:	82 e6       	ldi	r24, 0x62	; 98
    123a:	97 e0       	ldi	r25, 0x07	; 7
    123c:	95 83       	std	Z+5, r25	; 0x05
    123e:	84 83       	std	Z+4, r24	; 0x04
    1240:	8b ee       	ldi	r24, 0xEB	; 235
    1242:	98 e0       	ldi	r25, 0x08	; 8
    1244:	97 83       	std	Z+7, r25	; 0x07
    1246:	86 83       	std	Z+6, r24	; 0x06
    1248:	8a e0       	ldi	r24, 0x0A	; 10
    124a:	95 e0       	ldi	r25, 0x05	; 5
    124c:	91 87       	std	Z+9, r25	; 0x09
    124e:	80 87       	std	Z+8, r24	; 0x08
    1250:	88 e1       	ldi	r24, 0x18	; 24
    1252:	95 e0       	ldi	r25, 0x05	; 5
    1254:	93 87       	std	Z+11, r25	; 0x0b
    1256:	82 87       	std	Z+10, r24	; 0x0a
    1258:	8a e1       	ldi	r24, 0x1A	; 26
    125a:	95 e0       	ldi	r25, 0x05	; 5
    125c:	95 87       	std	Z+13, r25	; 0x0d
    125e:	84 87       	std	Z+12, r24	; 0x0c
    1260:	8d e1       	ldi	r24, 0x1D	; 29
    1262:	95 e0       	ldi	r25, 0x05	; 5
    1264:	97 87       	std	Z+15, r25	; 0x0f
    1266:	86 87       	std	Z+14, r24	; 0x0e
    1268:	80 e2       	ldi	r24, 0x20	; 32
    126a:	95 e0       	ldi	r25, 0x05	; 5
    126c:	91 8b       	std	Z+17, r25	; 0x11
    126e:	80 8b       	std	Z+16, r24	; 0x10
    1270:	83 e2       	ldi	r24, 0x23	; 35
    1272:	95 e0       	ldi	r25, 0x05	; 5
    1274:	93 8b       	std	Z+19, r25	; 0x13
    1276:	82 8b       	std	Z+18, r24	; 0x12
    1278:	84 e1       	ldi	r24, 0x14	; 20
    127a:	95 e0       	ldi	r25, 0x05	; 5
    127c:	95 8b       	std	Z+21, r25	; 0x15
    127e:	84 8b       	std	Z+20, r24	; 0x14
    1280:	86 e1       	ldi	r24, 0x16	; 22
    1282:	95 e0       	ldi	r25, 0x05	; 5
    1284:	97 8b       	std	Z+23, r25	; 0x17
    1286:	86 8b       	std	Z+22, r24	; 0x16
    1288:	85 e2       	ldi	r24, 0x25	; 37
    128a:	95 e0       	ldi	r25, 0x05	; 5
    128c:	91 8f       	std	Z+25, r25	; 0x19
    128e:	80 8f       	std	Z+24, r24	; 0x18
    1290:	86 e4       	ldi	r24, 0x46	; 70
    1292:	95 e0       	ldi	r25, 0x05	; 5
    1294:	93 8f       	std	Z+27, r25	; 0x1b
    1296:	82 8f       	std	Z+26, r24	; 0x1a
    1298:	84 e5       	ldi	r24, 0x54	; 84
    129a:	95 e0       	ldi	r25, 0x05	; 5
    129c:	95 8f       	std	Z+29, r25	; 0x1d
    129e:	84 8f       	std	Z+28, r24	; 0x1c
    12a0:	86 e7       	ldi	r24, 0x76	; 118
    12a2:	95 e0       	ldi	r25, 0x05	; 5
    12a4:	97 8f       	std	Z+31, r25	; 0x1f
    12a6:	86 8f       	std	Z+30, r24	; 0x1e
    12a8:	8a ed       	ldi	r24, 0xDA	; 218
    12aa:	97 e0       	ldi	r25, 0x07	; 7
    12ac:	91 a3       	std	Z+33, r25	; 0x21
    12ae:	80 a3       	std	Z+32, r24	; 0x20
    12b0:	83 e1       	ldi	r24, 0x13	; 19
    12b2:	98 e0       	ldi	r25, 0x08	; 8
    12b4:	93 a3       	std	Z+35, r25	; 0x23
    12b6:	82 a3       	std	Z+34, r24	; 0x22
    12b8:	8f e7       	ldi	r24, 0x7F	; 127
    12ba:	97 e0       	ldi	r25, 0x07	; 7
    12bc:	95 a3       	std	Z+37, r25	; 0x25
    12be:	84 a3       	std	Z+36, r24	; 0x24
    12c0:	87 e4       	ldi	r24, 0x47	; 71
    12c2:	97 e0       	ldi	r25, 0x07	; 7
    12c4:	97 a3       	std	Z+39, r25	; 0x27
    12c6:	86 a3       	std	Z+38, r24	; 0x26
    12c8:	8c e1       	ldi	r24, 0x1C	; 28
    12ca:	96 e0       	ldi	r25, 0x06	; 6
    12cc:	91 a7       	std	Z+41, r25	; 0x29
    12ce:	80 a7       	std	Z+40, r24	; 0x28
    12d0:	81 e2       	ldi	r24, 0x21	; 33
    12d2:	96 e0       	ldi	r25, 0x06	; 6
    12d4:	93 a7       	std	Z+43, r25	; 0x2b
    12d6:	82 a7       	std	Z+42, r24	; 0x2a
    12d8:	80 e3       	ldi	r24, 0x30	; 48
    12da:	96 e0       	ldi	r25, 0x06	; 6
    12dc:	95 a7       	std	Z+45, r25	; 0x2d
    12de:	84 a7       	std	Z+44, r24	; 0x2c
    12e0:	84 e5       	ldi	r24, 0x54	; 84
    12e2:	96 e0       	ldi	r25, 0x06	; 6
    12e4:	97 a7       	std	Z+47, r25	; 0x2f
    12e6:	86 a7       	std	Z+46, r24	; 0x2e
    12e8:	86 e5       	ldi	r24, 0x56	; 86
    12ea:	96 e0       	ldi	r25, 0x06	; 6
    12ec:	91 ab       	std	Z+49, r25	; 0x31
    12ee:	80 ab       	std	Z+48, r24	; 0x30
    12f0:	80 e6       	ldi	r24, 0x60	; 96
    12f2:	96 e0       	ldi	r25, 0x06	; 6
    12f4:	93 ab       	std	Z+51, r25	; 0x33
    12f6:	82 ab       	std	Z+50, r24	; 0x32
    12f8:	8d e6       	ldi	r24, 0x6D	; 109
    12fa:	96 e0       	ldi	r25, 0x06	; 6
    12fc:	95 ab       	std	Z+53, r25	; 0x35
    12fe:	84 ab       	std	Z+52, r24	; 0x34
    1300:	89 e7       	ldi	r24, 0x79	; 121
    1302:	96 e0       	ldi	r25, 0x06	; 6
    1304:	97 ab       	std	Z+55, r25	; 0x37
    1306:	86 ab       	std	Z+54, r24	; 0x36
    1308:	81 e9       	ldi	r24, 0x91	; 145
    130a:	96 e0       	ldi	r25, 0x06	; 6
    130c:	91 af       	std	Z+57, r25	; 0x39
    130e:	80 af       	std	Z+56, r24	; 0x38
    1310:	84 ea       	ldi	r24, 0xA4	; 164
    1312:	96 e0       	ldi	r25, 0x06	; 6
    1314:	93 af       	std	Z+59, r25	; 0x3b
    1316:	82 af       	std	Z+58, r24	; 0x3a
    1318:	8f ea       	ldi	r24, 0xAF	; 175
    131a:	96 e0       	ldi	r25, 0x06	; 6
    131c:	95 af       	std	Z+61, r25	; 0x3d
    131e:	84 af       	std	Z+60, r24	; 0x3c
    1320:	8c ed       	ldi	r24, 0xDC	; 220
    1322:	96 e0       	ldi	r25, 0x06	; 6
    1324:	97 af       	std	Z+63, r25	; 0x3f
    1326:	86 af       	std	Z+62, r24	; 0x3e
    1328:	df 01       	movw	r26, r30
    132a:	a0 5c       	subi	r26, 0xC0	; 192
    132c:	bf 4f       	sbci	r27, 0xFF	; 255
    132e:	81 e5       	ldi	r24, 0x51	; 81
    1330:	98 e0       	ldi	r25, 0x08	; 8
    1332:	11 96       	adiw	r26, 0x01	; 1
    1334:	9c 93       	st	X, r25
    1336:	8e 93       	st	-X, r24
    1338:	12 96       	adiw	r26, 0x02	; 2
    133a:	8c e5       	ldi	r24, 0x5C	; 92
    133c:	98 e0       	ldi	r25, 0x08	; 8
    133e:	11 96       	adiw	r26, 0x01	; 1
    1340:	9c 93       	st	X, r25
    1342:	8e 93       	st	-X, r24
    1344:	12 96       	adiw	r26, 0x02	; 2
    1346:	8d e7       	ldi	r24, 0x7D	; 125
    1348:	98 e0       	ldi	r25, 0x08	; 8
    134a:	11 96       	adiw	r26, 0x01	; 1
    134c:	9c 93       	st	X, r25
    134e:	8e 93       	st	-X, r24
    1350:	12 96       	adiw	r26, 0x02	; 2
    1352:	8d ec       	ldi	r24, 0xCD	; 205
    1354:	98 e0       	ldi	r25, 0x08	; 8
    1356:	11 96       	adiw	r26, 0x01	; 1
    1358:	9c 93       	st	X, r25
    135a:	8e 93       	st	-X, r24
    135c:	12 96       	adiw	r26, 0x02	; 2
    135e:	85 ed       	ldi	r24, 0xD5	; 213
    1360:	98 e0       	ldi	r25, 0x08	; 8
    1362:	11 96       	adiw	r26, 0x01	; 1
    1364:	9c 93       	st	X, r25
    1366:	8e 93       	st	-X, r24
    1368:	12 96       	adiw	r26, 0x02	; 2
    136a:	8c e3       	ldi	r24, 0x3C	; 60
    136c:	9a e0       	ldi	r25, 0x0A	; 10
    136e:	8d 93       	st	X+, r24
    1370:	9c 93       	st	X, r25
    1372:	cf 01       	movw	r24, r30
    1374:	08 95       	ret

00001376 <FUNCreverse>:
/************/
void FUNCreverse(char* str, int len)
{
	int i = 0, j = len - 1, temp;
    1376:	9b 01       	movw	r18, r22
    1378:	21 50       	subi	r18, 0x01	; 1
    137a:	31 09       	sbc	r19, r1
	while (i < j) {
    137c:	12 16       	cp	r1, r18
    137e:	13 06       	cpc	r1, r19
    1380:	84 f4       	brge	.+32     	; 0x13a2 <FUNCreverse+0x2c>
    1382:	fc 01       	movw	r30, r24
    1384:	e6 0f       	add	r30, r22
    1386:	f7 1f       	adc	r31, r23
    1388:	dc 01       	movw	r26, r24
    138a:	80 e0       	ldi	r24, 0x00	; 0
    138c:	90 e0       	ldi	r25, 0x00	; 0
		temp = str[i];
    138e:	4c 91       	ld	r20, X
		str[i] = str[j];
    1390:	52 91       	ld	r21, -Z
    1392:	5d 93       	st	X+, r21
		str[j] = temp;
    1394:	40 83       	st	Z, r20
		i++;
    1396:	01 96       	adiw	r24, 0x01	; 1
		j--;
    1398:	21 50       	subi	r18, 0x01	; 1
    139a:	31 09       	sbc	r19, r1
}
/************/
void FUNCreverse(char* str, int len)
{
	int i = 0, j = len - 1, temp;
	while (i < j) {
    139c:	82 17       	cp	r24, r18
    139e:	93 07       	cpc	r25, r19
    13a0:	b4 f3       	brlt	.-20     	; 0x138e <FUNCreverse+0x18>
    13a2:	08 95       	ret

000013a4 <FUNCintToStr>:
		i++;
		j--;
	}
}
int FUNCintToStr(int32_t n, char str[], uint8_t n_digit)
{
    13a4:	4f 92       	push	r4
    13a6:	5f 92       	push	r5
    13a8:	6f 92       	push	r6
    13aa:	7f 92       	push	r7
    13ac:	9f 92       	push	r9
    13ae:	af 92       	push	r10
    13b0:	bf 92       	push	r11
    13b2:	cf 92       	push	r12
    13b4:	df 92       	push	r13
    13b6:	ef 92       	push	r14
    13b8:	ff 92       	push	r15
    13ba:	0f 93       	push	r16
    13bc:	1f 93       	push	r17
    13be:	cf 93       	push	r28
    13c0:	df 93       	push	r29
    13c2:	5a 01       	movw	r10, r20
	int k = 0;
	int8_t sign=0;
	if (n < 0){
    13c4:	99 23       	and	r25, r25
    13c6:	54 f4       	brge	.+20     	; 0x13dc <FUNCintToStr+0x38>
		n = -n;
    13c8:	90 95       	com	r25
    13ca:	80 95       	com	r24
    13cc:	70 95       	com	r23
    13ce:	61 95       	neg	r22
    13d0:	7f 4f       	sbci	r23, 0xFF	; 255
    13d2:	8f 4f       	sbci	r24, 0xFF	; 255
    13d4:	9f 4f       	sbci	r25, 0xFF	; 255
		sign=-ONE;
    13d6:	99 24       	eor	r9, r9
    13d8:	9a 94       	dec	r9
    13da:	01 c0       	rjmp	.+2      	; 0x13de <FUNCintToStr+0x3a>
	}
}
int FUNCintToStr(int32_t n, char str[], uint8_t n_digit)
{
	int k = 0;
	int8_t sign=0;
    13dc:	91 2c       	mov	r9, r1
    13de:	75 01       	movw	r14, r10
    13e0:	00 e0       	ldi	r16, 0x00	; 0
    13e2:	10 e0       	ldi	r17, 0x00	; 0
	if (n < 0){
		n = -n;
		sign=-ONE;
	}
    do{ 
        str[k++] = (n % 10) + '0'; 
    13e4:	0f 2e       	mov	r0, r31
    13e6:	fa e0       	ldi	r31, 0x0A	; 10
    13e8:	4f 2e       	mov	r4, r31
    13ea:	51 2c       	mov	r5, r1
    13ec:	61 2c       	mov	r6, r1
    13ee:	71 2c       	mov	r7, r1
    13f0:	f0 2d       	mov	r31, r0
    }while((n/=10)>0 || k < n_digit);
    13f2:	c2 2e       	mov	r12, r18
    13f4:	d1 2c       	mov	r13, r1
    13f6:	03 c0       	rjmp	.+6      	; 0x13fe <FUNCintToStr+0x5a>
    13f8:	8e 01       	movw	r16, r28
    13fa:	01 c0       	rjmp	.+2      	; 0x13fe <FUNCintToStr+0x5a>
    13fc:	8e 01       	movw	r16, r28
	if (n < 0){
		n = -n;
		sign=-ONE;
	}
    do{ 
        str[k++] = (n % 10) + '0'; 
    13fe:	e8 01       	movw	r28, r16
    1400:	21 96       	adiw	r28, 0x01	; 1
    1402:	a3 01       	movw	r20, r6
    1404:	92 01       	movw	r18, r4
    1406:	0e 94 e5 13 	call	0x27ca	; 0x27ca <__divmodsi4>
    140a:	60 5d       	subi	r22, 0xD0	; 208
    140c:	f7 01       	movw	r30, r14
    140e:	61 93       	st	Z+, r22
    1410:	7f 01       	movw	r14, r30
    }while((n/=10)>0 || k < n_digit);
    1412:	62 2f       	mov	r22, r18
    1414:	73 2f       	mov	r23, r19
    1416:	84 2f       	mov	r24, r20
    1418:	95 2f       	mov	r25, r21
    141a:	16 16       	cp	r1, r22
    141c:	17 06       	cpc	r1, r23
    141e:	18 06       	cpc	r1, r24
    1420:	19 06       	cpc	r1, r25
    1422:	54 f3       	brlt	.-44     	; 0x13f8 <FUNCintToStr+0x54>
    1424:	cc 15       	cp	r28, r12
    1426:	dd 05       	cpc	r29, r13
    1428:	4c f3       	brlt	.-46     	; 0x13fc <FUNCintToStr+0x58>
		
	if (sign < 0)
    142a:	99 20       	and	r9, r9
    142c:	3c f4       	brge	.+14     	; 0x143c <FUNCintToStr+0x98>
		str[k++] = '-';
    142e:	0e 5f       	subi	r16, 0xFE	; 254
    1430:	1f 4f       	sbci	r17, 0xFF	; 255
    1432:	ca 0d       	add	r28, r10
    1434:	db 1d       	adc	r29, r11
    1436:	8d e2       	ldi	r24, 0x2D	; 45
    1438:	88 83       	st	Y, r24
    143a:	06 c0       	rjmp	.+12     	; 0x1448 <FUNCintToStr+0xa4>
	else
		str[k++] = ' ';
    143c:	0e 5f       	subi	r16, 0xFE	; 254
    143e:	1f 4f       	sbci	r17, 0xFF	; 255
    1440:	ca 0d       	add	r28, r10
    1442:	db 1d       	adc	r29, r11
    1444:	80 e2       	ldi	r24, 0x20	; 32
    1446:	88 83       	st	Y, r24
    FUNCreverse(str, k); 
    1448:	b8 01       	movw	r22, r16
    144a:	c5 01       	movw	r24, r10
    144c:	94 df       	rcall	.-216    	; 0x1376 <FUNCreverse>
    str[k] = '\0';
    144e:	f5 01       	movw	r30, r10
    1450:	e0 0f       	add	r30, r16
    1452:	f1 1f       	adc	r31, r17
    1454:	10 82       	st	Z, r1
    return k;
}
    1456:	c8 01       	movw	r24, r16
    1458:	df 91       	pop	r29
    145a:	cf 91       	pop	r28
    145c:	1f 91       	pop	r17
    145e:	0f 91       	pop	r16
    1460:	ff 90       	pop	r15
    1462:	ef 90       	pop	r14
    1464:	df 90       	pop	r13
    1466:	cf 90       	pop	r12
    1468:	bf 90       	pop	r11
    146a:	af 90       	pop	r10
    146c:	9f 90       	pop	r9
    146e:	7f 90       	pop	r7
    1470:	6f 90       	pop	r6
    1472:	5f 90       	pop	r5
    1474:	4f 90       	pop	r4
    1476:	08 95       	ret

00001478 <FUNCftoa>:
char* FUNCftoa(float n, char* res, uint8_t afterpoint)
{
    1478:	3f 92       	push	r3
    147a:	4f 92       	push	r4
    147c:	5f 92       	push	r5
    147e:	6f 92       	push	r6
    1480:	7f 92       	push	r7
    1482:	8f 92       	push	r8
    1484:	9f 92       	push	r9
    1486:	af 92       	push	r10
    1488:	bf 92       	push	r11
    148a:	cf 92       	push	r12
    148c:	df 92       	push	r13
    148e:	ef 92       	push	r14
    1490:	ff 92       	push	r15
    1492:	0f 93       	push	r16
    1494:	1f 93       	push	r17
    1496:	cf 93       	push	r28
    1498:	df 93       	push	r29
    149a:	6b 01       	movw	r12, r22
    149c:	7c 01       	movw	r14, r24
    149e:	ea 01       	movw	r28, r20
    14a0:	32 2e       	mov	r3, r18
	int l;
	int32_t ipart = (int32_t)n;
    14a2:	8c d6       	rcall	.+3352   	; 0x21bc <__fixsfsi>
    14a4:	4b 01       	movw	r8, r22
    14a6:	5c 01       	movw	r10, r24
	float fpart;
	
	fpart = n - (float)ipart;
	
	// string part decimal
	l =	FUNCintToStr(ipart, res, 0);
    14a8:	20 e0       	ldi	r18, 0x00	; 0
    14aa:	ae 01       	movw	r20, r28
    14ac:	7b df       	rcall	.-266    	; 0x13a4 <FUNCintToStr>
    14ae:	8c 01       	movw	r16, r24
	
	// part fraccional
	if (afterpoint != 0) {
    14b0:	33 20       	and	r3, r3
    14b2:	89 f1       	breq	.+98     	; 0x1516 <FUNCftoa+0x9e>
		res[l] = '.';
    14b4:	fe 01       	movw	r30, r28
    14b6:	e8 0f       	add	r30, r24
    14b8:	f9 1f       	adc	r31, r25
    14ba:	8e e2       	ldi	r24, 0x2E	; 46
    14bc:	80 83       	st	Z, r24
		
		ipart = fpart * pow(10, afterpoint);
    14be:	63 2d       	mov	r22, r3
    14c0:	70 e0       	ldi	r23, 0x00	; 0
    14c2:	80 e0       	ldi	r24, 0x00	; 0
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	ab d6       	rcall	.+3414   	; 0x221e <__floatunsisf>
    14c8:	9b 01       	movw	r18, r22
    14ca:	ac 01       	movw	r20, r24
    14cc:	60 e0       	ldi	r22, 0x00	; 0
    14ce:	70 e0       	ldi	r23, 0x00	; 0
    14d0:	80 e2       	ldi	r24, 0x20	; 32
    14d2:	91 e4       	ldi	r25, 0x41	; 65
    14d4:	bd d7       	rcall	.+3962   	; 0x2450 <pow>
    14d6:	2b 01       	movw	r4, r22
    14d8:	3c 01       	movw	r6, r24
    14da:	c5 01       	movw	r24, r10
    14dc:	b4 01       	movw	r22, r8
    14de:	a1 d6       	rcall	.+3394   	; 0x2222 <__floatsisf>
    14e0:	9b 01       	movw	r18, r22
    14e2:	ac 01       	movw	r20, r24
    14e4:	c7 01       	movw	r24, r14
    14e6:	b6 01       	movw	r22, r12
    14e8:	98 d5       	rcall	.+2864   	; 0x201a <__subsf3>
    14ea:	a3 01       	movw	r20, r6
    14ec:	92 01       	movw	r18, r4
    14ee:	4d d7       	rcall	.+3738   	; 0x238a <__mulsf3>
    14f0:	65 d6       	rcall	.+3274   	; 0x21bc <__fixsfsi>
    14f2:	6b 01       	movw	r12, r22
    14f4:	7c 01       	movw	r14, r24
		if(ipart < 0)
			ipart = -ipart;
		
		FUNCintToStr(ipart, res + l + 1, afterpoint);
    14f6:	a8 01       	movw	r20, r16
    14f8:	4f 5f       	subi	r20, 0xFF	; 255
    14fa:	5f 4f       	sbci	r21, 0xFF	; 255
    14fc:	4c 0f       	add	r20, r28
    14fe:	5d 1f       	adc	r21, r29
    1500:	99 23       	and	r25, r25
    1502:	3c f4       	brge	.+14     	; 0x1512 <FUNCftoa+0x9a>
    1504:	66 27       	eor	r22, r22
    1506:	77 27       	eor	r23, r23
    1508:	cb 01       	movw	r24, r22
    150a:	6c 19       	sub	r22, r12
    150c:	7d 09       	sbc	r23, r13
    150e:	8e 09       	sbc	r24, r14
    1510:	9f 09       	sbc	r25, r15
    1512:	23 2d       	mov	r18, r3
    1514:	47 df       	rcall	.-370    	; 0x13a4 <FUNCintToStr>
	}
	return res;
}
    1516:	ce 01       	movw	r24, r28
    1518:	df 91       	pop	r29
    151a:	cf 91       	pop	r28
    151c:	1f 91       	pop	r17
    151e:	0f 91       	pop	r16
    1520:	ff 90       	pop	r15
    1522:	ef 90       	pop	r14
    1524:	df 90       	pop	r13
    1526:	cf 90       	pop	r12
    1528:	bf 90       	pop	r11
    152a:	af 90       	pop	r10
    152c:	9f 90       	pop	r9
    152e:	8f 90       	pop	r8
    1530:	7f 90       	pop	r7
    1532:	6f 90       	pop	r6
    1534:	5f 90       	pop	r5
    1536:	4f 90       	pop	r4
    1538:	3f 90       	pop	r3
    153a:	08 95       	ret

0000153c <LCD0_write>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    153c:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1540:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    1544:	90 81       	ld	r25, Z
    1546:	9d 7f       	andi	r25, 0xFD	; 253
    1548:	90 83       	st	Z, r25
    154a:	67 2b       	or	r22, r23
    154c:	41 f0       	breq	.+16     	; 0x155e <LCD0_write+0x22>
    154e:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1552:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    1556:	90 81       	ld	r25, Z
    1558:	91 60       	ori	r25, 0x01	; 1
    155a:	90 83       	st	Z, r25
    155c:	07 c0       	rjmp	.+14     	; 0x156c <LCD0_write+0x30>
    155e:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1562:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    1566:	90 81       	ld	r25, Z
    1568:	9e 7f       	andi	r25, 0xFE	; 254
    156a:	90 83       	st	Z, r25
    156c:	e0 91 e6 02 	lds	r30, 0x02E6	; 0x8002e6 <lcd0_DDR>
    1570:	f0 91 e7 02 	lds	r31, 0x02E7	; 0x8002e7 <lcd0_DDR+0x1>
    1574:	90 81       	ld	r25, Z
    1576:	90 6f       	ori	r25, 0xF0	; 240
    1578:	90 83       	st	Z, r25
    157a:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    157e:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    1582:	90 81       	ld	r25, Z
    1584:	94 60       	ori	r25, 0x04	; 4
    1586:	90 83       	st	Z, r25
    1588:	88 23       	and	r24, r24
    158a:	44 f4       	brge	.+16     	; 0x159c <LCD0_write+0x60>
    158c:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1590:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    1594:	90 81       	ld	r25, Z
    1596:	90 68       	ori	r25, 0x80	; 128
    1598:	90 83       	st	Z, r25
    159a:	07 c0       	rjmp	.+14     	; 0x15aa <LCD0_write+0x6e>
    159c:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    15a0:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    15a4:	90 81       	ld	r25, Z
    15a6:	9f 77       	andi	r25, 0x7F	; 127
    15a8:	90 83       	st	Z, r25
    15aa:	86 ff       	sbrs	r24, 6
    15ac:	08 c0       	rjmp	.+16     	; 0x15be <LCD0_write+0x82>
    15ae:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    15b2:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    15b6:	90 81       	ld	r25, Z
    15b8:	90 64       	ori	r25, 0x40	; 64
    15ba:	90 83       	st	Z, r25
    15bc:	07 c0       	rjmp	.+14     	; 0x15cc <LCD0_write+0x90>
    15be:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    15c2:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    15c6:	90 81       	ld	r25, Z
    15c8:	9f 7b       	andi	r25, 0xBF	; 191
    15ca:	90 83       	st	Z, r25
    15cc:	85 ff       	sbrs	r24, 5
    15ce:	08 c0       	rjmp	.+16     	; 0x15e0 <LCD0_write+0xa4>
    15d0:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    15d4:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    15d8:	90 81       	ld	r25, Z
    15da:	90 62       	ori	r25, 0x20	; 32
    15dc:	90 83       	st	Z, r25
    15de:	07 c0       	rjmp	.+14     	; 0x15ee <LCD0_write+0xb2>
    15e0:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    15e4:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    15e8:	90 81       	ld	r25, Z
    15ea:	9f 7d       	andi	r25, 0xDF	; 223
    15ec:	90 83       	st	Z, r25
    15ee:	84 ff       	sbrs	r24, 4
    15f0:	08 c0       	rjmp	.+16     	; 0x1602 <LCD0_write+0xc6>
    15f2:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    15f6:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    15fa:	90 81       	ld	r25, Z
    15fc:	90 61       	ori	r25, 0x10	; 16
    15fe:	90 83       	st	Z, r25
    1600:	07 c0       	rjmp	.+14     	; 0x1610 <LCD0_write+0xd4>
    1602:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1606:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    160a:	90 81       	ld	r25, Z
    160c:	9f 7e       	andi	r25, 0xEF	; 239
    160e:	90 83       	st	Z, r25
    1610:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1614:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    1618:	90 81       	ld	r25, Z
    161a:	9b 7f       	andi	r25, 0xFB	; 251
    161c:	90 83       	st	Z, r25
    161e:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1622:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    1626:	90 81       	ld	r25, Z
    1628:	94 60       	ori	r25, 0x04	; 4
    162a:	90 83       	st	Z, r25
    162c:	83 ff       	sbrs	r24, 3
    162e:	08 c0       	rjmp	.+16     	; 0x1640 <LCD0_write+0x104>
    1630:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1634:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    1638:	90 81       	ld	r25, Z
    163a:	90 68       	ori	r25, 0x80	; 128
    163c:	90 83       	st	Z, r25
    163e:	07 c0       	rjmp	.+14     	; 0x164e <LCD0_write+0x112>
    1640:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1644:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    1648:	90 81       	ld	r25, Z
    164a:	9f 77       	andi	r25, 0x7F	; 127
    164c:	90 83       	st	Z, r25
    164e:	82 ff       	sbrs	r24, 2
    1650:	08 c0       	rjmp	.+16     	; 0x1662 <LCD0_write+0x126>
    1652:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1656:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    165a:	90 81       	ld	r25, Z
    165c:	90 64       	ori	r25, 0x40	; 64
    165e:	90 83       	st	Z, r25
    1660:	07 c0       	rjmp	.+14     	; 0x1670 <LCD0_write+0x134>
    1662:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1666:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    166a:	90 81       	ld	r25, Z
    166c:	9f 7b       	andi	r25, 0xBF	; 191
    166e:	90 83       	st	Z, r25
    1670:	81 ff       	sbrs	r24, 1
    1672:	08 c0       	rjmp	.+16     	; 0x1684 <LCD0_write+0x148>
    1674:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1678:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    167c:	90 81       	ld	r25, Z
    167e:	90 62       	ori	r25, 0x20	; 32
    1680:	90 83       	st	Z, r25
    1682:	07 c0       	rjmp	.+14     	; 0x1692 <LCD0_write+0x156>
    1684:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1688:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    168c:	90 81       	ld	r25, Z
    168e:	9f 7d       	andi	r25, 0xDF	; 223
    1690:	90 83       	st	Z, r25
    1692:	80 ff       	sbrs	r24, 0
    1694:	08 c0       	rjmp	.+16     	; 0x16a6 <LCD0_write+0x16a>
    1696:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    169a:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    169e:	80 81       	ld	r24, Z
    16a0:	80 61       	ori	r24, 0x10	; 16
    16a2:	80 83       	st	Z, r24
    16a4:	07 c0       	rjmp	.+14     	; 0x16b4 <LCD0_write+0x178>
    16a6:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    16aa:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    16ae:	80 81       	ld	r24, Z
    16b0:	8f 7e       	andi	r24, 0xEF	; 239
    16b2:	80 83       	st	Z, r24
    16b4:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    16b8:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    16bc:	80 81       	ld	r24, Z
    16be:	8b 7f       	andi	r24, 0xFB	; 251
    16c0:	80 83       	st	Z, r24
    16c2:	08 95       	ret

000016c4 <LCD0_read>:
    16c4:	e0 91 e6 02 	lds	r30, 0x02E6	; 0x8002e6 <lcd0_DDR>
    16c8:	f0 91 e7 02 	lds	r31, 0x02E7	; 0x8002e7 <lcd0_DDR+0x1>
    16cc:	20 81       	ld	r18, Z
    16ce:	2f 70       	andi	r18, 0x0F	; 15
    16d0:	20 83       	st	Z, r18
    16d2:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    16d6:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    16da:	20 81       	ld	r18, Z
    16dc:	20 6f       	ori	r18, 0xF0	; 240
    16de:	20 83       	st	Z, r18
    16e0:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    16e4:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    16e8:	20 81       	ld	r18, Z
    16ea:	22 60       	ori	r18, 0x02	; 2
    16ec:	20 83       	st	Z, r18
    16ee:	89 2b       	or	r24, r25
    16f0:	41 f0       	breq	.+16     	; 0x1702 <LCD0_read+0x3e>
    16f2:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    16f6:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    16fa:	80 81       	ld	r24, Z
    16fc:	81 60       	ori	r24, 0x01	; 1
    16fe:	80 83       	st	Z, r24
    1700:	07 c0       	rjmp	.+14     	; 0x1710 <LCD0_read+0x4c>
    1702:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1706:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    170a:	80 81       	ld	r24, Z
    170c:	8e 7f       	andi	r24, 0xFE	; 254
    170e:	80 83       	st	Z, r24
    1710:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1714:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    1718:	80 81       	ld	r24, Z
    171a:	84 60       	ori	r24, 0x04	; 4
    171c:	80 83       	st	Z, r24
    171e:	e0 91 df 02 	lds	r30, 0x02DF	; 0x8002df <lcd0_PIN>
    1722:	f0 91 e0 02 	lds	r31, 0x02E0	; 0x8002e0 <lcd0_PIN+0x1>
    1726:	80 81       	ld	r24, Z
    1728:	88 23       	and	r24, r24
    172a:	14 f0       	brlt	.+4      	; 0x1730 <LCD0_read+0x6c>
    172c:	80 e0       	ldi	r24, 0x00	; 0
    172e:	01 c0       	rjmp	.+2      	; 0x1732 <LCD0_read+0x6e>
    1730:	80 e8       	ldi	r24, 0x80	; 128
    1732:	90 81       	ld	r25, Z
    1734:	96 ff       	sbrs	r25, 6
    1736:	02 c0       	rjmp	.+4      	; 0x173c <LCD0_read+0x78>
    1738:	80 64       	ori	r24, 0x40	; 64
    173a:	01 c0       	rjmp	.+2      	; 0x173e <LCD0_read+0x7a>
    173c:	8f 7b       	andi	r24, 0xBF	; 191
    173e:	90 81       	ld	r25, Z
    1740:	95 ff       	sbrs	r25, 5
    1742:	02 c0       	rjmp	.+4      	; 0x1748 <LCD0_read+0x84>
    1744:	80 62       	ori	r24, 0x20	; 32
    1746:	01 c0       	rjmp	.+2      	; 0x174a <LCD0_read+0x86>
    1748:	8f 7d       	andi	r24, 0xDF	; 223
    174a:	90 81       	ld	r25, Z
    174c:	94 ff       	sbrs	r25, 4
    174e:	02 c0       	rjmp	.+4      	; 0x1754 <LCD0_read+0x90>
    1750:	80 61       	ori	r24, 0x10	; 16
    1752:	01 c0       	rjmp	.+2      	; 0x1756 <LCD0_read+0x92>
    1754:	8f 7e       	andi	r24, 0xEF	; 239
    1756:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    175a:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    175e:	90 81       	ld	r25, Z
    1760:	9b 7f       	andi	r25, 0xFB	; 251
    1762:	90 83       	st	Z, r25
    1764:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1768:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    176c:	90 81       	ld	r25, Z
    176e:	94 60       	ori	r25, 0x04	; 4
    1770:	90 83       	st	Z, r25
    1772:	e0 91 df 02 	lds	r30, 0x02DF	; 0x8002df <lcd0_PIN>
    1776:	f0 91 e0 02 	lds	r31, 0x02E0	; 0x8002e0 <lcd0_PIN+0x1>
    177a:	90 81       	ld	r25, Z
    177c:	99 23       	and	r25, r25
    177e:	14 f4       	brge	.+4      	; 0x1784 <LCD0_read+0xc0>
    1780:	88 60       	ori	r24, 0x08	; 8
    1782:	01 c0       	rjmp	.+2      	; 0x1786 <LCD0_read+0xc2>
    1784:	87 7f       	andi	r24, 0xF7	; 247
    1786:	90 81       	ld	r25, Z
    1788:	96 ff       	sbrs	r25, 6
    178a:	02 c0       	rjmp	.+4      	; 0x1790 <LCD0_read+0xcc>
    178c:	84 60       	ori	r24, 0x04	; 4
    178e:	01 c0       	rjmp	.+2      	; 0x1792 <LCD0_read+0xce>
    1790:	8b 7f       	andi	r24, 0xFB	; 251
    1792:	90 81       	ld	r25, Z
    1794:	95 ff       	sbrs	r25, 5
    1796:	02 c0       	rjmp	.+4      	; 0x179c <LCD0_read+0xd8>
    1798:	82 60       	ori	r24, 0x02	; 2
    179a:	01 c0       	rjmp	.+2      	; 0x179e <LCD0_read+0xda>
    179c:	8d 7f       	andi	r24, 0xFD	; 253
    179e:	90 81       	ld	r25, Z
    17a0:	94 ff       	sbrs	r25, 4
    17a2:	02 c0       	rjmp	.+4      	; 0x17a8 <LCD0_read+0xe4>
    17a4:	81 60       	ori	r24, 0x01	; 1
    17a6:	01 c0       	rjmp	.+2      	; 0x17aa <LCD0_read+0xe6>
    17a8:	8e 7f       	andi	r24, 0xFE	; 254
    17aa:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    17ae:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    17b2:	90 81       	ld	r25, Z
    17b4:	9b 7f       	andi	r25, 0xFB	; 251
    17b6:	90 83       	st	Z, r25
    17b8:	08 95       	ret

000017ba <LCD0_BF>:
    17ba:	cf 93       	push	r28
    17bc:	df 93       	push	r29
    17be:	80 e0       	ldi	r24, 0x00	; 0
    17c0:	90 e0       	ldi	r25, 0x00	; 0
    17c2:	80 df       	rcall	.-256    	; 0x16c4 <LCD0_read>
    17c4:	cb e0       	ldi	r28, 0x0B	; 11
    17c6:	d0 e0       	ldi	r29, 0x00	; 0
    17c8:	05 c0       	rjmp	.+10     	; 0x17d4 <LCD0_BF+0x1a>
    17ca:	80 e0       	ldi	r24, 0x00	; 0
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	7a df       	rcall	.-268    	; 0x16c4 <LCD0_read>
    17d0:	21 97       	sbiw	r28, 0x01	; 1
    17d2:	11 f0       	breq	.+4      	; 0x17d8 <LCD0_BF+0x1e>
    17d4:	88 23       	and	r24, r24
    17d6:	cc f3       	brlt	.-14     	; 0x17ca <LCD0_BF+0x10>
    17d8:	df 91       	pop	r29
    17da:	cf 91       	pop	r28
    17dc:	08 95       	ret

000017de <LCD0_putch>:
    17de:	61 e0       	ldi	r22, 0x01	; 1
    17e0:	70 e0       	ldi	r23, 0x00	; 0
    17e2:	ac de       	rcall	.-680    	; 0x153c <LCD0_write>
    17e4:	ea cf       	rjmp	.-44     	; 0x17ba <LCD0_BF>
    17e6:	08 95       	ret

000017e8 <LCD0_getch>:
    17e8:	cf 93       	push	r28
    17ea:	81 e0       	ldi	r24, 0x01	; 1
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	6a df       	rcall	.-300    	; 0x16c4 <LCD0_read>
    17f0:	c8 2f       	mov	r28, r24
    17f2:	e3 df       	rcall	.-58     	; 0x17ba <LCD0_BF>
    17f4:	8c 2f       	mov	r24, r28
    17f6:	cf 91       	pop	r28
    17f8:	08 95       	ret

000017fa <LCD0_string>:
    17fa:	cf 93       	push	r28
    17fc:	df 93       	push	r29
    17fe:	ec 01       	movw	r28, r24
    1800:	88 81       	ld	r24, Y
    1802:	88 23       	and	r24, r24
    1804:	41 f0       	breq	.+16     	; 0x1816 <LCD0_string+0x1c>
    1806:	21 96       	adiw	r28, 0x01	; 1
    1808:	61 e0       	ldi	r22, 0x01	; 1
    180a:	70 e0       	ldi	r23, 0x00	; 0
    180c:	97 de       	rcall	.-722    	; 0x153c <LCD0_write>
    180e:	d5 df       	rcall	.-86     	; 0x17ba <LCD0_BF>
    1810:	89 91       	ld	r24, Y+
    1812:	81 11       	cpse	r24, r1
    1814:	f9 cf       	rjmp	.-14     	; 0x1808 <LCD0_string+0xe>
    1816:	df 91       	pop	r29
    1818:	cf 91       	pop	r28
    181a:	08 95       	ret

0000181c <LCD0_string_size>:
    181c:	0f 93       	push	r16
    181e:	1f 93       	push	r17
    1820:	cf 93       	push	r28
    1822:	df 93       	push	r29
    1824:	fc 01       	movw	r30, r24
    1826:	d6 2f       	mov	r29, r22
    1828:	80 81       	ld	r24, Z
    182a:	88 23       	and	r24, r24
    182c:	51 f0       	breq	.+20     	; 0x1842 <LCD0_string_size+0x26>
    182e:	8f 01       	movw	r16, r30
    1830:	0f 5f       	subi	r16, 0xFF	; 255
    1832:	1f 4f       	sbci	r17, 0xFF	; 255
    1834:	61 11       	cpse	r22, r1
    1836:	09 c0       	rjmp	.+18     	; 0x184a <LCD0_string_size+0x2e>
    1838:	1b c0       	rjmp	.+54     	; 0x1870 <LCD0_string_size+0x54>
    183a:	cf 5f       	subi	r28, 0xFF	; 255
    183c:	dc 17       	cp	r29, r28
    183e:	30 f4       	brcc	.+12     	; 0x184c <LCD0_string_size+0x30>
    1840:	01 c0       	rjmp	.+2      	; 0x1844 <LCD0_string_size+0x28>
    1842:	c0 e0       	ldi	r28, 0x00	; 0
    1844:	cd 17       	cp	r28, r29
    1846:	60 f0       	brcs	.+24     	; 0x1860 <LCD0_string_size+0x44>
    1848:	13 c0       	rjmp	.+38     	; 0x1870 <LCD0_string_size+0x54>
    184a:	c1 e0       	ldi	r28, 0x01	; 1
    184c:	61 e0       	ldi	r22, 0x01	; 1
    184e:	70 e0       	ldi	r23, 0x00	; 0
    1850:	75 de       	rcall	.-790    	; 0x153c <LCD0_write>
    1852:	b3 df       	rcall	.-154    	; 0x17ba <LCD0_BF>
    1854:	f8 01       	movw	r30, r16
    1856:	81 91       	ld	r24, Z+
    1858:	8f 01       	movw	r16, r30
    185a:	81 11       	cpse	r24, r1
    185c:	ee cf       	rjmp	.-36     	; 0x183a <LCD0_string_size+0x1e>
    185e:	f2 cf       	rjmp	.-28     	; 0x1844 <LCD0_string_size+0x28>
    1860:	cf 5f       	subi	r28, 0xFF	; 255
    1862:	61 e0       	ldi	r22, 0x01	; 1
    1864:	70 e0       	ldi	r23, 0x00	; 0
    1866:	80 e2       	ldi	r24, 0x20	; 32
    1868:	69 de       	rcall	.-814    	; 0x153c <LCD0_write>
    186a:	a7 df       	rcall	.-178    	; 0x17ba <LCD0_BF>
    186c:	cd 17       	cp	r28, r29
    186e:	c0 f3       	brcs	.-16     	; 0x1860 <LCD0_string_size+0x44>
    1870:	df 91       	pop	r29
    1872:	cf 91       	pop	r28
    1874:	1f 91       	pop	r17
    1876:	0f 91       	pop	r16
    1878:	08 95       	ret

0000187a <LCD0_hspace>:
    187a:	cf 93       	push	r28
    187c:	c8 2f       	mov	r28, r24
    187e:	88 23       	and	r24, r24
    1880:	39 f0       	breq	.+14     	; 0x1890 <LCD0_hspace+0x16>
    1882:	61 e0       	ldi	r22, 0x01	; 1
    1884:	70 e0       	ldi	r23, 0x00	; 0
    1886:	80 e2       	ldi	r24, 0x20	; 32
    1888:	59 de       	rcall	.-846    	; 0x153c <LCD0_write>
    188a:	97 df       	rcall	.-210    	; 0x17ba <LCD0_BF>
    188c:	c1 50       	subi	r28, 0x01	; 1
    188e:	c9 f7       	brne	.-14     	; 0x1882 <LCD0_hspace+0x8>
    1890:	cf 91       	pop	r28
    1892:	08 95       	ret

00001894 <LCD0_gotoxy>:
    1894:	26 2f       	mov	r18, r22
    1896:	81 30       	cpi	r24, 0x01	; 1
    1898:	91 05       	cpc	r25, r1
    189a:	71 f0       	breq	.+28     	; 0x18b8 <LCD0_gotoxy+0x24>
    189c:	30 f0       	brcs	.+12     	; 0x18aa <LCD0_gotoxy+0x16>
    189e:	82 30       	cpi	r24, 0x02	; 2
    18a0:	91 05       	cpc	r25, r1
    18a2:	89 f0       	breq	.+34     	; 0x18c6 <LCD0_gotoxy+0x32>
    18a4:	03 97       	sbiw	r24, 0x03	; 3
    18a6:	b1 f0       	breq	.+44     	; 0x18d4 <LCD0_gotoxy+0x40>
    18a8:	08 95       	ret
    18aa:	60 e0       	ldi	r22, 0x00	; 0
    18ac:	70 e0       	ldi	r23, 0x00	; 0
    18ae:	80 e8       	ldi	r24, 0x80	; 128
    18b0:	82 0f       	add	r24, r18
    18b2:	44 de       	rcall	.-888    	; 0x153c <LCD0_write>
    18b4:	82 cf       	rjmp	.-252    	; 0x17ba <LCD0_BF>
    18b6:	08 95       	ret
    18b8:	60 e0       	ldi	r22, 0x00	; 0
    18ba:	70 e0       	ldi	r23, 0x00	; 0
    18bc:	80 ec       	ldi	r24, 0xC0	; 192
    18be:	82 0f       	add	r24, r18
    18c0:	3d de       	rcall	.-902    	; 0x153c <LCD0_write>
    18c2:	7b cf       	rjmp	.-266    	; 0x17ba <LCD0_BF>
    18c4:	08 95       	ret
    18c6:	60 e0       	ldi	r22, 0x00	; 0
    18c8:	70 e0       	ldi	r23, 0x00	; 0
    18ca:	84 e9       	ldi	r24, 0x94	; 148
    18cc:	82 0f       	add	r24, r18
    18ce:	36 de       	rcall	.-916    	; 0x153c <LCD0_write>
    18d0:	74 cf       	rjmp	.-280    	; 0x17ba <LCD0_BF>
    18d2:	08 95       	ret
    18d4:	60 e0       	ldi	r22, 0x00	; 0
    18d6:	70 e0       	ldi	r23, 0x00	; 0
    18d8:	84 ed       	ldi	r24, 0xD4	; 212
    18da:	82 0f       	add	r24, r18
    18dc:	2f de       	rcall	.-930    	; 0x153c <LCD0_write>
    18de:	6d cf       	rjmp	.-294    	; 0x17ba <LCD0_BF>
    18e0:	08 95       	ret

000018e2 <LCD0_clear>:
    18e2:	60 e0       	ldi	r22, 0x00	; 0
    18e4:	70 e0       	ldi	r23, 0x00	; 0
    18e6:	81 e0       	ldi	r24, 0x01	; 1
    18e8:	29 de       	rcall	.-942    	; 0x153c <LCD0_write>
    18ea:	87 ee       	ldi	r24, 0xE7	; 231
    18ec:	97 e1       	ldi	r25, 0x17	; 23
    18ee:	01 97       	sbiw	r24, 0x01	; 1
    18f0:	f1 f7       	brne	.-4      	; 0x18ee <LCD0_clear+0xc>
    18f2:	00 c0       	rjmp	.+0      	; 0x18f4 <LCD0_clear+0x12>
    18f4:	00 00       	nop
    18f6:	08 95       	ret

000018f8 <LCD0_inic>:
	return lcd0;
}
void LCD0_inic(void)
{
	//LCD INIC
	*lcd0_DDR=(1<<RS)|(1<<RW)|(1<<EN)|(0<<NC);
    18f8:	e0 91 e6 02 	lds	r30, 0x02E6	; 0x8002e6 <lcd0_DDR>
    18fc:	f0 91 e7 02 	lds	r31, 0x02E7	; 0x8002e7 <lcd0_DDR+0x1>
    1900:	87 e0       	ldi	r24, 0x07	; 7
    1902:	80 83       	st	Z, r24
	*lcd0_PORT=(1<<NC);
    1904:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    1908:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    190c:	88 e0       	ldi	r24, 0x08	; 8
    190e:	80 83       	st	Z, r24
    1910:	2f ef       	ldi	r18, 0xFF	; 255
    1912:	83 ef       	ldi	r24, 0xF3	; 243
    1914:	91 e0       	ldi	r25, 0x01	; 1
    1916:	21 50       	subi	r18, 0x01	; 1
    1918:	80 40       	sbci	r24, 0x00	; 0
    191a:	90 40       	sbci	r25, 0x00	; 0
    191c:	e1 f7       	brne	.-8      	; 0x1916 <LCD0_inic+0x1e>
    191e:	00 c0       	rjmp	.+0      	; 0x1920 <LCD0_inic+0x28>
    1920:	00 00       	nop
	/***INICIALIZACAO LCD**datasheet*/
	_delay_ms(40);
	LCD0_write(0x33,INST); //function set
    1922:	60 e0       	ldi	r22, 0x00	; 0
    1924:	70 e0       	ldi	r23, 0x00	; 0
    1926:	83 e3       	ldi	r24, 0x33	; 51
    1928:	09 de       	rcall	.-1006   	; 0x153c <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    192a:	20 ed       	ldi	r18, 0xD0	; 208
    192c:	2a 95       	dec	r18
    192e:	f1 f7       	brne	.-4      	; 0x192c <LCD0_inic+0x34>
	_delay_us(39);
	LCD0_write(0x33,INST); //function set
    1930:	60 e0       	ldi	r22, 0x00	; 0
    1932:	70 e0       	ldi	r23, 0x00	; 0
    1934:	83 e3       	ldi	r24, 0x33	; 51
    1936:	02 de       	rcall	.-1020   	; 0x153c <LCD0_write>
    1938:	80 ed       	ldi	r24, 0xD0	; 208
    193a:	8a 95       	dec	r24
    193c:	f1 f7       	brne	.-4      	; 0x193a <LCD0_inic+0x42>
	_delay_us(39);
	LCD0_write(0x2B,INST); //function set
    193e:	60 e0       	ldi	r22, 0x00	; 0
    1940:	70 e0       	ldi	r23, 0x00	; 0
    1942:	8b e2       	ldi	r24, 0x2B	; 43
    1944:	fb dd       	rcall	.-1034   	; 0x153c <LCD0_write>
    1946:	95 ec       	ldi	r25, 0xC5	; 197
    1948:	9a 95       	dec	r25
    194a:	f1 f7       	brne	.-4      	; 0x1948 <LCD0_inic+0x50>
    194c:	00 00       	nop
	_delay_us(37);
	LCD0_write(0x0C,INST);// display on/off control
    194e:	60 e0       	ldi	r22, 0x00	; 0
    1950:	70 e0       	ldi	r23, 0x00	; 0
    1952:	8c e0       	ldi	r24, 0x0C	; 12
    1954:	f3 dd       	rcall	.-1050   	; 0x153c <LCD0_write>
    1956:	25 ec       	ldi	r18, 0xC5	; 197
    1958:	2a 95       	dec	r18
    195a:	f1 f7       	brne	.-4      	; 0x1958 <LCD0_inic+0x60>
	_delay_us(37);
	LCD0_write(0x01,INST);// clear display
    195c:	00 00       	nop
    195e:	60 e0       	ldi	r22, 0x00	; 0
    1960:	70 e0       	ldi	r23, 0x00	; 0
    1962:	81 e0       	ldi	r24, 0x01	; 1
    1964:	eb dd       	rcall	.-1066   	; 0x153c <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1966:	87 ee       	ldi	r24, 0xE7	; 231
    1968:	97 e1       	ldi	r25, 0x17	; 23
    196a:	01 97       	sbiw	r24, 0x01	; 1
    196c:	f1 f7       	brne	.-4      	; 0x196a <LCD0_inic+0x72>
    196e:	00 c0       	rjmp	.+0      	; 0x1970 <LCD0_inic+0x78>
	_delay_ms(1.53);
	LCD0_write(0x06,INST);// entry mode set (crazy settings)
    1970:	00 00       	nop
    1972:	60 e0       	ldi	r22, 0x00	; 0
    1974:	70 e0       	ldi	r23, 0x00	; 0
    1976:	86 e0       	ldi	r24, 0x06	; 6
    1978:	e1 dd       	rcall	.-1086   	; 0x153c <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    197a:	95 ec       	ldi	r25, 0xC5	; 197
    197c:	9a 95       	dec	r25
    197e:	f1 f7       	brne	.-4      	; 0x197c <LCD0_inic+0x84>
    1980:	00 00       	nop
    1982:	08 95       	ret

00001984 <LCD0enable>:
void LCD1_strobe(unsigned int num);
void LCD1_reboot(void);
unsigned int LCD_ticks(unsigned int num);
/***Procedure & Function***/
LCD0 LCD0enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port)
{
    1984:	1f 93       	push	r17
    1986:	cf 93       	push	r28
    1988:	df 93       	push	r29
    198a:	ec 01       	movw	r28, r24
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    198c:	1f b7       	in	r17, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    198e:	8f b7       	in	r24, 0x3f	; 63
    1990:	8f 77       	andi	r24, 0x7F	; 127
    1992:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	LCD0 lcd0;
	//import parametros
	lcd0_DDR=ddr;
    1994:	70 93 e7 02 	sts	0x02E7, r23	; 0x8002e7 <lcd0_DDR+0x1>
    1998:	60 93 e6 02 	sts	0x02E6, r22	; 0x8002e6 <lcd0_DDR>
	lcd0_PIN=pin;
    199c:	50 93 e0 02 	sts	0x02E0, r21	; 0x8002e0 <lcd0_PIN+0x1>
    19a0:	40 93 df 02 	sts	0x02DF, r20	; 0x8002df <lcd0_PIN>
	lcd0_PORT=port;
    19a4:	30 93 ea 02 	sts	0x02EA, r19	; 0x8002ea <lcd0_PORT+0x1>
    19a8:	20 93 e9 02 	sts	0x02E9, r18	; 0x8002e9 <lcd0_PORT>
	//inic variables
	*lcd0_DDR=0x00;
    19ac:	fb 01       	movw	r30, r22
    19ae:	10 82       	st	Z, r1
	*lcd0_PORT=0xFF;
    19b0:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <lcd0_PORT>
    19b4:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <lcd0_PORT+0x1>
    19b8:	8f ef       	ldi	r24, 0xFF	; 255
    19ba:	80 83       	st	Z, r24
	lcd0_detect=*lcd0_PIN & (1<<NC);
    19bc:	e0 91 df 02 	lds	r30, 0x02DF	; 0x8002df <lcd0_PIN>
    19c0:	f0 91 e0 02 	lds	r31, 0x02E0	; 0x8002e0 <lcd0_PIN+0x1>
    19c4:	80 81       	ld	r24, Z
    19c6:	88 70       	andi	r24, 0x08	; 8
    19c8:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <lcd0_detect>
	lcd0.hspace=LCD0_hspace;
	lcd0.clear=LCD0_clear;
	lcd0.gotoxy=LCD0_gotoxy;
	lcd0.reboot=LCD0_reboot;
	//LCD INIC
	LCD0_inic();
    19cc:	95 df       	rcall	.-214    	; 0x18f8 <LCD0_inic>
	SREG=tSREG;
    19ce:	1f bf       	out	0x3f, r17	; 63
	//
	return lcd0;
    19d0:	8e e9       	ldi	r24, 0x9E	; 158
    19d2:	9a e0       	ldi	r25, 0x0A	; 10
    19d4:	99 83       	std	Y+1, r25	; 0x01
    19d6:	88 83       	st	Y, r24
    19d8:	82 e6       	ldi	r24, 0x62	; 98
    19da:	9b e0       	ldi	r25, 0x0B	; 11
    19dc:	9b 83       	std	Y+3, r25	; 0x03
    19de:	8a 83       	std	Y+2, r24	; 0x02
    19e0:	8d ed       	ldi	r24, 0xDD	; 221
    19e2:	9b e0       	ldi	r25, 0x0B	; 11
    19e4:	9d 83       	std	Y+5, r25	; 0x05
    19e6:	8c 83       	std	Y+4, r24	; 0x04
    19e8:	8f ee       	ldi	r24, 0xEF	; 239
    19ea:	9b e0       	ldi	r25, 0x0B	; 11
    19ec:	9f 83       	std	Y+7, r25	; 0x07
    19ee:	8e 83       	std	Y+6, r24	; 0x06
    19f0:	84 ef       	ldi	r24, 0xF4	; 244
    19f2:	9b e0       	ldi	r25, 0x0B	; 11
    19f4:	99 87       	std	Y+9, r25	; 0x09
    19f6:	88 87       	std	Y+8, r24	; 0x08
    19f8:	8d ef       	ldi	r24, 0xFD	; 253
    19fa:	9b e0       	ldi	r25, 0x0B	; 11
    19fc:	9b 87       	std	Y+11, r25	; 0x0b
    19fe:	8a 87       	std	Y+10, r24	; 0x0a
    1a00:	8e e0       	ldi	r24, 0x0E	; 14
    1a02:	9c e0       	ldi	r25, 0x0C	; 12
    1a04:	9d 87       	std	Y+13, r25	; 0x0d
    1a06:	8c 87       	std	Y+12, r24	; 0x0c
    1a08:	8d e3       	ldi	r24, 0x3D	; 61
    1a0a:	9c e0       	ldi	r25, 0x0C	; 12
    1a0c:	9f 87       	std	Y+15, r25	; 0x0f
    1a0e:	8e 87       	std	Y+14, r24	; 0x0e
    1a10:	81 e7       	ldi	r24, 0x71	; 113
    1a12:	9c e0       	ldi	r25, 0x0C	; 12
    1a14:	99 8b       	std	Y+17, r25	; 0x11
    1a16:	88 8b       	std	Y+16, r24	; 0x10
    1a18:	8a e4       	ldi	r24, 0x4A	; 74
    1a1a:	9c e0       	ldi	r25, 0x0C	; 12
    1a1c:	9b 8b       	std	Y+19, r25	; 0x13
    1a1e:	8a 8b       	std	Y+18, r24	; 0x12
    1a20:	89 e1       	ldi	r24, 0x19	; 25
    1a22:	9d e0       	ldi	r25, 0x0D	; 13
    1a24:	9d 8b       	std	Y+21, r25	; 0x15
    1a26:	8c 8b       	std	Y+20, r24	; 0x14
}
    1a28:	ce 01       	movw	r24, r28
    1a2a:	df 91       	pop	r29
    1a2c:	cf 91       	pop	r28
    1a2e:	1f 91       	pop	r17
    1a30:	08 95       	ret

00001a32 <LCD0_reboot>:
	*lcd0_PORT|=(1<<EN);
	LCD_ticks(num);
	*lcd0_PORT&=~(1<<EN);
}
void LCD0_reboot(void)
{
    1a32:	cf 93       	push	r28
    1a34:	df 93       	push	r29
	uint8_t tSREG;
	tSREG=SREG;
    1a36:	df b7       	in	r29, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1a38:	8f b7       	in	r24, 0x3f	; 63
    1a3a:	8f 77       	andi	r24, 0x7F	; 127
    1a3c:	8f bf       	out	0x3f, r24	; 63
	//low high detect pin NC
	uint8_t i;
	uint8_t tmp;
	tmp=*lcd0_PIN & (1<<NC);
    1a3e:	e0 91 df 02 	lds	r30, 0x02DF	; 0x8002df <lcd0_PIN>
    1a42:	f0 91 e0 02 	lds	r31, 0x02E0	; 0x8002e0 <lcd0_PIN+0x1>
    1a46:	c0 81       	ld	r28, Z
    1a48:	c8 70       	andi	r28, 0x08	; 8
	i=tmp^lcd0_detect;
    1a4a:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <lcd0_detect>
    1a4e:	8c 27       	eor	r24, r28
	i&=tmp;
	if(i)
    1a50:	8c 23       	and	r24, r28
    1a52:	09 f0       	breq	.+2      	; 0x1a56 <LCD0_reboot+0x24>
		LCD0_inic();
    1a54:	51 df       	rcall	.-350    	; 0x18f8 <LCD0_inic>
	lcd0_detect=tmp;
    1a56:	c0 93 e8 02 	sts	0x02E8, r28	; 0x8002e8 <lcd0_detect>
	SREG=tSREG;
    1a5a:	df bf       	out	0x3f, r29	; 63
}
    1a5c:	df 91       	pop	r29
    1a5e:	cf 91       	pop	r28
    1a60:	08 95       	ret

00001a62 <HX711_set_readflag>:
	// returns a copy
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=ONE;
    1a62:	21 e0       	ldi	r18, 0x01	; 1
    1a64:	fc 01       	movw	r30, r24
    1a66:	20 83       	st	Z, r18
    1a68:	08 95       	ret

00001a6a <HX711_check_readflag>:
	self->readflag=ZERO;
}
uint8_t HX711_check_readflag(HX711* self)
{
	return self->readflag;	
}
    1a6a:	fc 01       	movw	r30, r24
    1a6c:	80 81       	ld	r24, Z
    1a6e:	08 95       	ret

00001a70 <HX711_read_bit>:
uint8_t HX711_read_bit(void)
{	
	uint16_t bool;
	*hx711_PORT|=(ONE<<hx711_clkpin);
    1a70:	e0 91 f0 02 	lds	r30, 0x02F0	; 0x8002f0 <hx711_PORT>
    1a74:	f0 91 f1 02 	lds	r31, 0x02F1	; 0x8002f1 <hx711_PORT+0x1>
    1a78:	20 81       	ld	r18, Z
    1a7a:	81 e0       	ldi	r24, 0x01	; 1
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	00 90 f4 02 	lds	r0, 0x02F4	; 0x8002f4 <hx711_clkpin>
    1a82:	02 c0       	rjmp	.+4      	; 0x1a88 <HX711_read_bit+0x18>
    1a84:	88 0f       	add	r24, r24
    1a86:	99 1f       	adc	r25, r25
    1a88:	0a 94       	dec	r0
    1a8a:	e2 f7       	brpl	.-8      	; 0x1a84 <HX711_read_bit+0x14>
    1a8c:	82 2b       	or	r24, r18
    1a8e:	80 83       	st	Z, r24
    1a90:	8e e6       	ldi	r24, 0x6E	; 110
    1a92:	90 e0       	ldi	r25, 0x00	; 0
    1a94:	01 97       	sbiw	r24, 0x01	; 1
	/**0.1us minimum**/
	for(bool=0;bool<HX711_ticks;bool++);
    1a96:	f1 f7       	brne	.-4      	; 0x1a94 <HX711_read_bit+0x24>
	bool=*hx711_PIN & (ONE<<hx711_datapin);
    1a98:	e0 91 ee 02 	lds	r30, 0x02EE	; 0x8002ee <hx711_PIN>
    1a9c:	f0 91 ef 02 	lds	r31, 0x02EF	; 0x8002ef <hx711_PIN+0x1>
    1aa0:	40 81       	ld	r20, Z
    1aa2:	21 e0       	ldi	r18, 0x01	; 1
    1aa4:	30 e0       	ldi	r19, 0x00	; 0
    1aa6:	c9 01       	movw	r24, r18
    1aa8:	00 90 ed 02 	lds	r0, 0x02ED	; 0x8002ed <hx711_datapin>
    1aac:	02 c0       	rjmp	.+4      	; 0x1ab2 <HX711_read_bit+0x42>
    1aae:	88 0f       	add	r24, r24
    1ab0:	99 1f       	adc	r25, r25
    1ab2:	0a 94       	dec	r0
    1ab4:	e2 f7       	brpl	.-8      	; 0x1aae <HX711_read_bit+0x3e>
	*hx711_PORT&=~(ONE<<hx711_clkpin);
    1ab6:	e0 91 f0 02 	lds	r30, 0x02F0	; 0x8002f0 <hx711_PORT>
    1aba:	f0 91 f1 02 	lds	r31, 0x02F1	; 0x8002f1 <hx711_PORT+0x1>
    1abe:	90 81       	ld	r25, Z
    1ac0:	00 90 f4 02 	lds	r0, 0x02F4	; 0x8002f4 <hx711_clkpin>
    1ac4:	02 c0       	rjmp	.+4      	; 0x1aca <HX711_read_bit+0x5a>
    1ac6:	22 0f       	add	r18, r18
    1ac8:	33 1f       	adc	r19, r19
    1aca:	0a 94       	dec	r0
    1acc:	e2 f7       	brpl	.-8      	; 0x1ac6 <HX711_read_bit+0x56>
    1ace:	20 95       	com	r18
    1ad0:	29 23       	and	r18, r25
    1ad2:	20 83       	st	Z, r18
	return bool;
}
    1ad4:	84 23       	and	r24, r20
    1ad6:	08 95       	ret

00001ad8 <HX711_set_amplify>:
// Gain selector
// AVDD connected to 5V, channel B gain=32
void HX711_set_amplify(HX711* self, uint8_t amplify)
{
	switch(amplify){
    1ad8:	60 34       	cpi	r22, 0x40	; 64
    1ada:	79 f0       	breq	.+30     	; 0x1afa <HX711_set_amplify+0x22>
    1adc:	60 38       	cpi	r22, 0x80	; 128
    1ade:	19 f0       	breq	.+6      	; 0x1ae6 <HX711_set_amplify+0xe>
    1ae0:	60 32       	cpi	r22, 0x20	; 32
    1ae2:	81 f4       	brne	.+32     	; 0x1b04 <HX711_set_amplify+0x2c>
    1ae4:	05 c0       	rjmp	.+10     	; 0x1af0 <HX711_set_amplify+0x18>
		case 128:
			self->amplify=ONE; //channel A
    1ae6:	21 e0       	ldi	r18, 0x01	; 1
    1ae8:	fc 01       	movw	r30, r24
    1aea:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=ONE;
    1aec:	23 83       	std	Z+3, r18	; 0x03
			break;
    1aee:	08 95       	ret
		case 32:
			self->amplify=2; //channel B
    1af0:	22 e0       	ldi	r18, 0x02	; 2
    1af2:	fc 01       	movw	r30, r24
    1af4:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=2; 
    1af6:	23 83       	std	Z+3, r18	; 0x03
			break;
    1af8:	08 95       	ret
		case 64:
			self->amplify=3; //channel A
    1afa:	23 e0       	ldi	r18, 0x03	; 3
    1afc:	fc 01       	movw	r30, r24
    1afe:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=3;
    1b00:	23 83       	std	Z+3, r18	; 0x03
			break;
    1b02:	08 95       	ret
		default:
			self->amplify=ONE;
    1b04:	21 e0       	ldi	r18, 0x01	; 1
    1b06:	fc 01       	movw	r30, r24
    1b08:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=ONE;
    1b0a:	23 83       	std	Z+3, r18	; 0x03
    1b0c:	08 95       	ret

00001b0e <HX711_raw_average>:
		}
	}
	return self->raw_reading;
}
float HX711_raw_average(HX711* self, uint8_t n)
{
    1b0e:	0f 93       	push	r16
    1b10:	1f 93       	push	r17
    1b12:	cf 93       	push	r28
    1b14:	df 93       	push	r29
    1b16:	ec 01       	movw	r28, r24
	if(self->trigger){
    1b18:	89 81       	ldd	r24, Y+1	; 0x01
    1b1a:	88 23       	and	r24, r24
    1b1c:	89 f1       	breq	.+98     	; 0x1b80 <HX711_raw_average+0x72>
		if(self->av_n < n){
    1b1e:	8a 89       	ldd	r24, Y+18	; 0x12
    1b20:	86 17       	cp	r24, r22
    1b22:	98 f4       	brcc	.+38     	; 0x1b4a <HX711_raw_average+0x3c>
			self->sum+=self->raw_reading;
    1b24:	0e 85       	ldd	r16, Y+14	; 0x0e
    1b26:	1f 85       	ldd	r17, Y+15	; 0x0f
    1b28:	28 89       	ldd	r18, Y+16	; 0x10
    1b2a:	39 89       	ldd	r19, Y+17	; 0x11
    1b2c:	4a 85       	ldd	r20, Y+10	; 0x0a
    1b2e:	5b 85       	ldd	r21, Y+11	; 0x0b
    1b30:	6c 85       	ldd	r22, Y+12	; 0x0c
    1b32:	7d 85       	ldd	r23, Y+13	; 0x0d
    1b34:	40 0f       	add	r20, r16
    1b36:	51 1f       	adc	r21, r17
    1b38:	62 1f       	adc	r22, r18
    1b3a:	73 1f       	adc	r23, r19
    1b3c:	4e 87       	std	Y+14, r20	; 0x0e
    1b3e:	5f 87       	std	Y+15, r21	; 0x0f
    1b40:	68 8b       	std	Y+16, r22	; 0x10
    1b42:	79 8b       	std	Y+17, r23	; 0x11
			self->av_n++;
    1b44:	8f 5f       	subi	r24, 0xFF	; 255
    1b46:	8a 8b       	std	Y+18, r24	; 0x12
    1b48:	1a c0       	rjmp	.+52     	; 0x1b7e <HX711_raw_average+0x70>
			}else{
			self->av_n=0;
			self->raw_mean=self->sum/n;
    1b4a:	26 2f       	mov	r18, r22
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	40 e0       	ldi	r20, 0x00	; 0
    1b50:	50 e0       	ldi	r21, 0x00	; 0
    1b52:	6e 85       	ldd	r22, Y+14	; 0x0e
    1b54:	7f 85       	ldd	r23, Y+15	; 0x0f
    1b56:	88 89       	ldd	r24, Y+16	; 0x10
    1b58:	99 89       	ldd	r25, Y+17	; 0x11
    1b5a:	37 d6       	rcall	.+3182   	; 0x27ca <__divmodsi4>
    1b5c:	ca 01       	movw	r24, r20
    1b5e:	b9 01       	movw	r22, r18
    1b60:	60 d3       	rcall	.+1728   	; 0x2222 <__floatsisf>
    1b62:	6b 8b       	std	Y+19, r22	; 0x13
    1b64:	7c 8b       	std	Y+20, r23	; 0x14
    1b66:	8d 8b       	std	Y+21, r24	; 0x15
    1b68:	9e 8b       	std	Y+22, r25	; 0x16
			self->sum=0;
			self->sum+=self->raw_reading;
    1b6a:	8a 85       	ldd	r24, Y+10	; 0x0a
    1b6c:	9b 85       	ldd	r25, Y+11	; 0x0b
    1b6e:	ac 85       	ldd	r26, Y+12	; 0x0c
    1b70:	bd 85       	ldd	r27, Y+13	; 0x0d
    1b72:	8e 87       	std	Y+14, r24	; 0x0e
    1b74:	9f 87       	std	Y+15, r25	; 0x0f
    1b76:	a8 8b       	std	Y+16, r26	; 0x10
    1b78:	b9 8b       	std	Y+17, r27	; 0x11
			self->av_n++;
    1b7a:	81 e0       	ldi	r24, 0x01	; 1
    1b7c:	8a 8b       	std	Y+18, r24	; 0x12
		}
		self->trigger=ZERO;
    1b7e:	19 82       	std	Y+1, r1	; 0x01
	}
	return self->raw_mean;
    1b80:	6b 89       	ldd	r22, Y+19	; 0x13
    1b82:	7c 89       	ldd	r23, Y+20	; 0x14
    1b84:	8d 89       	ldd	r24, Y+21	; 0x15
    1b86:	9e 89       	ldd	r25, Y+22	; 0x16
}
    1b88:	df 91       	pop	r29
    1b8a:	cf 91       	pop	r28
    1b8c:	1f 91       	pop	r17
    1b8e:	0f 91       	pop	r16
    1b90:	08 95       	ret

00001b92 <HX711_read_raw>:
}
/***
Function to be used in the interrupt routine with appropriate cycle period.
***/
int32_t HX711_read_raw(HX711* self)
{
    1b92:	0f 93       	push	r16
    1b94:	1f 93       	push	r17
    1b96:	cf 93       	push	r28
    1b98:	df 93       	push	r29
    1b9a:	ec 01       	movw	r28, r24
	uint8_t aindex, bindex;
	int32_t value;
	aindex = self->bufferindex-ONE;
    1b9c:	09 85       	ldd	r16, Y+9	; 0x09
	bindex = self->bitcount-ONE;
    1b9e:	1c 81       	ldd	r17, Y+4	; 0x04
	ptr=(int32_t*)self->buffer;
    1ba0:	05 96       	adiw	r24, 0x05	; 5
    1ba2:	90 93 f3 02 	sts	0x02F3, r25	; 0x8002f3 <ptr+0x1>
    1ba6:	80 93 f2 02 	sts	0x02F2, r24	; 0x8002f2 <ptr>
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
    1baa:	e0 91 ee 02 	lds	r30, 0x02EE	; 0x8002ee <hx711_PIN>
    1bae:	f0 91 ef 02 	lds	r31, 0x02EF	; 0x8002ef <hx711_PIN+0x1>
    1bb2:	80 81       	ld	r24, Z
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	00 90 ed 02 	lds	r0, 0x02ED	; 0x8002ed <hx711_datapin>
    1bba:	02 c0       	rjmp	.+4      	; 0x1bc0 <HX711_read_raw+0x2e>
    1bbc:	95 95       	asr	r25
    1bbe:	87 95       	ror	r24
    1bc0:	0a 94       	dec	r0
    1bc2:	e2 f7       	brpl	.-8      	; 0x1bbc <HX711_read_raw+0x2a>
    1bc4:	80 fd       	sbrc	r24, 0
    1bc6:	06 c0       	rjmp	.+12     	; 0x1bd4 <HX711_read_raw+0x42>
    1bc8:	88 81       	ld	r24, Y
    1bca:	81 11       	cpse	r24, r1
    1bcc:	07 c0       	rjmp	.+14     	; 0x1bdc <HX711_read_raw+0x4a>
	// returns a copy
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=ONE;
    1bce:	81 e0       	ldi	r24, 0x01	; 1
    1bd0:	88 83       	st	Y, r24
    1bd2:	04 c0       	rjmp	.+8      	; 0x1bdc <HX711_read_raw+0x4a>
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
		HX711_set_readflag(self);
	}
	/***Interrupt 24 times sequence***/
	if(self->readflag){
    1bd4:	88 81       	ld	r24, Y
    1bd6:	88 23       	and	r24, r24
    1bd8:	09 f4       	brne	.+2      	; 0x1bdc <HX711_read_raw+0x4a>
    1bda:	48 c0       	rjmp	.+144    	; 0x1c6c <HX711_read_raw+0xda>
		if(self->bitcount){
    1bdc:	11 23       	and	r17, r17
    1bde:	29 f1       	breq	.+74     	; 0x1c2a <HX711_read_raw+0x98>
			if (HX711_read_bit())
    1be0:	47 df       	rcall	.-370    	; 0x1a70 <HX711_read_bit>
    1be2:	88 23       	and	r24, r24
    1be4:	a9 f0       	breq	.+42     	; 0x1c10 <HX711_read_raw+0x7e>
				self->buffer[aindex] |= ONE<<(bindex-(aindex*8));
    1be6:	01 50       	subi	r16, 0x01	; 1
    1be8:	80 2f       	mov	r24, r16
    1bea:	90 e0       	ldi	r25, 0x00	; 0
    1bec:	fe 01       	movw	r30, r28
    1bee:	e8 0f       	add	r30, r24
    1bf0:	f9 1f       	adc	r31, r25
    1bf2:	11 50       	subi	r17, 0x01	; 1
    1bf4:	28 e0       	ldi	r18, 0x08	; 8
    1bf6:	02 9f       	mul	r16, r18
    1bf8:	10 19       	sub	r17, r0
    1bfa:	11 24       	eor	r1, r1
    1bfc:	81 e0       	ldi	r24, 0x01	; 1
    1bfe:	90 e0       	ldi	r25, 0x00	; 0
    1c00:	02 c0       	rjmp	.+4      	; 0x1c06 <HX711_read_raw+0x74>
    1c02:	88 0f       	add	r24, r24
    1c04:	99 1f       	adc	r25, r25
    1c06:	1a 95       	dec	r17
    1c08:	e2 f7       	brpl	.-8      	; 0x1c02 <HX711_read_raw+0x70>
    1c0a:	95 81       	ldd	r25, Z+5	; 0x05
    1c0c:	89 2b       	or	r24, r25
    1c0e:	85 83       	std	Z+5, r24	; 0x05
			self->bitcount--;
    1c10:	8c 81       	ldd	r24, Y+4	; 0x04
    1c12:	81 50       	subi	r24, 0x01	; 1
    1c14:	8c 83       	std	Y+4, r24	; 0x04
			if(self->bitcount==16)
    1c16:	80 31       	cpi	r24, 0x10	; 16
    1c18:	19 f4       	brne	.+6      	; 0x1c20 <HX711_read_raw+0x8e>
				self->bufferindex=2;
    1c1a:	82 e0       	ldi	r24, 0x02	; 2
    1c1c:	89 87       	std	Y+9, r24	; 0x09
    1c1e:	26 c0       	rjmp	.+76     	; 0x1c6c <HX711_read_raw+0xda>
			if(self->bitcount==8)
    1c20:	88 30       	cpi	r24, 0x08	; 8
    1c22:	21 f5       	brne	.+72     	; 0x1c6c <HX711_read_raw+0xda>
				self->bufferindex=ONE;
    1c24:	81 e0       	ldi	r24, 0x01	; 1
    1c26:	89 87       	std	Y+9, r24	; 0x09
    1c28:	21 c0       	rjmp	.+66     	; 0x1c6c <HX711_read_raw+0xda>
		}else{
			if(self->ampcount){
    1c2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c2c:	88 23       	and	r24, r24
				HX711_read_bit();
    1c2e:	29 f0       	breq	.+10     	; 0x1c3a <HX711_read_raw+0xa8>
    1c30:	1f df       	rcall	.-450    	; 0x1a70 <HX711_read_bit>
				self->ampcount--;
    1c32:	8b 81       	ldd	r24, Y+3	; 0x03
    1c34:	81 50       	subi	r24, 0x01	; 1
    1c36:	8b 83       	std	Y+3, r24	; 0x03
    1c38:	19 c0       	rjmp	.+50     	; 0x1c6c <HX711_read_raw+0xda>
			}else{
				value=*(ptr);
    1c3a:	e0 91 f2 02 	lds	r30, 0x02F2	; 0x8002f2 <ptr>
    1c3e:	f0 91 f3 02 	lds	r31, 0x02F3	; 0x8002f3 <ptr+0x1>
    1c42:	80 81       	ld	r24, Z
    1c44:	91 81       	ldd	r25, Z+1	; 0x01
    1c46:	a2 81       	ldd	r26, Z+2	; 0x02
    1c48:	b3 81       	ldd	r27, Z+3	; 0x03
				self->raw_reading=value;
    1c4a:	8a 87       	std	Y+10, r24	; 0x0a
    1c4c:	9b 87       	std	Y+11, r25	; 0x0b
    1c4e:	ac 87       	std	Y+12, r26	; 0x0c
    1c50:	bd 87       	std	Y+13, r27	; 0x0d
				self->bitcount=HX711_ADC_bits;
    1c52:	88 e1       	ldi	r24, 0x18	; 24
    1c54:	8c 83       	std	Y+4, r24	; 0x04
				self->bufferindex=HX711_VECT_SIZE-ONE;
    1c56:	83 e0       	ldi	r24, 0x03	; 3
    1c58:	89 87       	std	Y+9, r24	; 0x09
				self->ampcount=self->amplify;
    1c5a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c5c:	8b 83       	std	Y+3, r24	; 0x03
				self->buffer[0]=ZERO;
    1c5e:	1d 82       	std	Y+5, r1	; 0x05
				self->buffer[1]=ZERO;
    1c60:	1e 82       	std	Y+6, r1	; 0x06
				self->buffer[2]=ZERO;
    1c62:	1f 82       	std	Y+7, r1	; 0x07
				self->buffer[3]=ZERO;
    1c64:	18 86       	std	Y+8, r1	; 0x08
				self->trigger=ONE;
    1c66:	81 e0       	ldi	r24, 0x01	; 1
    1c68:	89 83       	std	Y+1, r24	; 0x01
{
	self->readflag=ONE;
}
void HX711_reset_readflag(HX711* self)
{
	self->readflag=ZERO;
    1c6a:	18 82       	st	Y, r1
				/***Reset ready for next query***/
				HX711_reset_readflag(self);
			}
		}
	}
	return self->raw_reading;
    1c6c:	6a 85       	ldd	r22, Y+10	; 0x0a
    1c6e:	7b 85       	ldd	r23, Y+11	; 0x0b
    1c70:	8c 85       	ldd	r24, Y+12	; 0x0c
    1c72:	9d 85       	ldd	r25, Y+13	; 0x0d
}
    1c74:	df 91       	pop	r29
    1c76:	cf 91       	pop	r28
    1c78:	1f 91       	pop	r17
    1c7a:	0f 91       	pop	r16
    1c7c:	08 95       	ret

00001c7e <HX711enable>:
int32_t HX711_read_raw(HX711* self);
float HX711_raw_average(HX711* self, uint8_t n);
uint8_t HX711_hl(uint8_t xi, uint8_t xf);
/***Procedure & Function***/
HX711 HX711enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port, uint8_t datapin, uint8_t clkpin)
{
    1c7e:	ef 92       	push	r14
    1c80:	0f 93       	push	r16
    1c82:	fc 01       	movw	r30, r24
    1c84:	da 01       	movw	r26, r20
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    1c86:	5f b7       	in	r21, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1c88:	8f b7       	in	r24, 0x3f	; 63
    1c8a:	8f 77       	andi	r24, 0x7F	; 127
    1c8c:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	HX711 hx711;
	//import parametros
	hx711_DDR=ddr;
    1c8e:	70 93 f6 02 	sts	0x02F6, r23	; 0x8002f6 <hx711_DDR+0x1>
    1c92:	60 93 f5 02 	sts	0x02F5, r22	; 0x8002f5 <hx711_DDR>
	hx711_PIN=pin;
    1c96:	b0 93 ef 02 	sts	0x02EF, r27	; 0x8002ef <hx711_PIN+0x1>
    1c9a:	a0 93 ee 02 	sts	0x02EE, r26	; 0x8002ee <hx711_PIN>
	hx711_PORT=port;
    1c9e:	30 93 f1 02 	sts	0x02F1, r19	; 0x8002f1 <hx711_PORT+0x1>
    1ca2:	20 93 f0 02 	sts	0x02F0, r18	; 0x8002f0 <hx711_PORT>
	hx711_datapin=datapin;
    1ca6:	00 93 ed 02 	sts	0x02ED, r16	; 0x8002ed <hx711_datapin>
	hx711_clkpin=clkpin;
    1caa:	e0 92 f4 02 	sts	0x02F4, r14	; 0x8002f4 <hx711_clkpin>
	//inic variables
	*hx711_DDR |= (ONE<<clkpin);
    1cae:	db 01       	movw	r26, r22
    1cb0:	4c 91       	ld	r20, X
    1cb2:	81 e0       	ldi	r24, 0x01	; 1
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	9c 01       	movw	r18, r24
    1cb8:	02 c0       	rjmp	.+4      	; 0x1cbe <HX711enable+0x40>
    1cba:	22 0f       	add	r18, r18
    1cbc:	33 1f       	adc	r19, r19
    1cbe:	ea 94       	dec	r14
    1cc0:	e2 f7       	brpl	.-8      	; 0x1cba <HX711enable+0x3c>
    1cc2:	24 2b       	or	r18, r20
    1cc4:	2c 93       	st	X, r18
	*hx711_PORT |= (ONE<<datapin);
    1cc6:	a0 91 f0 02 	lds	r26, 0x02F0	; 0x8002f0 <hx711_PORT>
    1cca:	b0 91 f1 02 	lds	r27, 0x02F1	; 0x8002f1 <hx711_PORT+0x1>
    1cce:	2c 91       	ld	r18, X
    1cd0:	02 c0       	rjmp	.+4      	; 0x1cd6 <HX711enable+0x58>
    1cd2:	88 0f       	add	r24, r24
    1cd4:	99 1f       	adc	r25, r25
    1cd6:	0a 95       	dec	r16
    1cd8:	e2 f7       	brpl	.-8      	; 0x1cd2 <HX711enable+0x54>
    1cda:	82 2b       	or	r24, r18
    1cdc:	8c 93       	st	X, r24
	hx711.check_readflag=HX711_check_readflag;
	hx711.read_bit=HX711_read_bit;
	hx711.set_amplify=HX711_set_amplify;
	hx711.read_raw=HX711_read_raw;
	hx711.raw_average=HX711_raw_average;
	SREG=tSREG;
    1cde:	5f bf       	out	0x3f, r21	; 63
	// returns a copy
	return hx711;
    1ce0:	10 82       	st	Z, r1
    1ce2:	11 82       	std	Z+1, r1	; 0x01
    1ce4:	81 e0       	ldi	r24, 0x01	; 1
    1ce6:	82 83       	std	Z+2, r24	; 0x02
    1ce8:	83 83       	std	Z+3, r24	; 0x03
    1cea:	88 e1       	ldi	r24, 0x18	; 24
    1cec:	84 83       	std	Z+4, r24	; 0x04
    1cee:	15 82       	std	Z+5, r1	; 0x05
    1cf0:	16 82       	std	Z+6, r1	; 0x06
    1cf2:	17 82       	std	Z+7, r1	; 0x07
    1cf4:	10 86       	std	Z+8, r1	; 0x08
    1cf6:	83 e0       	ldi	r24, 0x03	; 3
    1cf8:	81 87       	std	Z+9, r24	; 0x09
    1cfa:	12 86       	std	Z+10, r1	; 0x0a
    1cfc:	13 86       	std	Z+11, r1	; 0x0b
    1cfe:	14 86       	std	Z+12, r1	; 0x0c
    1d00:	15 86       	std	Z+13, r1	; 0x0d
    1d02:	16 86       	std	Z+14, r1	; 0x0e
    1d04:	17 86       	std	Z+15, r1	; 0x0f
    1d06:	10 8a       	std	Z+16, r1	; 0x10
    1d08:	11 8a       	std	Z+17, r1	; 0x11
    1d0a:	12 8a       	std	Z+18, r1	; 0x12
    1d0c:	13 8a       	std	Z+19, r1	; 0x13
    1d0e:	14 8a       	std	Z+20, r1	; 0x14
    1d10:	15 8a       	std	Z+21, r1	; 0x15
    1d12:	16 8a       	std	Z+22, r1	; 0x16
    1d14:	82 e0       	ldi	r24, 0x02	; 2
    1d16:	91 e9       	ldi	r25, 0x91	; 145
    1d18:	a0 e0       	ldi	r26, 0x00	; 0
    1d1a:	b0 e0       	ldi	r27, 0x00	; 0
    1d1c:	87 8b       	std	Z+23, r24	; 0x17
    1d1e:	90 8f       	std	Z+24, r25	; 0x18
    1d20:	a1 8f       	std	Z+25, r26	; 0x19
    1d22:	b2 8f       	std	Z+26, r27	; 0x1a
    1d24:	8c ea       	ldi	r24, 0xAC	; 172
    1d26:	90 e2       	ldi	r25, 0x20	; 32
    1d28:	a1 e0       	ldi	r26, 0x01	; 1
    1d2a:	b0 e0       	ldi	r27, 0x00	; 0
    1d2c:	83 8f       	std	Z+27, r24	; 0x1b
    1d2e:	94 8f       	std	Z+28, r25	; 0x1c
    1d30:	a5 8f       	std	Z+29, r26	; 0x1d
    1d32:	b6 8f       	std	Z+30, r27	; 0x1e
    1d34:	8a ed       	ldi	r24, 0xDA	; 218
    1d36:	9c e3       	ldi	r25, 0x3C	; 60
    1d38:	a2 e0       	ldi	r26, 0x02	; 2
    1d3a:	b0 e0       	ldi	r27, 0x00	; 0
    1d3c:	87 8f       	std	Z+31, r24	; 0x1f
    1d3e:	90 a3       	std	Z+32, r25	; 0x20
    1d40:	a1 a3       	std	Z+33, r26	; 0x21
    1d42:	b2 a3       	std	Z+34, r27	; 0x22
    1d44:	87 e1       	ldi	r24, 0x17	; 23
    1d46:	83 a3       	std	Z+35, r24	; 0x23
    1d48:	8e e2       	ldi	r24, 0x2E	; 46
    1d4a:	86 a3       	std	Z+38, r24	; 0x26
    1d4c:	8c e5       	ldi	r24, 0x5C	; 92
    1d4e:	81 a7       	std	Z+41, r24	; 0x29
    1d50:	14 a6       	std	Z+44, r1	; 0x2c
    1d52:	81 e3       	ldi	r24, 0x31	; 49
    1d54:	9d e0       	ldi	r25, 0x0D	; 13
    1d56:	96 a7       	std	Z+46, r25	; 0x2e
    1d58:	85 a7       	std	Z+45, r24	; 0x2d
    1d5a:	85 e3       	ldi	r24, 0x35	; 53
    1d5c:	9d e0       	ldi	r25, 0x0D	; 13
    1d5e:	90 ab       	std	Z+48, r25	; 0x30
    1d60:	87 a7       	std	Z+47, r24	; 0x2f
    1d62:	88 e3       	ldi	r24, 0x38	; 56
    1d64:	9d e0       	ldi	r25, 0x0D	; 13
    1d66:	92 ab       	std	Z+50, r25	; 0x32
    1d68:	81 ab       	std	Z+49, r24	; 0x31
    1d6a:	8c e6       	ldi	r24, 0x6C	; 108
    1d6c:	9d e0       	ldi	r25, 0x0D	; 13
    1d6e:	94 ab       	std	Z+52, r25	; 0x34
    1d70:	83 ab       	std	Z+51, r24	; 0x33
    1d72:	89 ec       	ldi	r24, 0xC9	; 201
    1d74:	9d e0       	ldi	r25, 0x0D	; 13
    1d76:	96 ab       	std	Z+54, r25	; 0x36
    1d78:	85 ab       	std	Z+53, r24	; 0x35
    1d7a:	87 e8       	ldi	r24, 0x87	; 135
    1d7c:	9d e0       	ldi	r25, 0x0D	; 13
    1d7e:	90 af       	std	Z+56, r25	; 0x38
    1d80:	87 ab       	std	Z+55, r24	; 0x37
}
    1d82:	cf 01       	movw	r24, r30
    1d84:	0f 91       	pop	r16
    1d86:	ef 90       	pop	r14
    1d88:	08 95       	ret

00001d8a <main>:
}
/*
** procedure and function
*/
void PORTINIT(void)
{
    1d8a:	cf 93       	push	r28
    1d8c:	df 93       	push	r29
    1d8e:	cd b7       	in	r28, 0x3d	; 61
    1d90:	de b7       	in	r29, 0x3e	; 62
    1d92:	c9 5d       	subi	r28, 0xD9	; 217
    1d94:	d1 09       	sbc	r29, r1
    1d96:	0f b6       	in	r0, 0x3f	; 63
    1d98:	f8 94       	cli
    1d9a:	de bf       	out	0x3e, r29	; 62
    1d9c:	0f be       	out	0x3f, r0	; 63
    1d9e:	cd bf       	out	0x3d, r28	; 61
    1da0:	ce 01       	movw	r24, r28
    1da2:	01 96       	adiw	r24, 0x01	; 1
    1da4:	3b da       	rcall	.-2954   	; 0x121c <FUNCenable>
    1da6:	2d 96       	adiw	r28, 0x0d	; 13
    1da8:	8e ac       	ldd	r8, Y+62	; 0x3e
    1daa:	9f ac       	ldd	r9, Y+63	; 0x3f
    1dac:	2d 97       	sbiw	r28, 0x0d	; 13
    1dae:	2b e3       	ldi	r18, 0x3B	; 59
    1db0:	30 e0       	ldi	r19, 0x00	; 0
    1db2:	49 e3       	ldi	r20, 0x39	; 57
    1db4:	50 e0       	ldi	r21, 0x00	; 0
    1db6:	6a e3       	ldi	r22, 0x3A	; 58
    1db8:	70 e0       	ldi	r23, 0x00	; 0
    1dba:	ce 01       	movw	r24, r28
    1dbc:	83 5b       	subi	r24, 0xB3	; 179
    1dbe:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc0:	e1 dd       	rcall	.-1086   	; 0x1984 <LCD0enable>
    1dc2:	6b 96       	adiw	r28, 0x1b	; 27
    1dc4:	ce ac       	ldd	r12, Y+62	; 0x3e
    1dc6:	df ac       	ldd	r13, Y+63	; 0x3f
    1dc8:	6b 97       	sbiw	r28, 0x1b	; 27
    1dca:	a1 96       	adiw	r28, 0x21	; 33
    1dcc:	ae ac       	ldd	r10, Y+62	; 0x3e
    1dce:	bf ac       	ldd	r11, Y+63	; 0x3f
    1dd0:	a1 97       	sbiw	r28, 0x21	; 33
    1dd2:	42 e0       	ldi	r20, 0x02	; 2
    1dd4:	62 e0       	ldi	r22, 0x02	; 2
    1dd6:	ce 01       	movw	r24, r28
    1dd8:	8d 59       	subi	r24, 0x9D	; 157
    1dda:	9f 4f       	sbci	r25, 0xFF	; 255
    1ddc:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <TIMER_COUNTER0enable>
    1de0:	40 e0       	ldi	r20, 0x00	; 0
    1de2:	64 e0       	ldi	r22, 0x04	; 4
    1de4:	ce 01       	movw	r24, r28
    1de6:	8d 58       	subi	r24, 0x8D	; 141
    1de8:	9f 4f       	sbci	r25, 0xFF	; 255
    1dea:	0e 94 9f 02 	call	0x53e	; 0x53e <TIMER_COUNTER1enable>
    1dee:	0f 2e       	mov	r0, r31
    1df0:	f7 e0       	ldi	r31, 0x07	; 7
    1df2:	ef 2e       	mov	r14, r31
    1df4:	f0 2d       	mov	r31, r0
    1df6:	06 e0       	ldi	r16, 0x06	; 6
    1df8:	22 e6       	ldi	r18, 0x62	; 98
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	40 e2       	ldi	r20, 0x20	; 32
    1dfe:	50 e0       	ldi	r21, 0x00	; 0
    1e00:	61 e6       	ldi	r22, 0x61	; 97
    1e02:	70 e0       	ldi	r23, 0x00	; 0
    1e04:	ce 01       	movw	r24, r28
    1e06:	8f 55       	subi	r24, 0x5F	; 95
    1e08:	9f 4f       	sbci	r25, 0xFF	; 255
    1e0a:	39 df       	rcall	.-398    	; 0x1c7e <HX711enable>
    1e0c:	89 e3       	ldi	r24, 0x39	; 57
    1e0e:	fe 01       	movw	r30, r28
    1e10:	ef 55       	subi	r30, 0x5F	; 95
    1e12:	ff 4f       	sbci	r31, 0xFF	; 255
    1e14:	af e0       	ldi	r26, 0x0F	; 15
    1e16:	b3 e0       	ldi	r27, 0x03	; 3
    1e18:	01 90       	ld	r0, Z+
    1e1a:	0d 92       	st	X+, r0
    1e1c:	8a 95       	dec	r24
    1e1e:	e1 f7       	brne	.-8      	; 0x1e18 <main+0x8e>
    1e20:	ce 01       	movw	r24, r28
    1e22:	8d 57       	subi	r24, 0x7D	; 125
    1e24:	9f 4f       	sbci	r25, 0xFF	; 255
    1e26:	0e 94 d7 04 	call	0x9ae	; 0x9ae <EEPROMenable>
    1e2a:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <tmp>
    1e2e:	10 92 f8 02 	sts	0x02F8, r1	; 0x8002f8 <tmp+0x1>
    1e32:	10 92 f9 02 	sts	0x02F9, r1	; 0x8002f9 <tmp+0x2>
    1e36:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <tmp+0x3>
    1e3a:	a5 96       	adiw	r28, 0x25	; 37
    1e3c:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e3e:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e40:	a5 97       	sbiw	r28, 0x25	; 37
    1e42:	81 e0       	ldi	r24, 0x01	; 1
    1e44:	09 95       	icall
    1e46:	ab 96       	adiw	r28, 0x2b	; 43
    1e48:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e4a:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e4c:	ab 97       	sbiw	r28, 0x2b	; 43
    1e4e:	8f e4       	ldi	r24, 0x4F	; 79
    1e50:	09 95       	icall
    1e52:	e1 96       	adiw	r28, 0x31	; 49
    1e54:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e56:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e58:	e1 97       	sbiw	r28, 0x31	; 49
    1e5a:	88 e0       	ldi	r24, 0x08	; 8
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	09 95       	icall
    1e60:	e5 96       	adiw	r28, 0x35	; 53
    1e62:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e64:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e66:	e5 97       	sbiw	r28, 0x35	; 53
    1e68:	81 e0       	ldi	r24, 0x01	; 1
    1e6a:	09 95       	icall
    1e6c:	eb 96       	adiw	r28, 0x3b	; 59
    1e6e:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e70:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e72:	eb 97       	sbiw	r28, 0x3b	; 59
    1e74:	80 e5       	ldi	r24, 0x50	; 80
    1e76:	95 ef       	ldi	r25, 0xF5	; 245
    1e78:	09 95       	icall
    1e7a:	c1 58       	subi	r28, 0x81	; 129
    1e7c:	df 4f       	sbci	r29, 0xFF	; 255
    1e7e:	e8 81       	ld	r30, Y
    1e80:	f9 81       	ldd	r31, Y+1	; 0x01
    1e82:	cf 57       	subi	r28, 0x7F	; 127
    1e84:	d0 40       	sbci	r29, 0x00	; 0
    1e86:	80 e0       	ldi	r24, 0x00	; 0
    1e88:	91 e0       	ldi	r25, 0x01	; 1
    1e8a:	09 95       	icall
    1e8c:	e0 91 42 03 	lds	r30, 0x0342	; 0x800342 <hx+0x33>
    1e90:	f0 91 43 03 	lds	r31, 0x0343	; 0x800343 <hx+0x34>
    1e94:	60 e4       	ldi	r22, 0x40	; 64
    1e96:	8f e0       	ldi	r24, 0x0F	; 15
    1e98:	93 e0       	ldi	r25, 0x03	; 3
    1e9a:	09 95       	icall
    1e9c:	0f e0       	ldi	r16, 0x0F	; 15
    1e9e:	13 e0       	ldi	r17, 0x03	; 3
    1ea0:	a3 96       	adiw	r28, 0x23	; 35
    1ea2:	ee ad       	ldd	r30, Y+62	; 0x3e
    1ea4:	ff ad       	ldd	r31, Y+63	; 0x3f
    1ea6:	a3 97       	sbiw	r28, 0x23	; 35
    1ea8:	09 95       	icall
    1eaa:	d8 01       	movw	r26, r16
    1eac:	d7 96       	adiw	r26, 0x37	; 55
    1eae:	ed 91       	ld	r30, X+
    1eb0:	fc 91       	ld	r31, X
    1eb2:	d8 97       	sbiw	r26, 0x38	; 56
    1eb4:	69 e1       	ldi	r22, 0x19	; 25
    1eb6:	c8 01       	movw	r24, r16
    1eb8:	09 95       	icall
    1eba:	2b 01       	movw	r4, r22
    1ebc:	3c 01       	movw	r6, r24
    1ebe:	60 e0       	ldi	r22, 0x00	; 0
    1ec0:	70 e0       	ldi	r23, 0x00	; 0
    1ec2:	81 e0       	ldi	r24, 0x01	; 1
    1ec4:	90 e0       	ldi	r25, 0x00	; 0
    1ec6:	f5 01       	movw	r30, r10
    1ec8:	09 95       	icall
    1eca:	20 e0       	ldi	r18, 0x00	; 0
    1ecc:	4b ef       	ldi	r20, 0xFB	; 251
    1ece:	52 e0       	ldi	r21, 0x02	; 2
    1ed0:	c3 01       	movw	r24, r6
    1ed2:	b2 01       	movw	r22, r4
    1ed4:	f4 01       	movw	r30, r8
    1ed6:	09 95       	icall
    1ed8:	6c e0       	ldi	r22, 0x0C	; 12
    1eda:	f6 01       	movw	r30, r12
    1edc:	09 95       	icall
    1ede:	66 e0       	ldi	r22, 0x06	; 6
    1ee0:	80 e0       	ldi	r24, 0x00	; 0
    1ee2:	91 e0       	ldi	r25, 0x01	; 1
    1ee4:	f6 01       	movw	r30, r12
    1ee6:	09 95       	icall
    1ee8:	d8 01       	movw	r26, r16
    1eea:	5b 96       	adiw	r26, 0x1b	; 27
    1eec:	6d 91       	ld	r22, X+
    1eee:	7d 91       	ld	r23, X+
    1ef0:	8d 91       	ld	r24, X+
    1ef2:	9c 91       	ld	r25, X
    1ef4:	5e 97       	sbiw	r26, 0x1e	; 30
    1ef6:	95 d1       	rcall	.+810    	; 0x2222 <__floatsisf>
    1ef8:	9b 01       	movw	r18, r22
    1efa:	ac 01       	movw	r20, r24
    1efc:	c3 01       	movw	r24, r6
    1efe:	b2 01       	movw	r22, r4
    1f00:	8c d0       	rcall	.+280    	; 0x201a <__subsf3>
    1f02:	2b 01       	movw	r4, r22
    1f04:	3c 01       	movw	r6, r24
    1f06:	f8 01       	movw	r30, r16
    1f08:	66 a1       	ldd	r22, Z+38	; 0x26
    1f0a:	70 e0       	ldi	r23, 0x00	; 0
    1f0c:	80 e0       	ldi	r24, 0x00	; 0
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	88 d1       	rcall	.+784    	; 0x2222 <__floatsisf>
    1f12:	9b 01       	movw	r18, r22
    1f14:	ac 01       	movw	r20, r24
    1f16:	c3 01       	movw	r24, r6
    1f18:	b2 01       	movw	r22, r4
    1f1a:	e8 d0       	rcall	.+464    	; 0x20ec <__divsf3>
    1f1c:	2b 01       	movw	r4, r22
    1f1e:	3c 01       	movw	r6, r24
    1f20:	20 e0       	ldi	r18, 0x00	; 0
    1f22:	30 e0       	ldi	r19, 0x00	; 0
    1f24:	4a e7       	ldi	r20, 0x7A	; 122
    1f26:	54 e4       	ldi	r21, 0x44	; 68
    1f28:	2c d2       	rcall	.+1112   	; 0x2382 <__gesf2>
    1f2a:	18 16       	cp	r1, r24
    1f2c:	4c f0       	brlt	.+18     	; 0x1f40 <main+0x1b6>
    1f2e:	20 e0       	ldi	r18, 0x00	; 0
    1f30:	30 e0       	ldi	r19, 0x00	; 0
    1f32:	4a e7       	ldi	r20, 0x7A	; 122
    1f34:	54 ec       	ldi	r21, 0xC4	; 196
    1f36:	c3 01       	movw	r24, r6
    1f38:	b2 01       	movw	r22, r4
    1f3a:	d4 d0       	rcall	.+424    	; 0x20e4 <__cmpsf2>
    1f3c:	88 23       	and	r24, r24
    1f3e:	dc f4       	brge	.+54     	; 0x1f76 <main+0x1ec>
    1f40:	60 e0       	ldi	r22, 0x00	; 0
    1f42:	70 e0       	ldi	r23, 0x00	; 0
    1f44:	83 e0       	ldi	r24, 0x03	; 3
    1f46:	90 e0       	ldi	r25, 0x00	; 0
    1f48:	f5 01       	movw	r30, r10
    1f4a:	09 95       	icall
    1f4c:	20 e0       	ldi	r18, 0x00	; 0
    1f4e:	30 e0       	ldi	r19, 0x00	; 0
    1f50:	4a e7       	ldi	r20, 0x7A	; 122
    1f52:	54 e4       	ldi	r21, 0x44	; 68
    1f54:	c3 01       	movw	r24, r6
    1f56:	b2 01       	movw	r22, r4
    1f58:	c9 d0       	rcall	.+402    	; 0x20ec <__divsf3>
    1f5a:	23 e0       	ldi	r18, 0x03	; 3
    1f5c:	4b ef       	ldi	r20, 0xFB	; 251
    1f5e:	52 e0       	ldi	r21, 0x02	; 2
    1f60:	f4 01       	movw	r30, r8
    1f62:	09 95       	icall
    1f64:	6c e0       	ldi	r22, 0x0C	; 12
    1f66:	f6 01       	movw	r30, r12
    1f68:	09 95       	icall
    1f6a:	64 e0       	ldi	r22, 0x04	; 4
    1f6c:	87 e0       	ldi	r24, 0x07	; 7
    1f6e:	91 e0       	ldi	r25, 0x01	; 1
    1f70:	f6 01       	movw	r30, r12
    1f72:	09 95       	icall
    1f74:	95 cf       	rjmp	.-214    	; 0x1ea0 <main+0x116>
    1f76:	60 e0       	ldi	r22, 0x00	; 0
    1f78:	70 e0       	ldi	r23, 0x00	; 0
    1f7a:	83 e0       	ldi	r24, 0x03	; 3
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	f5 01       	movw	r30, r10
    1f80:	09 95       	icall
    1f82:	20 e0       	ldi	r18, 0x00	; 0
    1f84:	4b ef       	ldi	r20, 0xFB	; 251
    1f86:	52 e0       	ldi	r21, 0x02	; 2
    1f88:	c3 01       	movw	r24, r6
    1f8a:	b2 01       	movw	r22, r4
    1f8c:	f4 01       	movw	r30, r8
    1f8e:	09 95       	icall
    1f90:	6c e0       	ldi	r22, 0x0C	; 12
    1f92:	f6 01       	movw	r30, r12
    1f94:	09 95       	icall
    1f96:	64 e0       	ldi	r22, 0x04	; 4
    1f98:	8a e0       	ldi	r24, 0x0A	; 10
    1f9a:	91 e0       	ldi	r25, 0x01	; 1
    1f9c:	f6 01       	movw	r30, r12
    1f9e:	09 95       	icall
    1fa0:	7f cf       	rjmp	.-258    	; 0x1ea0 <main+0x116>

00001fa2 <__vector_15>:
}
/*
** interrupt
*/
ISR(TIMER0_COMP_vect)
{
    1fa2:	1f 92       	push	r1
    1fa4:	0f 92       	push	r0
    1fa6:	0f b6       	in	r0, 0x3f	; 63
    1fa8:	0f 92       	push	r0
    1faa:	11 24       	eor	r1, r1
    1fac:	0b b6       	in	r0, 0x3b	; 59
    1fae:	0f 92       	push	r0
    1fb0:	2f 93       	push	r18
    1fb2:	3f 93       	push	r19
    1fb4:	4f 93       	push	r20
    1fb6:	5f 93       	push	r21
    1fb8:	6f 93       	push	r22
    1fba:	7f 93       	push	r23
    1fbc:	8f 93       	push	r24
    1fbe:	9f 93       	push	r25
    1fc0:	af 93       	push	r26
    1fc2:	bf 93       	push	r27
    1fc4:	cf 93       	push	r28
    1fc6:	ef 93       	push	r30
    1fc8:	ff 93       	push	r31
	/***Block other interrupts during this procedure***/
	uint8_t Sreg;
	Sreg=SREG;
    1fca:	cf b7       	in	r28, 0x3f	; 63
	SREG&=~(1<<7);
    1fcc:	8f b7       	in	r24, 0x3f	; 63
    1fce:	8f 77       	andi	r24, 0x7F	; 127
    1fd0:	8f bf       	out	0x3f, r24	; 63
	/***Block other interrupts during this procedure***/	
	tmp=hx.read_raw(&hx);
    1fd2:	e0 91 44 03 	lds	r30, 0x0344	; 0x800344 <hx+0x35>
    1fd6:	f0 91 45 03 	lds	r31, 0x0345	; 0x800345 <hx+0x36>
    1fda:	8f e0       	ldi	r24, 0x0F	; 15
    1fdc:	93 e0       	ldi	r25, 0x03	; 3
    1fde:	09 95       	icall
    1fe0:	60 93 f7 02 	sts	0x02F7, r22	; 0x8002f7 <tmp>
    1fe4:	70 93 f8 02 	sts	0x02F8, r23	; 0x8002f8 <tmp+0x1>
    1fe8:	80 93 f9 02 	sts	0x02F9, r24	; 0x8002f9 <tmp+0x2>
    1fec:	90 93 fa 02 	sts	0x02FA, r25	; 0x8002fa <tmp+0x3>
	/***enable interrupts again***/
	SREG=Sreg;
    1ff0:	cf bf       	out	0x3f, r28	; 63
}
    1ff2:	ff 91       	pop	r31
    1ff4:	ef 91       	pop	r30
    1ff6:	cf 91       	pop	r28
    1ff8:	bf 91       	pop	r27
    1ffa:	af 91       	pop	r26
    1ffc:	9f 91       	pop	r25
    1ffe:	8f 91       	pop	r24
    2000:	7f 91       	pop	r23
    2002:	6f 91       	pop	r22
    2004:	5f 91       	pop	r21
    2006:	4f 91       	pop	r20
    2008:	3f 91       	pop	r19
    200a:	2f 91       	pop	r18
    200c:	0f 90       	pop	r0
    200e:	0b be       	out	0x3b, r0	; 59
    2010:	0f 90       	pop	r0
    2012:	0f be       	out	0x3f, r0	; 63
    2014:	0f 90       	pop	r0
    2016:	1f 90       	pop	r1
    2018:	18 95       	reti

0000201a <__subsf3>:
    201a:	50 58       	subi	r21, 0x80	; 128

0000201c <__addsf3>:
    201c:	bb 27       	eor	r27, r27
    201e:	aa 27       	eor	r26, r26
    2020:	0e d0       	rcall	.+28     	; 0x203e <__addsf3x>
    2022:	75 c1       	rjmp	.+746    	; 0x230e <__fp_round>
    2024:	66 d1       	rcall	.+716    	; 0x22f2 <__fp_pscA>
    2026:	30 f0       	brcs	.+12     	; 0x2034 <__addsf3+0x18>
    2028:	6b d1       	rcall	.+726    	; 0x2300 <__fp_pscB>
    202a:	20 f0       	brcs	.+8      	; 0x2034 <__addsf3+0x18>
    202c:	31 f4       	brne	.+12     	; 0x203a <__addsf3+0x1e>
    202e:	9f 3f       	cpi	r25, 0xFF	; 255
    2030:	11 f4       	brne	.+4      	; 0x2036 <__addsf3+0x1a>
    2032:	1e f4       	brtc	.+6      	; 0x203a <__addsf3+0x1e>
    2034:	5b c1       	rjmp	.+694    	; 0x22ec <__fp_nan>
    2036:	0e f4       	brtc	.+2      	; 0x203a <__addsf3+0x1e>
    2038:	e0 95       	com	r30
    203a:	e7 fb       	bst	r30, 7
    203c:	51 c1       	rjmp	.+674    	; 0x22e0 <__fp_inf>

0000203e <__addsf3x>:
    203e:	e9 2f       	mov	r30, r25
    2040:	77 d1       	rcall	.+750    	; 0x2330 <__fp_split3>
    2042:	80 f3       	brcs	.-32     	; 0x2024 <__addsf3+0x8>
    2044:	ba 17       	cp	r27, r26
    2046:	62 07       	cpc	r22, r18
    2048:	73 07       	cpc	r23, r19
    204a:	84 07       	cpc	r24, r20
    204c:	95 07       	cpc	r25, r21
    204e:	18 f0       	brcs	.+6      	; 0x2056 <__addsf3x+0x18>
    2050:	71 f4       	brne	.+28     	; 0x206e <__addsf3x+0x30>
    2052:	9e f5       	brtc	.+102    	; 0x20ba <__addsf3x+0x7c>
    2054:	8f c1       	rjmp	.+798    	; 0x2374 <__fp_zero>
    2056:	0e f4       	brtc	.+2      	; 0x205a <__addsf3x+0x1c>
    2058:	e0 95       	com	r30
    205a:	0b 2e       	mov	r0, r27
    205c:	ba 2f       	mov	r27, r26
    205e:	a0 2d       	mov	r26, r0
    2060:	0b 01       	movw	r0, r22
    2062:	b9 01       	movw	r22, r18
    2064:	90 01       	movw	r18, r0
    2066:	0c 01       	movw	r0, r24
    2068:	ca 01       	movw	r24, r20
    206a:	a0 01       	movw	r20, r0
    206c:	11 24       	eor	r1, r1
    206e:	ff 27       	eor	r31, r31
    2070:	59 1b       	sub	r21, r25
    2072:	99 f0       	breq	.+38     	; 0x209a <__addsf3x+0x5c>
    2074:	59 3f       	cpi	r21, 0xF9	; 249
    2076:	50 f4       	brcc	.+20     	; 0x208c <__addsf3x+0x4e>
    2078:	50 3e       	cpi	r21, 0xE0	; 224
    207a:	68 f1       	brcs	.+90     	; 0x20d6 <__addsf3x+0x98>
    207c:	1a 16       	cp	r1, r26
    207e:	f0 40       	sbci	r31, 0x00	; 0
    2080:	a2 2f       	mov	r26, r18
    2082:	23 2f       	mov	r18, r19
    2084:	34 2f       	mov	r19, r20
    2086:	44 27       	eor	r20, r20
    2088:	58 5f       	subi	r21, 0xF8	; 248
    208a:	f3 cf       	rjmp	.-26     	; 0x2072 <__addsf3x+0x34>
    208c:	46 95       	lsr	r20
    208e:	37 95       	ror	r19
    2090:	27 95       	ror	r18
    2092:	a7 95       	ror	r26
    2094:	f0 40       	sbci	r31, 0x00	; 0
    2096:	53 95       	inc	r21
    2098:	c9 f7       	brne	.-14     	; 0x208c <__addsf3x+0x4e>
    209a:	7e f4       	brtc	.+30     	; 0x20ba <__addsf3x+0x7c>
    209c:	1f 16       	cp	r1, r31
    209e:	ba 0b       	sbc	r27, r26
    20a0:	62 0b       	sbc	r22, r18
    20a2:	73 0b       	sbc	r23, r19
    20a4:	84 0b       	sbc	r24, r20
    20a6:	ba f0       	brmi	.+46     	; 0x20d6 <__addsf3x+0x98>
    20a8:	91 50       	subi	r25, 0x01	; 1
    20aa:	a1 f0       	breq	.+40     	; 0x20d4 <__addsf3x+0x96>
    20ac:	ff 0f       	add	r31, r31
    20ae:	bb 1f       	adc	r27, r27
    20b0:	66 1f       	adc	r22, r22
    20b2:	77 1f       	adc	r23, r23
    20b4:	88 1f       	adc	r24, r24
    20b6:	c2 f7       	brpl	.-16     	; 0x20a8 <__addsf3x+0x6a>
    20b8:	0e c0       	rjmp	.+28     	; 0x20d6 <__addsf3x+0x98>
    20ba:	ba 0f       	add	r27, r26
    20bc:	62 1f       	adc	r22, r18
    20be:	73 1f       	adc	r23, r19
    20c0:	84 1f       	adc	r24, r20
    20c2:	48 f4       	brcc	.+18     	; 0x20d6 <__addsf3x+0x98>
    20c4:	87 95       	ror	r24
    20c6:	77 95       	ror	r23
    20c8:	67 95       	ror	r22
    20ca:	b7 95       	ror	r27
    20cc:	f7 95       	ror	r31
    20ce:	9e 3f       	cpi	r25, 0xFE	; 254
    20d0:	08 f0       	brcs	.+2      	; 0x20d4 <__addsf3x+0x96>
    20d2:	b3 cf       	rjmp	.-154    	; 0x203a <__addsf3+0x1e>
    20d4:	93 95       	inc	r25
    20d6:	88 0f       	add	r24, r24
    20d8:	08 f0       	brcs	.+2      	; 0x20dc <__addsf3x+0x9e>
    20da:	99 27       	eor	r25, r25
    20dc:	ee 0f       	add	r30, r30
    20de:	97 95       	ror	r25
    20e0:	87 95       	ror	r24
    20e2:	08 95       	ret

000020e4 <__cmpsf2>:
    20e4:	d9 d0       	rcall	.+434    	; 0x2298 <__fp_cmp>
    20e6:	08 f4       	brcc	.+2      	; 0x20ea <__cmpsf2+0x6>
    20e8:	81 e0       	ldi	r24, 0x01	; 1
    20ea:	08 95       	ret

000020ec <__divsf3>:
    20ec:	0c d0       	rcall	.+24     	; 0x2106 <__divsf3x>
    20ee:	0f c1       	rjmp	.+542    	; 0x230e <__fp_round>
    20f0:	07 d1       	rcall	.+526    	; 0x2300 <__fp_pscB>
    20f2:	40 f0       	brcs	.+16     	; 0x2104 <__divsf3+0x18>
    20f4:	fe d0       	rcall	.+508    	; 0x22f2 <__fp_pscA>
    20f6:	30 f0       	brcs	.+12     	; 0x2104 <__divsf3+0x18>
    20f8:	21 f4       	brne	.+8      	; 0x2102 <__divsf3+0x16>
    20fa:	5f 3f       	cpi	r21, 0xFF	; 255
    20fc:	19 f0       	breq	.+6      	; 0x2104 <__divsf3+0x18>
    20fe:	f0 c0       	rjmp	.+480    	; 0x22e0 <__fp_inf>
    2100:	51 11       	cpse	r21, r1
    2102:	39 c1       	rjmp	.+626    	; 0x2376 <__fp_szero>
    2104:	f3 c0       	rjmp	.+486    	; 0x22ec <__fp_nan>

00002106 <__divsf3x>:
    2106:	14 d1       	rcall	.+552    	; 0x2330 <__fp_split3>
    2108:	98 f3       	brcs	.-26     	; 0x20f0 <__divsf3+0x4>

0000210a <__divsf3_pse>:
    210a:	99 23       	and	r25, r25
    210c:	c9 f3       	breq	.-14     	; 0x2100 <__divsf3+0x14>
    210e:	55 23       	and	r21, r21
    2110:	b1 f3       	breq	.-20     	; 0x20fe <__divsf3+0x12>
    2112:	95 1b       	sub	r25, r21
    2114:	55 0b       	sbc	r21, r21
    2116:	bb 27       	eor	r27, r27
    2118:	aa 27       	eor	r26, r26
    211a:	62 17       	cp	r22, r18
    211c:	73 07       	cpc	r23, r19
    211e:	84 07       	cpc	r24, r20
    2120:	38 f0       	brcs	.+14     	; 0x2130 <__divsf3_pse+0x26>
    2122:	9f 5f       	subi	r25, 0xFF	; 255
    2124:	5f 4f       	sbci	r21, 0xFF	; 255
    2126:	22 0f       	add	r18, r18
    2128:	33 1f       	adc	r19, r19
    212a:	44 1f       	adc	r20, r20
    212c:	aa 1f       	adc	r26, r26
    212e:	a9 f3       	breq	.-22     	; 0x211a <__divsf3_pse+0x10>
    2130:	33 d0       	rcall	.+102    	; 0x2198 <__divsf3_pse+0x8e>
    2132:	0e 2e       	mov	r0, r30
    2134:	3a f0       	brmi	.+14     	; 0x2144 <__divsf3_pse+0x3a>
    2136:	e0 e8       	ldi	r30, 0x80	; 128
    2138:	30 d0       	rcall	.+96     	; 0x219a <__divsf3_pse+0x90>
    213a:	91 50       	subi	r25, 0x01	; 1
    213c:	50 40       	sbci	r21, 0x00	; 0
    213e:	e6 95       	lsr	r30
    2140:	00 1c       	adc	r0, r0
    2142:	ca f7       	brpl	.-14     	; 0x2136 <__divsf3_pse+0x2c>
    2144:	29 d0       	rcall	.+82     	; 0x2198 <__divsf3_pse+0x8e>
    2146:	fe 2f       	mov	r31, r30
    2148:	27 d0       	rcall	.+78     	; 0x2198 <__divsf3_pse+0x8e>
    214a:	66 0f       	add	r22, r22
    214c:	77 1f       	adc	r23, r23
    214e:	88 1f       	adc	r24, r24
    2150:	bb 1f       	adc	r27, r27
    2152:	26 17       	cp	r18, r22
    2154:	37 07       	cpc	r19, r23
    2156:	48 07       	cpc	r20, r24
    2158:	ab 07       	cpc	r26, r27
    215a:	b0 e8       	ldi	r27, 0x80	; 128
    215c:	09 f0       	breq	.+2      	; 0x2160 <__divsf3_pse+0x56>
    215e:	bb 0b       	sbc	r27, r27
    2160:	80 2d       	mov	r24, r0
    2162:	bf 01       	movw	r22, r30
    2164:	ff 27       	eor	r31, r31
    2166:	93 58       	subi	r25, 0x83	; 131
    2168:	5f 4f       	sbci	r21, 0xFF	; 255
    216a:	2a f0       	brmi	.+10     	; 0x2176 <__divsf3_pse+0x6c>
    216c:	9e 3f       	cpi	r25, 0xFE	; 254
    216e:	51 05       	cpc	r21, r1
    2170:	68 f0       	brcs	.+26     	; 0x218c <__divsf3_pse+0x82>
    2172:	b6 c0       	rjmp	.+364    	; 0x22e0 <__fp_inf>
    2174:	00 c1       	rjmp	.+512    	; 0x2376 <__fp_szero>
    2176:	5f 3f       	cpi	r21, 0xFF	; 255
    2178:	ec f3       	brlt	.-6      	; 0x2174 <__divsf3_pse+0x6a>
    217a:	98 3e       	cpi	r25, 0xE8	; 232
    217c:	dc f3       	brlt	.-10     	; 0x2174 <__divsf3_pse+0x6a>
    217e:	86 95       	lsr	r24
    2180:	77 95       	ror	r23
    2182:	67 95       	ror	r22
    2184:	b7 95       	ror	r27
    2186:	f7 95       	ror	r31
    2188:	9f 5f       	subi	r25, 0xFF	; 255
    218a:	c9 f7       	brne	.-14     	; 0x217e <__divsf3_pse+0x74>
    218c:	88 0f       	add	r24, r24
    218e:	91 1d       	adc	r25, r1
    2190:	96 95       	lsr	r25
    2192:	87 95       	ror	r24
    2194:	97 f9       	bld	r25, 7
    2196:	08 95       	ret
    2198:	e1 e0       	ldi	r30, 0x01	; 1
    219a:	66 0f       	add	r22, r22
    219c:	77 1f       	adc	r23, r23
    219e:	88 1f       	adc	r24, r24
    21a0:	bb 1f       	adc	r27, r27
    21a2:	62 17       	cp	r22, r18
    21a4:	73 07       	cpc	r23, r19
    21a6:	84 07       	cpc	r24, r20
    21a8:	ba 07       	cpc	r27, r26
    21aa:	20 f0       	brcs	.+8      	; 0x21b4 <__divsf3_pse+0xaa>
    21ac:	62 1b       	sub	r22, r18
    21ae:	73 0b       	sbc	r23, r19
    21b0:	84 0b       	sbc	r24, r20
    21b2:	ba 0b       	sbc	r27, r26
    21b4:	ee 1f       	adc	r30, r30
    21b6:	88 f7       	brcc	.-30     	; 0x219a <__divsf3_pse+0x90>
    21b8:	e0 95       	com	r30
    21ba:	08 95       	ret

000021bc <__fixsfsi>:
    21bc:	04 d0       	rcall	.+8      	; 0x21c6 <__fixunssfsi>
    21be:	68 94       	set
    21c0:	b1 11       	cpse	r27, r1
    21c2:	d9 c0       	rjmp	.+434    	; 0x2376 <__fp_szero>
    21c4:	08 95       	ret

000021c6 <__fixunssfsi>:
    21c6:	bc d0       	rcall	.+376    	; 0x2340 <__fp_splitA>
    21c8:	88 f0       	brcs	.+34     	; 0x21ec <__fixunssfsi+0x26>
    21ca:	9f 57       	subi	r25, 0x7F	; 127
    21cc:	90 f0       	brcs	.+36     	; 0x21f2 <__fixunssfsi+0x2c>
    21ce:	b9 2f       	mov	r27, r25
    21d0:	99 27       	eor	r25, r25
    21d2:	b7 51       	subi	r27, 0x17	; 23
    21d4:	a0 f0       	brcs	.+40     	; 0x21fe <__fixunssfsi+0x38>
    21d6:	d1 f0       	breq	.+52     	; 0x220c <__fixunssfsi+0x46>
    21d8:	66 0f       	add	r22, r22
    21da:	77 1f       	adc	r23, r23
    21dc:	88 1f       	adc	r24, r24
    21de:	99 1f       	adc	r25, r25
    21e0:	1a f0       	brmi	.+6      	; 0x21e8 <__fixunssfsi+0x22>
    21e2:	ba 95       	dec	r27
    21e4:	c9 f7       	brne	.-14     	; 0x21d8 <__fixunssfsi+0x12>
    21e6:	12 c0       	rjmp	.+36     	; 0x220c <__fixunssfsi+0x46>
    21e8:	b1 30       	cpi	r27, 0x01	; 1
    21ea:	81 f0       	breq	.+32     	; 0x220c <__fixunssfsi+0x46>
    21ec:	c3 d0       	rcall	.+390    	; 0x2374 <__fp_zero>
    21ee:	b1 e0       	ldi	r27, 0x01	; 1
    21f0:	08 95       	ret
    21f2:	c0 c0       	rjmp	.+384    	; 0x2374 <__fp_zero>
    21f4:	67 2f       	mov	r22, r23
    21f6:	78 2f       	mov	r23, r24
    21f8:	88 27       	eor	r24, r24
    21fa:	b8 5f       	subi	r27, 0xF8	; 248
    21fc:	39 f0       	breq	.+14     	; 0x220c <__fixunssfsi+0x46>
    21fe:	b9 3f       	cpi	r27, 0xF9	; 249
    2200:	cc f3       	brlt	.-14     	; 0x21f4 <__fixunssfsi+0x2e>
    2202:	86 95       	lsr	r24
    2204:	77 95       	ror	r23
    2206:	67 95       	ror	r22
    2208:	b3 95       	inc	r27
    220a:	d9 f7       	brne	.-10     	; 0x2202 <__fixunssfsi+0x3c>
    220c:	3e f4       	brtc	.+14     	; 0x221c <__fixunssfsi+0x56>
    220e:	90 95       	com	r25
    2210:	80 95       	com	r24
    2212:	70 95       	com	r23
    2214:	61 95       	neg	r22
    2216:	7f 4f       	sbci	r23, 0xFF	; 255
    2218:	8f 4f       	sbci	r24, 0xFF	; 255
    221a:	9f 4f       	sbci	r25, 0xFF	; 255
    221c:	08 95       	ret

0000221e <__floatunsisf>:
    221e:	e8 94       	clt
    2220:	09 c0       	rjmp	.+18     	; 0x2234 <__floatsisf+0x12>

00002222 <__floatsisf>:
    2222:	97 fb       	bst	r25, 7
    2224:	3e f4       	brtc	.+14     	; 0x2234 <__floatsisf+0x12>
    2226:	90 95       	com	r25
    2228:	80 95       	com	r24
    222a:	70 95       	com	r23
    222c:	61 95       	neg	r22
    222e:	7f 4f       	sbci	r23, 0xFF	; 255
    2230:	8f 4f       	sbci	r24, 0xFF	; 255
    2232:	9f 4f       	sbci	r25, 0xFF	; 255
    2234:	99 23       	and	r25, r25
    2236:	a9 f0       	breq	.+42     	; 0x2262 <__floatsisf+0x40>
    2238:	f9 2f       	mov	r31, r25
    223a:	96 e9       	ldi	r25, 0x96	; 150
    223c:	bb 27       	eor	r27, r27
    223e:	93 95       	inc	r25
    2240:	f6 95       	lsr	r31
    2242:	87 95       	ror	r24
    2244:	77 95       	ror	r23
    2246:	67 95       	ror	r22
    2248:	b7 95       	ror	r27
    224a:	f1 11       	cpse	r31, r1
    224c:	f8 cf       	rjmp	.-16     	; 0x223e <__floatsisf+0x1c>
    224e:	fa f4       	brpl	.+62     	; 0x228e <__floatsisf+0x6c>
    2250:	bb 0f       	add	r27, r27
    2252:	11 f4       	brne	.+4      	; 0x2258 <__floatsisf+0x36>
    2254:	60 ff       	sbrs	r22, 0
    2256:	1b c0       	rjmp	.+54     	; 0x228e <__floatsisf+0x6c>
    2258:	6f 5f       	subi	r22, 0xFF	; 255
    225a:	7f 4f       	sbci	r23, 0xFF	; 255
    225c:	8f 4f       	sbci	r24, 0xFF	; 255
    225e:	9f 4f       	sbci	r25, 0xFF	; 255
    2260:	16 c0       	rjmp	.+44     	; 0x228e <__floatsisf+0x6c>
    2262:	88 23       	and	r24, r24
    2264:	11 f0       	breq	.+4      	; 0x226a <__floatsisf+0x48>
    2266:	96 e9       	ldi	r25, 0x96	; 150
    2268:	11 c0       	rjmp	.+34     	; 0x228c <__floatsisf+0x6a>
    226a:	77 23       	and	r23, r23
    226c:	21 f0       	breq	.+8      	; 0x2276 <__floatsisf+0x54>
    226e:	9e e8       	ldi	r25, 0x8E	; 142
    2270:	87 2f       	mov	r24, r23
    2272:	76 2f       	mov	r23, r22
    2274:	05 c0       	rjmp	.+10     	; 0x2280 <__floatsisf+0x5e>
    2276:	66 23       	and	r22, r22
    2278:	71 f0       	breq	.+28     	; 0x2296 <__floatsisf+0x74>
    227a:	96 e8       	ldi	r25, 0x86	; 134
    227c:	86 2f       	mov	r24, r22
    227e:	70 e0       	ldi	r23, 0x00	; 0
    2280:	60 e0       	ldi	r22, 0x00	; 0
    2282:	2a f0       	brmi	.+10     	; 0x228e <__floatsisf+0x6c>
    2284:	9a 95       	dec	r25
    2286:	66 0f       	add	r22, r22
    2288:	77 1f       	adc	r23, r23
    228a:	88 1f       	adc	r24, r24
    228c:	da f7       	brpl	.-10     	; 0x2284 <__floatsisf+0x62>
    228e:	88 0f       	add	r24, r24
    2290:	96 95       	lsr	r25
    2292:	87 95       	ror	r24
    2294:	97 f9       	bld	r25, 7
    2296:	08 95       	ret

00002298 <__fp_cmp>:
    2298:	99 0f       	add	r25, r25
    229a:	00 08       	sbc	r0, r0
    229c:	55 0f       	add	r21, r21
    229e:	aa 0b       	sbc	r26, r26
    22a0:	e0 e8       	ldi	r30, 0x80	; 128
    22a2:	fe ef       	ldi	r31, 0xFE	; 254
    22a4:	16 16       	cp	r1, r22
    22a6:	17 06       	cpc	r1, r23
    22a8:	e8 07       	cpc	r30, r24
    22aa:	f9 07       	cpc	r31, r25
    22ac:	c0 f0       	brcs	.+48     	; 0x22de <__fp_cmp+0x46>
    22ae:	12 16       	cp	r1, r18
    22b0:	13 06       	cpc	r1, r19
    22b2:	e4 07       	cpc	r30, r20
    22b4:	f5 07       	cpc	r31, r21
    22b6:	98 f0       	brcs	.+38     	; 0x22de <__fp_cmp+0x46>
    22b8:	62 1b       	sub	r22, r18
    22ba:	73 0b       	sbc	r23, r19
    22bc:	84 0b       	sbc	r24, r20
    22be:	95 0b       	sbc	r25, r21
    22c0:	39 f4       	brne	.+14     	; 0x22d0 <__fp_cmp+0x38>
    22c2:	0a 26       	eor	r0, r26
    22c4:	61 f0       	breq	.+24     	; 0x22de <__fp_cmp+0x46>
    22c6:	23 2b       	or	r18, r19
    22c8:	24 2b       	or	r18, r20
    22ca:	25 2b       	or	r18, r21
    22cc:	21 f4       	brne	.+8      	; 0x22d6 <__fp_cmp+0x3e>
    22ce:	08 95       	ret
    22d0:	0a 26       	eor	r0, r26
    22d2:	09 f4       	brne	.+2      	; 0x22d6 <__fp_cmp+0x3e>
    22d4:	a1 40       	sbci	r26, 0x01	; 1
    22d6:	a6 95       	lsr	r26
    22d8:	8f ef       	ldi	r24, 0xFF	; 255
    22da:	81 1d       	adc	r24, r1
    22dc:	81 1d       	adc	r24, r1
    22de:	08 95       	ret

000022e0 <__fp_inf>:
    22e0:	97 f9       	bld	r25, 7
    22e2:	9f 67       	ori	r25, 0x7F	; 127
    22e4:	80 e8       	ldi	r24, 0x80	; 128
    22e6:	70 e0       	ldi	r23, 0x00	; 0
    22e8:	60 e0       	ldi	r22, 0x00	; 0
    22ea:	08 95       	ret

000022ec <__fp_nan>:
    22ec:	9f ef       	ldi	r25, 0xFF	; 255
    22ee:	80 ec       	ldi	r24, 0xC0	; 192
    22f0:	08 95       	ret

000022f2 <__fp_pscA>:
    22f2:	00 24       	eor	r0, r0
    22f4:	0a 94       	dec	r0
    22f6:	16 16       	cp	r1, r22
    22f8:	17 06       	cpc	r1, r23
    22fa:	18 06       	cpc	r1, r24
    22fc:	09 06       	cpc	r0, r25
    22fe:	08 95       	ret

00002300 <__fp_pscB>:
    2300:	00 24       	eor	r0, r0
    2302:	0a 94       	dec	r0
    2304:	12 16       	cp	r1, r18
    2306:	13 06       	cpc	r1, r19
    2308:	14 06       	cpc	r1, r20
    230a:	05 06       	cpc	r0, r21
    230c:	08 95       	ret

0000230e <__fp_round>:
    230e:	09 2e       	mov	r0, r25
    2310:	03 94       	inc	r0
    2312:	00 0c       	add	r0, r0
    2314:	11 f4       	brne	.+4      	; 0x231a <__fp_round+0xc>
    2316:	88 23       	and	r24, r24
    2318:	52 f0       	brmi	.+20     	; 0x232e <__fp_round+0x20>
    231a:	bb 0f       	add	r27, r27
    231c:	40 f4       	brcc	.+16     	; 0x232e <__fp_round+0x20>
    231e:	bf 2b       	or	r27, r31
    2320:	11 f4       	brne	.+4      	; 0x2326 <__fp_round+0x18>
    2322:	60 ff       	sbrs	r22, 0
    2324:	04 c0       	rjmp	.+8      	; 0x232e <__fp_round+0x20>
    2326:	6f 5f       	subi	r22, 0xFF	; 255
    2328:	7f 4f       	sbci	r23, 0xFF	; 255
    232a:	8f 4f       	sbci	r24, 0xFF	; 255
    232c:	9f 4f       	sbci	r25, 0xFF	; 255
    232e:	08 95       	ret

00002330 <__fp_split3>:
    2330:	57 fd       	sbrc	r21, 7
    2332:	90 58       	subi	r25, 0x80	; 128
    2334:	44 0f       	add	r20, r20
    2336:	55 1f       	adc	r21, r21
    2338:	59 f0       	breq	.+22     	; 0x2350 <__fp_splitA+0x10>
    233a:	5f 3f       	cpi	r21, 0xFF	; 255
    233c:	71 f0       	breq	.+28     	; 0x235a <__fp_splitA+0x1a>
    233e:	47 95       	ror	r20

00002340 <__fp_splitA>:
    2340:	88 0f       	add	r24, r24
    2342:	97 fb       	bst	r25, 7
    2344:	99 1f       	adc	r25, r25
    2346:	61 f0       	breq	.+24     	; 0x2360 <__fp_splitA+0x20>
    2348:	9f 3f       	cpi	r25, 0xFF	; 255
    234a:	79 f0       	breq	.+30     	; 0x236a <__fp_splitA+0x2a>
    234c:	87 95       	ror	r24
    234e:	08 95       	ret
    2350:	12 16       	cp	r1, r18
    2352:	13 06       	cpc	r1, r19
    2354:	14 06       	cpc	r1, r20
    2356:	55 1f       	adc	r21, r21
    2358:	f2 cf       	rjmp	.-28     	; 0x233e <__fp_split3+0xe>
    235a:	46 95       	lsr	r20
    235c:	f1 df       	rcall	.-30     	; 0x2340 <__fp_splitA>
    235e:	08 c0       	rjmp	.+16     	; 0x2370 <__fp_splitA+0x30>
    2360:	16 16       	cp	r1, r22
    2362:	17 06       	cpc	r1, r23
    2364:	18 06       	cpc	r1, r24
    2366:	99 1f       	adc	r25, r25
    2368:	f1 cf       	rjmp	.-30     	; 0x234c <__fp_splitA+0xc>
    236a:	86 95       	lsr	r24
    236c:	71 05       	cpc	r23, r1
    236e:	61 05       	cpc	r22, r1
    2370:	08 94       	sec
    2372:	08 95       	ret

00002374 <__fp_zero>:
    2374:	e8 94       	clt

00002376 <__fp_szero>:
    2376:	bb 27       	eor	r27, r27
    2378:	66 27       	eor	r22, r22
    237a:	77 27       	eor	r23, r23
    237c:	cb 01       	movw	r24, r22
    237e:	97 f9       	bld	r25, 7
    2380:	08 95       	ret

00002382 <__gesf2>:
    2382:	8a df       	rcall	.-236    	; 0x2298 <__fp_cmp>
    2384:	08 f4       	brcc	.+2      	; 0x2388 <__gesf2+0x6>
    2386:	8f ef       	ldi	r24, 0xFF	; 255
    2388:	08 95       	ret

0000238a <__mulsf3>:
    238a:	0b d0       	rcall	.+22     	; 0x23a2 <__mulsf3x>
    238c:	c0 cf       	rjmp	.-128    	; 0x230e <__fp_round>
    238e:	b1 df       	rcall	.-158    	; 0x22f2 <__fp_pscA>
    2390:	28 f0       	brcs	.+10     	; 0x239c <__mulsf3+0x12>
    2392:	b6 df       	rcall	.-148    	; 0x2300 <__fp_pscB>
    2394:	18 f0       	brcs	.+6      	; 0x239c <__mulsf3+0x12>
    2396:	95 23       	and	r25, r21
    2398:	09 f0       	breq	.+2      	; 0x239c <__mulsf3+0x12>
    239a:	a2 cf       	rjmp	.-188    	; 0x22e0 <__fp_inf>
    239c:	a7 cf       	rjmp	.-178    	; 0x22ec <__fp_nan>
    239e:	11 24       	eor	r1, r1
    23a0:	ea cf       	rjmp	.-44     	; 0x2376 <__fp_szero>

000023a2 <__mulsf3x>:
    23a2:	c6 df       	rcall	.-116    	; 0x2330 <__fp_split3>
    23a4:	a0 f3       	brcs	.-24     	; 0x238e <__mulsf3+0x4>

000023a6 <__mulsf3_pse>:
    23a6:	95 9f       	mul	r25, r21
    23a8:	d1 f3       	breq	.-12     	; 0x239e <__mulsf3+0x14>
    23aa:	95 0f       	add	r25, r21
    23ac:	50 e0       	ldi	r21, 0x00	; 0
    23ae:	55 1f       	adc	r21, r21
    23b0:	62 9f       	mul	r22, r18
    23b2:	f0 01       	movw	r30, r0
    23b4:	72 9f       	mul	r23, r18
    23b6:	bb 27       	eor	r27, r27
    23b8:	f0 0d       	add	r31, r0
    23ba:	b1 1d       	adc	r27, r1
    23bc:	63 9f       	mul	r22, r19
    23be:	aa 27       	eor	r26, r26
    23c0:	f0 0d       	add	r31, r0
    23c2:	b1 1d       	adc	r27, r1
    23c4:	aa 1f       	adc	r26, r26
    23c6:	64 9f       	mul	r22, r20
    23c8:	66 27       	eor	r22, r22
    23ca:	b0 0d       	add	r27, r0
    23cc:	a1 1d       	adc	r26, r1
    23ce:	66 1f       	adc	r22, r22
    23d0:	82 9f       	mul	r24, r18
    23d2:	22 27       	eor	r18, r18
    23d4:	b0 0d       	add	r27, r0
    23d6:	a1 1d       	adc	r26, r1
    23d8:	62 1f       	adc	r22, r18
    23da:	73 9f       	mul	r23, r19
    23dc:	b0 0d       	add	r27, r0
    23de:	a1 1d       	adc	r26, r1
    23e0:	62 1f       	adc	r22, r18
    23e2:	83 9f       	mul	r24, r19
    23e4:	a0 0d       	add	r26, r0
    23e6:	61 1d       	adc	r22, r1
    23e8:	22 1f       	adc	r18, r18
    23ea:	74 9f       	mul	r23, r20
    23ec:	33 27       	eor	r19, r19
    23ee:	a0 0d       	add	r26, r0
    23f0:	61 1d       	adc	r22, r1
    23f2:	23 1f       	adc	r18, r19
    23f4:	84 9f       	mul	r24, r20
    23f6:	60 0d       	add	r22, r0
    23f8:	21 1d       	adc	r18, r1
    23fa:	82 2f       	mov	r24, r18
    23fc:	76 2f       	mov	r23, r22
    23fe:	6a 2f       	mov	r22, r26
    2400:	11 24       	eor	r1, r1
    2402:	9f 57       	subi	r25, 0x7F	; 127
    2404:	50 40       	sbci	r21, 0x00	; 0
    2406:	8a f0       	brmi	.+34     	; 0x242a <__mulsf3_pse+0x84>
    2408:	e1 f0       	breq	.+56     	; 0x2442 <__mulsf3_pse+0x9c>
    240a:	88 23       	and	r24, r24
    240c:	4a f0       	brmi	.+18     	; 0x2420 <__mulsf3_pse+0x7a>
    240e:	ee 0f       	add	r30, r30
    2410:	ff 1f       	adc	r31, r31
    2412:	bb 1f       	adc	r27, r27
    2414:	66 1f       	adc	r22, r22
    2416:	77 1f       	adc	r23, r23
    2418:	88 1f       	adc	r24, r24
    241a:	91 50       	subi	r25, 0x01	; 1
    241c:	50 40       	sbci	r21, 0x00	; 0
    241e:	a9 f7       	brne	.-22     	; 0x240a <__mulsf3_pse+0x64>
    2420:	9e 3f       	cpi	r25, 0xFE	; 254
    2422:	51 05       	cpc	r21, r1
    2424:	70 f0       	brcs	.+28     	; 0x2442 <__mulsf3_pse+0x9c>
    2426:	5c cf       	rjmp	.-328    	; 0x22e0 <__fp_inf>
    2428:	a6 cf       	rjmp	.-180    	; 0x2376 <__fp_szero>
    242a:	5f 3f       	cpi	r21, 0xFF	; 255
    242c:	ec f3       	brlt	.-6      	; 0x2428 <__mulsf3_pse+0x82>
    242e:	98 3e       	cpi	r25, 0xE8	; 232
    2430:	dc f3       	brlt	.-10     	; 0x2428 <__mulsf3_pse+0x82>
    2432:	86 95       	lsr	r24
    2434:	77 95       	ror	r23
    2436:	67 95       	ror	r22
    2438:	b7 95       	ror	r27
    243a:	f7 95       	ror	r31
    243c:	e7 95       	ror	r30
    243e:	9f 5f       	subi	r25, 0xFF	; 255
    2440:	c1 f7       	brne	.-16     	; 0x2432 <__mulsf3_pse+0x8c>
    2442:	fe 2b       	or	r31, r30
    2444:	88 0f       	add	r24, r24
    2446:	91 1d       	adc	r25, r1
    2448:	96 95       	lsr	r25
    244a:	87 95       	ror	r24
    244c:	97 f9       	bld	r25, 7
    244e:	08 95       	ret

00002450 <pow>:
    2450:	fa 01       	movw	r30, r20
    2452:	ee 0f       	add	r30, r30
    2454:	ff 1f       	adc	r31, r31
    2456:	30 96       	adiw	r30, 0x00	; 0
    2458:	21 05       	cpc	r18, r1
    245a:	31 05       	cpc	r19, r1
    245c:	99 f1       	breq	.+102    	; 0x24c4 <pow+0x74>
    245e:	61 15       	cp	r22, r1
    2460:	71 05       	cpc	r23, r1
    2462:	61 f4       	brne	.+24     	; 0x247c <pow+0x2c>
    2464:	80 38       	cpi	r24, 0x80	; 128
    2466:	bf e3       	ldi	r27, 0x3F	; 63
    2468:	9b 07       	cpc	r25, r27
    246a:	49 f1       	breq	.+82     	; 0x24be <pow+0x6e>
    246c:	68 94       	set
    246e:	90 38       	cpi	r25, 0x80	; 128
    2470:	81 05       	cpc	r24, r1
    2472:	61 f0       	breq	.+24     	; 0x248c <pow+0x3c>
    2474:	80 38       	cpi	r24, 0x80	; 128
    2476:	bf ef       	ldi	r27, 0xFF	; 255
    2478:	9b 07       	cpc	r25, r27
    247a:	41 f0       	breq	.+16     	; 0x248c <pow+0x3c>
    247c:	99 23       	and	r25, r25
    247e:	42 f5       	brpl	.+80     	; 0x24d0 <pow+0x80>
    2480:	ff 3f       	cpi	r31, 0xFF	; 255
    2482:	e1 05       	cpc	r30, r1
    2484:	31 05       	cpc	r19, r1
    2486:	21 05       	cpc	r18, r1
    2488:	11 f1       	breq	.+68     	; 0x24ce <pow+0x7e>
    248a:	e8 94       	clt
    248c:	08 94       	sec
    248e:	e7 95       	ror	r30
    2490:	d9 01       	movw	r26, r18
    2492:	aa 23       	and	r26, r26
    2494:	29 f4       	brne	.+10     	; 0x24a0 <pow+0x50>
    2496:	ab 2f       	mov	r26, r27
    2498:	be 2f       	mov	r27, r30
    249a:	f8 5f       	subi	r31, 0xF8	; 248
    249c:	d0 f3       	brcs	.-12     	; 0x2492 <pow+0x42>
    249e:	10 c0       	rjmp	.+32     	; 0x24c0 <pow+0x70>
    24a0:	ff 5f       	subi	r31, 0xFF	; 255
    24a2:	70 f4       	brcc	.+28     	; 0x24c0 <pow+0x70>
    24a4:	a6 95       	lsr	r26
    24a6:	e0 f7       	brcc	.-8      	; 0x24a0 <pow+0x50>
    24a8:	f7 39       	cpi	r31, 0x97	; 151
    24aa:	50 f0       	brcs	.+20     	; 0x24c0 <pow+0x70>
    24ac:	19 f0       	breq	.+6      	; 0x24b4 <pow+0x64>
    24ae:	ff 3a       	cpi	r31, 0xAF	; 175
    24b0:	38 f4       	brcc	.+14     	; 0x24c0 <pow+0x70>
    24b2:	9f 77       	andi	r25, 0x7F	; 127
    24b4:	9f 93       	push	r25
    24b6:	0c d0       	rcall	.+24     	; 0x24d0 <pow+0x80>
    24b8:	0f 90       	pop	r0
    24ba:	07 fc       	sbrc	r0, 7
    24bc:	90 58       	subi	r25, 0x80	; 128
    24be:	08 95       	ret
    24c0:	3e f0       	brts	.+14     	; 0x24d0 <pow+0x80>
    24c2:	14 cf       	rjmp	.-472    	; 0x22ec <__fp_nan>
    24c4:	60 e0       	ldi	r22, 0x00	; 0
    24c6:	70 e0       	ldi	r23, 0x00	; 0
    24c8:	80 e8       	ldi	r24, 0x80	; 128
    24ca:	9f e3       	ldi	r25, 0x3F	; 63
    24cc:	08 95       	ret
    24ce:	4f e7       	ldi	r20, 0x7F	; 127
    24d0:	9f 77       	andi	r25, 0x7F	; 127
    24d2:	5f 93       	push	r21
    24d4:	4f 93       	push	r20
    24d6:	3f 93       	push	r19
    24d8:	2f 93       	push	r18
    24da:	9e d0       	rcall	.+316    	; 0x2618 <log>
    24dc:	2f 91       	pop	r18
    24de:	3f 91       	pop	r19
    24e0:	4f 91       	pop	r20
    24e2:	5f 91       	pop	r21
    24e4:	52 df       	rcall	.-348    	; 0x238a <__mulsf3>
    24e6:	05 c0       	rjmp	.+10     	; 0x24f2 <exp>
    24e8:	19 f4       	brne	.+6      	; 0x24f0 <pow+0xa0>
    24ea:	0e f0       	brts	.+2      	; 0x24ee <pow+0x9e>
    24ec:	f9 ce       	rjmp	.-526    	; 0x22e0 <__fp_inf>
    24ee:	42 cf       	rjmp	.-380    	; 0x2374 <__fp_zero>
    24f0:	fd ce       	rjmp	.-518    	; 0x22ec <__fp_nan>

000024f2 <exp>:
    24f2:	26 df       	rcall	.-436    	; 0x2340 <__fp_splitA>
    24f4:	c8 f3       	brcs	.-14     	; 0x24e8 <pow+0x98>
    24f6:	96 38       	cpi	r25, 0x86	; 134
    24f8:	c0 f7       	brcc	.-16     	; 0x24ea <pow+0x9a>
    24fa:	07 f8       	bld	r0, 7
    24fc:	0f 92       	push	r0
    24fe:	e8 94       	clt
    2500:	2b e3       	ldi	r18, 0x3B	; 59
    2502:	3a ea       	ldi	r19, 0xAA	; 170
    2504:	48 eb       	ldi	r20, 0xB8	; 184
    2506:	5f e7       	ldi	r21, 0x7F	; 127
    2508:	4e df       	rcall	.-356    	; 0x23a6 <__mulsf3_pse>
    250a:	0f 92       	push	r0
    250c:	0f 92       	push	r0
    250e:	0f 92       	push	r0
    2510:	4d b7       	in	r20, 0x3d	; 61
    2512:	5e b7       	in	r21, 0x3e	; 62
    2514:	0f 92       	push	r0
    2516:	c0 d0       	rcall	.+384    	; 0x2698 <modf>
    2518:	e2 ec       	ldi	r30, 0xC2	; 194
    251a:	f0 e0       	ldi	r31, 0x00	; 0
    251c:	16 d0       	rcall	.+44     	; 0x254a <__fp_powser>
    251e:	4f 91       	pop	r20
    2520:	5f 91       	pop	r21
    2522:	ef 91       	pop	r30
    2524:	ff 91       	pop	r31
    2526:	e5 95       	asr	r30
    2528:	ee 1f       	adc	r30, r30
    252a:	ff 1f       	adc	r31, r31
    252c:	49 f0       	breq	.+18     	; 0x2540 <exp+0x4e>
    252e:	fe 57       	subi	r31, 0x7E	; 126
    2530:	e0 68       	ori	r30, 0x80	; 128
    2532:	44 27       	eor	r20, r20
    2534:	ee 0f       	add	r30, r30
    2536:	44 1f       	adc	r20, r20
    2538:	fa 95       	dec	r31
    253a:	e1 f7       	brne	.-8      	; 0x2534 <exp+0x42>
    253c:	41 95       	neg	r20
    253e:	55 0b       	sbc	r21, r21
    2540:	32 d0       	rcall	.+100    	; 0x25a6 <ldexp>
    2542:	0f 90       	pop	r0
    2544:	07 fe       	sbrs	r0, 7
    2546:	26 c0       	rjmp	.+76     	; 0x2594 <inverse>
    2548:	08 95       	ret

0000254a <__fp_powser>:
    254a:	df 93       	push	r29
    254c:	cf 93       	push	r28
    254e:	1f 93       	push	r17
    2550:	0f 93       	push	r16
    2552:	ff 92       	push	r15
    2554:	ef 92       	push	r14
    2556:	df 92       	push	r13
    2558:	7b 01       	movw	r14, r22
    255a:	8c 01       	movw	r16, r24
    255c:	68 94       	set
    255e:	05 c0       	rjmp	.+10     	; 0x256a <__fp_powser+0x20>
    2560:	da 2e       	mov	r13, r26
    2562:	ef 01       	movw	r28, r30
    2564:	1e df       	rcall	.-452    	; 0x23a2 <__mulsf3x>
    2566:	fe 01       	movw	r30, r28
    2568:	e8 94       	clt
    256a:	a5 91       	lpm	r26, Z+
    256c:	25 91       	lpm	r18, Z+
    256e:	35 91       	lpm	r19, Z+
    2570:	45 91       	lpm	r20, Z+
    2572:	55 91       	lpm	r21, Z+
    2574:	ae f3       	brts	.-22     	; 0x2560 <__fp_powser+0x16>
    2576:	ef 01       	movw	r28, r30
    2578:	62 dd       	rcall	.-1340   	; 0x203e <__addsf3x>
    257a:	fe 01       	movw	r30, r28
    257c:	97 01       	movw	r18, r14
    257e:	a8 01       	movw	r20, r16
    2580:	da 94       	dec	r13
    2582:	79 f7       	brne	.-34     	; 0x2562 <__fp_powser+0x18>
    2584:	df 90       	pop	r13
    2586:	ef 90       	pop	r14
    2588:	ff 90       	pop	r15
    258a:	0f 91       	pop	r16
    258c:	1f 91       	pop	r17
    258e:	cf 91       	pop	r28
    2590:	df 91       	pop	r29
    2592:	08 95       	ret

00002594 <inverse>:
    2594:	9b 01       	movw	r18, r22
    2596:	ac 01       	movw	r20, r24
    2598:	60 e0       	ldi	r22, 0x00	; 0
    259a:	70 e0       	ldi	r23, 0x00	; 0
    259c:	80 e8       	ldi	r24, 0x80	; 128
    259e:	9f e3       	ldi	r25, 0x3F	; 63
    25a0:	a5 cd       	rjmp	.-1206   	; 0x20ec <__divsf3>
    25a2:	9e ce       	rjmp	.-708    	; 0x22e0 <__fp_inf>
    25a4:	ac c0       	rjmp	.+344    	; 0x26fe <__fp_mpack>

000025a6 <ldexp>:
    25a6:	cc de       	rcall	.-616    	; 0x2340 <__fp_splitA>
    25a8:	e8 f3       	brcs	.-6      	; 0x25a4 <inverse+0x10>
    25aa:	99 23       	and	r25, r25
    25ac:	d9 f3       	breq	.-10     	; 0x25a4 <inverse+0x10>
    25ae:	94 0f       	add	r25, r20
    25b0:	51 1d       	adc	r21, r1
    25b2:	bb f3       	brvs	.-18     	; 0x25a2 <inverse+0xe>
    25b4:	91 50       	subi	r25, 0x01	; 1
    25b6:	50 40       	sbci	r21, 0x00	; 0
    25b8:	94 f0       	brlt	.+36     	; 0x25de <ldexp+0x38>
    25ba:	59 f0       	breq	.+22     	; 0x25d2 <ldexp+0x2c>
    25bc:	88 23       	and	r24, r24
    25be:	32 f0       	brmi	.+12     	; 0x25cc <ldexp+0x26>
    25c0:	66 0f       	add	r22, r22
    25c2:	77 1f       	adc	r23, r23
    25c4:	88 1f       	adc	r24, r24
    25c6:	91 50       	subi	r25, 0x01	; 1
    25c8:	50 40       	sbci	r21, 0x00	; 0
    25ca:	c1 f7       	brne	.-16     	; 0x25bc <ldexp+0x16>
    25cc:	9e 3f       	cpi	r25, 0xFE	; 254
    25ce:	51 05       	cpc	r21, r1
    25d0:	44 f7       	brge	.-48     	; 0x25a2 <inverse+0xe>
    25d2:	88 0f       	add	r24, r24
    25d4:	91 1d       	adc	r25, r1
    25d6:	96 95       	lsr	r25
    25d8:	87 95       	ror	r24
    25da:	97 f9       	bld	r25, 7
    25dc:	08 95       	ret
    25de:	5f 3f       	cpi	r21, 0xFF	; 255
    25e0:	ac f0       	brlt	.+42     	; 0x260c <ldexp+0x66>
    25e2:	98 3e       	cpi	r25, 0xE8	; 232
    25e4:	9c f0       	brlt	.+38     	; 0x260c <ldexp+0x66>
    25e6:	bb 27       	eor	r27, r27
    25e8:	86 95       	lsr	r24
    25ea:	77 95       	ror	r23
    25ec:	67 95       	ror	r22
    25ee:	b7 95       	ror	r27
    25f0:	08 f4       	brcc	.+2      	; 0x25f4 <ldexp+0x4e>
    25f2:	b1 60       	ori	r27, 0x01	; 1
    25f4:	93 95       	inc	r25
    25f6:	c1 f7       	brne	.-16     	; 0x25e8 <ldexp+0x42>
    25f8:	bb 0f       	add	r27, r27
    25fa:	58 f7       	brcc	.-42     	; 0x25d2 <ldexp+0x2c>
    25fc:	11 f4       	brne	.+4      	; 0x2602 <ldexp+0x5c>
    25fe:	60 ff       	sbrs	r22, 0
    2600:	e8 cf       	rjmp	.-48     	; 0x25d2 <ldexp+0x2c>
    2602:	6f 5f       	subi	r22, 0xFF	; 255
    2604:	7f 4f       	sbci	r23, 0xFF	; 255
    2606:	8f 4f       	sbci	r24, 0xFF	; 255
    2608:	9f 4f       	sbci	r25, 0xFF	; 255
    260a:	e3 cf       	rjmp	.-58     	; 0x25d2 <ldexp+0x2c>
    260c:	b4 ce       	rjmp	.-664    	; 0x2376 <__fp_szero>
    260e:	0e f0       	brts	.+2      	; 0x2612 <ldexp+0x6c>
    2610:	76 c0       	rjmp	.+236    	; 0x26fe <__fp_mpack>
    2612:	6c ce       	rjmp	.-808    	; 0x22ec <__fp_nan>
    2614:	68 94       	set
    2616:	64 ce       	rjmp	.-824    	; 0x22e0 <__fp_inf>

00002618 <log>:
    2618:	93 de       	rcall	.-730    	; 0x2340 <__fp_splitA>
    261a:	c8 f3       	brcs	.-14     	; 0x260e <ldexp+0x68>
    261c:	99 23       	and	r25, r25
    261e:	d1 f3       	breq	.-12     	; 0x2614 <ldexp+0x6e>
    2620:	c6 f3       	brts	.-16     	; 0x2612 <ldexp+0x6c>
    2622:	df 93       	push	r29
    2624:	cf 93       	push	r28
    2626:	1f 93       	push	r17
    2628:	0f 93       	push	r16
    262a:	ff 92       	push	r15
    262c:	c9 2f       	mov	r28, r25
    262e:	dd 27       	eor	r29, r29
    2630:	88 23       	and	r24, r24
    2632:	2a f0       	brmi	.+10     	; 0x263e <log+0x26>
    2634:	21 97       	sbiw	r28, 0x01	; 1
    2636:	66 0f       	add	r22, r22
    2638:	77 1f       	adc	r23, r23
    263a:	88 1f       	adc	r24, r24
    263c:	da f7       	brpl	.-10     	; 0x2634 <log+0x1c>
    263e:	20 e0       	ldi	r18, 0x00	; 0
    2640:	30 e0       	ldi	r19, 0x00	; 0
    2642:	40 e8       	ldi	r20, 0x80	; 128
    2644:	5f eb       	ldi	r21, 0xBF	; 191
    2646:	9f e3       	ldi	r25, 0x3F	; 63
    2648:	88 39       	cpi	r24, 0x98	; 152
    264a:	20 f0       	brcs	.+8      	; 0x2654 <log+0x3c>
    264c:	80 3e       	cpi	r24, 0xE0	; 224
    264e:	30 f0       	brcs	.+12     	; 0x265c <log+0x44>
    2650:	21 96       	adiw	r28, 0x01	; 1
    2652:	8f 77       	andi	r24, 0x7F	; 127
    2654:	e3 dc       	rcall	.-1594   	; 0x201c <__addsf3>
    2656:	ea ee       	ldi	r30, 0xEA	; 234
    2658:	f0 e0       	ldi	r31, 0x00	; 0
    265a:	03 c0       	rjmp	.+6      	; 0x2662 <log+0x4a>
    265c:	df dc       	rcall	.-1602   	; 0x201c <__addsf3>
    265e:	e7 e1       	ldi	r30, 0x17	; 23
    2660:	f1 e0       	ldi	r31, 0x01	; 1
    2662:	73 df       	rcall	.-282    	; 0x254a <__fp_powser>
    2664:	8b 01       	movw	r16, r22
    2666:	be 01       	movw	r22, r28
    2668:	ec 01       	movw	r28, r24
    266a:	fb 2e       	mov	r15, r27
    266c:	6f 57       	subi	r22, 0x7F	; 127
    266e:	71 09       	sbc	r23, r1
    2670:	75 95       	asr	r23
    2672:	77 1f       	adc	r23, r23
    2674:	88 0b       	sbc	r24, r24
    2676:	99 0b       	sbc	r25, r25
    2678:	d4 dd       	rcall	.-1112   	; 0x2222 <__floatsisf>
    267a:	28 e1       	ldi	r18, 0x18	; 24
    267c:	32 e7       	ldi	r19, 0x72	; 114
    267e:	41 e3       	ldi	r20, 0x31	; 49
    2680:	5f e3       	ldi	r21, 0x3F	; 63
    2682:	8f de       	rcall	.-738    	; 0x23a2 <__mulsf3x>
    2684:	af 2d       	mov	r26, r15
    2686:	98 01       	movw	r18, r16
    2688:	ae 01       	movw	r20, r28
    268a:	ff 90       	pop	r15
    268c:	0f 91       	pop	r16
    268e:	1f 91       	pop	r17
    2690:	cf 91       	pop	r28
    2692:	df 91       	pop	r29
    2694:	d4 dc       	rcall	.-1624   	; 0x203e <__addsf3x>
    2696:	3b ce       	rjmp	.-906    	; 0x230e <__fp_round>

00002698 <modf>:
    2698:	fa 01       	movw	r30, r20
    269a:	dc 01       	movw	r26, r24
    269c:	aa 0f       	add	r26, r26
    269e:	bb 1f       	adc	r27, r27
    26a0:	9b 01       	movw	r18, r22
    26a2:	ac 01       	movw	r20, r24
    26a4:	bf 57       	subi	r27, 0x7F	; 127
    26a6:	28 f4       	brcc	.+10     	; 0x26b2 <modf+0x1a>
    26a8:	22 27       	eor	r18, r18
    26aa:	33 27       	eor	r19, r19
    26ac:	44 27       	eor	r20, r20
    26ae:	50 78       	andi	r21, 0x80	; 128
    26b0:	1f c0       	rjmp	.+62     	; 0x26f0 <modf+0x58>
    26b2:	b7 51       	subi	r27, 0x17	; 23
    26b4:	88 f4       	brcc	.+34     	; 0x26d8 <modf+0x40>
    26b6:	ab 2f       	mov	r26, r27
    26b8:	00 24       	eor	r0, r0
    26ba:	46 95       	lsr	r20
    26bc:	37 95       	ror	r19
    26be:	27 95       	ror	r18
    26c0:	01 1c       	adc	r0, r1
    26c2:	a3 95       	inc	r26
    26c4:	d2 f3       	brmi	.-12     	; 0x26ba <modf+0x22>
    26c6:	00 20       	and	r0, r0
    26c8:	69 f0       	breq	.+26     	; 0x26e4 <modf+0x4c>
    26ca:	22 0f       	add	r18, r18
    26cc:	33 1f       	adc	r19, r19
    26ce:	44 1f       	adc	r20, r20
    26d0:	b3 95       	inc	r27
    26d2:	da f3       	brmi	.-10     	; 0x26ca <modf+0x32>
    26d4:	0d d0       	rcall	.+26     	; 0x26f0 <modf+0x58>
    26d6:	a1 cc       	rjmp	.-1726   	; 0x201a <__subsf3>
    26d8:	61 30       	cpi	r22, 0x01	; 1
    26da:	71 05       	cpc	r23, r1
    26dc:	a0 e8       	ldi	r26, 0x80	; 128
    26de:	8a 07       	cpc	r24, r26
    26e0:	b9 46       	sbci	r27, 0x69	; 105
    26e2:	30 f4       	brcc	.+12     	; 0x26f0 <modf+0x58>
    26e4:	9b 01       	movw	r18, r22
    26e6:	ac 01       	movw	r20, r24
    26e8:	66 27       	eor	r22, r22
    26ea:	77 27       	eor	r23, r23
    26ec:	88 27       	eor	r24, r24
    26ee:	90 78       	andi	r25, 0x80	; 128
    26f0:	30 96       	adiw	r30, 0x00	; 0
    26f2:	21 f0       	breq	.+8      	; 0x26fc <modf+0x64>
    26f4:	20 83       	st	Z, r18
    26f6:	31 83       	std	Z+1, r19	; 0x01
    26f8:	42 83       	std	Z+2, r20	; 0x02
    26fa:	53 83       	std	Z+3, r21	; 0x03
    26fc:	08 95       	ret

000026fe <__fp_mpack>:
    26fe:	9f 3f       	cpi	r25, 0xFF	; 255
    2700:	31 f0       	breq	.+12     	; 0x270e <__fp_mpack_finite+0xc>

00002702 <__fp_mpack_finite>:
    2702:	91 50       	subi	r25, 0x01	; 1
    2704:	20 f4       	brcc	.+8      	; 0x270e <__fp_mpack_finite+0xc>
    2706:	87 95       	ror	r24
    2708:	77 95       	ror	r23
    270a:	67 95       	ror	r22
    270c:	b7 95       	ror	r27
    270e:	88 0f       	add	r24, r24
    2710:	91 1d       	adc	r25, r1
    2712:	96 95       	lsr	r25
    2714:	87 95       	ror	r24
    2716:	97 f9       	bld	r25, 7
    2718:	08 95       	ret

0000271a <__mulsi3>:
    271a:	db 01       	movw	r26, r22
    271c:	8f 93       	push	r24
    271e:	9f 93       	push	r25
    2720:	88 d0       	rcall	.+272    	; 0x2832 <__muluhisi3>
    2722:	bf 91       	pop	r27
    2724:	af 91       	pop	r26
    2726:	a2 9f       	mul	r26, r18
    2728:	80 0d       	add	r24, r0
    272a:	91 1d       	adc	r25, r1
    272c:	a3 9f       	mul	r26, r19
    272e:	90 0d       	add	r25, r0
    2730:	b2 9f       	mul	r27, r18
    2732:	90 0d       	add	r25, r0
    2734:	11 24       	eor	r1, r1
    2736:	08 95       	ret

00002738 <__udivmodhi4>:
    2738:	aa 1b       	sub	r26, r26
    273a:	bb 1b       	sub	r27, r27
    273c:	51 e1       	ldi	r21, 0x11	; 17
    273e:	07 c0       	rjmp	.+14     	; 0x274e <__udivmodhi4_ep>

00002740 <__udivmodhi4_loop>:
    2740:	aa 1f       	adc	r26, r26
    2742:	bb 1f       	adc	r27, r27
    2744:	a6 17       	cp	r26, r22
    2746:	b7 07       	cpc	r27, r23
    2748:	10 f0       	brcs	.+4      	; 0x274e <__udivmodhi4_ep>
    274a:	a6 1b       	sub	r26, r22
    274c:	b7 0b       	sbc	r27, r23

0000274e <__udivmodhi4_ep>:
    274e:	88 1f       	adc	r24, r24
    2750:	99 1f       	adc	r25, r25
    2752:	5a 95       	dec	r21
    2754:	a9 f7       	brne	.-22     	; 0x2740 <__udivmodhi4_loop>
    2756:	80 95       	com	r24
    2758:	90 95       	com	r25
    275a:	bc 01       	movw	r22, r24
    275c:	cd 01       	movw	r24, r26
    275e:	08 95       	ret

00002760 <__divmodhi4>:
    2760:	97 fb       	bst	r25, 7
    2762:	07 2e       	mov	r0, r23
    2764:	16 f4       	brtc	.+4      	; 0x276a <__divmodhi4+0xa>
    2766:	00 94       	com	r0
    2768:	06 d0       	rcall	.+12     	; 0x2776 <__divmodhi4_neg1>
    276a:	77 fd       	sbrc	r23, 7
    276c:	08 d0       	rcall	.+16     	; 0x277e <__divmodhi4_neg2>
    276e:	e4 df       	rcall	.-56     	; 0x2738 <__udivmodhi4>
    2770:	07 fc       	sbrc	r0, 7
    2772:	05 d0       	rcall	.+10     	; 0x277e <__divmodhi4_neg2>
    2774:	3e f4       	brtc	.+14     	; 0x2784 <__divmodhi4_exit>

00002776 <__divmodhi4_neg1>:
    2776:	90 95       	com	r25
    2778:	81 95       	neg	r24
    277a:	9f 4f       	sbci	r25, 0xFF	; 255
    277c:	08 95       	ret

0000277e <__divmodhi4_neg2>:
    277e:	70 95       	com	r23
    2780:	61 95       	neg	r22
    2782:	7f 4f       	sbci	r23, 0xFF	; 255

00002784 <__divmodhi4_exit>:
    2784:	08 95       	ret

00002786 <__udivmodsi4>:
    2786:	a1 e2       	ldi	r26, 0x21	; 33
    2788:	1a 2e       	mov	r1, r26
    278a:	aa 1b       	sub	r26, r26
    278c:	bb 1b       	sub	r27, r27
    278e:	fd 01       	movw	r30, r26
    2790:	0d c0       	rjmp	.+26     	; 0x27ac <__udivmodsi4_ep>

00002792 <__udivmodsi4_loop>:
    2792:	aa 1f       	adc	r26, r26
    2794:	bb 1f       	adc	r27, r27
    2796:	ee 1f       	adc	r30, r30
    2798:	ff 1f       	adc	r31, r31
    279a:	a2 17       	cp	r26, r18
    279c:	b3 07       	cpc	r27, r19
    279e:	e4 07       	cpc	r30, r20
    27a0:	f5 07       	cpc	r31, r21
    27a2:	20 f0       	brcs	.+8      	; 0x27ac <__udivmodsi4_ep>
    27a4:	a2 1b       	sub	r26, r18
    27a6:	b3 0b       	sbc	r27, r19
    27a8:	e4 0b       	sbc	r30, r20
    27aa:	f5 0b       	sbc	r31, r21

000027ac <__udivmodsi4_ep>:
    27ac:	66 1f       	adc	r22, r22
    27ae:	77 1f       	adc	r23, r23
    27b0:	88 1f       	adc	r24, r24
    27b2:	99 1f       	adc	r25, r25
    27b4:	1a 94       	dec	r1
    27b6:	69 f7       	brne	.-38     	; 0x2792 <__udivmodsi4_loop>
    27b8:	60 95       	com	r22
    27ba:	70 95       	com	r23
    27bc:	80 95       	com	r24
    27be:	90 95       	com	r25
    27c0:	9b 01       	movw	r18, r22
    27c2:	ac 01       	movw	r20, r24
    27c4:	bd 01       	movw	r22, r26
    27c6:	cf 01       	movw	r24, r30
    27c8:	08 95       	ret

000027ca <__divmodsi4>:
    27ca:	05 2e       	mov	r0, r21
    27cc:	97 fb       	bst	r25, 7
    27ce:	16 f4       	brtc	.+4      	; 0x27d4 <__divmodsi4+0xa>
    27d0:	00 94       	com	r0
    27d2:	0f d0       	rcall	.+30     	; 0x27f2 <__negsi2>
    27d4:	57 fd       	sbrc	r21, 7
    27d6:	05 d0       	rcall	.+10     	; 0x27e2 <__divmodsi4_neg2>
    27d8:	d6 df       	rcall	.-84     	; 0x2786 <__udivmodsi4>
    27da:	07 fc       	sbrc	r0, 7
    27dc:	02 d0       	rcall	.+4      	; 0x27e2 <__divmodsi4_neg2>
    27de:	46 f4       	brtc	.+16     	; 0x27f0 <__divmodsi4_exit>
    27e0:	08 c0       	rjmp	.+16     	; 0x27f2 <__negsi2>

000027e2 <__divmodsi4_neg2>:
    27e2:	50 95       	com	r21
    27e4:	40 95       	com	r20
    27e6:	30 95       	com	r19
    27e8:	21 95       	neg	r18
    27ea:	3f 4f       	sbci	r19, 0xFF	; 255
    27ec:	4f 4f       	sbci	r20, 0xFF	; 255
    27ee:	5f 4f       	sbci	r21, 0xFF	; 255

000027f0 <__divmodsi4_exit>:
    27f0:	08 95       	ret

000027f2 <__negsi2>:
    27f2:	90 95       	com	r25
    27f4:	80 95       	com	r24
    27f6:	70 95       	com	r23
    27f8:	61 95       	neg	r22
    27fa:	7f 4f       	sbci	r23, 0xFF	; 255
    27fc:	8f 4f       	sbci	r24, 0xFF	; 255
    27fe:	9f 4f       	sbci	r25, 0xFF	; 255
    2800:	08 95       	ret

00002802 <__tablejump2__>:
    2802:	ee 0f       	add	r30, r30
    2804:	ff 1f       	adc	r31, r31
    2806:	00 24       	eor	r0, r0
    2808:	00 1c       	adc	r0, r0
    280a:	0b be       	out	0x3b, r0	; 59
    280c:	07 90       	elpm	r0, Z+
    280e:	f6 91       	elpm	r31, Z
    2810:	e0 2d       	mov	r30, r0
    2812:	09 94       	ijmp

00002814 <__umulhisi3>:
    2814:	a2 9f       	mul	r26, r18
    2816:	b0 01       	movw	r22, r0
    2818:	b3 9f       	mul	r27, r19
    281a:	c0 01       	movw	r24, r0
    281c:	a3 9f       	mul	r26, r19
    281e:	70 0d       	add	r23, r0
    2820:	81 1d       	adc	r24, r1
    2822:	11 24       	eor	r1, r1
    2824:	91 1d       	adc	r25, r1
    2826:	b2 9f       	mul	r27, r18
    2828:	70 0d       	add	r23, r0
    282a:	81 1d       	adc	r24, r1
    282c:	11 24       	eor	r1, r1
    282e:	91 1d       	adc	r25, r1
    2830:	08 95       	ret

00002832 <__muluhisi3>:
    2832:	f0 df       	rcall	.-32     	; 0x2814 <__umulhisi3>
    2834:	a5 9f       	mul	r26, r21
    2836:	90 0d       	add	r25, r0
    2838:	b4 9f       	mul	r27, r20
    283a:	90 0d       	add	r25, r0
    283c:	a4 9f       	mul	r26, r20
    283e:	80 0d       	add	r24, r0
    2840:	91 1d       	adc	r25, r1
    2842:	11 24       	eor	r1, r1
    2844:	08 95       	ret

00002846 <eeprom_read_block>:
    2846:	dc 01       	movw	r26, r24
    2848:	cb 01       	movw	r24, r22

0000284a <eeprom_read_blraw>:
    284a:	fc 01       	movw	r30, r24
    284c:	e1 99       	sbic	0x1c, 1	; 28
    284e:	fe cf       	rjmp	.-4      	; 0x284c <eeprom_read_blraw+0x2>
    2850:	06 c0       	rjmp	.+12     	; 0x285e <eeprom_read_blraw+0x14>
    2852:	ff bb       	out	0x1f, r31	; 31
    2854:	ee bb       	out	0x1e, r30	; 30
    2856:	e0 9a       	sbi	0x1c, 0	; 28
    2858:	31 96       	adiw	r30, 0x01	; 1
    285a:	0d b2       	in	r0, 0x1d	; 29
    285c:	0d 92       	st	X+, r0
    285e:	41 50       	subi	r20, 0x01	; 1
    2860:	50 40       	sbci	r21, 0x00	; 0
    2862:	b8 f7       	brcc	.-18     	; 0x2852 <eeprom_read_blraw+0x8>
    2864:	08 95       	ret

00002866 <eeprom_read_byte>:
    2866:	e1 99       	sbic	0x1c, 1	; 28
    2868:	fe cf       	rjmp	.-4      	; 0x2866 <eeprom_read_byte>
    286a:	9f bb       	out	0x1f, r25	; 31
    286c:	8e bb       	out	0x1e, r24	; 30
    286e:	e0 9a       	sbi	0x1c, 0	; 28
    2870:	99 27       	eor	r25, r25
    2872:	8d b3       	in	r24, 0x1d	; 29
    2874:	08 95       	ret

00002876 <eeprom_read_word>:
    2876:	a8 e1       	ldi	r26, 0x18	; 24
    2878:	b0 e0       	ldi	r27, 0x00	; 0
    287a:	42 e0       	ldi	r20, 0x02	; 2
    287c:	50 e0       	ldi	r21, 0x00	; 0
    287e:	e5 cf       	rjmp	.-54     	; 0x284a <eeprom_read_blraw>

00002880 <eeprom_update_block>:
    2880:	dc 01       	movw	r26, r24
    2882:	a4 0f       	add	r26, r20
    2884:	b5 1f       	adc	r27, r21
    2886:	41 50       	subi	r20, 0x01	; 1
    2888:	50 40       	sbci	r21, 0x00	; 0
    288a:	40 f0       	brcs	.+16     	; 0x289c <eeprom_update_block+0x1c>
    288c:	cb 01       	movw	r24, r22
    288e:	84 0f       	add	r24, r20
    2890:	95 1f       	adc	r25, r21
    2892:	2e 91       	ld	r18, -X
    2894:	05 d0       	rcall	.+10     	; 0x28a0 <eeprom_update_r18>
    2896:	41 50       	subi	r20, 0x01	; 1
    2898:	50 40       	sbci	r21, 0x00	; 0
    289a:	d8 f7       	brcc	.-10     	; 0x2892 <eeprom_update_block+0x12>
    289c:	08 95       	ret

0000289e <eeprom_update_byte>:
    289e:	26 2f       	mov	r18, r22

000028a0 <eeprom_update_r18>:
    28a0:	e1 99       	sbic	0x1c, 1	; 28
    28a2:	fe cf       	rjmp	.-4      	; 0x28a0 <eeprom_update_r18>
    28a4:	9f bb       	out	0x1f, r25	; 31
    28a6:	8e bb       	out	0x1e, r24	; 30
    28a8:	e0 9a       	sbi	0x1c, 0	; 28
    28aa:	01 97       	sbiw	r24, 0x01	; 1
    28ac:	0d b2       	in	r0, 0x1d	; 29
    28ae:	02 16       	cp	r0, r18
    28b0:	31 f0       	breq	.+12     	; 0x28be <eeprom_update_r18+0x1e>
    28b2:	2d bb       	out	0x1d, r18	; 29
    28b4:	0f b6       	in	r0, 0x3f	; 63
    28b6:	f8 94       	cli
    28b8:	e2 9a       	sbi	0x1c, 2	; 28
    28ba:	e1 9a       	sbi	0x1c, 1	; 28
    28bc:	0f be       	out	0x3f, r0	; 63
    28be:	08 95       	ret

000028c0 <eeprom_update_dword>:
    28c0:	03 96       	adiw	r24, 0x03	; 3
    28c2:	27 2f       	mov	r18, r23
    28c4:	ed df       	rcall	.-38     	; 0x28a0 <eeprom_update_r18>
    28c6:	eb df       	rcall	.-42     	; 0x289e <eeprom_update_byte>
    28c8:	25 2f       	mov	r18, r21
    28ca:	ea df       	rcall	.-44     	; 0x28a0 <eeprom_update_r18>
    28cc:	24 2f       	mov	r18, r20
    28ce:	e8 cf       	rjmp	.-48     	; 0x28a0 <eeprom_update_r18>

000028d0 <eeprom_update_word>:
    28d0:	01 96       	adiw	r24, 0x01	; 1
    28d2:	27 2f       	mov	r18, r23
    28d4:	e5 df       	rcall	.-54     	; 0x28a0 <eeprom_update_r18>
    28d6:	e3 cf       	rjmp	.-58     	; 0x289e <eeprom_update_byte>

000028d8 <eeprom_write_block>:
    28d8:	dc 01       	movw	r26, r24
    28da:	cb 01       	movw	r24, r22
    28dc:	02 c0       	rjmp	.+4      	; 0x28e2 <eeprom_write_block+0xa>
    28de:	2d 91       	ld	r18, X+
    28e0:	05 d0       	rcall	.+10     	; 0x28ec <eeprom_write_r18>
    28e2:	41 50       	subi	r20, 0x01	; 1
    28e4:	50 40       	sbci	r21, 0x00	; 0
    28e6:	d8 f7       	brcc	.-10     	; 0x28de <eeprom_write_block+0x6>
    28e8:	08 95       	ret

000028ea <eeprom_write_byte>:
    28ea:	26 2f       	mov	r18, r22

000028ec <eeprom_write_r18>:
    28ec:	e1 99       	sbic	0x1c, 1	; 28
    28ee:	fe cf       	rjmp	.-4      	; 0x28ec <eeprom_write_r18>
    28f0:	9f bb       	out	0x1f, r25	; 31
    28f2:	8e bb       	out	0x1e, r24	; 30
    28f4:	2d bb       	out	0x1d, r18	; 29
    28f6:	0f b6       	in	r0, 0x3f	; 63
    28f8:	f8 94       	cli
    28fa:	e2 9a       	sbi	0x1c, 2	; 28
    28fc:	e1 9a       	sbi	0x1c, 1	; 28
    28fe:	0f be       	out	0x3f, r0	; 63
    2900:	01 96       	adiw	r24, 0x01	; 1
    2902:	08 95       	ret

00002904 <eeprom_write_dword>:
    2904:	24 2f       	mov	r18, r20
    2906:	f2 df       	rcall	.-28     	; 0x28ec <eeprom_write_r18>
    2908:	25 2f       	mov	r18, r21
    290a:	f0 df       	rcall	.-32     	; 0x28ec <eeprom_write_r18>
    290c:	00 c0       	rjmp	.+0      	; 0x290e <eeprom_write_word>

0000290e <eeprom_write_word>:
    290e:	ed df       	rcall	.-38     	; 0x28ea <eeprom_write_byte>
    2910:	27 2f       	mov	r18, r23
    2912:	ec cf       	rjmp	.-40     	; 0x28ec <eeprom_write_r18>

00002914 <_exit>:
    2914:	f8 94       	cli

00002916 <__stop_program>:
    2916:	ff cf       	rjmp	.-2      	; 0x2916 <__stop_program>
