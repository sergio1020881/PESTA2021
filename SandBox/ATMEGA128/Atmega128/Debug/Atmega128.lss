
Atmega128.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  00002c24  00002cb8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002c24  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000fb  00800136  00800136  00002cee  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002cee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002d20  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000668  00000000  00000000  00002d60  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000060d1  00000000  00000000  000033c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001589  00000000  00000000  00009499  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000032cb  00000000  00000000  0000aa22  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d68  00000000  00000000  0000dcf0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000010d0  00000000  00000000  0000ea58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003f73  00000000  00000000  0000fb28  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000498  00000000  00000000  00013a9b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a1 c0       	rjmp	.+322    	; 0x144 <__ctors_end>
       2:	00 00       	nop
       4:	be c0       	rjmp	.+380    	; 0x182 <__bad_interrupt>
       6:	00 00       	nop
       8:	bc c0       	rjmp	.+376    	; 0x182 <__bad_interrupt>
       a:	00 00       	nop
       c:	ba c0       	rjmp	.+372    	; 0x182 <__bad_interrupt>
       e:	00 00       	nop
      10:	b8 c0       	rjmp	.+368    	; 0x182 <__bad_interrupt>
      12:	00 00       	nop
      14:	b6 c0       	rjmp	.+364    	; 0x182 <__bad_interrupt>
      16:	00 00       	nop
      18:	b4 c0       	rjmp	.+360    	; 0x182 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b2 c0       	rjmp	.+356    	; 0x182 <__bad_interrupt>
      1e:	00 00       	nop
      20:	b0 c0       	rjmp	.+352    	; 0x182 <__bad_interrupt>
      22:	00 00       	nop
      24:	ae c0       	rjmp	.+348    	; 0x182 <__bad_interrupt>
      26:	00 00       	nop
      28:	28 c3       	rjmp	.+1616   	; 0x67a <__vector_10>
      2a:	00 00       	nop
      2c:	fe c2       	rjmp	.+1532   	; 0x62a <__vector_11>
      2e:	00 00       	nop
      30:	0c 94 04 11 	jmp	0x2208	; 0x2208 <__vector_12>
      34:	04 c3       	rjmp	.+1544   	; 0x63e <__vector_13>
      36:	00 00       	nop
      38:	16 c3       	rjmp	.+1580   	; 0x666 <__vector_14>
      3a:	00 00       	nop
      3c:	0c 94 d0 10 	jmp	0x21a0	; 0x21a0 <__vector_15>
      40:	ea c2       	rjmp	.+1492   	; 0x616 <__vector_16>
      42:	00 00       	nop
      44:	9e c0       	rjmp	.+316    	; 0x182 <__bad_interrupt>
      46:	00 00       	nop
      48:	9c c0       	rjmp	.+312    	; 0x182 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	9a c0       	rjmp	.+308    	; 0x182 <__bad_interrupt>
      4e:	00 00       	nop
      50:	98 c0       	rjmp	.+304    	; 0x182 <__bad_interrupt>
      52:	00 00       	nop
      54:	96 c0       	rjmp	.+300    	; 0x182 <__bad_interrupt>
      56:	00 00       	nop
      58:	94 c0       	rjmp	.+296    	; 0x182 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	92 c0       	rjmp	.+292    	; 0x182 <__bad_interrupt>
      5e:	00 00       	nop
      60:	f8 c2       	rjmp	.+1520   	; 0x652 <__vector_24>
      62:	00 00       	nop
      64:	14 c3       	rjmp	.+1576   	; 0x68e <__vector_25>
      66:	00 00       	nop
      68:	1c c3       	rjmp	.+1592   	; 0x6a2 <__vector_26>
      6a:	00 00       	nop
      6c:	24 c3       	rjmp	.+1608   	; 0x6b6 <__vector_27>
      6e:	00 00       	nop
      70:	2c c3       	rjmp	.+1624   	; 0x6ca <__vector_28>
      72:	00 00       	nop
      74:	34 c3       	rjmp	.+1640   	; 0x6de <__vector_29>
      76:	00 00       	nop
      78:	84 c0       	rjmp	.+264    	; 0x182 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	82 c0       	rjmp	.+260    	; 0x182 <__bad_interrupt>
      7e:	00 00       	nop
      80:	80 c0       	rjmp	.+256    	; 0x182 <__bad_interrupt>
      82:	00 00       	nop
      84:	7e c0       	rjmp	.+252    	; 0x182 <__bad_interrupt>
      86:	00 00       	nop
      88:	7c c0       	rjmp	.+248    	; 0x182 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	2c 02       	muls	r18, r28
      8e:	30 02       	muls	r19, r16
      90:	34 02       	muls	r19, r20
      92:	38 02       	muls	r19, r24
      94:	3c 02       	muls	r19, r28
      96:	43 02       	muls	r20, r19
      98:	4a 02       	muls	r20, r26
      9a:	51 02       	muls	r21, r17
      9c:	55 02       	muls	r21, r21
      9e:	5c 02       	muls	r21, r28
      a0:	63 02       	muls	r22, r19
      a2:	6a 02       	muls	r22, r26
      a4:	6e 02       	muls	r22, r30
      a6:	75 02       	muls	r23, r21
      a8:	7c 02       	muls	r23, r28
      aa:	98 02       	muls	r25, r24
      ac:	9c 02       	muls	r25, r28
      ae:	a0 02       	muls	r26, r16
      b0:	a4 02       	muls	r26, r20
      b2:	aa 02       	muls	r26, r26
      b4:	ae 02       	muls	r26, r30
      b6:	b2 02       	muls	r27, r18
      b8:	b6 02       	muls	r27, r22
      ba:	bf 02       	muls	r27, r31
      bc:	c3 02       	muls	r28, r19
      be:	c7 02       	muls	r28, r23
      c0:	d0 02       	muls	r29, r16
      c2:	07 63       	ori	r16, 0x37	; 55
      c4:	42 36       	cpi	r20, 0x62	; 98
      c6:	b7 9b       	sbis	0x16, 7	; 22
      c8:	d8 a7       	std	Y+40, r29	; 0x28
      ca:	1a 39       	cpi	r17, 0x9A	; 154
      cc:	68 56       	subi	r22, 0x68	; 104
      ce:	18 ae       	std	Y+56, r1	; 0x38
      d0:	ba ab       	std	Y+50, r27	; 0x32
      d2:	55 8c       	ldd	r5, Z+29	; 0x1d
      d4:	1d 3c       	cpi	r17, 0xCD	; 205
      d6:	b7 cc       	rjmp	.-1682   	; 0xfffffa46 <__eeprom_end+0xff7efa46>
      d8:	57 63       	ori	r21, 0x37	; 55
      da:	bd 6d       	ori	r27, 0xDD	; 221
      dc:	ed fd       	.word	0xfded	; ????
      de:	75 3e       	cpi	r23, 0xE5	; 229
      e0:	f6 17       	cp	r31, r22
      e2:	72 31       	cpi	r23, 0x12	; 18
      e4:	bf 00       	.word	0x00bf	; ????
      e6:	00 00       	nop
      e8:	80 3f       	cpi	r24, 0xF0	; 240
      ea:	08 00       	.word	0x0008	; ????
      ec:	00 00       	nop
      ee:	be 92       	st	-X, r11
      f0:	24 49       	sbci	r18, 0x94	; 148
      f2:	12 3e       	cpi	r17, 0xE2	; 226
      f4:	ab aa       	std	Y+51, r10	; 0x33
      f6:	aa 2a       	or	r10, r26
      f8:	be cd       	rjmp	.-1156   	; 0xfffffc76 <__eeprom_end+0xff7efc76>
      fa:	cc cc       	rjmp	.-1640   	; 0xfffffa94 <__eeprom_end+0xff7efa94>
      fc:	4c 3e       	cpi	r20, 0xEC	; 236
      fe:	00 00       	nop
     100:	00 80       	ld	r0, Z
     102:	be ab       	std	Y+54, r27	; 0x36
     104:	aa aa       	std	Y+50, r10	; 0x32
     106:	aa 3e       	cpi	r26, 0xEA	; 234
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	bf 00       	.word	0x00bf	; ????
     10e:	00 00       	nop
     110:	80 3f       	cpi	r24, 0xF0	; 240
     112:	00 00       	nop
     114:	00 00       	nop
     116:	00 08       	sbc	r0, r0
     118:	41 78       	andi	r20, 0x81	; 129
     11a:	d3 bb       	out	0x13, r29	; 19
     11c:	43 87       	std	Z+11, r20	; 0x0b
     11e:	d1 13       	cpse	r29, r17
     120:	3d 19       	sub	r19, r13
     122:	0e 3c       	cpi	r16, 0xCE	; 206
     124:	c3 bd       	out	0x23, r28	; 35
     126:	42 82       	std	Z+2, r4	; 0x02
     128:	ad 2b       	or	r26, r29
     12a:	3e 68       	ori	r19, 0x8E	; 142
     12c:	ec 82       	std	Y+4, r14	; 0x04
     12e:	76 be       	out	0x36, r7	; 54
     130:	d9 8f       	std	Y+25, r29	; 0x19
     132:	e1 a9       	ldd	r30, Z+49	; 0x31
     134:	3e 4c       	sbci	r19, 0xCE	; 206
     136:	80 ef       	ldi	r24, 0xF0	; 240
     138:	ff be       	out	0x3f, r15	; 63
     13a:	01 c4       	rjmp	.+2050   	; 0x93e <FUNCshellsort+0xe>
     13c:	ff 7f       	andi	r31, 0xFF	; 255
     13e:	3f 00       	.word	0x003f	; ????
     140:	00 00       	nop
	...

00000144 <__ctors_end>:
     144:	11 24       	eor	r1, r1
     146:	1f be       	out	0x3f, r1	; 63
     148:	cf ef       	ldi	r28, 0xFF	; 255
     14a:	d0 e1       	ldi	r29, 0x10	; 16
     14c:	de bf       	out	0x3e, r29	; 62
     14e:	cd bf       	out	0x3d, r28	; 61

00000150 <__do_copy_data>:
     150:	11 e0       	ldi	r17, 0x01	; 1
     152:	a0 e0       	ldi	r26, 0x00	; 0
     154:	b1 e0       	ldi	r27, 0x01	; 1
     156:	e4 e2       	ldi	r30, 0x24	; 36
     158:	fc e2       	ldi	r31, 0x2C	; 44
     15a:	00 e0       	ldi	r16, 0x00	; 0
     15c:	0b bf       	out	0x3b, r16	; 59
     15e:	02 c0       	rjmp	.+4      	; 0x164 <__do_copy_data+0x14>
     160:	07 90       	elpm	r0, Z+
     162:	0d 92       	st	X+, r0
     164:	a6 33       	cpi	r26, 0x36	; 54
     166:	b1 07       	cpc	r27, r17
     168:	d9 f7       	brne	.-10     	; 0x160 <__do_copy_data+0x10>

0000016a <__do_clear_bss>:
     16a:	22 e0       	ldi	r18, 0x02	; 2
     16c:	a6 e3       	ldi	r26, 0x36	; 54
     16e:	b1 e0       	ldi	r27, 0x01	; 1
     170:	01 c0       	rjmp	.+2      	; 0x174 <.do_clear_bss_start>

00000172 <.do_clear_bss_loop>:
     172:	1d 92       	st	X+, r1

00000174 <.do_clear_bss_start>:
     174:	a1 33       	cpi	r26, 0x31	; 49
     176:	b2 07       	cpc	r27, r18
     178:	e1 f7       	brne	.-8      	; 0x172 <.do_clear_bss_loop>
     17a:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <main>
     17e:	0c 94 10 16 	jmp	0x2c20	; 0x2c20 <_exit>

00000182 <__bad_interrupt>:
     182:	3e cf       	rjmp	.-388    	; 0x0 <__vectors>

00000184 <TIMER_COUNTER0_start>:
	timer3.compareB=TIMER_COUNTER3_compareB;
	timer3.compareC=TIMER_COUNTER3_compareC;
	timer3.start=TIMER_COUNTER3_start;
	timer3.stop=TIMER_COUNTER3_stop;
	return timer3;
}
     184:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <timer0_state>
     188:	21 11       	cpse	r18, r1
     18a:	41 c0       	rjmp	.+130    	; 0x20e <TIMER_COUNTER0_start+0x8a>
     18c:	23 b7       	in	r18, 0x33	; 51
     18e:	28 7f       	andi	r18, 0xF8	; 248
     190:	23 bf       	out	0x33, r18	; 51
     192:	80 34       	cpi	r24, 0x40	; 64
     194:	91 05       	cpc	r25, r1
     196:	11 f1       	breq	.+68     	; 0x1dc <TIMER_COUNTER0_start+0x58>
     198:	48 f4       	brcc	.+18     	; 0x1ac <TIMER_COUNTER0_start+0x28>
     19a:	88 30       	cpi	r24, 0x08	; 8
     19c:	91 05       	cpc	r25, r1
     19e:	b1 f0       	breq	.+44     	; 0x1cc <TIMER_COUNTER0_start+0x48>
     1a0:	80 32       	cpi	r24, 0x20	; 32
     1a2:	91 05       	cpc	r25, r1
     1a4:	b9 f0       	breq	.+46     	; 0x1d4 <TIMER_COUNTER0_start+0x50>
     1a6:	01 97       	sbiw	r24, 0x01	; 1
     1a8:	49 f5       	brne	.+82     	; 0x1fc <TIMER_COUNTER0_start+0x78>
     1aa:	0c c0       	rjmp	.+24     	; 0x1c4 <TIMER_COUNTER0_start+0x40>
     1ac:	81 15       	cp	r24, r1
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	92 07       	cpc	r25, r18
     1b2:	e1 f0       	breq	.+56     	; 0x1ec <TIMER_COUNTER0_start+0x68>
     1b4:	81 15       	cp	r24, r1
     1b6:	24 e0       	ldi	r18, 0x04	; 4
     1b8:	92 07       	cpc	r25, r18
     1ba:	e1 f0       	breq	.+56     	; 0x1f4 <TIMER_COUNTER0_start+0x70>
     1bc:	80 38       	cpi	r24, 0x80	; 128
     1be:	91 05       	cpc	r25, r1
     1c0:	e9 f4       	brne	.+58     	; 0x1fc <TIMER_COUNTER0_start+0x78>
     1c2:	10 c0       	rjmp	.+32     	; 0x1e4 <TIMER_COUNTER0_start+0x60>
     1c4:	83 b7       	in	r24, 0x33	; 51
     1c6:	81 60       	ori	r24, 0x01	; 1
     1c8:	83 bf       	out	0x33, r24	; 51
     1ca:	1b c0       	rjmp	.+54     	; 0x202 <TIMER_COUNTER0_start+0x7e>
     1cc:	83 b7       	in	r24, 0x33	; 51
     1ce:	82 60       	ori	r24, 0x02	; 2
     1d0:	83 bf       	out	0x33, r24	; 51
     1d2:	17 c0       	rjmp	.+46     	; 0x202 <TIMER_COUNTER0_start+0x7e>
     1d4:	83 b7       	in	r24, 0x33	; 51
     1d6:	83 60       	ori	r24, 0x03	; 3
     1d8:	83 bf       	out	0x33, r24	; 51
     1da:	13 c0       	rjmp	.+38     	; 0x202 <TIMER_COUNTER0_start+0x7e>
     1dc:	83 b7       	in	r24, 0x33	; 51
     1de:	84 60       	ori	r24, 0x04	; 4
     1e0:	83 bf       	out	0x33, r24	; 51
     1e2:	0f c0       	rjmp	.+30     	; 0x202 <TIMER_COUNTER0_start+0x7e>
     1e4:	83 b7       	in	r24, 0x33	; 51
     1e6:	85 60       	ori	r24, 0x05	; 5
     1e8:	83 bf       	out	0x33, r24	; 51
     1ea:	0b c0       	rjmp	.+22     	; 0x202 <TIMER_COUNTER0_start+0x7e>
     1ec:	83 b7       	in	r24, 0x33	; 51
     1ee:	86 60       	ori	r24, 0x06	; 6
     1f0:	83 bf       	out	0x33, r24	; 51
     1f2:	07 c0       	rjmp	.+14     	; 0x202 <TIMER_COUNTER0_start+0x7e>
     1f4:	83 b7       	in	r24, 0x33	; 51
     1f6:	87 60       	ori	r24, 0x07	; 7
     1f8:	83 bf       	out	0x33, r24	; 51
     1fa:	03 c0       	rjmp	.+6      	; 0x202 <TIMER_COUNTER0_start+0x7e>
     1fc:	83 b7       	in	r24, 0x33	; 51
     1fe:	87 60       	ori	r24, 0x07	; 7
     200:	83 bf       	out	0x33, r24	; 51
     202:	8f b7       	in	r24, 0x3f	; 63
     204:	80 68       	ori	r24, 0x80	; 128
     206:	8f bf       	out	0x3f, r24	; 63
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timer0_state>
     20e:	08 95       	ret

00000210 <TIMER_COUNTER0_compoutmode>:
     210:	93 b7       	in	r25, 0x33	; 51
     212:	9f 7c       	andi	r25, 0xCF	; 207
     214:	93 bf       	out	0x33, r25	; 51
     216:	82 30       	cpi	r24, 0x02	; 2
     218:	51 f0       	breq	.+20     	; 0x22e <TIMER_COUNTER0_compoutmode+0x1e>
     21a:	83 30       	cpi	r24, 0x03	; 3
     21c:	71 f0       	breq	.+28     	; 0x23a <TIMER_COUNTER0_compoutmode+0x2a>
     21e:	81 30       	cpi	r24, 0x01	; 1
     220:	89 f4       	brne	.+34     	; 0x244 <TIMER_COUNTER0_compoutmode+0x34>
     222:	80 e1       	ldi	r24, 0x10	; 16
     224:	87 bb       	out	0x17, r24	; 23
     226:	83 b7       	in	r24, 0x33	; 51
     228:	80 61       	ori	r24, 0x10	; 16
     22a:	83 bf       	out	0x33, r24	; 51
     22c:	08 95       	ret
     22e:	80 e1       	ldi	r24, 0x10	; 16
     230:	87 bb       	out	0x17, r24	; 23
     232:	83 b7       	in	r24, 0x33	; 51
     234:	80 62       	ori	r24, 0x20	; 32
     236:	83 bf       	out	0x33, r24	; 51
     238:	08 95       	ret
     23a:	80 e1       	ldi	r24, 0x10	; 16
     23c:	87 bb       	out	0x17, r24	; 23
     23e:	83 b7       	in	r24, 0x33	; 51
     240:	80 63       	ori	r24, 0x30	; 48
     242:	83 bf       	out	0x33, r24	; 51
     244:	08 95       	ret

00000246 <TIMER_COUNTER0_compare>:
     246:	81 bf       	out	0x31, r24	; 49
     248:	08 95       	ret

0000024a <TIMER_COUNTER0_stop>:
     24a:	83 b7       	in	r24, 0x33	; 51
     24c:	88 7f       	andi	r24, 0xF8	; 248
     24e:	83 bf       	out	0x33, r24	; 51
     250:	12 be       	out	0x32, r1	; 50
     252:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <timer0_state>
     256:	08 95       	ret

00000258 <TIMER_COUNTER1_start>:
     258:	20 91 39 01 	lds	r18, 0x0139	; 0x800139 <timer1_state>
     25c:	21 11       	cpse	r18, r1
     25e:	41 c0       	rjmp	.+130    	; 0x2e2 <TIMER_COUNTER1_start+0x8a>
     260:	2e b5       	in	r18, 0x2e	; 46
     262:	28 7f       	andi	r18, 0xF8	; 248
     264:	2e bd       	out	0x2e, r18	; 46
     266:	88 30       	cpi	r24, 0x08	; 8
     268:	91 05       	cpc	r25, r1
     26a:	d1 f0       	breq	.+52     	; 0x2a0 <TIMER_COUNTER1_start+0x48>
     26c:	48 f4       	brcc	.+18     	; 0x280 <TIMER_COUNTER1_start+0x28>
     26e:	83 30       	cpi	r24, 0x03	; 3
     270:	91 05       	cpc	r25, r1
     272:	31 f1       	breq	.+76     	; 0x2c0 <TIMER_COUNTER1_start+0x68>
     274:	85 30       	cpi	r24, 0x05	; 5
     276:	91 05       	cpc	r25, r1
     278:	39 f1       	breq	.+78     	; 0x2c8 <TIMER_COUNTER1_start+0x70>
     27a:	01 97       	sbiw	r24, 0x01	; 1
     27c:	49 f5       	brne	.+82     	; 0x2d0 <TIMER_COUNTER1_start+0x78>
     27e:	0c c0       	rjmp	.+24     	; 0x298 <TIMER_COUNTER1_start+0x40>
     280:	81 15       	cp	r24, r1
     282:	21 e0       	ldi	r18, 0x01	; 1
     284:	92 07       	cpc	r25, r18
     286:	a1 f0       	breq	.+40     	; 0x2b0 <TIMER_COUNTER1_start+0x58>
     288:	81 15       	cp	r24, r1
     28a:	24 e0       	ldi	r18, 0x04	; 4
     28c:	92 07       	cpc	r25, r18
     28e:	a1 f0       	breq	.+40     	; 0x2b8 <TIMER_COUNTER1_start+0x60>
     290:	80 34       	cpi	r24, 0x40	; 64
     292:	91 05       	cpc	r25, r1
     294:	e9 f4       	brne	.+58     	; 0x2d0 <TIMER_COUNTER1_start+0x78>
     296:	08 c0       	rjmp	.+16     	; 0x2a8 <TIMER_COUNTER1_start+0x50>
     298:	8e b5       	in	r24, 0x2e	; 46
     29a:	81 60       	ori	r24, 0x01	; 1
     29c:	8e bd       	out	0x2e, r24	; 46
     29e:	1b c0       	rjmp	.+54     	; 0x2d6 <TIMER_COUNTER1_start+0x7e>
     2a0:	8e b5       	in	r24, 0x2e	; 46
     2a2:	82 60       	ori	r24, 0x02	; 2
     2a4:	8e bd       	out	0x2e, r24	; 46
     2a6:	17 c0       	rjmp	.+46     	; 0x2d6 <TIMER_COUNTER1_start+0x7e>
     2a8:	8e b5       	in	r24, 0x2e	; 46
     2aa:	83 60       	ori	r24, 0x03	; 3
     2ac:	8e bd       	out	0x2e, r24	; 46
     2ae:	13 c0       	rjmp	.+38     	; 0x2d6 <TIMER_COUNTER1_start+0x7e>
     2b0:	8e b5       	in	r24, 0x2e	; 46
     2b2:	84 60       	ori	r24, 0x04	; 4
     2b4:	8e bd       	out	0x2e, r24	; 46
     2b6:	0f c0       	rjmp	.+30     	; 0x2d6 <TIMER_COUNTER1_start+0x7e>
     2b8:	8e b5       	in	r24, 0x2e	; 46
     2ba:	85 60       	ori	r24, 0x05	; 5
     2bc:	8e bd       	out	0x2e, r24	; 46
     2be:	0b c0       	rjmp	.+22     	; 0x2d6 <TIMER_COUNTER1_start+0x7e>
     2c0:	8e b5       	in	r24, 0x2e	; 46
     2c2:	86 60       	ori	r24, 0x06	; 6
     2c4:	8e bd       	out	0x2e, r24	; 46
     2c6:	07 c0       	rjmp	.+14     	; 0x2d6 <TIMER_COUNTER1_start+0x7e>
     2c8:	8e b5       	in	r24, 0x2e	; 46
     2ca:	87 60       	ori	r24, 0x07	; 7
     2cc:	8e bd       	out	0x2e, r24	; 46
     2ce:	03 c0       	rjmp	.+6      	; 0x2d6 <TIMER_COUNTER1_start+0x7e>
     2d0:	8e b5       	in	r24, 0x2e	; 46
     2d2:	85 60       	ori	r24, 0x05	; 5
     2d4:	8e bd       	out	0x2e, r24	; 46
     2d6:	8f b7       	in	r24, 0x3f	; 63
     2d8:	80 68       	ori	r24, 0x80	; 128
     2da:	8f bf       	out	0x3f, r24	; 63
     2dc:	81 e0       	ldi	r24, 0x01	; 1
     2de:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <timer1_state>
     2e2:	08 95       	ret

000002e4 <TIMER_COUNTER1_compoutmodeA>:
     2e4:	9f b5       	in	r25, 0x2f	; 47
     2e6:	9f 73       	andi	r25, 0x3F	; 63
     2e8:	9f bd       	out	0x2f, r25	; 47
     2ea:	82 30       	cpi	r24, 0x02	; 2
     2ec:	49 f0       	breq	.+18     	; 0x300 <TIMER_COUNTER1_compoutmodeA+0x1c>
     2ee:	83 30       	cpi	r24, 0x03	; 3
     2f0:	61 f0       	breq	.+24     	; 0x30a <TIMER_COUNTER1_compoutmodeA+0x26>
     2f2:	81 30       	cpi	r24, 0x01	; 1
     2f4:	71 f4       	brne	.+28     	; 0x312 <TIMER_COUNTER1_compoutmodeA+0x2e>
     2f6:	bd 9a       	sbi	0x17, 5	; 23
     2f8:	8f b5       	in	r24, 0x2f	; 47
     2fa:	80 64       	ori	r24, 0x40	; 64
     2fc:	8f bd       	out	0x2f, r24	; 47
     2fe:	08 95       	ret
     300:	bd 9a       	sbi	0x17, 5	; 23
     302:	8f b5       	in	r24, 0x2f	; 47
     304:	80 68       	ori	r24, 0x80	; 128
     306:	8f bd       	out	0x2f, r24	; 47
     308:	08 95       	ret
     30a:	bd 9a       	sbi	0x17, 5	; 23
     30c:	8f b5       	in	r24, 0x2f	; 47
     30e:	80 6c       	ori	r24, 0xC0	; 192
     310:	8f bd       	out	0x2f, r24	; 47
     312:	08 95       	ret

00000314 <TIMER_COUNTER1_compoutmodeB>:
     314:	9f b5       	in	r25, 0x2f	; 47
     316:	9f 7c       	andi	r25, 0xCF	; 207
     318:	9f bd       	out	0x2f, r25	; 47
     31a:	82 30       	cpi	r24, 0x02	; 2
     31c:	49 f0       	breq	.+18     	; 0x330 <TIMER_COUNTER1_compoutmodeB+0x1c>
     31e:	83 30       	cpi	r24, 0x03	; 3
     320:	61 f0       	breq	.+24     	; 0x33a <TIMER_COUNTER1_compoutmodeB+0x26>
     322:	81 30       	cpi	r24, 0x01	; 1
     324:	71 f4       	brne	.+28     	; 0x342 <TIMER_COUNTER1_compoutmodeB+0x2e>
     326:	be 9a       	sbi	0x17, 6	; 23
     328:	8f b5       	in	r24, 0x2f	; 47
     32a:	80 61       	ori	r24, 0x10	; 16
     32c:	8f bd       	out	0x2f, r24	; 47
     32e:	08 95       	ret
     330:	be 9a       	sbi	0x17, 6	; 23
     332:	8f b5       	in	r24, 0x2f	; 47
     334:	80 62       	ori	r24, 0x20	; 32
     336:	8f bd       	out	0x2f, r24	; 47
     338:	08 95       	ret
     33a:	be 9a       	sbi	0x17, 6	; 23
     33c:	8f b5       	in	r24, 0x2f	; 47
     33e:	80 63       	ori	r24, 0x30	; 48
     340:	8f bd       	out	0x2f, r24	; 47
     342:	08 95       	ret

00000344 <TIMER_COUNTER1_compoutmodeC>:
     344:	9f b5       	in	r25, 0x2f	; 47
     346:	93 7f       	andi	r25, 0xF3	; 243
     348:	9f bd       	out	0x2f, r25	; 47
     34a:	82 30       	cpi	r24, 0x02	; 2
     34c:	49 f0       	breq	.+18     	; 0x360 <TIMER_COUNTER1_compoutmodeC+0x1c>
     34e:	83 30       	cpi	r24, 0x03	; 3
     350:	61 f0       	breq	.+24     	; 0x36a <TIMER_COUNTER1_compoutmodeC+0x26>
     352:	81 30       	cpi	r24, 0x01	; 1
     354:	71 f4       	brne	.+28     	; 0x372 <TIMER_COUNTER1_compoutmodeC+0x2e>
     356:	bf 9a       	sbi	0x17, 7	; 23
     358:	8f b5       	in	r24, 0x2f	; 47
     35a:	84 60       	ori	r24, 0x04	; 4
     35c:	8f bd       	out	0x2f, r24	; 47
     35e:	08 95       	ret
     360:	bf 9a       	sbi	0x17, 7	; 23
     362:	8f b5       	in	r24, 0x2f	; 47
     364:	88 60       	ori	r24, 0x08	; 8
     366:	8f bd       	out	0x2f, r24	; 47
     368:	08 95       	ret
     36a:	bf 9a       	sbi	0x17, 7	; 23
     36c:	8f b5       	in	r24, 0x2f	; 47
     36e:	8c 60       	ori	r24, 0x0C	; 12
     370:	8f bd       	out	0x2f, r24	; 47
     372:	08 95       	ret

00000374 <TIMER_COUNTER1_compareA>:
     374:	9b bd       	out	0x2b, r25	; 43
     376:	8a bd       	out	0x2a, r24	; 42
     378:	08 95       	ret

0000037a <TIMER_COUNTER1_compareB>:
     37a:	99 bd       	out	0x29, r25	; 41
     37c:	88 bd       	out	0x28, r24	; 40
     37e:	08 95       	ret

00000380 <TIMER_COUNTER1_compareC>:
     380:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     384:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     388:	08 95       	ret

0000038a <TIMER_COUNTER1_stop>:
     38a:	8e b5       	in	r24, 0x2e	; 46
     38c:	88 7f       	andi	r24, 0xF8	; 248
     38e:	8e bd       	out	0x2e, r24	; 46
     390:	1d bc       	out	0x2d, r1	; 45
     392:	1c bc       	out	0x2c, r1	; 44
     394:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <timer1_state>
     398:	08 95       	ret

0000039a <TIMER_COUNTER0enable>:
     39a:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <timer0_state>
     39e:	2f ef       	ldi	r18, 0xFF	; 255
     3a0:	21 bf       	out	0x31, r18	; 49
     3a2:	23 b7       	in	r18, 0x33	; 51
     3a4:	27 7b       	andi	r18, 0xB7	; 183
     3a6:	23 bf       	out	0x33, r18	; 51
     3a8:	62 30       	cpi	r22, 0x02	; 2
     3aa:	41 f0       	breq	.+16     	; 0x3bc <TIMER_COUNTER0enable+0x22>
     3ac:	63 30       	cpi	r22, 0x03	; 3
     3ae:	51 f0       	breq	.+20     	; 0x3c4 <TIMER_COUNTER0enable+0x2a>
     3b0:	61 30       	cpi	r22, 0x01	; 1
     3b2:	59 f4       	brne	.+22     	; 0x3ca <TIMER_COUNTER0enable+0x30>
     3b4:	23 b7       	in	r18, 0x33	; 51
     3b6:	20 64       	ori	r18, 0x40	; 64
     3b8:	23 bf       	out	0x33, r18	; 51
     3ba:	07 c0       	rjmp	.+14     	; 0x3ca <TIMER_COUNTER0enable+0x30>
     3bc:	23 b7       	in	r18, 0x33	; 51
     3be:	28 60       	ori	r18, 0x08	; 8
     3c0:	23 bf       	out	0x33, r18	; 51
     3c2:	03 c0       	rjmp	.+6      	; 0x3ca <TIMER_COUNTER0enable+0x30>
     3c4:	23 b7       	in	r18, 0x33	; 51
     3c6:	28 64       	ori	r18, 0x48	; 72
     3c8:	23 bf       	out	0x33, r18	; 51
     3ca:	27 b7       	in	r18, 0x37	; 55
     3cc:	2e 7f       	andi	r18, 0xFE	; 254
     3ce:	27 bf       	out	0x37, r18	; 55
     3d0:	27 b7       	in	r18, 0x37	; 55
     3d2:	2d 7f       	andi	r18, 0xFD	; 253
     3d4:	27 bf       	out	0x37, r18	; 55
     3d6:	42 30       	cpi	r20, 0x02	; 2
     3d8:	41 f0       	breq	.+16     	; 0x3ea <TIMER_COUNTER0enable+0x50>
     3da:	43 30       	cpi	r20, 0x03	; 3
     3dc:	51 f0       	breq	.+20     	; 0x3f2 <TIMER_COUNTER0enable+0x58>
     3de:	41 30       	cpi	r20, 0x01	; 1
     3e0:	71 f4       	brne	.+28     	; 0x3fe <TIMER_COUNTER0enable+0x64>
     3e2:	27 b7       	in	r18, 0x37	; 55
     3e4:	21 60       	ori	r18, 0x01	; 1
     3e6:	27 bf       	out	0x37, r18	; 55
     3e8:	0a c0       	rjmp	.+20     	; 0x3fe <TIMER_COUNTER0enable+0x64>
     3ea:	27 b7       	in	r18, 0x37	; 55
     3ec:	22 60       	ori	r18, 0x02	; 2
     3ee:	27 bf       	out	0x37, r18	; 55
     3f0:	06 c0       	rjmp	.+12     	; 0x3fe <TIMER_COUNTER0enable+0x64>
     3f2:	27 b7       	in	r18, 0x37	; 55
     3f4:	21 60       	ori	r18, 0x01	; 1
     3f6:	27 bf       	out	0x37, r18	; 55
     3f8:	27 b7       	in	r18, 0x37	; 55
     3fa:	22 60       	ori	r18, 0x02	; 2
     3fc:	27 bf       	out	0x37, r18	; 55
     3fe:	28 e0       	ldi	r18, 0x08	; 8
     400:	31 e0       	ldi	r19, 0x01	; 1
     402:	fc 01       	movw	r30, r24
     404:	31 83       	std	Z+1, r19	; 0x01
     406:	20 83       	st	Z, r18
     408:	23 e2       	ldi	r18, 0x23	; 35
     40a:	31 e0       	ldi	r19, 0x01	; 1
     40c:	37 83       	std	Z+7, r19	; 0x07
     40e:	26 83       	std	Z+6, r18	; 0x06
     410:	22 ec       	ldi	r18, 0xC2	; 194
     412:	30 e0       	ldi	r19, 0x00	; 0
     414:	35 87       	std	Z+13, r19	; 0x0d
     416:	24 87       	std	Z+12, r18	; 0x0c
     418:	25 e2       	ldi	r18, 0x25	; 37
     41a:	31 e0       	ldi	r19, 0x01	; 1
     41c:	37 87       	std	Z+15, r19	; 0x0f
     41e:	26 87       	std	Z+14, r18	; 0x0e
     420:	08 95       	ret

00000422 <TIMER_COUNTER1enable>:
     422:	0f 93       	push	r16
     424:	1f 93       	push	r17
     426:	dc 01       	movw	r26, r24
     428:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <timer1_state>
     42c:	8f ef       	ldi	r24, 0xFF	; 255
     42e:	9f ef       	ldi	r25, 0xFF	; 255
     430:	9b bd       	out	0x2b, r25	; 43
     432:	8a bd       	out	0x2a, r24	; 42
     434:	8f b5       	in	r24, 0x2f	; 47
     436:	8c 7f       	andi	r24, 0xFC	; 252
     438:	8f bd       	out	0x2f, r24	; 47
     43a:	8e b5       	in	r24, 0x2e	; 46
     43c:	87 7e       	andi	r24, 0xE7	; 231
     43e:	8e bd       	out	0x2e, r24	; 46
     440:	06 2f       	mov	r16, r22
     442:	10 e0       	ldi	r17, 0x00	; 0
     444:	f8 01       	movw	r30, r16
     446:	31 97       	sbiw	r30, 0x01	; 1
     448:	ef 30       	cpi	r30, 0x0F	; 15
     44a:	f1 05       	cpc	r31, r1
     44c:	08 f0       	brcs	.+2      	; 0x450 <TIMER_COUNTER1enable+0x2e>
     44e:	5a c0       	rjmp	.+180    	; 0x504 <TIMER_COUNTER1enable+0xe2>
     450:	ea 5b       	subi	r30, 0xBA	; 186
     452:	ff 4f       	sbci	r31, 0xFF	; 255
     454:	0c 94 51 15 	jmp	0x2aa2	; 0x2aa2 <__tablejump2__>
     458:	8f b5       	in	r24, 0x2f	; 47
     45a:	81 60       	ori	r24, 0x01	; 1
     45c:	8f bd       	out	0x2f, r24	; 47
     45e:	52 c0       	rjmp	.+164    	; 0x504 <TIMER_COUNTER1enable+0xe2>
     460:	8f b5       	in	r24, 0x2f	; 47
     462:	82 60       	ori	r24, 0x02	; 2
     464:	8f bd       	out	0x2f, r24	; 47
     466:	4e c0       	rjmp	.+156    	; 0x504 <TIMER_COUNTER1enable+0xe2>
     468:	8f b5       	in	r24, 0x2f	; 47
     46a:	83 60       	ori	r24, 0x03	; 3
     46c:	8f bd       	out	0x2f, r24	; 47
     46e:	4a c0       	rjmp	.+148    	; 0x504 <TIMER_COUNTER1enable+0xe2>
     470:	8e b5       	in	r24, 0x2e	; 46
     472:	88 60       	ori	r24, 0x08	; 8
     474:	8e bd       	out	0x2e, r24	; 46
     476:	46 c0       	rjmp	.+140    	; 0x504 <TIMER_COUNTER1enable+0xe2>
     478:	8f b5       	in	r24, 0x2f	; 47
     47a:	81 60       	ori	r24, 0x01	; 1
     47c:	8f bd       	out	0x2f, r24	; 47
     47e:	8e b5       	in	r24, 0x2e	; 46
     480:	88 60       	ori	r24, 0x08	; 8
     482:	8e bd       	out	0x2e, r24	; 46
     484:	3f c0       	rjmp	.+126    	; 0x504 <TIMER_COUNTER1enable+0xe2>
     486:	8f b5       	in	r24, 0x2f	; 47
     488:	82 60       	ori	r24, 0x02	; 2
     48a:	8f bd       	out	0x2f, r24	; 47
     48c:	8e b5       	in	r24, 0x2e	; 46
     48e:	88 60       	ori	r24, 0x08	; 8
     490:	8e bd       	out	0x2e, r24	; 46
     492:	38 c0       	rjmp	.+112    	; 0x504 <TIMER_COUNTER1enable+0xe2>
     494:	8f b5       	in	r24, 0x2f	; 47
     496:	83 60       	ori	r24, 0x03	; 3
     498:	8f bd       	out	0x2f, r24	; 47
     49a:	8e b5       	in	r24, 0x2e	; 46
     49c:	88 60       	ori	r24, 0x08	; 8
     49e:	8e bd       	out	0x2e, r24	; 46
     4a0:	31 c0       	rjmp	.+98     	; 0x504 <TIMER_COUNTER1enable+0xe2>
     4a2:	8e b5       	in	r24, 0x2e	; 46
     4a4:	80 61       	ori	r24, 0x10	; 16
     4a6:	8e bd       	out	0x2e, r24	; 46
     4a8:	2d c0       	rjmp	.+90     	; 0x504 <TIMER_COUNTER1enable+0xe2>
     4aa:	8f b5       	in	r24, 0x2f	; 47
     4ac:	81 60       	ori	r24, 0x01	; 1
     4ae:	8f bd       	out	0x2f, r24	; 47
     4b0:	8e b5       	in	r24, 0x2e	; 46
     4b2:	80 61       	ori	r24, 0x10	; 16
     4b4:	8e bd       	out	0x2e, r24	; 46
     4b6:	26 c0       	rjmp	.+76     	; 0x504 <TIMER_COUNTER1enable+0xe2>
     4b8:	8f b5       	in	r24, 0x2f	; 47
     4ba:	82 60       	ori	r24, 0x02	; 2
     4bc:	8f bd       	out	0x2f, r24	; 47
     4be:	8e b5       	in	r24, 0x2e	; 46
     4c0:	80 61       	ori	r24, 0x10	; 16
     4c2:	8e bd       	out	0x2e, r24	; 46
     4c4:	1f c0       	rjmp	.+62     	; 0x504 <TIMER_COUNTER1enable+0xe2>
     4c6:	8f b5       	in	r24, 0x2f	; 47
     4c8:	83 60       	ori	r24, 0x03	; 3
     4ca:	8f bd       	out	0x2f, r24	; 47
     4cc:	8e b5       	in	r24, 0x2e	; 46
     4ce:	80 61       	ori	r24, 0x10	; 16
     4d0:	8e bd       	out	0x2e, r24	; 46
     4d2:	18 c0       	rjmp	.+48     	; 0x504 <TIMER_COUNTER1enable+0xe2>
     4d4:	8e b5       	in	r24, 0x2e	; 46
     4d6:	88 61       	ori	r24, 0x18	; 24
     4d8:	8e bd       	out	0x2e, r24	; 46
     4da:	14 c0       	rjmp	.+40     	; 0x504 <TIMER_COUNTER1enable+0xe2>
     4dc:	8f b5       	in	r24, 0x2f	; 47
     4de:	81 60       	ori	r24, 0x01	; 1
     4e0:	8f bd       	out	0x2f, r24	; 47
     4e2:	8e b5       	in	r24, 0x2e	; 46
     4e4:	88 61       	ori	r24, 0x18	; 24
     4e6:	8e bd       	out	0x2e, r24	; 46
     4e8:	0d c0       	rjmp	.+26     	; 0x504 <TIMER_COUNTER1enable+0xe2>
     4ea:	8f b5       	in	r24, 0x2f	; 47
     4ec:	82 60       	ori	r24, 0x02	; 2
     4ee:	8f bd       	out	0x2f, r24	; 47
     4f0:	8e b5       	in	r24, 0x2e	; 46
     4f2:	88 61       	ori	r24, 0x18	; 24
     4f4:	8e bd       	out	0x2e, r24	; 46
     4f6:	06 c0       	rjmp	.+12     	; 0x504 <TIMER_COUNTER1enable+0xe2>
     4f8:	8f b5       	in	r24, 0x2f	; 47
     4fa:	83 60       	ori	r24, 0x03	; 3
     4fc:	8f bd       	out	0x2f, r24	; 47
     4fe:	8e b5       	in	r24, 0x2e	; 46
     500:	88 61       	ori	r24, 0x18	; 24
     502:	8e bd       	out	0x2e, r24	; 46
     504:	8f b5       	in	r24, 0x2f	; 47
     506:	83 70       	andi	r24, 0x03	; 3
     508:	8f bd       	out	0x2f, r24	; 47
     50a:	87 b7       	in	r24, 0x37	; 55
     50c:	83 7c       	andi	r24, 0xC3	; 195
     50e:	87 bf       	out	0x37, r24	; 55
     510:	ed e7       	ldi	r30, 0x7D	; 125
     512:	f0 e0       	ldi	r31, 0x00	; 0
     514:	80 81       	ld	r24, Z
     516:	8e 7f       	andi	r24, 0xFE	; 254
     518:	80 83       	st	Z, r24
     51a:	50 e0       	ldi	r21, 0x00	; 0
     51c:	fa 01       	movw	r30, r20
     51e:	31 97       	sbiw	r30, 0x01	; 1
     520:	ec 30       	cpi	r30, 0x0C	; 12
     522:	f1 05       	cpc	r31, r1
     524:	08 f0       	brcs	.+2      	; 0x528 <TIMER_COUNTER1enable+0x106>
     526:	44 c0       	rjmp	.+136    	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     528:	eb 5a       	subi	r30, 0xAB	; 171
     52a:	ff 4f       	sbci	r31, 0xFF	; 255
     52c:	0c 94 51 15 	jmp	0x2aa2	; 0x2aa2 <__tablejump2__>
     530:	87 b7       	in	r24, 0x37	; 55
     532:	84 60       	ori	r24, 0x04	; 4
     534:	87 bf       	out	0x37, r24	; 55
     536:	3c c0       	rjmp	.+120    	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     538:	87 b7       	in	r24, 0x37	; 55
     53a:	80 61       	ori	r24, 0x10	; 16
     53c:	87 bf       	out	0x37, r24	; 55
     53e:	38 c0       	rjmp	.+112    	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     540:	87 b7       	in	r24, 0x37	; 55
     542:	88 60       	ori	r24, 0x08	; 8
     544:	87 bf       	out	0x37, r24	; 55
     546:	34 c0       	rjmp	.+104    	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     548:	ed e7       	ldi	r30, 0x7D	; 125
     54a:	f0 e0       	ldi	r31, 0x00	; 0
     54c:	80 81       	ld	r24, Z
     54e:	81 60       	ori	r24, 0x01	; 1
     550:	80 83       	st	Z, r24
     552:	2e c0       	rjmp	.+92     	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     554:	87 b7       	in	r24, 0x37	; 55
     556:	80 62       	ori	r24, 0x20	; 32
     558:	87 bf       	out	0x37, r24	; 55
     55a:	2a c0       	rjmp	.+84     	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     55c:	87 b7       	in	r24, 0x37	; 55
     55e:	84 61       	ori	r24, 0x14	; 20
     560:	87 bf       	out	0x37, r24	; 55
     562:	26 c0       	rjmp	.+76     	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     564:	87 b7       	in	r24, 0x37	; 55
     566:	8c 60       	ori	r24, 0x0C	; 12
     568:	87 bf       	out	0x37, r24	; 55
     56a:	22 c0       	rjmp	.+68     	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     56c:	87 b7       	in	r24, 0x37	; 55
     56e:	84 60       	ori	r24, 0x04	; 4
     570:	87 bf       	out	0x37, r24	; 55
     572:	ed e7       	ldi	r30, 0x7D	; 125
     574:	f0 e0       	ldi	r31, 0x00	; 0
     576:	80 81       	ld	r24, Z
     578:	81 60       	ori	r24, 0x01	; 1
     57a:	80 83       	st	Z, r24
     57c:	19 c0       	rjmp	.+50     	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     57e:	87 b7       	in	r24, 0x37	; 55
     580:	84 62       	ori	r24, 0x24	; 36
     582:	87 bf       	out	0x37, r24	; 55
     584:	15 c0       	rjmp	.+42     	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     586:	87 b7       	in	r24, 0x37	; 55
     588:	8c 61       	ori	r24, 0x1C	; 28
     58a:	87 bf       	out	0x37, r24	; 55
     58c:	11 c0       	rjmp	.+34     	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     58e:	87 b7       	in	r24, 0x37	; 55
     590:	8c 61       	ori	r24, 0x1C	; 28
     592:	87 bf       	out	0x37, r24	; 55
     594:	ed e7       	ldi	r30, 0x7D	; 125
     596:	f0 e0       	ldi	r31, 0x00	; 0
     598:	80 81       	ld	r24, Z
     59a:	81 60       	ori	r24, 0x01	; 1
     59c:	80 83       	st	Z, r24
     59e:	08 c0       	rjmp	.+16     	; 0x5b0 <TIMER_COUNTER1enable+0x18e>
     5a0:	87 b7       	in	r24, 0x37	; 55
     5a2:	88 61       	ori	r24, 0x18	; 24
     5a4:	87 bf       	out	0x37, r24	; 55
     5a6:	ed e7       	ldi	r30, 0x7D	; 125
     5a8:	f0 e0       	ldi	r31, 0x00	; 0
     5aa:	80 81       	ld	r24, Z
     5ac:	81 60       	ori	r24, 0x01	; 1
     5ae:	80 83       	st	Z, r24
     5b0:	82 e7       	ldi	r24, 0x72	; 114
     5b2:	91 e0       	ldi	r25, 0x01	; 1
     5b4:	11 96       	adiw	r26, 0x01	; 1
     5b6:	9c 93       	st	X, r25
     5b8:	8e 93       	st	-X, r24
     5ba:	8a e8       	ldi	r24, 0x8A	; 138
     5bc:	91 e0       	ldi	r25, 0x01	; 1
     5be:	13 96       	adiw	r26, 0x03	; 3
     5c0:	9c 93       	st	X, r25
     5c2:	8e 93       	st	-X, r24
     5c4:	12 97       	sbiw	r26, 0x02	; 2
     5c6:	82 ea       	ldi	r24, 0xA2	; 162
     5c8:	91 e0       	ldi	r25, 0x01	; 1
     5ca:	15 96       	adiw	r26, 0x05	; 5
     5cc:	9c 93       	st	X, r25
     5ce:	8e 93       	st	-X, r24
     5d0:	14 97       	sbiw	r26, 0x04	; 4
     5d2:	8a eb       	ldi	r24, 0xBA	; 186
     5d4:	91 e0       	ldi	r25, 0x01	; 1
     5d6:	17 96       	adiw	r26, 0x07	; 7
     5d8:	9c 93       	st	X, r25
     5da:	8e 93       	st	-X, r24
     5dc:	16 97       	sbiw	r26, 0x06	; 6
     5de:	8d eb       	ldi	r24, 0xBD	; 189
     5e0:	91 e0       	ldi	r25, 0x01	; 1
     5e2:	19 96       	adiw	r26, 0x09	; 9
     5e4:	9c 93       	st	X, r25
     5e6:	8e 93       	st	-X, r24
     5e8:	18 97       	sbiw	r26, 0x08	; 8
     5ea:	80 ec       	ldi	r24, 0xC0	; 192
     5ec:	91 e0       	ldi	r25, 0x01	; 1
     5ee:	1b 96       	adiw	r26, 0x0b	; 11
     5f0:	9c 93       	st	X, r25
     5f2:	8e 93       	st	-X, r24
     5f4:	1a 97       	sbiw	r26, 0x0a	; 10
     5f6:	8c e2       	ldi	r24, 0x2C	; 44
     5f8:	91 e0       	ldi	r25, 0x01	; 1
     5fa:	1d 96       	adiw	r26, 0x0d	; 13
     5fc:	9c 93       	st	X, r25
     5fe:	8e 93       	st	-X, r24
     600:	1c 97       	sbiw	r26, 0x0c	; 12
     602:	85 ec       	ldi	r24, 0xC5	; 197
     604:	91 e0       	ldi	r25, 0x01	; 1
     606:	1f 96       	adiw	r26, 0x0f	; 15
     608:	9c 93       	st	X, r25
     60a:	8e 93       	st	-X, r24
     60c:	1e 97       	sbiw	r26, 0x0e	; 14
     60e:	cd 01       	movw	r24, r26
     610:	1f 91       	pop	r17
     612:	0f 91       	pop	r16
     614:	08 95       	ret

00000616 <__vector_16>:
	timer3_state=0;
}
/***Interrupt***/
// So that main will not freeze when not defined, therefore exclude here! before use.
//ISR(TIMER0_COMP_vect){ }
ISR(TIMER0_OVF_vect){ }
     616:	1f 92       	push	r1
     618:	0f 92       	push	r0
     61a:	0f b6       	in	r0, 0x3f	; 63
     61c:	0f 92       	push	r0
     61e:	11 24       	eor	r1, r1
     620:	0f 90       	pop	r0
     622:	0f be       	out	0x3f, r0	; 63
     624:	0f 90       	pop	r0
     626:	1f 90       	pop	r1
     628:	18 95       	reti

0000062a <__vector_11>:
ISR(TIMER1_CAPT_vect){ }
     62a:	1f 92       	push	r1
     62c:	0f 92       	push	r0
     62e:	0f b6       	in	r0, 0x3f	; 63
     630:	0f 92       	push	r0
     632:	11 24       	eor	r1, r1
     634:	0f 90       	pop	r0
     636:	0f be       	out	0x3f, r0	; 63
     638:	0f 90       	pop	r0
     63a:	1f 90       	pop	r1
     63c:	18 95       	reti

0000063e <__vector_13>:
//ISR(TIMER1_COMPA_vect){ }
ISR(TIMER1_COMPB_vect){ }
     63e:	1f 92       	push	r1
     640:	0f 92       	push	r0
     642:	0f b6       	in	r0, 0x3f	; 63
     644:	0f 92       	push	r0
     646:	11 24       	eor	r1, r1
     648:	0f 90       	pop	r0
     64a:	0f be       	out	0x3f, r0	; 63
     64c:	0f 90       	pop	r0
     64e:	1f 90       	pop	r1
     650:	18 95       	reti

00000652 <__vector_24>:
ISR(TIMER1_COMPC_vect){ }
     652:	1f 92       	push	r1
     654:	0f 92       	push	r0
     656:	0f b6       	in	r0, 0x3f	; 63
     658:	0f 92       	push	r0
     65a:	11 24       	eor	r1, r1
     65c:	0f 90       	pop	r0
     65e:	0f be       	out	0x3f, r0	; 63
     660:	0f 90       	pop	r0
     662:	1f 90       	pop	r1
     664:	18 95       	reti

00000666 <__vector_14>:
ISR(TIMER1_OVF_vect){ }
     666:	1f 92       	push	r1
     668:	0f 92       	push	r0
     66a:	0f b6       	in	r0, 0x3f	; 63
     66c:	0f 92       	push	r0
     66e:	11 24       	eor	r1, r1
     670:	0f 90       	pop	r0
     672:	0f be       	out	0x3f, r0	; 63
     674:	0f 90       	pop	r0
     676:	1f 90       	pop	r1
     678:	18 95       	reti

0000067a <__vector_10>:
ISR(TIMER2_OVF_vect){ }
     67a:	1f 92       	push	r1
     67c:	0f 92       	push	r0
     67e:	0f b6       	in	r0, 0x3f	; 63
     680:	0f 92       	push	r0
     682:	11 24       	eor	r1, r1
     684:	0f 90       	pop	r0
     686:	0f be       	out	0x3f, r0	; 63
     688:	0f 90       	pop	r0
     68a:	1f 90       	pop	r1
     68c:	18 95       	reti

0000068e <__vector_25>:
ISR(TIMER3_CAPT_vect){ }
     68e:	1f 92       	push	r1
     690:	0f 92       	push	r0
     692:	0f b6       	in	r0, 0x3f	; 63
     694:	0f 92       	push	r0
     696:	11 24       	eor	r1, r1
     698:	0f 90       	pop	r0
     69a:	0f be       	out	0x3f, r0	; 63
     69c:	0f 90       	pop	r0
     69e:	1f 90       	pop	r1
     6a0:	18 95       	reti

000006a2 <__vector_26>:
ISR(TIMER3_COMPA_vect){ }
     6a2:	1f 92       	push	r1
     6a4:	0f 92       	push	r0
     6a6:	0f b6       	in	r0, 0x3f	; 63
     6a8:	0f 92       	push	r0
     6aa:	11 24       	eor	r1, r1
     6ac:	0f 90       	pop	r0
     6ae:	0f be       	out	0x3f, r0	; 63
     6b0:	0f 90       	pop	r0
     6b2:	1f 90       	pop	r1
     6b4:	18 95       	reti

000006b6 <__vector_27>:
ISR(TIMER3_COMPB_vect){ }
     6b6:	1f 92       	push	r1
     6b8:	0f 92       	push	r0
     6ba:	0f b6       	in	r0, 0x3f	; 63
     6bc:	0f 92       	push	r0
     6be:	11 24       	eor	r1, r1
     6c0:	0f 90       	pop	r0
     6c2:	0f be       	out	0x3f, r0	; 63
     6c4:	0f 90       	pop	r0
     6c6:	1f 90       	pop	r1
     6c8:	18 95       	reti

000006ca <__vector_28>:
ISR(TIMER3_COMPC_vect){ }
     6ca:	1f 92       	push	r1
     6cc:	0f 92       	push	r0
     6ce:	0f b6       	in	r0, 0x3f	; 63
     6d0:	0f 92       	push	r0
     6d2:	11 24       	eor	r1, r1
     6d4:	0f 90       	pop	r0
     6d6:	0f be       	out	0x3f, r0	; 63
     6d8:	0f 90       	pop	r0
     6da:	1f 90       	pop	r1
     6dc:	18 95       	reti

000006de <__vector_29>:
ISR(TIMER3_OVF_vect){ }
     6de:	1f 92       	push	r1
     6e0:	0f 92       	push	r0
     6e2:	0f b6       	in	r0, 0x3f	; 63
     6e4:	0f 92       	push	r0
     6e6:	11 24       	eor	r1, r1
     6e8:	0f 90       	pop	r0
     6ea:	0f be       	out	0x3f, r0	; 63
     6ec:	0f 90       	pop	r0
     6ee:	1f 90       	pop	r1
     6f0:	18 95       	reti

000006f2 <EEPROMenable>:
#include "eeprom.h"
/***Constant & Macro***/
/***Global File Variable***/
/***Header***/
/***Procedure & Function***/
EEPROM EEPROMenable(void){
     6f2:	fc 01       	movw	r30, r24
	eprom.write_float=eeprom_write_float;
	eprom.update_float=eeprom_update_float;
	eprom.read_block=eeprom_read_block;
	eprom.write_block=eeprom_write_block;
	eprom.update_block=eeprom_update_block;
	return eprom;
     6f4:	89 eb       	ldi	r24, 0xB9	; 185
     6f6:	95 e1       	ldi	r25, 0x15	; 21
     6f8:	91 83       	std	Z+1, r25	; 0x01
     6fa:	80 83       	st	Z, r24
     6fc:	8b ef       	ldi	r24, 0xFB	; 251
     6fe:	95 e1       	ldi	r25, 0x15	; 21
     700:	93 83       	std	Z+3, r25	; 0x03
     702:	82 83       	std	Z+2, r24	; 0x02
     704:	85 ed       	ldi	r24, 0xD5	; 213
     706:	95 e1       	ldi	r25, 0x15	; 21
     708:	95 83       	std	Z+5, r25	; 0x05
     70a:	84 83       	std	Z+4, r24	; 0x04
     70c:	81 ec       	ldi	r24, 0xC1	; 193
     70e:	95 e1       	ldi	r25, 0x15	; 21
     710:	97 83       	std	Z+7, r25	; 0x07
     712:	86 83       	std	Z+6, r24	; 0x06
     714:	8d e0       	ldi	r24, 0x0D	; 13
     716:	96 e1       	ldi	r25, 0x16	; 22
     718:	91 87       	std	Z+9, r25	; 0x09
     71a:	80 87       	std	Z+8, r24	; 0x08
     71c:	8e ee       	ldi	r24, 0xEE	; 238
     71e:	95 e1       	ldi	r25, 0x15	; 21
     720:	93 87       	std	Z+11, r25	; 0x0b
     722:	82 87       	std	Z+10, r24	; 0x0a
     724:	88 e0       	ldi	r24, 0x08	; 8
     726:	96 e1       	ldi	r25, 0x16	; 22
     728:	97 87       	std	Z+15, r25	; 0x0f
     72a:	86 87       	std	Z+14, r24	; 0x0e
     72c:	88 e0       	ldi	r24, 0x08	; 8
     72e:	96 e1       	ldi	r25, 0x16	; 22
     730:	95 8b       	std	Z+21, r25	; 0x15
     732:	84 8b       	std	Z+20, r24	; 0x14
     734:	86 ee       	ldi	r24, 0xE6	; 230
     736:	95 e1       	ldi	r25, 0x15	; 21
     738:	97 8b       	std	Z+23, r25	; 0x17
     73a:	86 8b       	std	Z+22, r24	; 0x16
     73c:	89 ea       	ldi	r24, 0xA9	; 169
     73e:	95 e1       	ldi	r25, 0x15	; 21
     740:	91 8f       	std	Z+25, r25	; 0x19
     742:	80 8f       	std	Z+24, r24	; 0x18
     744:	82 ef       	ldi	r24, 0xF2	; 242
     746:	95 e1       	ldi	r25, 0x15	; 21
     748:	93 8f       	std	Z+27, r25	; 0x1b
     74a:	82 8f       	std	Z+26, r24	; 0x1a
     74c:	86 ec       	ldi	r24, 0xC6	; 198
     74e:	95 e1       	ldi	r25, 0x15	; 21
     750:	95 8f       	std	Z+29, r25	; 0x1d
     752:	84 8f       	std	Z+28, r24	; 0x1c
}
     754:	cf 01       	movw	r24, r30
     756:	08 95       	ret

00000758 <EXPLODEboot>:
	/******/
	return explode;
}
// boot
void EXPLODEboot(EXPLODE* self, uint8_t x)
{
     758:	fc 01       	movw	r30, r24
	self->XI = self->XF;
     75a:	82 81       	ldd	r24, Z+2	; 0x02
     75c:	93 81       	ldd	r25, Z+3	; 0x03
     75e:	91 83       	std	Z+1, r25	; 0x01
     760:	80 83       	st	Z, r24
	self->XF = x;
     762:	70 e0       	ldi	r23, 0x00	; 0
     764:	73 83       	std	Z+3, r23	; 0x03
     766:	62 83       	std	Z+2, r22	; 0x02
     768:	08 95       	ret

0000076a <EXPLODEhh>:
	trans = diff & self->XF;
	return (trans << nbits) | diff;
}
// hh
uint8_t EXPLODEhh(EXPLODE* self)
{
     76a:	fc 01       	movw	r30, r24
	uint8_t i;
	i = self->XI & self->XF;
	return i;
     76c:	90 81       	ld	r25, Z
     76e:	82 81       	ldd	r24, Z+2	; 0x02
}
     770:	89 23       	and	r24, r25
     772:	08 95       	ret

00000774 <EXPLODEll>:
// ll
uint8_t EXPLODEll(EXPLODE* self)
{
     774:	fc 01       	movw	r30, r24
	uint8_t i;
	i = self->XI | self->XF;
	return ~i;
     776:	90 81       	ld	r25, Z
     778:	82 81       	ldd	r24, Z+2	; 0x02
     77a:	89 2b       	or	r24, r25
}
     77c:	80 95       	com	r24
     77e:	08 95       	ret

00000780 <EXPLODElh>:
// lh
uint8_t EXPLODElh(EXPLODE* self)
{
     780:	fc 01       	movw	r30, r24
	uint8_t i;
	i = self->XI ^ self->XF;
     782:	92 81       	ldd	r25, Z+2	; 0x02
     784:	80 81       	ld	r24, Z
     786:	89 27       	eor	r24, r25
	i &= self->XF;
	return i;
}
     788:	89 23       	and	r24, r25
     78a:	08 95       	ret

0000078c <EXPLODEhl>:
// hl
uint8_t EXPLODEhl(EXPLODE* self)
{
     78c:	fc 01       	movw	r30, r24
	uint8_t i;
	i = self->XF ^ self->XI;
     78e:	90 81       	ld	r25, Z
     790:	82 81       	ldd	r24, Z+2	; 0x02
     792:	89 27       	eor	r24, r25
	i &= self->XI;
	return i;
}
     794:	89 23       	and	r24, r25
     796:	08 95       	ret

00000798 <EXPLODEdiff>:
// diff
uint8_t EXPLODEdiff(EXPLODE* self)
{
     798:	fc 01       	movw	r30, r24
	return self->XF ^ self->XI;
     79a:	92 81       	ldd	r25, Z+2	; 0x02
     79c:	80 81       	ld	r24, Z
}
     79e:	89 27       	eor	r24, r25
     7a0:	08 95       	ret

000007a2 <EXPLODEdata>:
uint8_t EXPLODEdata(EXPLODE* self)
{
	return self->XF;	
}
     7a2:	fc 01       	movw	r30, r24
     7a4:	82 81       	ldd	r24, Z+2	; 0x02
     7a6:	08 95       	ret

000007a8 <EXPLODEmayia>:
	self->XI = self->XF;
	self->XF = x;
}
// mayia
uint8_t EXPLODEmayia(EXPLODE* self, uint8_t nbits)
{//magic formula
     7a8:	dc 01       	movw	r26, r24
// power: raise base to n-th power; n >= 0
uint8_t EXPLODEPwr(uint8_t bs, uint8_t n)
{
	uint8_t i, p;
	p = ONE;
	for (i = ONE; i <= n; ++i)
     7aa:	66 23       	and	r22, r22
     7ac:	39 f0       	breq	.+14     	; 0x7bc <EXPLODEmayia+0x14>
     7ae:	91 e0       	ldi	r25, 0x01	; 1
     7b0:	21 e0       	ldi	r18, 0x01	; 1
	p = p * bs;
     7b2:	22 0f       	add	r18, r18
// power: raise base to n-th power; n >= 0
uint8_t EXPLODEPwr(uint8_t bs, uint8_t n)
{
	uint8_t i, p;
	p = ONE;
	for (i = ONE; i <= n; ++i)
     7b4:	9f 5f       	subi	r25, 0xFF	; 255
     7b6:	69 17       	cp	r22, r25
     7b8:	e0 f7       	brcc	.-8      	; 0x7b2 <EXPLODEmayia+0xa>
     7ba:	01 c0       	rjmp	.+2      	; 0x7be <EXPLODEmayia+0x16>
/*******************************************************************/
// power: raise base to n-th power; n >= 0
uint8_t EXPLODEPwr(uint8_t bs, uint8_t n)
{
	uint8_t i, p;
	p = ONE;
     7bc:	21 e0       	ldi	r18, 0x01	; 1
uint8_t EXPLODEmayia(EXPLODE* self, uint8_t nbits)
{//magic formula
	unsigned int mask;
	unsigned int diff;
	unsigned int trans;
	mask = EXPLODEPwr(2,nbits)-ONE;
     7be:	30 e0       	ldi	r19, 0x00	; 0
     7c0:	21 50       	subi	r18, 0x01	; 1
     7c2:	31 09       	sbc	r19, r1
	self->XI &= mask;
     7c4:	ed 91       	ld	r30, X+
     7c6:	fc 91       	ld	r31, X
     7c8:	11 97       	sbiw	r26, 0x01	; 1
     7ca:	e2 23       	and	r30, r18
     7cc:	f3 23       	and	r31, r19
     7ce:	11 96       	adiw	r26, 0x01	; 1
     7d0:	fc 93       	st	X, r31
     7d2:	ee 93       	st	-X, r30
	self->XF &= mask;
     7d4:	12 96       	adiw	r26, 0x02	; 2
     7d6:	4d 91       	ld	r20, X+
     7d8:	5c 91       	ld	r21, X
     7da:	13 97       	sbiw	r26, 0x03	; 3
     7dc:	24 23       	and	r18, r20
     7de:	35 23       	and	r19, r21
     7e0:	13 96       	adiw	r26, 0x03	; 3
     7e2:	3c 93       	st	X, r19
     7e4:	2e 93       	st	-X, r18
     7e6:	12 97       	sbiw	r26, 0x02	; 2
	diff = self->XF ^ self->XI;
     7e8:	cf 01       	movw	r24, r30
     7ea:	82 27       	eor	r24, r18
     7ec:	93 27       	eor	r25, r19
	trans = diff & self->XF;
	return (trans << nbits) | diff;
     7ee:	28 23       	and	r18, r24
     7f0:	39 23       	and	r19, r25
     7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <EXPLODEmayia+0x50>
     7f4:	22 0f       	add	r18, r18
     7f6:	33 1f       	adc	r19, r19
     7f8:	6a 95       	dec	r22
     7fa:	e2 f7       	brpl	.-8      	; 0x7f4 <EXPLODEmayia+0x4c>
}
     7fc:	82 2b       	or	r24, r18
     7fe:	08 95       	ret

00000800 <EXPLODEenable>:
uint8_t EXPLODEhl(EXPLODE* self);
uint8_t EXPLODEdiff(EXPLODE* self);
uint8_t EXPLODEdata(EXPLODE* self);
/***Procedure & Function***/
EXPLODE EXPLODEenable( void )
{
     800:	fc 01       	movw	r30, r24
	uint8_t tSREG;
	tSREG = STATUS_REGISTER;
     802:	9f b7       	in	r25, 0x3f	; 63
	STATUS_REGISTER &= ~(ONE<<GLOBAL_INTERRUPT_ENABLE);
     804:	8f b7       	in	r24, 0x3f	; 63
     806:	8f 77       	andi	r24, 0x7F	; 127
     808:	8f bf       	out	0x3f, r24	; 63
	explode.ll = EXPLODEll;
	explode.lh = EXPLODElh;
	explode.hl = EXPLODEhl;
	explode.diff = EXPLODEdiff;
	explode.data = EXPLODEdata;
	STATUS_REGISTER = tSREG;
     80a:	9f bf       	out	0x3f, r25	; 63
	/******/
	return explode;
     80c:	11 82       	std	Z+1, r1	; 0x01
     80e:	10 82       	st	Z, r1
     810:	13 82       	std	Z+3, r1	; 0x03
     812:	12 82       	std	Z+2, r1	; 0x02
     814:	8c ea       	ldi	r24, 0xAC	; 172
     816:	93 e0       	ldi	r25, 0x03	; 3
     818:	95 83       	std	Z+5, r25	; 0x05
     81a:	84 83       	std	Z+4, r24	; 0x04
     81c:	84 ed       	ldi	r24, 0xD4	; 212
     81e:	93 e0       	ldi	r25, 0x03	; 3
     820:	97 83       	std	Z+7, r25	; 0x07
     822:	86 83       	std	Z+6, r24	; 0x06
     824:	85 eb       	ldi	r24, 0xB5	; 181
     826:	93 e0       	ldi	r25, 0x03	; 3
     828:	91 87       	std	Z+9, r25	; 0x09
     82a:	80 87       	std	Z+8, r24	; 0x08
     82c:	8a eb       	ldi	r24, 0xBA	; 186
     82e:	93 e0       	ldi	r25, 0x03	; 3
     830:	93 87       	std	Z+11, r25	; 0x0b
     832:	82 87       	std	Z+10, r24	; 0x0a
     834:	80 ec       	ldi	r24, 0xC0	; 192
     836:	93 e0       	ldi	r25, 0x03	; 3
     838:	95 87       	std	Z+13, r25	; 0x0d
     83a:	84 87       	std	Z+12, r24	; 0x0c
     83c:	86 ec       	ldi	r24, 0xC6	; 198
     83e:	93 e0       	ldi	r25, 0x03	; 3
     840:	97 87       	std	Z+15, r25	; 0x0f
     842:	86 87       	std	Z+14, r24	; 0x0e
     844:	8c ec       	ldi	r24, 0xCC	; 204
     846:	93 e0       	ldi	r25, 0x03	; 3
     848:	91 8b       	std	Z+17, r25	; 0x11
     84a:	80 8b       	std	Z+16, r24	; 0x10
     84c:	81 ed       	ldi	r24, 0xD1	; 209
     84e:	93 e0       	ldi	r25, 0x03	; 3
     850:	93 8b       	std	Z+19, r25	; 0x13
     852:	82 8b       	std	Z+18, r24	; 0x12
}
     854:	cf 01       	movw	r24, r30
     856:	08 95       	ret

00000858 <FUNCpinmatch>:
	return i;
}
uint8_t  bintobcd(uint8_t bin)
{
	return (((bin) / 10) << 4) + ((bin) % 10);
}
     858:	68 23       	and	r22, r24
     85a:	44 23       	and	r20, r20
     85c:	21 f0       	breq	.+8      	; 0x866 <FUNCpinmatch+0xe>
     85e:	86 17       	cp	r24, r22
     860:	21 f0       	breq	.+8      	; 0x86a <FUNCpinmatch+0x12>
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	08 95       	ret
     866:	61 11       	cpse	r22, r1
     868:	80 e0       	ldi	r24, 0x00	; 0
     86a:	08 95       	ret

0000086c <FUNChmerge>:
     86c:	86 2b       	or	r24, r22
     86e:	08 95       	ret

00000870 <FUNClmerge>:
     870:	86 23       	and	r24, r22
     872:	08 95       	ret

00000874 <FUNChh>:
     874:	86 23       	and	r24, r22
     876:	08 95       	ret

00000878 <FUNCll>:
     878:	86 2b       	or	r24, r22
     87a:	80 95       	com	r24
     87c:	08 95       	ret

0000087e <FUNClh>:
     87e:	86 27       	eor	r24, r22
     880:	86 23       	and	r24, r22
     882:	08 95       	ret

00000884 <FUNChl>:
     884:	60 95       	com	r22
     886:	86 23       	and	r24, r22
     888:	08 95       	ret

0000088a <FUNCdiff>:
     88a:	86 27       	eor	r24, r22
     88c:	08 95       	ret

0000088e <FUNCswap>:
     88e:	cf 92       	push	r12
     890:	df 92       	push	r13
     892:	ef 92       	push	r14
     894:	ff 92       	push	r15
     896:	0f 93       	push	r16
     898:	1f 93       	push	r17
     89a:	fc 01       	movw	r30, r24
     89c:	00 81       	ld	r16, Z
     89e:	11 81       	ldd	r17, Z+1	; 0x01
     8a0:	22 81       	ldd	r18, Z+2	; 0x02
     8a2:	33 81       	ldd	r19, Z+3	; 0x03
     8a4:	fb 01       	movw	r30, r22
     8a6:	c0 80       	ld	r12, Z
     8a8:	d1 80       	ldd	r13, Z+1	; 0x01
     8aa:	e2 80       	ldd	r14, Z+2	; 0x02
     8ac:	f3 80       	ldd	r15, Z+3	; 0x03
     8ae:	fc 01       	movw	r30, r24
     8b0:	c0 82       	st	Z, r12
     8b2:	d1 82       	std	Z+1, r13	; 0x01
     8b4:	e2 82       	std	Z+2, r14	; 0x02
     8b6:	f3 82       	std	Z+3, r15	; 0x03
     8b8:	fb 01       	movw	r30, r22
     8ba:	00 83       	st	Z, r16
     8bc:	11 83       	std	Z+1, r17	; 0x01
     8be:	22 83       	std	Z+2, r18	; 0x02
     8c0:	33 83       	std	Z+3, r19	; 0x03
     8c2:	1f 91       	pop	r17
     8c4:	0f 91       	pop	r16
     8c6:	ff 90       	pop	r15
     8c8:	ef 90       	pop	r14
     8ca:	df 90       	pop	r13
     8cc:	cf 90       	pop	r12
     8ce:	08 95       	ret

000008d0 <FUNCcopy>:
     8d0:	fb 01       	movw	r30, r22
     8d2:	20 81       	ld	r18, Z
     8d4:	fc 01       	movw	r30, r24
     8d6:	20 83       	st	Z, r18
     8d8:	22 23       	and	r18, r18
     8da:	39 f0       	breq	.+14     	; 0x8ea <FUNCcopy+0x1a>
     8dc:	db 01       	movw	r26, r22
     8de:	11 96       	adiw	r26, 0x01	; 1
     8e0:	31 96       	adiw	r30, 0x01	; 1
     8e2:	9d 91       	ld	r25, X+
     8e4:	91 93       	st	Z+, r25
     8e6:	91 11       	cpse	r25, r1
     8e8:	fc cf       	rjmp	.-8      	; 0x8e2 <FUNCcopy+0x12>
     8ea:	08 95       	ret

000008ec <FUNCsqueeze>:
     8ec:	cf 93       	push	r28
     8ee:	df 93       	push	r29
     8f0:	ec 01       	movw	r28, r24
     8f2:	98 81       	ld	r25, Y
     8f4:	99 23       	and	r25, r25
     8f6:	99 f0       	breq	.+38     	; 0x91e <FUNCsqueeze+0x32>
     8f8:	fe 01       	movw	r30, r28
     8fa:	31 96       	adiw	r30, 0x01	; 1
     8fc:	20 e0       	ldi	r18, 0x00	; 0
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	49 2f       	mov	r20, r25
     902:	50 e0       	ldi	r21, 0x00	; 0
     904:	46 17       	cp	r20, r22
     906:	57 07       	cpc	r21, r23
     908:	31 f0       	breq	.+12     	; 0x916 <FUNCsqueeze+0x2a>
     90a:	de 01       	movw	r26, r28
     90c:	a2 0f       	add	r26, r18
     90e:	b3 1f       	adc	r27, r19
     910:	9c 93       	st	X, r25
     912:	2f 5f       	subi	r18, 0xFF	; 255
     914:	3f 4f       	sbci	r19, 0xFF	; 255
     916:	91 91       	ld	r25, Z+
     918:	91 11       	cpse	r25, r1
     91a:	f2 cf       	rjmp	.-28     	; 0x900 <FUNCsqueeze+0x14>
     91c:	02 c0       	rjmp	.+4      	; 0x922 <FUNCsqueeze+0x36>
     91e:	20 e0       	ldi	r18, 0x00	; 0
     920:	30 e0       	ldi	r19, 0x00	; 0
     922:	fe 01       	movw	r30, r28
     924:	e2 0f       	add	r30, r18
     926:	f3 1f       	adc	r31, r19
     928:	10 82       	st	Z, r1
     92a:	df 91       	pop	r29
     92c:	cf 91       	pop	r28
     92e:	08 95       	ret

00000930 <FUNCshellsort>:
     930:	2f 92       	push	r2
     932:	3f 92       	push	r3
     934:	4f 92       	push	r4
     936:	5f 92       	push	r5
     938:	6f 92       	push	r6
     93a:	7f 92       	push	r7
     93c:	8f 92       	push	r8
     93e:	9f 92       	push	r9
     940:	af 92       	push	r10
     942:	bf 92       	push	r11
     944:	cf 92       	push	r12
     946:	df 92       	push	r13
     948:	ef 92       	push	r14
     94a:	ff 92       	push	r15
     94c:	0f 93       	push	r16
     94e:	1f 93       	push	r17
     950:	cf 93       	push	r28
     952:	df 93       	push	r29
     954:	00 d0       	rcall	.+0      	; 0x956 <FUNCshellsort+0x26>
     956:	00 d0       	rcall	.+0      	; 0x958 <FUNCshellsort+0x28>
     958:	cd b7       	in	r28, 0x3d	; 61
     95a:	de b7       	in	r29, 0x3e	; 62
     95c:	2c 01       	movw	r4, r24
     95e:	1b 01       	movw	r2, r22
     960:	4b 01       	movw	r8, r22
     962:	77 23       	and	r23, r23
     964:	1c f4       	brge	.+6      	; 0x96c <FUNCshellsort+0x3c>
     966:	2f ef       	ldi	r18, 0xFF	; 255
     968:	82 1a       	sub	r8, r18
     96a:	92 0a       	sbc	r9, r18
     96c:	95 94       	asr	r9
     96e:	87 94       	ror	r8
     970:	18 14       	cp	r1, r8
     972:	19 04       	cpc	r1, r9
     974:	0c f4       	brge	.+2      	; 0x978 <FUNCshellsort+0x48>
     976:	51 c0       	rjmp	.+162    	; 0xa1a <FUNCshellsort+0xea>
     978:	6a c0       	rjmp	.+212    	; 0xa4e <FUNCshellsort+0x11e>
     97a:	96 01       	movw	r18, r12
     97c:	dd 20       	and	r13, r13
     97e:	9c f1       	brlt	.+102    	; 0x9e6 <FUNCshellsort+0xb6>
     980:	f5 01       	movw	r30, r10
     982:	40 81       	ld	r20, Z
     984:	51 81       	ldd	r21, Z+1	; 0x01
     986:	f4 01       	movw	r30, r8
     988:	60 81       	ld	r22, Z
     98a:	71 81       	ldd	r23, Z+1	; 0x01
     98c:	64 17       	cp	r22, r20
     98e:	75 07       	cpc	r23, r21
     990:	54 f5       	brge	.+84     	; 0x9e6 <FUNCshellsort+0xb6>
     992:	8c 01       	movw	r16, r24
     994:	0a 0d       	add	r16, r10
     996:	1b 1d       	adc	r17, r11
     998:	d4 01       	movw	r26, r8
     99a:	bc 82       	std	Y+4, r11	; 0x04
     99c:	ab 82       	std	Y+3, r10	; 0x03
     99e:	ba 82       	std	Y+2, r11	; 0x02
     9a0:	a9 82       	std	Y+1, r10	; 0x01
     9a2:	eb 81       	ldd	r30, Y+3	; 0x03
     9a4:	fc 81       	ldd	r31, Y+4	; 0x04
     9a6:	71 83       	std	Z+1, r23	; 0x01
     9a8:	60 83       	st	Z, r22
     9aa:	11 96       	adiw	r26, 0x01	; 1
     9ac:	5c 93       	st	X, r21
     9ae:	4e 93       	st	-X, r20
     9b0:	2e 19       	sub	r18, r14
     9b2:	3f 09       	sbc	r19, r15
     9b4:	c2 f0       	brmi	.+48     	; 0x9e6 <FUNCshellsort+0xb6>
     9b6:	f8 01       	movw	r30, r16
     9b8:	40 81       	ld	r20, Z
     9ba:	51 81       	ldd	r21, Z+1	; 0x01
     9bc:	e9 81       	ldd	r30, Y+1	; 0x01
     9be:	fa 81       	ldd	r31, Y+2	; 0x02
     9c0:	60 81       	ld	r22, Z
     9c2:	71 81       	ldd	r23, Z+1	; 0x01
     9c4:	08 0f       	add	r16, r24
     9c6:	19 1f       	adc	r17, r25
     9c8:	e8 0f       	add	r30, r24
     9ca:	f9 1f       	adc	r31, r25
     9cc:	fa 83       	std	Y+2, r31	; 0x02
     9ce:	e9 83       	std	Y+1, r30	; 0x01
     9d0:	eb 81       	ldd	r30, Y+3	; 0x03
     9d2:	fc 81       	ldd	r31, Y+4	; 0x04
     9d4:	e8 0f       	add	r30, r24
     9d6:	f9 1f       	adc	r31, r25
     9d8:	fc 83       	std	Y+4, r31	; 0x04
     9da:	eb 83       	std	Y+3, r30	; 0x03
     9dc:	a8 0f       	add	r26, r24
     9de:	b9 1f       	adc	r27, r25
     9e0:	64 17       	cp	r22, r20
     9e2:	75 07       	cpc	r23, r21
     9e4:	f4 f2       	brlt	.-68     	; 0x9a2 <FUNCshellsort+0x72>
     9e6:	ff ef       	ldi	r31, 0xFF	; 255
     9e8:	cf 1a       	sub	r12, r31
     9ea:	df 0a       	sbc	r13, r31
     9ec:	22 e0       	ldi	r18, 0x02	; 2
     9ee:	a2 0e       	add	r10, r18
     9f0:	b1 1c       	adc	r11, r1
     9f2:	e2 e0       	ldi	r30, 0x02	; 2
     9f4:	8e 0e       	add	r8, r30
     9f6:	91 1c       	adc	r9, r1
     9f8:	c6 14       	cp	r12, r6
     9fa:	d7 04       	cpc	r13, r7
     9fc:	09 f0       	breq	.+2      	; 0xa00 <FUNCshellsort+0xd0>
     9fe:	bd cf       	rjmp	.-134    	; 0x97a <FUNCshellsort+0x4a>
     a00:	47 01       	movw	r8, r14
     a02:	ff 20       	and	r15, r15
     a04:	1c f4       	brge	.+6      	; 0xa0c <FUNCshellsort+0xdc>
     a06:	ff ef       	ldi	r31, 0xFF	; 255
     a08:	8f 1a       	sub	r8, r31
     a0a:	9f 0a       	sbc	r9, r31
     a0c:	95 94       	asr	r9
     a0e:	87 94       	ror	r8
     a10:	18 14       	cp	r1, r8
     a12:	19 04       	cpc	r1, r9
     a14:	e4 f4       	brge	.+56     	; 0xa4e <FUNCshellsort+0x11e>
     a16:	74 01       	movw	r14, r8
     a18:	01 c0       	rjmp	.+2      	; 0xa1c <FUNCshellsort+0xec>
     a1a:	74 01       	movw	r14, r8
     a1c:	82 14       	cp	r8, r2
     a1e:	93 04       	cpc	r9, r3
     a20:	7c f7       	brge	.-34     	; 0xa00 <FUNCshellsort+0xd0>
     a22:	64 01       	movw	r12, r8
     a24:	ce 18       	sub	r12, r14
     a26:	df 08       	sbc	r13, r15
     a28:	56 01       	movw	r10, r12
     a2a:	aa 0c       	add	r10, r10
     a2c:	bb 1c       	adc	r11, r11
     a2e:	a4 0c       	add	r10, r4
     a30:	b5 1c       	adc	r11, r5
     a32:	88 0c       	add	r8, r8
     a34:	99 1c       	adc	r9, r9
     a36:	84 0c       	add	r8, r4
     a38:	95 1c       	adc	r9, r5
     a3a:	31 01       	movw	r6, r2
     a3c:	6e 18       	sub	r6, r14
     a3e:	7f 08       	sbc	r7, r15
     a40:	c7 01       	movw	r24, r14
     a42:	88 0f       	add	r24, r24
     a44:	99 1f       	adc	r25, r25
     a46:	91 95       	neg	r25
     a48:	81 95       	neg	r24
     a4a:	91 09       	sbc	r25, r1
     a4c:	96 cf       	rjmp	.-212    	; 0x97a <FUNCshellsort+0x4a>
     a4e:	0f 90       	pop	r0
     a50:	0f 90       	pop	r0
     a52:	0f 90       	pop	r0
     a54:	0f 90       	pop	r0
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	0f 91       	pop	r16
     a5e:	ff 90       	pop	r15
     a60:	ef 90       	pop	r14
     a62:	df 90       	pop	r13
     a64:	cf 90       	pop	r12
     a66:	bf 90       	pop	r11
     a68:	af 90       	pop	r10
     a6a:	9f 90       	pop	r9
     a6c:	8f 90       	pop	r8
     a6e:	7f 90       	pop	r7
     a70:	6f 90       	pop	r6
     a72:	5f 90       	pop	r5
     a74:	4f 90       	pop	r4
     a76:	3f 90       	pop	r3
     a78:	2f 90       	pop	r2
     a7a:	08 95       	ret

00000a7c <FUNCpmax>:
     a7c:	86 17       	cp	r24, r22
     a7e:	97 07       	cpc	r25, r23
     a80:	0c f4       	brge	.+2      	; 0xa84 <FUNCpmax+0x8>
     a82:	cb 01       	movw	r24, r22
     a84:	08 95       	ret

00000a86 <FUNCgcd>:
     a86:	9b 01       	movw	r18, r22
     a88:	67 2b       	or	r22, r23
     a8a:	11 f4       	brne	.+4      	; 0xa90 <FUNCgcd+0xa>
     a8c:	08 95       	ret
     a8e:	9a 01       	movw	r18, r20
     a90:	b9 01       	movw	r22, r18
     a92:	0e 94 22 15 	call	0x2a44	; 0x2a44 <__divmodhi4>
     a96:	ac 01       	movw	r20, r24
     a98:	82 2f       	mov	r24, r18
     a9a:	93 2f       	mov	r25, r19
     a9c:	41 15       	cp	r20, r1
     a9e:	51 05       	cpc	r21, r1
     aa0:	b1 f7       	brne	.-20     	; 0xa8e <FUNCgcd+0x8>
     aa2:	08 95       	ret

00000aa4 <FUNCstrToInt>:
     aa4:	fc 01       	movw	r30, r24
     aa6:	90 81       	ld	r25, Z
     aa8:	80 ed       	ldi	r24, 0xD0	; 208
     aaa:	89 0f       	add	r24, r25
     aac:	8a 30       	cpi	r24, 0x0A	; 10
     aae:	d0 f4       	brcc	.+52     	; 0xae4 <FUNCstrToInt+0x40>
     ab0:	31 96       	adiw	r30, 0x01	; 1
     ab2:	20 e0       	ldi	r18, 0x00	; 0
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	a9 01       	movw	r20, r18
     ab8:	44 0f       	add	r20, r20
     aba:	55 1f       	adc	r21, r21
     abc:	22 0f       	add	r18, r18
     abe:	33 1f       	adc	r19, r19
     ac0:	22 0f       	add	r18, r18
     ac2:	33 1f       	adc	r19, r19
     ac4:	22 0f       	add	r18, r18
     ac6:	33 1f       	adc	r19, r19
     ac8:	42 0f       	add	r20, r18
     aca:	53 1f       	adc	r21, r19
     acc:	29 2f       	mov	r18, r25
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	20 53       	subi	r18, 0x30	; 48
     ad2:	31 09       	sbc	r19, r1
     ad4:	24 0f       	add	r18, r20
     ad6:	35 1f       	adc	r19, r21
     ad8:	91 91       	ld	r25, Z+
     ada:	80 ed       	ldi	r24, 0xD0	; 208
     adc:	89 0f       	add	r24, r25
     ade:	8a 30       	cpi	r24, 0x0A	; 10
     ae0:	50 f3       	brcs	.-44     	; 0xab6 <FUNCstrToInt+0x12>
     ae2:	02 c0       	rjmp	.+4      	; 0xae8 <FUNCstrToInt+0x44>
     ae4:	20 e0       	ldi	r18, 0x00	; 0
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	c9 01       	movw	r24, r18
     aea:	08 95       	ret

00000aec <FUNCfilter>:
     aec:	86 23       	and	r24, r22
     aee:	08 95       	ret

00000af0 <FUNCticks>:
     af0:	00 97       	sbiw	r24, 0x00	; 0
     af2:	39 f0       	breq	.+14     	; 0xb02 <FUNCticks+0x12>
     af4:	20 e0       	ldi	r18, 0x00	; 0
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	2f 5f       	subi	r18, 0xFF	; 255
     afa:	3f 4f       	sbci	r19, 0xFF	; 255
     afc:	82 17       	cp	r24, r18
     afe:	93 07       	cpc	r25, r19
     b00:	d9 f7       	brne	.-10     	; 0xaf8 <FUNCticks+0x8>
     b02:	08 95       	ret

00000b04 <FUNCtwocomptoint8bit>:
     b04:	87 ff       	sbrs	r24, 7
     b06:	08 c0       	rjmp	.+16     	; 0xb18 <FUNCtwocomptoint8bit+0x14>
     b08:	91 95       	neg	r25
     b0a:	81 95       	neg	r24
     b0c:	91 09       	sbc	r25, r1
     b0e:	99 27       	eor	r25, r25
     b10:	91 95       	neg	r25
     b12:	81 95       	neg	r24
     b14:	91 09       	sbc	r25, r1
     b16:	08 95       	ret
     b18:	8f 77       	andi	r24, 0x7F	; 127
     b1a:	99 27       	eor	r25, r25
     b1c:	08 95       	ret

00000b1e <FUNCtwocomptoint10bit>:
     b1e:	91 ff       	sbrs	r25, 1
     b20:	08 c0       	rjmp	.+16     	; 0xb32 <FUNCtwocomptoint10bit+0x14>
     b22:	91 95       	neg	r25
     b24:	81 95       	neg	r24
     b26:	91 09       	sbc	r25, r1
     b28:	93 70       	andi	r25, 0x03	; 3
     b2a:	91 95       	neg	r25
     b2c:	81 95       	neg	r24
     b2e:	91 09       	sbc	r25, r1
     b30:	08 95       	ret
     b32:	91 70       	andi	r25, 0x01	; 1
     b34:	08 95       	ret

00000b36 <FUNCtwocomptointnbit>:
     b36:	61 50       	subi	r22, 0x01	; 1
     b38:	21 e0       	ldi	r18, 0x01	; 1
     b3a:	30 e0       	ldi	r19, 0x00	; 0
     b3c:	02 c0       	rjmp	.+4      	; 0xb42 <FUNCtwocomptointnbit+0xc>
     b3e:	22 0f       	add	r18, r18
     b40:	33 1f       	adc	r19, r19
     b42:	6a 95       	dec	r22
     b44:	e2 f7       	brpl	.-8      	; 0xb3e <FUNCtwocomptointnbit+0x8>
     b46:	a9 01       	movw	r20, r18
     b48:	41 50       	subi	r20, 0x01	; 1
     b4a:	51 09       	sbc	r21, r1
     b4c:	b9 01       	movw	r22, r18
     b4e:	68 23       	and	r22, r24
     b50:	79 23       	and	r23, r25
     b52:	67 2b       	or	r22, r23
     b54:	29 f0       	breq	.+10     	; 0xb60 <FUNCtwocomptointnbit+0x2a>
     b56:	84 23       	and	r24, r20
     b58:	95 23       	and	r25, r21
     b5a:	82 1b       	sub	r24, r18
     b5c:	93 0b       	sbc	r25, r19
     b5e:	08 95       	ret
     b60:	84 23       	and	r24, r20
     b62:	95 23       	and	r25, r21
     b64:	08 95       	ret

00000b66 <FUNCdec2bcd>:
     b66:	9d ec       	ldi	r25, 0xCD	; 205
     b68:	89 9f       	mul	r24, r25
     b6a:	91 2d       	mov	r25, r1
     b6c:	11 24       	eor	r1, r1
     b6e:	96 95       	lsr	r25
     b70:	96 95       	lsr	r25
     b72:	96 95       	lsr	r25
     b74:	39 2f       	mov	r19, r25
     b76:	33 0f       	add	r19, r19
     b78:	23 2f       	mov	r18, r19
     b7a:	22 0f       	add	r18, r18
     b7c:	22 0f       	add	r18, r18
     b7e:	23 0f       	add	r18, r19
     b80:	82 1b       	sub	r24, r18
     b82:	20 e1       	ldi	r18, 0x10	; 16
     b84:	92 9f       	mul	r25, r18
     b86:	80 0d       	add	r24, r0
     b88:	11 24       	eor	r1, r1
     b8a:	08 95       	ret

00000b8c <FUNCbcd2dec>:
     b8c:	98 2f       	mov	r25, r24
     b8e:	92 95       	swap	r25
     b90:	9f 70       	andi	r25, 0x0F	; 15
     b92:	99 0f       	add	r25, r25
     b94:	29 2f       	mov	r18, r25
     b96:	22 0f       	add	r18, r18
     b98:	22 0f       	add	r18, r18
     b9a:	92 0f       	add	r25, r18
     b9c:	8f 70       	andi	r24, 0x0F	; 15
     b9e:	89 0f       	add	r24, r25
     ba0:	08 95       	ret

00000ba2 <FUNCresizestr>:
     ba2:	fc 01       	movw	r30, r24
     ba4:	db 01       	movw	r26, r22
     ba6:	a3 5c       	subi	r26, 0xC3	; 195
     ba8:	be 4f       	sbci	r27, 0xFE	; 254
     baa:	1c 92       	st	X, r1
     bac:	16 16       	cp	r1, r22
     bae:	17 06       	cpc	r1, r23
     bb0:	14 f5       	brge	.+68     	; 0xbf6 <FUNCresizestr+0x54>
     bb2:	90 81       	ld	r25, Z
     bb4:	91 11       	cpse	r25, r1
     bb6:	0c c0       	rjmp	.+24     	; 0xbd0 <FUNCresizestr+0x2e>
     bb8:	17 c0       	rjmp	.+46     	; 0xbe8 <FUNCresizestr+0x46>
     bba:	91 91       	ld	r25, Z+
     bbc:	91 11       	cpse	r25, r1
     bbe:	0d c0       	rjmp	.+26     	; 0xbda <FUNCresizestr+0x38>
     bc0:	15 c0       	rjmp	.+42     	; 0xbec <FUNCresizestr+0x4a>
     bc2:	81 93       	st	Z+, r24
     bc4:	2f 5f       	subi	r18, 0xFF	; 255
     bc6:	3f 4f       	sbci	r19, 0xFF	; 255
     bc8:	26 17       	cp	r18, r22
     bca:	37 07       	cpc	r19, r23
     bcc:	d4 f3       	brlt	.-12     	; 0xbc2 <FUNCresizestr+0x20>
     bce:	13 c0       	rjmp	.+38     	; 0xbf6 <FUNCresizestr+0x54>
     bd0:	ad e3       	ldi	r26, 0x3D	; 61
     bd2:	b1 e0       	ldi	r27, 0x01	; 1
     bd4:	31 96       	adiw	r30, 0x01	; 1
     bd6:	20 e0       	ldi	r18, 0x00	; 0
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	9d 93       	st	X+, r25
     bdc:	2f 5f       	subi	r18, 0xFF	; 255
     bde:	3f 4f       	sbci	r19, 0xFF	; 255
     be0:	62 17       	cp	r22, r18
     be2:	73 07       	cpc	r23, r19
     be4:	51 f7       	brne	.-44     	; 0xbba <FUNCresizestr+0x18>
     be6:	07 c0       	rjmp	.+14     	; 0xbf6 <FUNCresizestr+0x54>
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	f9 01       	movw	r30, r18
     bee:	e3 5c       	subi	r30, 0xC3	; 195
     bf0:	fe 4f       	sbci	r31, 0xFE	; 254
     bf2:	80 e2       	ldi	r24, 0x20	; 32
     bf4:	e6 cf       	rjmp	.-52     	; 0xbc2 <FUNCresizestr+0x20>
     bf6:	8d e3       	ldi	r24, 0x3D	; 61
     bf8:	91 e0       	ldi	r25, 0x01	; 1
     bfa:	08 95       	ret

00000bfc <FUNCtrimmer>:
     bfc:	4f 92       	push	r4
     bfe:	5f 92       	push	r5
     c00:	6f 92       	push	r6
     c02:	7f 92       	push	r7
     c04:	af 92       	push	r10
     c06:	bf 92       	push	r11
     c08:	cf 92       	push	r12
     c0a:	df 92       	push	r13
     c0c:	ef 92       	push	r14
     c0e:	ff 92       	push	r15
     c10:	0f 93       	push	r16
     c12:	1f 93       	push	r17
     c14:	cf 93       	push	r28
     c16:	df 93       	push	r29
     c18:	cd b7       	in	r28, 0x3d	; 61
     c1a:	de b7       	in	r29, 0x3e	; 62
     c1c:	29 01       	movw	r4, r18
     c1e:	3a 01       	movw	r6, r20
     c20:	9b 01       	movw	r18, r22
     c22:	ac 01       	movw	r20, r24
     c24:	24 19       	sub	r18, r4
     c26:	35 09       	sbc	r19, r5
     c28:	46 09       	sbc	r20, r6
     c2a:	57 09       	sbc	r21, r7
     c2c:	89 89       	ldd	r24, Y+17	; 0x11
     c2e:	9a 89       	ldd	r25, Y+18	; 0x12
     c30:	ab 89       	ldd	r26, Y+19	; 0x13
     c32:	bc 89       	ldd	r27, Y+20	; 0x14
     c34:	bc 01       	movw	r22, r24
     c36:	cd 01       	movw	r24, r26
     c38:	6a 19       	sub	r22, r10
     c3a:	7b 09       	sbc	r23, r11
     c3c:	8c 09       	sbc	r24, r12
     c3e:	9d 09       	sbc	r25, r13
     c40:	0e 94 13 15 	call	0x2a26	; 0x2a26 <__mulsi3>
     c44:	a8 01       	movw	r20, r16
     c46:	97 01       	movw	r18, r14
     c48:	24 19       	sub	r18, r4
     c4a:	35 09       	sbc	r19, r5
     c4c:	46 09       	sbc	r20, r6
     c4e:	57 09       	sbc	r21, r7
     c50:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <__divmodsi4>
     c54:	ca 01       	movw	r24, r20
     c56:	b9 01       	movw	r22, r18
     c58:	6a 0d       	add	r22, r10
     c5a:	7b 1d       	adc	r23, r11
     c5c:	8c 1d       	adc	r24, r12
     c5e:	9d 1d       	adc	r25, r13
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	1f 91       	pop	r17
     c66:	0f 91       	pop	r16
     c68:	ff 90       	pop	r15
     c6a:	ef 90       	pop	r14
     c6c:	df 90       	pop	r13
     c6e:	cf 90       	pop	r12
     c70:	bf 90       	pop	r11
     c72:	af 90       	pop	r10
     c74:	7f 90       	pop	r7
     c76:	6f 90       	pop	r6
     c78:	5f 90       	pop	r5
     c7a:	4f 90       	pop	r4
     c7c:	08 95       	ret

00000c7e <Pwr>:
     c7e:	70 e0       	ldi	r23, 0x00	; 0
     c80:	61 15       	cp	r22, r1
     c82:	71 05       	cpc	r23, r1
     c84:	99 f0       	breq	.+38     	; 0xcac <Pwr+0x2e>
     c86:	41 e0       	ldi	r20, 0x01	; 1
     c88:	50 e0       	ldi	r21, 0x00	; 0
     c8a:	21 e0       	ldi	r18, 0x01	; 1
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	fa 01       	movw	r30, r20
     c92:	e8 9f       	mul	r30, r24
     c94:	a0 01       	movw	r20, r0
     c96:	e9 9f       	mul	r30, r25
     c98:	50 0d       	add	r21, r0
     c9a:	f8 9f       	mul	r31, r24
     c9c:	50 0d       	add	r21, r0
     c9e:	11 24       	eor	r1, r1
     ca0:	2f 5f       	subi	r18, 0xFF	; 255
     ca2:	3f 4f       	sbci	r19, 0xFF	; 255
     ca4:	62 17       	cp	r22, r18
     ca6:	73 07       	cpc	r23, r19
     ca8:	98 f7       	brcc	.-26     	; 0xc90 <Pwr+0x12>
     caa:	02 c0       	rjmp	.+4      	; 0xcb0 <Pwr+0x32>
     cac:	41 e0       	ldi	r20, 0x01	; 1
     cae:	50 e0       	ldi	r21, 0x00	; 0
     cb0:	ca 01       	movw	r24, r20
     cb2:	08 95       	ret

00000cb4 <StringLength>:
     cb4:	fc 01       	movw	r30, r24
     cb6:	20 81       	ld	r18, Z
     cb8:	22 23       	and	r18, r18
     cba:	41 f0       	breq	.+16     	; 0xccc <StringLength+0x18>
     cbc:	31 96       	adiw	r30, 0x01	; 1
     cbe:	80 e0       	ldi	r24, 0x00	; 0
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	01 96       	adiw	r24, 0x01	; 1
     cc4:	21 91       	ld	r18, Z+
     cc6:	21 11       	cpse	r18, r1
     cc8:	fc cf       	rjmp	.-8      	; 0xcc2 <StringLength+0xe>
     cca:	08 95       	ret
     ccc:	80 e0       	ldi	r24, 0x00	; 0
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	08 95       	ret

00000cd2 <FUNCtrim>:
     cd2:	cf 93       	push	r28
     cd4:	df 93       	push	r29
     cd6:	ec 01       	movw	r28, r24
     cd8:	ed df       	rcall	.-38     	; 0xcb4 <StringLength>
     cda:	9c 01       	movw	r18, r24
     cdc:	21 50       	subi	r18, 0x01	; 1
     cde:	31 09       	sbc	r19, r1
     ce0:	62 f0       	brmi	.+24     	; 0xcfa <FUNCtrim+0x28>
     ce2:	fe 01       	movw	r30, r28
     ce4:	e8 0f       	add	r30, r24
     ce6:	f9 1f       	adc	r31, r25
     ce8:	92 91       	ld	r25, -Z
     cea:	90 32       	cpi	r25, 0x20	; 32
     cec:	19 f0       	breq	.+6      	; 0xcf4 <FUNCtrim+0x22>
     cee:	99 50       	subi	r25, 0x09	; 9
     cf0:	92 30       	cpi	r25, 0x02	; 2
     cf2:	18 f4       	brcc	.+6      	; 0xcfa <FUNCtrim+0x28>
     cf4:	21 50       	subi	r18, 0x01	; 1
     cf6:	31 09       	sbc	r19, r1
     cf8:	b8 f7       	brcc	.-18     	; 0xce8 <FUNCtrim+0x16>
     cfa:	c2 0f       	add	r28, r18
     cfc:	d3 1f       	adc	r29, r19
     cfe:	19 82       	std	Y+1, r1	; 0x01
     d00:	c9 01       	movw	r24, r18
     d02:	df 91       	pop	r29
     d04:	cf 91       	pop	r28
     d06:	08 95       	ret

00000d08 <Reverse>:
     d08:	cf 93       	push	r28
     d0a:	df 93       	push	r29
     d0c:	ec 01       	movw	r28, r24
     d0e:	d2 df       	rcall	.-92     	; 0xcb4 <StringLength>
     d10:	9c 01       	movw	r18, r24
     d12:	21 50       	subi	r18, 0x01	; 1
     d14:	31 09       	sbc	r19, r1
     d16:	12 16       	cp	r1, r18
     d18:	13 06       	cpc	r1, r19
     d1a:	84 f4       	brge	.+32     	; 0xd3c <Reverse+0x34>
     d1c:	de 01       	movw	r26, r28
     d1e:	a8 0f       	add	r26, r24
     d20:	b9 1f       	adc	r27, r25
     d22:	fe 01       	movw	r30, r28
     d24:	80 e0       	ldi	r24, 0x00	; 0
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	40 81       	ld	r20, Z
     d2a:	5e 91       	ld	r21, -X
     d2c:	51 93       	st	Z+, r21
     d2e:	4c 93       	st	X, r20
     d30:	01 96       	adiw	r24, 0x01	; 1
     d32:	21 50       	subi	r18, 0x01	; 1
     d34:	31 09       	sbc	r19, r1
     d36:	82 17       	cp	r24, r18
     d38:	93 07       	cpc	r25, r19
     d3a:	b4 f3       	brlt	.-20     	; 0xd28 <Reverse+0x20>
     d3c:	df 91       	pop	r29
     d3e:	cf 91       	pop	r28
     d40:	08 95       	ret

00000d42 <FUNCi32toa>:
     d42:	8f 92       	push	r8
     d44:	9f 92       	push	r9
     d46:	af 92       	push	r10
     d48:	bf 92       	push	r11
     d4a:	cf 92       	push	r12
     d4c:	df 92       	push	r13
     d4e:	ef 92       	push	r14
     d50:	ff 92       	push	r15
     d52:	0f 93       	push	r16
     d54:	1f 93       	push	r17
     d56:	cf 93       	push	r28
     d58:	df 93       	push	r29
     d5a:	6b 01       	movw	r12, r22
     d5c:	7c 01       	movw	r14, r24
     d5e:	dc 01       	movw	r26, r24
     d60:	cb 01       	movw	r24, r22
     d62:	ff 20       	and	r15, r15
     d64:	3c f4       	brge	.+14     	; 0xd74 <FUNCi32toa+0x32>
     d66:	88 27       	eor	r24, r24
     d68:	99 27       	eor	r25, r25
     d6a:	dc 01       	movw	r26, r24
     d6c:	8c 19       	sub	r24, r12
     d6e:	9d 09       	sbc	r25, r13
     d70:	ae 09       	sbc	r26, r14
     d72:	bf 09       	sbc	r27, r15
     d74:	bc 01       	movw	r22, r24
     d76:	cd 01       	movw	r24, r26
     d78:	10 e0       	ldi	r17, 0x00	; 0
     d7a:	0f 2e       	mov	r0, r31
     d7c:	fa e0       	ldi	r31, 0x0A	; 10
     d7e:	8f 2e       	mov	r8, r31
     d80:	91 2c       	mov	r9, r1
     d82:	a1 2c       	mov	r10, r1
     d84:	b1 2c       	mov	r11, r1
     d86:	f0 2d       	mov	r31, r0
     d88:	01 c0       	rjmp	.+2      	; 0xd8c <FUNCi32toa+0x4a>
     d8a:	10 2f       	mov	r17, r16
     d8c:	01 e0       	ldi	r16, 0x01	; 1
     d8e:	01 0f       	add	r16, r17
     d90:	c1 2f       	mov	r28, r17
     d92:	d0 e0       	ldi	r29, 0x00	; 0
     d94:	c3 5c       	subi	r28, 0xC3	; 195
     d96:	de 4f       	sbci	r29, 0xFE	; 254
     d98:	a5 01       	movw	r20, r10
     d9a:	94 01       	movw	r18, r8
     d9c:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <__divmodsi4>
     da0:	60 5d       	subi	r22, 0xD0	; 208
     da2:	68 83       	st	Y, r22
     da4:	62 2f       	mov	r22, r18
     da6:	73 2f       	mov	r23, r19
     da8:	84 2f       	mov	r24, r20
     daa:	95 2f       	mov	r25, r21
     dac:	16 16       	cp	r1, r22
     dae:	17 06       	cpc	r1, r23
     db0:	18 06       	cpc	r1, r24
     db2:	19 06       	cpc	r1, r25
     db4:	54 f3       	brlt	.-44     	; 0xd8a <FUNCi32toa+0x48>
     db6:	ff 20       	and	r15, r15
     db8:	44 f4       	brge	.+16     	; 0xdca <FUNCi32toa+0x88>
     dba:	e0 2f       	mov	r30, r16
     dbc:	f0 e0       	ldi	r31, 0x00	; 0
     dbe:	e3 5c       	subi	r30, 0xC3	; 195
     dc0:	fe 4f       	sbci	r31, 0xFE	; 254
     dc2:	8d e2       	ldi	r24, 0x2D	; 45
     dc4:	80 83       	st	Z, r24
     dc6:	02 e0       	ldi	r16, 0x02	; 2
     dc8:	01 0f       	add	r16, r17
     dca:	e0 2f       	mov	r30, r16
     dcc:	f0 e0       	ldi	r31, 0x00	; 0
     dce:	e3 5c       	subi	r30, 0xC3	; 195
     dd0:	fe 4f       	sbci	r31, 0xFE	; 254
     dd2:	10 82       	st	Z, r1
     dd4:	8d e3       	ldi	r24, 0x3D	; 61
     dd6:	91 e0       	ldi	r25, 0x01	; 1
     dd8:	97 df       	rcall	.-210    	; 0xd08 <Reverse>
     dda:	8d e3       	ldi	r24, 0x3D	; 61
     ddc:	91 e0       	ldi	r25, 0x01	; 1
     dde:	df 91       	pop	r29
     de0:	cf 91       	pop	r28
     de2:	1f 91       	pop	r17
     de4:	0f 91       	pop	r16
     de6:	ff 90       	pop	r15
     de8:	ef 90       	pop	r14
     dea:	df 90       	pop	r13
     dec:	cf 90       	pop	r12
     dee:	bf 90       	pop	r11
     df0:	af 90       	pop	r10
     df2:	9f 90       	pop	r9
     df4:	8f 90       	pop	r8
     df6:	08 95       	ret

00000df8 <FUNCi16toa>:
     df8:	0f 93       	push	r16
     dfa:	1f 93       	push	r17
     dfc:	cf 93       	push	r28
     dfe:	df 93       	push	r29
     e00:	ec 01       	movw	r28, r24
     e02:	99 23       	and	r25, r25
     e04:	24 f4       	brge	.+8      	; 0xe0e <FUNCi16toa+0x16>
     e06:	88 27       	eor	r24, r24
     e08:	99 27       	eor	r25, r25
     e0a:	8c 1b       	sub	r24, r28
     e0c:	9d 0b       	sbc	r25, r29
     e0e:	20 e0       	ldi	r18, 0x00	; 0
     e10:	0a e0       	ldi	r16, 0x0A	; 10
     e12:	10 e0       	ldi	r17, 0x00	; 0
     e14:	01 c0       	rjmp	.+2      	; 0xe18 <FUNCi16toa+0x20>
     e16:	23 2f       	mov	r18, r19
     e18:	31 e0       	ldi	r19, 0x01	; 1
     e1a:	32 0f       	add	r19, r18
     e1c:	e2 2f       	mov	r30, r18
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	e3 5c       	subi	r30, 0xC3	; 195
     e22:	fe 4f       	sbci	r31, 0xFE	; 254
     e24:	b8 01       	movw	r22, r16
     e26:	0e 94 22 15 	call	0x2a44	; 0x2a44 <__divmodhi4>
     e2a:	80 5d       	subi	r24, 0xD0	; 208
     e2c:	80 83       	st	Z, r24
     e2e:	86 2f       	mov	r24, r22
     e30:	97 2f       	mov	r25, r23
     e32:	18 16       	cp	r1, r24
     e34:	19 06       	cpc	r1, r25
     e36:	7c f3       	brlt	.-34     	; 0xe16 <FUNCi16toa+0x1e>
     e38:	dd 23       	and	r29, r29
     e3a:	44 f4       	brge	.+16     	; 0xe4c <FUNCi16toa+0x54>
     e3c:	e3 2f       	mov	r30, r19
     e3e:	f0 e0       	ldi	r31, 0x00	; 0
     e40:	e3 5c       	subi	r30, 0xC3	; 195
     e42:	fe 4f       	sbci	r31, 0xFE	; 254
     e44:	8d e2       	ldi	r24, 0x2D	; 45
     e46:	80 83       	st	Z, r24
     e48:	32 e0       	ldi	r19, 0x02	; 2
     e4a:	32 0f       	add	r19, r18
     e4c:	e3 2f       	mov	r30, r19
     e4e:	f0 e0       	ldi	r31, 0x00	; 0
     e50:	e3 5c       	subi	r30, 0xC3	; 195
     e52:	fe 4f       	sbci	r31, 0xFE	; 254
     e54:	10 82       	st	Z, r1
     e56:	8d e3       	ldi	r24, 0x3D	; 61
     e58:	91 e0       	ldi	r25, 0x01	; 1
     e5a:	56 df       	rcall	.-340    	; 0xd08 <Reverse>
     e5c:	8d e3       	ldi	r24, 0x3D	; 61
     e5e:	91 e0       	ldi	r25, 0x01	; 1
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	1f 91       	pop	r17
     e66:	0f 91       	pop	r16
     e68:	08 95       	ret

00000e6a <FUNCui16toa>:
     e6a:	cf 93       	push	r28
     e6c:	ac 01       	movw	r20, r24
     e6e:	e0 e0       	ldi	r30, 0x00	; 0
     e70:	c1 e0       	ldi	r28, 0x01	; 1
     e72:	ce 0f       	add	r28, r30
     e74:	f0 e0       	ldi	r31, 0x00	; 0
     e76:	e3 5c       	subi	r30, 0xC3	; 195
     e78:	fe 4f       	sbci	r31, 0xFE	; 254
     e7a:	9a 01       	movw	r18, r20
     e7c:	ad ec       	ldi	r26, 0xCD	; 205
     e7e:	bc ec       	ldi	r27, 0xCC	; 204
     e80:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__umulhisi3>
     e84:	96 95       	lsr	r25
     e86:	87 95       	ror	r24
     e88:	96 95       	lsr	r25
     e8a:	87 95       	ror	r24
     e8c:	96 95       	lsr	r25
     e8e:	87 95       	ror	r24
     e90:	9c 01       	movw	r18, r24
     e92:	22 0f       	add	r18, r18
     e94:	33 1f       	adc	r19, r19
     e96:	88 0f       	add	r24, r24
     e98:	99 1f       	adc	r25, r25
     e9a:	88 0f       	add	r24, r24
     e9c:	99 1f       	adc	r25, r25
     e9e:	88 0f       	add	r24, r24
     ea0:	99 1f       	adc	r25, r25
     ea2:	82 0f       	add	r24, r18
     ea4:	93 1f       	adc	r25, r19
     ea6:	9a 01       	movw	r18, r20
     ea8:	28 1b       	sub	r18, r24
     eaa:	39 0b       	sbc	r19, r25
     eac:	c9 01       	movw	r24, r18
     eae:	80 5d       	subi	r24, 0xD0	; 208
     eb0:	80 83       	st	Z, r24
     eb2:	9a 01       	movw	r18, r20
     eb4:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__umulhisi3>
     eb8:	ac 01       	movw	r20, r24
     eba:	56 95       	lsr	r21
     ebc:	47 95       	ror	r20
     ebe:	56 95       	lsr	r21
     ec0:	47 95       	ror	r20
     ec2:	56 95       	lsr	r21
     ec4:	47 95       	ror	r20
     ec6:	ec 2f       	mov	r30, r28
     ec8:	41 15       	cp	r20, r1
     eca:	51 05       	cpc	r21, r1
     ecc:	89 f6       	brne	.-94     	; 0xe70 <FUNCui16toa+0x6>
     ece:	ec 2f       	mov	r30, r28
     ed0:	f0 e0       	ldi	r31, 0x00	; 0
     ed2:	e3 5c       	subi	r30, 0xC3	; 195
     ed4:	fe 4f       	sbci	r31, 0xFE	; 254
     ed6:	10 82       	st	Z, r1
     ed8:	8d e3       	ldi	r24, 0x3D	; 61
     eda:	91 e0       	ldi	r25, 0x01	; 1
     edc:	15 df       	rcall	.-470    	; 0xd08 <Reverse>
     ede:	8d e3       	ldi	r24, 0x3D	; 61
     ee0:	91 e0       	ldi	r25, 0x01	; 1
     ee2:	cf 91       	pop	r28
     ee4:	08 95       	ret

00000ee6 <FUNCbcd2bin>:
     ee6:	98 2f       	mov	r25, r24
     ee8:	92 95       	swap	r25
     eea:	9f 70       	andi	r25, 0x0F	; 15
     eec:	99 0f       	add	r25, r25
     eee:	29 2f       	mov	r18, r25
     ef0:	22 0f       	add	r18, r18
     ef2:	22 0f       	add	r18, r18
     ef4:	92 0f       	add	r25, r18
     ef6:	8f 70       	andi	r24, 0x0F	; 15
     ef8:	89 0f       	add	r24, r25
     efa:	08 95       	ret

00000efc <FUNCbin2bcd>:
     efc:	ac 01       	movw	r20, r24
     efe:	9c 01       	movw	r18, r24
     f00:	ad ec       	ldi	r26, 0xCD	; 205
     f02:	bc ec       	ldi	r27, 0xCC	; 204
     f04:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <__umulhisi3>
     f08:	96 95       	lsr	r25
     f0a:	87 95       	ror	r24
     f0c:	96 95       	lsr	r25
     f0e:	87 95       	ror	r24
     f10:	96 95       	lsr	r25
     f12:	87 95       	ror	r24
     f14:	bc 01       	movw	r22, r24
     f16:	66 0f       	add	r22, r22
     f18:	77 1f       	adc	r23, r23
     f1a:	9c 01       	movw	r18, r24
     f1c:	22 0f       	add	r18, r18
     f1e:	33 1f       	adc	r19, r19
     f20:	22 0f       	add	r18, r18
     f22:	33 1f       	adc	r19, r19
     f24:	22 0f       	add	r18, r18
     f26:	33 1f       	adc	r19, r19
     f28:	26 0f       	add	r18, r22
     f2a:	37 1f       	adc	r19, r23
     f2c:	42 1b       	sub	r20, r18
     f2e:	53 0b       	sbc	r21, r19
     f30:	34 2f       	mov	r19, r20
     f32:	20 e1       	ldi	r18, 0x10	; 16
     f34:	82 9f       	mul	r24, r18
     f36:	30 0d       	add	r19, r0
     f38:	11 24       	eor	r1, r1
     f3a:	83 2f       	mov	r24, r19
     f3c:	08 95       	ret

00000f3e <FUNCgcd1>:
     f3e:	cf 92       	push	r12
     f40:	df 92       	push	r13
     f42:	ef 92       	push	r14
     f44:	ff 92       	push	r15
     f46:	cf 93       	push	r28
     f48:	df 93       	push	r29
     f4a:	cd b7       	in	r28, 0x3d	; 61
     f4c:	de b7       	in	r29, 0x3e	; 62
     f4e:	28 97       	sbiw	r28, 0x08	; 8
     f50:	0f b6       	in	r0, 0x3f	; 63
     f52:	f8 94       	cli
     f54:	de bf       	out	0x3e, r29	; 62
     f56:	0f be       	out	0x3f, r0	; 63
     f58:	cd bf       	out	0x3d, r28	; 61
     f5a:	6b 01       	movw	r12, r22
     f5c:	7c 01       	movw	r14, r24
     f5e:	69 83       	std	Y+1, r22	; 0x01
     f60:	7a 83       	std	Y+2, r23	; 0x02
     f62:	8b 83       	std	Y+3, r24	; 0x03
     f64:	9c 83       	std	Y+4, r25	; 0x04
     f66:	2d 83       	std	Y+5, r18	; 0x05
     f68:	3e 83       	std	Y+6, r19	; 0x06
     f6a:	4f 83       	std	Y+7, r20	; 0x07
     f6c:	58 87       	std	Y+8, r21	; 0x08
     f6e:	c2 16       	cp	r12, r18
     f70:	d3 06       	cpc	r13, r19
     f72:	e4 06       	cpc	r14, r20
     f74:	f5 06       	cpc	r15, r21
     f76:	34 f4       	brge	.+12     	; 0xf84 <FUNCgcd1+0x46>
     f78:	be 01       	movw	r22, r28
     f7a:	6b 5f       	subi	r22, 0xFB	; 251
     f7c:	7f 4f       	sbci	r23, 0xFF	; 255
     f7e:	ce 01       	movw	r24, r28
     f80:	01 96       	adiw	r24, 0x01	; 1
     f82:	85 dc       	rcall	.-1782   	; 0x88e <FUNCswap>
     f84:	8d 81       	ldd	r24, Y+5	; 0x05
     f86:	9e 81       	ldd	r25, Y+6	; 0x06
     f88:	af 81       	ldd	r26, Y+7	; 0x07
     f8a:	b8 85       	ldd	r27, Y+8	; 0x08
     f8c:	89 2b       	or	r24, r25
     f8e:	8a 2b       	or	r24, r26
     f90:	8b 2b       	or	r24, r27
     f92:	71 f4       	brne	.+28     	; 0xfb0 <FUNCgcd1+0x72>
     f94:	69 81       	ldd	r22, Y+1	; 0x01
     f96:	7a 81       	ldd	r23, Y+2	; 0x02
     f98:	8b 81       	ldd	r24, Y+3	; 0x03
     f9a:	9c 81       	ldd	r25, Y+4	; 0x04
     f9c:	20 e0       	ldi	r18, 0x00	; 0
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	a9 01       	movw	r20, r18
     fa2:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <__divmodsi4>
     fa6:	61 15       	cp	r22, r1
     fa8:	71 05       	cpc	r23, r1
     faa:	81 05       	cpc	r24, r1
     fac:	91 05       	cpc	r25, r1
     fae:	29 f4       	brne	.+10     	; 0xfba <FUNCgcd1+0x7c>
     fb0:	6d 81       	ldd	r22, Y+5	; 0x05
     fb2:	7e 81       	ldd	r23, Y+6	; 0x06
     fb4:	8f 81       	ldd	r24, Y+7	; 0x07
     fb6:	98 85       	ldd	r25, Y+8	; 0x08
     fb8:	05 c0       	rjmp	.+10     	; 0xfc4 <FUNCgcd1+0x86>
     fba:	6d 83       	std	Y+5, r22	; 0x05
     fbc:	7e 83       	std	Y+6, r23	; 0x06
     fbe:	8f 83       	std	Y+7, r24	; 0x07
     fc0:	98 87       	std	Y+8, r25	; 0x08
     fc2:	f6 cf       	rjmp	.-20     	; 0xfb0 <FUNCgcd1+0x72>
     fc4:	28 96       	adiw	r28, 0x08	; 8
     fc6:	0f b6       	in	r0, 0x3f	; 63
     fc8:	f8 94       	cli
     fca:	de bf       	out	0x3e, r29	; 62
     fcc:	0f be       	out	0x3f, r0	; 63
     fce:	cd bf       	out	0x3d, r28	; 61
     fd0:	df 91       	pop	r29
     fd2:	cf 91       	pop	r28
     fd4:	ff 90       	pop	r15
     fd6:	ef 90       	pop	r14
     fd8:	df 90       	pop	r13
     fda:	cf 90       	pop	r12
     fdc:	08 95       	ret

00000fde <FUNCpincheck>:
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <FUNCpincheck+0x8>
     fe2:	95 95       	asr	r25
     fe4:	87 95       	ror	r24
     fe6:	6a 95       	dec	r22
     fe8:	e2 f7       	brpl	.-8      	; 0xfe2 <FUNCpincheck+0x4>
     fea:	81 70       	andi	r24, 0x01	; 1
     fec:	08 95       	ret

00000fee <FUNCprint_binary>:
     fee:	ed e3       	ldi	r30, 0x3D	; 61
     ff0:	f1 e0       	ldi	r31, 0x01	; 1
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	20 e8       	ldi	r18, 0x80	; 128
     ff6:	50 e3       	ldi	r21, 0x30	; 48
     ff8:	41 e3       	ldi	r20, 0x31	; 49
     ffa:	38 2f       	mov	r19, r24
     ffc:	32 23       	and	r19, r18
     ffe:	11 f0       	breq	.+4      	; 0x1004 <FUNCprint_binary+0x16>
    1000:	40 83       	st	Z, r20
    1002:	01 c0       	rjmp	.+2      	; 0x1006 <FUNCprint_binary+0x18>
    1004:	50 83       	st	Z, r21
    1006:	26 95       	lsr	r18
    1008:	9f 5f       	subi	r25, 0xFF	; 255
    100a:	31 96       	adiw	r30, 0x01	; 1
    100c:	98 30       	cpi	r25, 0x08	; 8
    100e:	a9 f7       	brne	.-22     	; 0xffa <FUNCprint_binary+0xc>
    1010:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <FUNCstr+0x8>
    1014:	8d e3       	ldi	r24, 0x3D	; 61
    1016:	91 e0       	ldi	r25, 0x01	; 1
    1018:	08 95       	ret

0000101a <FUNCmayia>:
    101a:	a4 2f       	mov	r26, r20
    101c:	b0 e0       	ldi	r27, 0x00	; 0
    101e:	10 97       	sbiw	r26, 0x00	; 0
    1020:	61 f0       	breq	.+24     	; 0x103a <FUNCmayia+0x20>
    1022:	21 e0       	ldi	r18, 0x01	; 1
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	e1 e0       	ldi	r30, 0x01	; 1
    1028:	f0 e0       	ldi	r31, 0x00	; 0
    102a:	ee 0f       	add	r30, r30
    102c:	ff 1f       	adc	r31, r31
    102e:	2f 5f       	subi	r18, 0xFF	; 255
    1030:	3f 4f       	sbci	r19, 0xFF	; 255
    1032:	a2 17       	cp	r26, r18
    1034:	b3 07       	cpc	r27, r19
    1036:	c8 f7       	brcc	.-14     	; 0x102a <FUNCmayia+0x10>
    1038:	02 c0       	rjmp	.+4      	; 0x103e <FUNCmayia+0x24>
    103a:	e1 e0       	ldi	r30, 0x01	; 1
    103c:	f0 e0       	ldi	r31, 0x00	; 0
    103e:	31 97       	sbiw	r30, 0x01	; 1
    1040:	6e 23       	and	r22, r30
    1042:	7f 23       	and	r23, r31
    1044:	8e 23       	and	r24, r30
    1046:	9f 23       	and	r25, r31
    1048:	86 27       	eor	r24, r22
    104a:	97 27       	eor	r25, r23
    104c:	68 23       	and	r22, r24
    104e:	79 23       	and	r23, r25
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <FUNCmayia+0x3c>
    1052:	66 0f       	add	r22, r22
    1054:	77 1f       	adc	r23, r23
    1056:	4a 95       	dec	r20
    1058:	e2 f7       	brpl	.-8      	; 0x1052 <FUNCmayia+0x38>
    105a:	86 2b       	or	r24, r22
    105c:	97 2b       	or	r25, r23
    105e:	08 95       	ret

00001060 <FUNCenable>:
    1060:	fc 01       	movw	r30, r24
    1062:	9f b7       	in	r25, 0x3f	; 63
    1064:	8f b7       	in	r24, 0x3f	; 63
    1066:	8f 77       	andi	r24, 0x7F	; 127
    1068:	8f bf       	out	0x3f, r24	; 63
    106a:	9f bf       	out	0x3f, r25	; 63
    106c:	8f e3       	ldi	r24, 0x3F	; 63
    106e:	96 e0       	ldi	r25, 0x06	; 6
    1070:	91 83       	std	Z+1, r25	; 0x01
    1072:	80 83       	st	Z, r24
    1074:	8a e5       	ldi	r24, 0x5A	; 90
    1076:	96 e0       	ldi	r25, 0x06	; 6
    1078:	93 83       	std	Z+3, r25	; 0x03
    107a:	82 83       	std	Z+2, r24	; 0x02
    107c:	84 e8       	ldi	r24, 0x84	; 132
    107e:	96 e0       	ldi	r25, 0x06	; 6
    1080:	95 83       	std	Z+5, r25	; 0x05
    1082:	84 83       	std	Z+4, r24	; 0x04
    1084:	8d e0       	ldi	r24, 0x0D	; 13
    1086:	98 e0       	ldi	r25, 0x08	; 8
    1088:	97 83       	std	Z+7, r25	; 0x07
    108a:	86 83       	std	Z+6, r24	; 0x06
    108c:	8c e2       	ldi	r24, 0x2C	; 44
    108e:	94 e0       	ldi	r25, 0x04	; 4
    1090:	91 87       	std	Z+9, r25	; 0x09
    1092:	80 87       	std	Z+8, r24	; 0x08
    1094:	8a e3       	ldi	r24, 0x3A	; 58
    1096:	94 e0       	ldi	r25, 0x04	; 4
    1098:	93 87       	std	Z+11, r25	; 0x0b
    109a:	82 87       	std	Z+10, r24	; 0x0a
    109c:	8c e3       	ldi	r24, 0x3C	; 60
    109e:	94 e0       	ldi	r25, 0x04	; 4
    10a0:	95 87       	std	Z+13, r25	; 0x0d
    10a2:	84 87       	std	Z+12, r24	; 0x0c
    10a4:	8f e3       	ldi	r24, 0x3F	; 63
    10a6:	94 e0       	ldi	r25, 0x04	; 4
    10a8:	97 87       	std	Z+15, r25	; 0x0f
    10aa:	86 87       	std	Z+14, r24	; 0x0e
    10ac:	82 e4       	ldi	r24, 0x42	; 66
    10ae:	94 e0       	ldi	r25, 0x04	; 4
    10b0:	91 8b       	std	Z+17, r25	; 0x11
    10b2:	80 8b       	std	Z+16, r24	; 0x10
    10b4:	85 e4       	ldi	r24, 0x45	; 69
    10b6:	94 e0       	ldi	r25, 0x04	; 4
    10b8:	93 8b       	std	Z+19, r25	; 0x13
    10ba:	82 8b       	std	Z+18, r24	; 0x12
    10bc:	86 e3       	ldi	r24, 0x36	; 54
    10be:	94 e0       	ldi	r25, 0x04	; 4
    10c0:	95 8b       	std	Z+21, r25	; 0x15
    10c2:	84 8b       	std	Z+20, r24	; 0x14
    10c4:	88 e3       	ldi	r24, 0x38	; 56
    10c6:	94 e0       	ldi	r25, 0x04	; 4
    10c8:	97 8b       	std	Z+23, r25	; 0x17
    10ca:	86 8b       	std	Z+22, r24	; 0x16
    10cc:	87 e4       	ldi	r24, 0x47	; 71
    10ce:	94 e0       	ldi	r25, 0x04	; 4
    10d0:	91 8f       	std	Z+25, r25	; 0x19
    10d2:	80 8f       	std	Z+24, r24	; 0x18
    10d4:	88 e6       	ldi	r24, 0x68	; 104
    10d6:	94 e0       	ldi	r25, 0x04	; 4
    10d8:	93 8f       	std	Z+27, r25	; 0x1b
    10da:	82 8f       	std	Z+26, r24	; 0x1a
    10dc:	86 e7       	ldi	r24, 0x76	; 118
    10de:	94 e0       	ldi	r25, 0x04	; 4
    10e0:	95 8f       	std	Z+29, r25	; 0x1d
    10e2:	84 8f       	std	Z+28, r24	; 0x1c
    10e4:	88 e9       	ldi	r24, 0x98	; 152
    10e6:	94 e0       	ldi	r25, 0x04	; 4
    10e8:	97 8f       	std	Z+31, r25	; 0x1f
    10ea:	86 8f       	std	Z+30, r24	; 0x1e
    10ec:	8c ef       	ldi	r24, 0xFC	; 252
    10ee:	96 e0       	ldi	r25, 0x06	; 6
    10f0:	91 a3       	std	Z+33, r25	; 0x21
    10f2:	80 a3       	std	Z+32, r24	; 0x20
    10f4:	85 e3       	ldi	r24, 0x35	; 53
    10f6:	97 e0       	ldi	r25, 0x07	; 7
    10f8:	93 a3       	std	Z+35, r25	; 0x23
    10fa:	82 a3       	std	Z+34, r24	; 0x22
    10fc:	81 ea       	ldi	r24, 0xA1	; 161
    10fe:	96 e0       	ldi	r25, 0x06	; 6
    1100:	95 a3       	std	Z+37, r25	; 0x25
    1102:	84 a3       	std	Z+36, r24	; 0x24
    1104:	89 e6       	ldi	r24, 0x69	; 105
    1106:	96 e0       	ldi	r25, 0x06	; 6
    1108:	97 a3       	std	Z+39, r25	; 0x27
    110a:	86 a3       	std	Z+38, r24	; 0x26
    110c:	8e e3       	ldi	r24, 0x3E	; 62
    110e:	95 e0       	ldi	r25, 0x05	; 5
    1110:	91 a7       	std	Z+41, r25	; 0x29
    1112:	80 a7       	std	Z+40, r24	; 0x28
    1114:	83 e4       	ldi	r24, 0x43	; 67
    1116:	95 e0       	ldi	r25, 0x05	; 5
    1118:	93 a7       	std	Z+43, r25	; 0x2b
    111a:	82 a7       	std	Z+42, r24	; 0x2a
    111c:	82 e5       	ldi	r24, 0x52	; 82
    111e:	95 e0       	ldi	r25, 0x05	; 5
    1120:	95 a7       	std	Z+45, r25	; 0x2d
    1122:	84 a7       	std	Z+44, r24	; 0x2c
    1124:	86 e7       	ldi	r24, 0x76	; 118
    1126:	95 e0       	ldi	r25, 0x05	; 5
    1128:	97 a7       	std	Z+47, r25	; 0x2f
    112a:	86 a7       	std	Z+46, r24	; 0x2e
    112c:	88 e7       	ldi	r24, 0x78	; 120
    112e:	95 e0       	ldi	r25, 0x05	; 5
    1130:	91 ab       	std	Z+49, r25	; 0x31
    1132:	80 ab       	std	Z+48, r24	; 0x30
    1134:	82 e8       	ldi	r24, 0x82	; 130
    1136:	95 e0       	ldi	r25, 0x05	; 5
    1138:	93 ab       	std	Z+51, r25	; 0x33
    113a:	82 ab       	std	Z+50, r24	; 0x32
    113c:	8f e8       	ldi	r24, 0x8F	; 143
    113e:	95 e0       	ldi	r25, 0x05	; 5
    1140:	95 ab       	std	Z+53, r25	; 0x35
    1142:	84 ab       	std	Z+52, r24	; 0x34
    1144:	8b e9       	ldi	r24, 0x9B	; 155
    1146:	95 e0       	ldi	r25, 0x05	; 5
    1148:	97 ab       	std	Z+55, r25	; 0x37
    114a:	86 ab       	std	Z+54, r24	; 0x36
    114c:	83 eb       	ldi	r24, 0xB3	; 179
    114e:	95 e0       	ldi	r25, 0x05	; 5
    1150:	91 af       	std	Z+57, r25	; 0x39
    1152:	80 af       	std	Z+56, r24	; 0x38
    1154:	86 ec       	ldi	r24, 0xC6	; 198
    1156:	95 e0       	ldi	r25, 0x05	; 5
    1158:	93 af       	std	Z+59, r25	; 0x3b
    115a:	82 af       	std	Z+58, r24	; 0x3a
    115c:	81 ed       	ldi	r24, 0xD1	; 209
    115e:	95 e0       	ldi	r25, 0x05	; 5
    1160:	95 af       	std	Z+61, r25	; 0x3d
    1162:	84 af       	std	Z+60, r24	; 0x3c
    1164:	8e ef       	ldi	r24, 0xFE	; 254
    1166:	95 e0       	ldi	r25, 0x05	; 5
    1168:	97 af       	std	Z+63, r25	; 0x3f
    116a:	86 af       	std	Z+62, r24	; 0x3e
    116c:	df 01       	movw	r26, r30
    116e:	a0 5c       	subi	r26, 0xC0	; 192
    1170:	bf 4f       	sbci	r27, 0xFF	; 255
    1172:	83 e7       	ldi	r24, 0x73	; 115
    1174:	97 e0       	ldi	r25, 0x07	; 7
    1176:	11 96       	adiw	r26, 0x01	; 1
    1178:	9c 93       	st	X, r25
    117a:	8e 93       	st	-X, r24
    117c:	12 96       	adiw	r26, 0x02	; 2
    117e:	8e e7       	ldi	r24, 0x7E	; 126
    1180:	97 e0       	ldi	r25, 0x07	; 7
    1182:	11 96       	adiw	r26, 0x01	; 1
    1184:	9c 93       	st	X, r25
    1186:	8e 93       	st	-X, r24
    1188:	12 96       	adiw	r26, 0x02	; 2
    118a:	8f e9       	ldi	r24, 0x9F	; 159
    118c:	97 e0       	ldi	r25, 0x07	; 7
    118e:	11 96       	adiw	r26, 0x01	; 1
    1190:	9c 93       	st	X, r25
    1192:	8e 93       	st	-X, r24
    1194:	12 96       	adiw	r26, 0x02	; 2
    1196:	8f ee       	ldi	r24, 0xEF	; 239
    1198:	97 e0       	ldi	r25, 0x07	; 7
    119a:	11 96       	adiw	r26, 0x01	; 1
    119c:	9c 93       	st	X, r25
    119e:	8e 93       	st	-X, r24
    11a0:	12 96       	adiw	r26, 0x02	; 2
    11a2:	87 ef       	ldi	r24, 0xF7	; 247
    11a4:	97 e0       	ldi	r25, 0x07	; 7
    11a6:	11 96       	adiw	r26, 0x01	; 1
    11a8:	9c 93       	st	X, r25
    11aa:	8e 93       	st	-X, r24
    11ac:	12 96       	adiw	r26, 0x02	; 2
    11ae:	87 e3       	ldi	r24, 0x37	; 55
    11b0:	99 e0       	ldi	r25, 0x09	; 9
    11b2:	8d 93       	st	X+, r24
    11b4:	9c 93       	st	X, r25
    11b6:	cf 01       	movw	r24, r30
    11b8:	08 95       	ret

000011ba <FUNCintinvstr>:
/***intinvstr***/
uint8_t FUNCintinvstr(int32_t n, char* res, uint8_t n_digit)
{
    11ba:	8f 92       	push	r8
    11bc:	9f 92       	push	r9
    11be:	af 92       	push	r10
    11c0:	bf 92       	push	r11
    11c2:	ef 92       	push	r14
    11c4:	ff 92       	push	r15
    11c6:	0f 93       	push	r16
    11c8:	1f 93       	push	r17
    11ca:	cf 93       	push	r28
    11cc:	df 93       	push	r29
    11ce:	8a 01       	movw	r16, r20
    11d0:	d2 2f       	mov	r29, r18
	uint8_t k=0;
	for(res[k++] = (n % 10) + '0' ; (n/=10) > ZERO ; res[k++] = (n % 10) + '0');
    11d2:	2a e0       	ldi	r18, 0x0A	; 10
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	40 e0       	ldi	r20, 0x00	; 0
    11d8:	50 e0       	ldi	r21, 0x00	; 0
    11da:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <__divmodsi4>
    11de:	60 5d       	subi	r22, 0xD0	; 208
    11e0:	f8 01       	movw	r30, r16
    11e2:	60 83       	st	Z, r22
    11e4:	62 2f       	mov	r22, r18
    11e6:	73 2f       	mov	r23, r19
    11e8:	84 2f       	mov	r24, r20
    11ea:	95 2f       	mov	r25, r21
    11ec:	16 16       	cp	r1, r22
    11ee:	17 06       	cpc	r1, r23
    11f0:	18 06       	cpc	r1, r24
    11f2:	19 06       	cpc	r1, r25
    11f4:	fc f4       	brge	.+62     	; 0x1234 <FUNCintinvstr+0x7a>
    11f6:	21 e0       	ldi	r18, 0x01	; 1
    11f8:	0f 2e       	mov	r0, r31
    11fa:	fa e0       	ldi	r31, 0x0A	; 10
    11fc:	8f 2e       	mov	r8, r31
    11fe:	91 2c       	mov	r9, r1
    1200:	a1 2c       	mov	r10, r1
    1202:	b1 2c       	mov	r11, r1
    1204:	f0 2d       	mov	r31, r0
    1206:	c1 e0       	ldi	r28, 0x01	; 1
    1208:	c2 0f       	add	r28, r18
    120a:	78 01       	movw	r14, r16
    120c:	e2 0e       	add	r14, r18
    120e:	f1 1c       	adc	r15, r1
    1210:	a5 01       	movw	r20, r10
    1212:	94 01       	movw	r18, r8
    1214:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <__divmodsi4>
    1218:	60 5d       	subi	r22, 0xD0	; 208
    121a:	f7 01       	movw	r30, r14
    121c:	60 83       	st	Z, r22
    121e:	62 2f       	mov	r22, r18
    1220:	73 2f       	mov	r23, r19
    1222:	84 2f       	mov	r24, r20
    1224:	95 2f       	mov	r25, r21
    1226:	2c 2f       	mov	r18, r28
    1228:	16 16       	cp	r1, r22
    122a:	17 06       	cpc	r1, r23
    122c:	18 06       	cpc	r1, r24
    122e:	19 06       	cpc	r1, r25
    1230:	54 f3       	brlt	.-44     	; 0x1206 <FUNCintinvstr+0x4c>
    1232:	01 c0       	rjmp	.+2      	; 0x1236 <FUNCintinvstr+0x7c>
    1234:	c1 e0       	ldi	r28, 0x01	; 1
	for( ; k < n_digit ; res[k++] = '0');
    1236:	cd 17       	cp	r28, r29
    1238:	48 f4       	brcc	.+18     	; 0x124c <FUNCintinvstr+0x92>
    123a:	80 e3       	ldi	r24, 0x30	; 48
    123c:	f8 01       	movw	r30, r16
    123e:	ec 0f       	add	r30, r28
    1240:	f1 1d       	adc	r31, r1
    1242:	80 83       	st	Z, r24
    1244:	cf 5f       	subi	r28, 0xFF	; 255
    1246:	dc 13       	cpse	r29, r28
    1248:	f9 cf       	rjmp	.-14     	; 0x123c <FUNCintinvstr+0x82>
    124a:	01 c0       	rjmp	.+2      	; 0x124e <FUNCintinvstr+0x94>
    124c:	dc 2f       	mov	r29, r28
	res[k]='\0';
    124e:	f8 01       	movw	r30, r16
    1250:	ed 0f       	add	r30, r29
    1252:	f1 1d       	adc	r31, r1
    1254:	10 82       	st	Z, r1
	return k;
}
    1256:	8d 2f       	mov	r24, r29
    1258:	df 91       	pop	r29
    125a:	cf 91       	pop	r28
    125c:	1f 91       	pop	r17
    125e:	0f 91       	pop	r16
    1260:	ff 90       	pop	r15
    1262:	ef 90       	pop	r14
    1264:	bf 90       	pop	r11
    1266:	af 90       	pop	r10
    1268:	9f 90       	pop	r9
    126a:	8f 90       	pop	r8
    126c:	08 95       	ret

0000126e <FUNCftoa>:
/***ftoa***/
char* FUNCftoa(float n, char* res, uint8_t afterpoint)
{
    126e:	4f 92       	push	r4
    1270:	5f 92       	push	r5
    1272:	6f 92       	push	r6
    1274:	7f 92       	push	r7
    1276:	8f 92       	push	r8
    1278:	9f 92       	push	r9
    127a:	af 92       	push	r10
    127c:	bf 92       	push	r11
    127e:	cf 92       	push	r12
    1280:	df 92       	push	r13
    1282:	ef 92       	push	r14
    1284:	ff 92       	push	r15
    1286:	1f 93       	push	r17
    1288:	cf 93       	push	r28
    128a:	df 93       	push	r29
    128c:	6b 01       	movw	r12, r22
    128e:	7c 01       	movw	r14, r24
    1290:	ea 01       	movw	r28, r20
    1292:	12 2f       	mov	r17, r18
	uint8_t k=ZERO;
	int32_t ipart;
	float fpart;
	int8_t sign;
	if (n < ZERO){
    1294:	20 e0       	ldi	r18, 0x00	; 0
    1296:	30 e0       	ldi	r19, 0x00	; 0
    1298:	a9 01       	movw	r20, r18
    129a:	0e 94 f8 11 	call	0x23f0	; 0x23f0 <__cmpsf2>
    129e:	88 23       	and	r24, r24
    12a0:	0c f0       	brlt	.+2      	; 0x12a4 <FUNCftoa+0x36>
    12a2:	4d c0       	rjmp	.+154    	; 0x133e <FUNCftoa+0xd0>
		n = -n;
    12a4:	f7 fa       	bst	r15, 7
    12a6:	f0 94       	com	r15
    12a8:	f7 f8       	bld	r15, 7
    12aa:	f0 94       	com	r15
		sign=-ONE;
	}else
		sign=ONE;
	ipart = (int32_t) n;
    12ac:	c7 01       	movw	r24, r14
    12ae:	b6 01       	movw	r22, r12
    12b0:	0e 94 64 12 	call	0x24c8	; 0x24c8 <__fixsfsi>
    12b4:	4b 01       	movw	r8, r22
    12b6:	5c 01       	movw	r10, r24
	fpart = n - (float)ipart;
    12b8:	0e 94 97 12 	call	0x252e	; 0x252e <__floatsisf>
    12bc:	9b 01       	movw	r18, r22
    12be:	ac 01       	movw	r20, r24
    12c0:	c7 01       	movw	r24, r14
    12c2:	b6 01       	movw	r22, r12
    12c4:	0e 94 93 11 	call	0x2326	; 0x2326 <__subsf3>
    12c8:	2b 01       	movw	r4, r22
    12ca:	3c 01       	movw	r6, r24
	k=FUNCintinvstr( ipart, res, ONE );
    12cc:	21 e0       	ldi	r18, 0x01	; 1
    12ce:	ae 01       	movw	r20, r28
    12d0:	c5 01       	movw	r24, r10
    12d2:	b4 01       	movw	r22, r8
    12d4:	72 df       	rcall	.-284    	; 0x11ba <FUNCintinvstr>
	if (sign < ZERO)
		res[k++] = '-';
    12d6:	ff 24       	eor	r15, r15
    12d8:	f3 94       	inc	r15
    12da:	f8 0e       	add	r15, r24
    12dc:	fe 01       	movw	r30, r28
    12de:	e8 0f       	add	r30, r24
    12e0:	f1 1d       	adc	r31, r1
    12e2:	8d e2       	ldi	r24, 0x2D	; 45
    12e4:	80 83       	st	Z, r24
	else
		res[k++] = ' ';
	res[k]='\0';
    12e6:	6e 01       	movw	r12, r28
    12e8:	cf 0c       	add	r12, r15
    12ea:	d1 1c       	adc	r13, r1
    12ec:	f6 01       	movw	r30, r12
    12ee:	10 82       	st	Z, r1
	Reverse(res);
    12f0:	ce 01       	movw	r24, r28
    12f2:	0a dd       	rcall	.-1516   	; 0xd08 <Reverse>
	if (afterpoint > ZERO) {
    12f4:	11 23       	and	r17, r17
    12f6:	09 f4       	brne	.+2      	; 0x12fa <FUNCftoa+0x8c>
    12f8:	3f c0       	rjmp	.+126    	; 0x1378 <FUNCftoa+0x10a>
		res[k++] = '.';
    12fa:	8e e2       	ldi	r24, 0x2E	; 46
    12fc:	f6 01       	movw	r30, r12
    12fe:	80 83       	st	Z, r24
		FUNCintinvstr( fpart * pow(10, afterpoint), res+k, afterpoint );
    1300:	f3 94       	inc	r15
    1302:	ce 01       	movw	r24, r28
    1304:	8f 0d       	add	r24, r15
    1306:	91 1d       	adc	r25, r1
    1308:	7c 01       	movw	r14, r24
    130a:	61 2f       	mov	r22, r17
    130c:	70 e0       	ldi	r23, 0x00	; 0
    130e:	80 e0       	ldi	r24, 0x00	; 0
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	0e 94 95 12 	call	0x252a	; 0x252a <__floatunsisf>
    1316:	9b 01       	movw	r18, r22
    1318:	ac 01       	movw	r20, r24
    131a:	60 e0       	ldi	r22, 0x00	; 0
    131c:	70 e0       	ldi	r23, 0x00	; 0
    131e:	80 e2       	ldi	r24, 0x20	; 32
    1320:	91 e4       	ldi	r25, 0x41	; 65
    1322:	0e 94 ae 13 	call	0x275c	; 0x275c <pow>
    1326:	a3 01       	movw	r20, r6
    1328:	92 01       	movw	r18, r4
    132a:	0e 94 4b 13 	call	0x2696	; 0x2696 <__mulsf3>
    132e:	0e 94 64 12 	call	0x24c8	; 0x24c8 <__fixsfsi>
    1332:	21 2f       	mov	r18, r17
    1334:	a7 01       	movw	r20, r14
		Reverse(res+k);
    1336:	41 df       	rcall	.-382    	; 0x11ba <FUNCintinvstr>
    1338:	c7 01       	movw	r24, r14
    133a:	e6 dc       	rcall	.-1588   	; 0xd08 <Reverse>
	}	
	return res;
    133c:	1d c0       	rjmp	.+58     	; 0x1378 <FUNCftoa+0x10a>
	if (n < ZERO){
		n = -n;
		sign=-ONE;
	}else
		sign=ONE;
	ipart = (int32_t) n;
    133e:	c7 01       	movw	r24, r14
    1340:	b6 01       	movw	r22, r12
    1342:	0e 94 64 12 	call	0x24c8	; 0x24c8 <__fixsfsi>
    1346:	4b 01       	movw	r8, r22
    1348:	5c 01       	movw	r10, r24
	fpart = n - (float)ipart;
    134a:	0e 94 97 12 	call	0x252e	; 0x252e <__floatsisf>
    134e:	9b 01       	movw	r18, r22
    1350:	ac 01       	movw	r20, r24
    1352:	c7 01       	movw	r24, r14
    1354:	b6 01       	movw	r22, r12
    1356:	e7 d7       	rcall	.+4046   	; 0x2326 <__subsf3>
    1358:	2b 01       	movw	r4, r22
    135a:	3c 01       	movw	r6, r24
	k=FUNCintinvstr( ipart, res, ONE );
    135c:	21 e0       	ldi	r18, 0x01	; 1
    135e:	ae 01       	movw	r20, r28
    1360:	c5 01       	movw	r24, r10
    1362:	b4 01       	movw	r22, r8
    1364:	2a df       	rcall	.-428    	; 0x11ba <FUNCintinvstr>
	if (sign < ZERO)
		res[k++] = '-';
	else
		res[k++] = ' ';
    1366:	ff 24       	eor	r15, r15
    1368:	f3 94       	inc	r15
    136a:	f8 0e       	add	r15, r24
    136c:	fe 01       	movw	r30, r28
    136e:	e8 0f       	add	r30, r24
    1370:	f1 1d       	adc	r31, r1
    1372:	80 e2       	ldi	r24, 0x20	; 32
    1374:	80 83       	st	Z, r24
    1376:	b7 cf       	rjmp	.-146    	; 0x12e6 <FUNCftoa+0x78>
		res[k++] = '.';
		FUNCintinvstr( fpart * pow(10, afterpoint), res+k, afterpoint );
		Reverse(res+k);
	}	
	return res;
}
    1378:	ce 01       	movw	r24, r28
    137a:	df 91       	pop	r29
    137c:	cf 91       	pop	r28
    137e:	1f 91       	pop	r17
    1380:	ff 90       	pop	r15
    1382:	ef 90       	pop	r14
    1384:	df 90       	pop	r13
    1386:	cf 90       	pop	r12
    1388:	bf 90       	pop	r11
    138a:	af 90       	pop	r10
    138c:	9f 90       	pop	r9
    138e:	8f 90       	pop	r8
    1390:	7f 90       	pop	r7
    1392:	6f 90       	pop	r6
    1394:	5f 90       	pop	r5
    1396:	4f 90       	pop	r4
    1398:	08 95       	ret

0000139a <LCD0_write>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    139a:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    139e:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    13a2:	90 81       	ld	r25, Z
    13a4:	9d 7f       	andi	r25, 0xFD	; 253
    13a6:	90 83       	st	Z, r25
    13a8:	67 2b       	or	r22, r23
    13aa:	41 f0       	breq	.+16     	; 0x13bc <LCD0_write+0x22>
    13ac:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    13b0:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    13b4:	90 81       	ld	r25, Z
    13b6:	91 60       	ori	r25, 0x01	; 1
    13b8:	90 83       	st	Z, r25
    13ba:	07 c0       	rjmp	.+14     	; 0x13ca <LCD0_write+0x30>
    13bc:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    13c0:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    13c4:	90 81       	ld	r25, Z
    13c6:	9e 7f       	andi	r25, 0xFE	; 254
    13c8:	90 83       	st	Z, r25
    13ca:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <lcd0_DDR>
    13ce:	f0 91 66 01 	lds	r31, 0x0166	; 0x800166 <lcd0_DDR+0x1>
    13d2:	90 81       	ld	r25, Z
    13d4:	90 6f       	ori	r25, 0xF0	; 240
    13d6:	90 83       	st	Z, r25
    13d8:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    13dc:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    13e0:	90 81       	ld	r25, Z
    13e2:	94 60       	ori	r25, 0x04	; 4
    13e4:	90 83       	st	Z, r25
    13e6:	88 23       	and	r24, r24
    13e8:	44 f4       	brge	.+16     	; 0x13fa <LCD0_write+0x60>
    13ea:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    13ee:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    13f2:	90 81       	ld	r25, Z
    13f4:	90 68       	ori	r25, 0x80	; 128
    13f6:	90 83       	st	Z, r25
    13f8:	07 c0       	rjmp	.+14     	; 0x1408 <LCD0_write+0x6e>
    13fa:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    13fe:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1402:	90 81       	ld	r25, Z
    1404:	9f 77       	andi	r25, 0x7F	; 127
    1406:	90 83       	st	Z, r25
    1408:	86 ff       	sbrs	r24, 6
    140a:	08 c0       	rjmp	.+16     	; 0x141c <LCD0_write+0x82>
    140c:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1410:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1414:	90 81       	ld	r25, Z
    1416:	90 64       	ori	r25, 0x40	; 64
    1418:	90 83       	st	Z, r25
    141a:	07 c0       	rjmp	.+14     	; 0x142a <LCD0_write+0x90>
    141c:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1420:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1424:	90 81       	ld	r25, Z
    1426:	9f 7b       	andi	r25, 0xBF	; 191
    1428:	90 83       	st	Z, r25
    142a:	85 ff       	sbrs	r24, 5
    142c:	08 c0       	rjmp	.+16     	; 0x143e <LCD0_write+0xa4>
    142e:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1432:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1436:	90 81       	ld	r25, Z
    1438:	90 62       	ori	r25, 0x20	; 32
    143a:	90 83       	st	Z, r25
    143c:	07 c0       	rjmp	.+14     	; 0x144c <LCD0_write+0xb2>
    143e:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1442:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1446:	90 81       	ld	r25, Z
    1448:	9f 7d       	andi	r25, 0xDF	; 223
    144a:	90 83       	st	Z, r25
    144c:	84 ff       	sbrs	r24, 4
    144e:	08 c0       	rjmp	.+16     	; 0x1460 <LCD0_write+0xc6>
    1450:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1454:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1458:	90 81       	ld	r25, Z
    145a:	90 61       	ori	r25, 0x10	; 16
    145c:	90 83       	st	Z, r25
    145e:	07 c0       	rjmp	.+14     	; 0x146e <LCD0_write+0xd4>
    1460:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1464:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1468:	90 81       	ld	r25, Z
    146a:	9f 7e       	andi	r25, 0xEF	; 239
    146c:	90 83       	st	Z, r25
    146e:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1472:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1476:	90 81       	ld	r25, Z
    1478:	9b 7f       	andi	r25, 0xFB	; 251
    147a:	90 83       	st	Z, r25
    147c:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1480:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1484:	90 81       	ld	r25, Z
    1486:	94 60       	ori	r25, 0x04	; 4
    1488:	90 83       	st	Z, r25
    148a:	83 ff       	sbrs	r24, 3
    148c:	08 c0       	rjmp	.+16     	; 0x149e <LCD0_write+0x104>
    148e:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1492:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1496:	90 81       	ld	r25, Z
    1498:	90 68       	ori	r25, 0x80	; 128
    149a:	90 83       	st	Z, r25
    149c:	07 c0       	rjmp	.+14     	; 0x14ac <LCD0_write+0x112>
    149e:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    14a2:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    14a6:	90 81       	ld	r25, Z
    14a8:	9f 77       	andi	r25, 0x7F	; 127
    14aa:	90 83       	st	Z, r25
    14ac:	82 ff       	sbrs	r24, 2
    14ae:	08 c0       	rjmp	.+16     	; 0x14c0 <LCD0_write+0x126>
    14b0:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    14b4:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    14b8:	90 81       	ld	r25, Z
    14ba:	90 64       	ori	r25, 0x40	; 64
    14bc:	90 83       	st	Z, r25
    14be:	07 c0       	rjmp	.+14     	; 0x14ce <LCD0_write+0x134>
    14c0:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    14c4:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    14c8:	90 81       	ld	r25, Z
    14ca:	9f 7b       	andi	r25, 0xBF	; 191
    14cc:	90 83       	st	Z, r25
    14ce:	81 ff       	sbrs	r24, 1
    14d0:	08 c0       	rjmp	.+16     	; 0x14e2 <LCD0_write+0x148>
    14d2:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    14d6:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    14da:	90 81       	ld	r25, Z
    14dc:	90 62       	ori	r25, 0x20	; 32
    14de:	90 83       	st	Z, r25
    14e0:	07 c0       	rjmp	.+14     	; 0x14f0 <LCD0_write+0x156>
    14e2:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    14e6:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    14ea:	90 81       	ld	r25, Z
    14ec:	9f 7d       	andi	r25, 0xDF	; 223
    14ee:	90 83       	st	Z, r25
    14f0:	80 ff       	sbrs	r24, 0
    14f2:	08 c0       	rjmp	.+16     	; 0x1504 <LCD0_write+0x16a>
    14f4:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    14f8:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    14fc:	80 81       	ld	r24, Z
    14fe:	80 61       	ori	r24, 0x10	; 16
    1500:	80 83       	st	Z, r24
    1502:	07 c0       	rjmp	.+14     	; 0x1512 <LCD0_write+0x178>
    1504:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1508:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    150c:	80 81       	ld	r24, Z
    150e:	8f 7e       	andi	r24, 0xEF	; 239
    1510:	80 83       	st	Z, r24
    1512:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1516:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    151a:	80 81       	ld	r24, Z
    151c:	8b 7f       	andi	r24, 0xFB	; 251
    151e:	80 83       	st	Z, r24
    1520:	08 95       	ret

00001522 <LCD0_read>:
    1522:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <lcd0_DDR>
    1526:	f0 91 66 01 	lds	r31, 0x0166	; 0x800166 <lcd0_DDR+0x1>
    152a:	20 81       	ld	r18, Z
    152c:	2f 70       	andi	r18, 0x0F	; 15
    152e:	20 83       	st	Z, r18
    1530:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1534:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1538:	20 81       	ld	r18, Z
    153a:	20 6f       	ori	r18, 0xF0	; 240
    153c:	20 83       	st	Z, r18
    153e:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1542:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1546:	20 81       	ld	r18, Z
    1548:	22 60       	ori	r18, 0x02	; 2
    154a:	20 83       	st	Z, r18
    154c:	89 2b       	or	r24, r25
    154e:	41 f0       	breq	.+16     	; 0x1560 <LCD0_read+0x3e>
    1550:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1554:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1558:	80 81       	ld	r24, Z
    155a:	81 60       	ori	r24, 0x01	; 1
    155c:	80 83       	st	Z, r24
    155e:	07 c0       	rjmp	.+14     	; 0x156e <LCD0_read+0x4c>
    1560:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1564:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1568:	80 81       	ld	r24, Z
    156a:	8e 7f       	andi	r24, 0xFE	; 254
    156c:	80 83       	st	Z, r24
    156e:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1572:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1576:	80 81       	ld	r24, Z
    1578:	84 60       	ori	r24, 0x04	; 4
    157a:	80 83       	st	Z, r24
    157c:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <lcd0_PIN>
    1580:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <lcd0_PIN+0x1>
    1584:	80 81       	ld	r24, Z
    1586:	88 23       	and	r24, r24
    1588:	14 f0       	brlt	.+4      	; 0x158e <LCD0_read+0x6c>
    158a:	80 e0       	ldi	r24, 0x00	; 0
    158c:	01 c0       	rjmp	.+2      	; 0x1590 <LCD0_read+0x6e>
    158e:	80 e8       	ldi	r24, 0x80	; 128
    1590:	90 81       	ld	r25, Z
    1592:	96 ff       	sbrs	r25, 6
    1594:	02 c0       	rjmp	.+4      	; 0x159a <LCD0_read+0x78>
    1596:	80 64       	ori	r24, 0x40	; 64
    1598:	01 c0       	rjmp	.+2      	; 0x159c <LCD0_read+0x7a>
    159a:	8f 7b       	andi	r24, 0xBF	; 191
    159c:	90 81       	ld	r25, Z
    159e:	95 ff       	sbrs	r25, 5
    15a0:	02 c0       	rjmp	.+4      	; 0x15a6 <LCD0_read+0x84>
    15a2:	80 62       	ori	r24, 0x20	; 32
    15a4:	01 c0       	rjmp	.+2      	; 0x15a8 <LCD0_read+0x86>
    15a6:	8f 7d       	andi	r24, 0xDF	; 223
    15a8:	90 81       	ld	r25, Z
    15aa:	94 ff       	sbrs	r25, 4
    15ac:	02 c0       	rjmp	.+4      	; 0x15b2 <LCD0_read+0x90>
    15ae:	80 61       	ori	r24, 0x10	; 16
    15b0:	01 c0       	rjmp	.+2      	; 0x15b4 <LCD0_read+0x92>
    15b2:	8f 7e       	andi	r24, 0xEF	; 239
    15b4:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    15b8:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    15bc:	90 81       	ld	r25, Z
    15be:	9b 7f       	andi	r25, 0xFB	; 251
    15c0:	90 83       	st	Z, r25
    15c2:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    15c6:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    15ca:	90 81       	ld	r25, Z
    15cc:	94 60       	ori	r25, 0x04	; 4
    15ce:	90 83       	st	Z, r25
    15d0:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <lcd0_PIN>
    15d4:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <lcd0_PIN+0x1>
    15d8:	90 81       	ld	r25, Z
    15da:	99 23       	and	r25, r25
    15dc:	14 f4       	brge	.+4      	; 0x15e2 <LCD0_read+0xc0>
    15de:	88 60       	ori	r24, 0x08	; 8
    15e0:	01 c0       	rjmp	.+2      	; 0x15e4 <LCD0_read+0xc2>
    15e2:	87 7f       	andi	r24, 0xF7	; 247
    15e4:	90 81       	ld	r25, Z
    15e6:	96 ff       	sbrs	r25, 6
    15e8:	02 c0       	rjmp	.+4      	; 0x15ee <LCD0_read+0xcc>
    15ea:	84 60       	ori	r24, 0x04	; 4
    15ec:	01 c0       	rjmp	.+2      	; 0x15f0 <LCD0_read+0xce>
    15ee:	8b 7f       	andi	r24, 0xFB	; 251
    15f0:	90 81       	ld	r25, Z
    15f2:	95 ff       	sbrs	r25, 5
    15f4:	02 c0       	rjmp	.+4      	; 0x15fa <LCD0_read+0xd8>
    15f6:	82 60       	ori	r24, 0x02	; 2
    15f8:	01 c0       	rjmp	.+2      	; 0x15fc <LCD0_read+0xda>
    15fa:	8d 7f       	andi	r24, 0xFD	; 253
    15fc:	90 81       	ld	r25, Z
    15fe:	94 ff       	sbrs	r25, 4
    1600:	02 c0       	rjmp	.+4      	; 0x1606 <LCD0_read+0xe4>
    1602:	81 60       	ori	r24, 0x01	; 1
    1604:	01 c0       	rjmp	.+2      	; 0x1608 <LCD0_read+0xe6>
    1606:	8e 7f       	andi	r24, 0xFE	; 254
    1608:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    160c:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1610:	90 81       	ld	r25, Z
    1612:	9b 7f       	andi	r25, 0xFB	; 251
    1614:	90 83       	st	Z, r25
    1616:	08 95       	ret

00001618 <LCD0_BF>:
    1618:	cf 93       	push	r28
    161a:	df 93       	push	r29
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	80 df       	rcall	.-256    	; 0x1522 <LCD0_read>
    1622:	cb e0       	ldi	r28, 0x0B	; 11
    1624:	d0 e0       	ldi	r29, 0x00	; 0
    1626:	05 c0       	rjmp	.+10     	; 0x1632 <LCD0_BF+0x1a>
    1628:	80 e0       	ldi	r24, 0x00	; 0
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	7a df       	rcall	.-268    	; 0x1522 <LCD0_read>
    162e:	21 97       	sbiw	r28, 0x01	; 1
    1630:	11 f0       	breq	.+4      	; 0x1636 <LCD0_BF+0x1e>
    1632:	88 23       	and	r24, r24
    1634:	cc f3       	brlt	.-14     	; 0x1628 <LCD0_BF+0x10>
    1636:	df 91       	pop	r29
    1638:	cf 91       	pop	r28
    163a:	08 95       	ret

0000163c <LCD0_putch>:
    163c:	61 e0       	ldi	r22, 0x01	; 1
    163e:	70 e0       	ldi	r23, 0x00	; 0
    1640:	ac de       	rcall	.-680    	; 0x139a <LCD0_write>
    1642:	ea cf       	rjmp	.-44     	; 0x1618 <LCD0_BF>
    1644:	08 95       	ret

00001646 <LCD0_getch>:
    1646:	cf 93       	push	r28
    1648:	81 e0       	ldi	r24, 0x01	; 1
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	6a df       	rcall	.-300    	; 0x1522 <LCD0_read>
    164e:	c8 2f       	mov	r28, r24
    1650:	e3 df       	rcall	.-58     	; 0x1618 <LCD0_BF>
    1652:	8c 2f       	mov	r24, r28
    1654:	cf 91       	pop	r28
    1656:	08 95       	ret

00001658 <LCD0_string>:
    1658:	cf 93       	push	r28
    165a:	df 93       	push	r29
    165c:	ec 01       	movw	r28, r24
    165e:	88 81       	ld	r24, Y
    1660:	88 23       	and	r24, r24
    1662:	41 f0       	breq	.+16     	; 0x1674 <LCD0_string+0x1c>
    1664:	21 96       	adiw	r28, 0x01	; 1
    1666:	61 e0       	ldi	r22, 0x01	; 1
    1668:	70 e0       	ldi	r23, 0x00	; 0
    166a:	97 de       	rcall	.-722    	; 0x139a <LCD0_write>
    166c:	d5 df       	rcall	.-86     	; 0x1618 <LCD0_BF>
    166e:	89 91       	ld	r24, Y+
    1670:	81 11       	cpse	r24, r1
    1672:	f9 cf       	rjmp	.-14     	; 0x1666 <LCD0_string+0xe>
    1674:	df 91       	pop	r29
    1676:	cf 91       	pop	r28
    1678:	08 95       	ret

0000167a <LCD0_string_size>:
    167a:	0f 93       	push	r16
    167c:	1f 93       	push	r17
    167e:	cf 93       	push	r28
    1680:	df 93       	push	r29
    1682:	fc 01       	movw	r30, r24
    1684:	d6 2f       	mov	r29, r22
    1686:	80 81       	ld	r24, Z
    1688:	88 23       	and	r24, r24
    168a:	51 f0       	breq	.+20     	; 0x16a0 <LCD0_string_size+0x26>
    168c:	8f 01       	movw	r16, r30
    168e:	0f 5f       	subi	r16, 0xFF	; 255
    1690:	1f 4f       	sbci	r17, 0xFF	; 255
    1692:	61 11       	cpse	r22, r1
    1694:	09 c0       	rjmp	.+18     	; 0x16a8 <LCD0_string_size+0x2e>
    1696:	1b c0       	rjmp	.+54     	; 0x16ce <LCD0_string_size+0x54>
    1698:	cf 5f       	subi	r28, 0xFF	; 255
    169a:	dc 17       	cp	r29, r28
    169c:	30 f4       	brcc	.+12     	; 0x16aa <LCD0_string_size+0x30>
    169e:	01 c0       	rjmp	.+2      	; 0x16a2 <LCD0_string_size+0x28>
    16a0:	c0 e0       	ldi	r28, 0x00	; 0
    16a2:	cd 17       	cp	r28, r29
    16a4:	60 f0       	brcs	.+24     	; 0x16be <LCD0_string_size+0x44>
    16a6:	13 c0       	rjmp	.+38     	; 0x16ce <LCD0_string_size+0x54>
    16a8:	c1 e0       	ldi	r28, 0x01	; 1
    16aa:	61 e0       	ldi	r22, 0x01	; 1
    16ac:	70 e0       	ldi	r23, 0x00	; 0
    16ae:	75 de       	rcall	.-790    	; 0x139a <LCD0_write>
    16b0:	b3 df       	rcall	.-154    	; 0x1618 <LCD0_BF>
    16b2:	f8 01       	movw	r30, r16
    16b4:	81 91       	ld	r24, Z+
    16b6:	8f 01       	movw	r16, r30
    16b8:	81 11       	cpse	r24, r1
    16ba:	ee cf       	rjmp	.-36     	; 0x1698 <LCD0_string_size+0x1e>
    16bc:	f2 cf       	rjmp	.-28     	; 0x16a2 <LCD0_string_size+0x28>
    16be:	cf 5f       	subi	r28, 0xFF	; 255
    16c0:	61 e0       	ldi	r22, 0x01	; 1
    16c2:	70 e0       	ldi	r23, 0x00	; 0
    16c4:	80 e2       	ldi	r24, 0x20	; 32
    16c6:	69 de       	rcall	.-814    	; 0x139a <LCD0_write>
    16c8:	a7 df       	rcall	.-178    	; 0x1618 <LCD0_BF>
    16ca:	cd 17       	cp	r28, r29
    16cc:	c0 f3       	brcs	.-16     	; 0x16be <LCD0_string_size+0x44>
    16ce:	df 91       	pop	r29
    16d0:	cf 91       	pop	r28
    16d2:	1f 91       	pop	r17
    16d4:	0f 91       	pop	r16
    16d6:	08 95       	ret

000016d8 <LCD0_hspace>:
    16d8:	cf 93       	push	r28
    16da:	c8 2f       	mov	r28, r24
    16dc:	88 23       	and	r24, r24
    16de:	39 f0       	breq	.+14     	; 0x16ee <LCD0_hspace+0x16>
    16e0:	61 e0       	ldi	r22, 0x01	; 1
    16e2:	70 e0       	ldi	r23, 0x00	; 0
    16e4:	80 e2       	ldi	r24, 0x20	; 32
    16e6:	59 de       	rcall	.-846    	; 0x139a <LCD0_write>
    16e8:	97 df       	rcall	.-210    	; 0x1618 <LCD0_BF>
    16ea:	c1 50       	subi	r28, 0x01	; 1
    16ec:	c9 f7       	brne	.-14     	; 0x16e0 <LCD0_hspace+0x8>
    16ee:	cf 91       	pop	r28
    16f0:	08 95       	ret

000016f2 <LCD0_gotoxy>:
    16f2:	26 2f       	mov	r18, r22
    16f4:	81 30       	cpi	r24, 0x01	; 1
    16f6:	91 05       	cpc	r25, r1
    16f8:	71 f0       	breq	.+28     	; 0x1716 <LCD0_gotoxy+0x24>
    16fa:	30 f0       	brcs	.+12     	; 0x1708 <LCD0_gotoxy+0x16>
    16fc:	82 30       	cpi	r24, 0x02	; 2
    16fe:	91 05       	cpc	r25, r1
    1700:	89 f0       	breq	.+34     	; 0x1724 <LCD0_gotoxy+0x32>
    1702:	03 97       	sbiw	r24, 0x03	; 3
    1704:	b1 f0       	breq	.+44     	; 0x1732 <LCD0_gotoxy+0x40>
    1706:	08 95       	ret
    1708:	60 e0       	ldi	r22, 0x00	; 0
    170a:	70 e0       	ldi	r23, 0x00	; 0
    170c:	80 e8       	ldi	r24, 0x80	; 128
    170e:	82 0f       	add	r24, r18
    1710:	44 de       	rcall	.-888    	; 0x139a <LCD0_write>
    1712:	82 cf       	rjmp	.-252    	; 0x1618 <LCD0_BF>
    1714:	08 95       	ret
    1716:	60 e0       	ldi	r22, 0x00	; 0
    1718:	70 e0       	ldi	r23, 0x00	; 0
    171a:	80 ec       	ldi	r24, 0xC0	; 192
    171c:	82 0f       	add	r24, r18
    171e:	3d de       	rcall	.-902    	; 0x139a <LCD0_write>
    1720:	7b cf       	rjmp	.-266    	; 0x1618 <LCD0_BF>
    1722:	08 95       	ret
    1724:	60 e0       	ldi	r22, 0x00	; 0
    1726:	70 e0       	ldi	r23, 0x00	; 0
    1728:	84 e9       	ldi	r24, 0x94	; 148
    172a:	82 0f       	add	r24, r18
    172c:	36 de       	rcall	.-916    	; 0x139a <LCD0_write>
    172e:	74 cf       	rjmp	.-280    	; 0x1618 <LCD0_BF>
    1730:	08 95       	ret
    1732:	60 e0       	ldi	r22, 0x00	; 0
    1734:	70 e0       	ldi	r23, 0x00	; 0
    1736:	84 ed       	ldi	r24, 0xD4	; 212
    1738:	82 0f       	add	r24, r18
    173a:	2f de       	rcall	.-930    	; 0x139a <LCD0_write>
    173c:	6d cf       	rjmp	.-294    	; 0x1618 <LCD0_BF>
    173e:	08 95       	ret

00001740 <LCD0_clear>:
    1740:	60 e0       	ldi	r22, 0x00	; 0
    1742:	70 e0       	ldi	r23, 0x00	; 0
    1744:	81 e0       	ldi	r24, 0x01	; 1
    1746:	29 de       	rcall	.-942    	; 0x139a <LCD0_write>
    1748:	87 ee       	ldi	r24, 0xE7	; 231
    174a:	97 e1       	ldi	r25, 0x17	; 23
    174c:	01 97       	sbiw	r24, 0x01	; 1
    174e:	f1 f7       	brne	.-4      	; 0x174c <LCD0_clear+0xc>
    1750:	00 c0       	rjmp	.+0      	; 0x1752 <LCD0_clear+0x12>
    1752:	00 00       	nop
    1754:	08 95       	ret

00001756 <LCD0_inic>:
	return lcd0;
}
void LCD0_inic(void)
{
	//LCD INIC
	*lcd0_DDR=(1<<RS)|(1<<RW)|(1<<EN)|(0<<NC);
    1756:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <lcd0_DDR>
    175a:	f0 91 66 01 	lds	r31, 0x0166	; 0x800166 <lcd0_DDR+0x1>
    175e:	87 e0       	ldi	r24, 0x07	; 7
    1760:	80 83       	st	Z, r24
	*lcd0_PORT=(1<<NC);
    1762:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1766:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    176a:	88 e0       	ldi	r24, 0x08	; 8
    176c:	80 83       	st	Z, r24
    176e:	2f ef       	ldi	r18, 0xFF	; 255
    1770:	83 ef       	ldi	r24, 0xF3	; 243
    1772:	91 e0       	ldi	r25, 0x01	; 1
    1774:	21 50       	subi	r18, 0x01	; 1
    1776:	80 40       	sbci	r24, 0x00	; 0
    1778:	90 40       	sbci	r25, 0x00	; 0
    177a:	e1 f7       	brne	.-8      	; 0x1774 <LCD0_inic+0x1e>
    177c:	00 c0       	rjmp	.+0      	; 0x177e <LCD0_inic+0x28>
    177e:	00 00       	nop
	/***INICIALIZACAO LCD**datasheet*/
	_delay_ms(40);
	LCD0_write(0x33,INST); //function set
    1780:	60 e0       	ldi	r22, 0x00	; 0
    1782:	70 e0       	ldi	r23, 0x00	; 0
    1784:	83 e3       	ldi	r24, 0x33	; 51
    1786:	09 de       	rcall	.-1006   	; 0x139a <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1788:	20 ed       	ldi	r18, 0xD0	; 208
    178a:	2a 95       	dec	r18
    178c:	f1 f7       	brne	.-4      	; 0x178a <LCD0_inic+0x34>
	_delay_us(39);
	LCD0_write(0x33,INST); //function set
    178e:	60 e0       	ldi	r22, 0x00	; 0
    1790:	70 e0       	ldi	r23, 0x00	; 0
    1792:	83 e3       	ldi	r24, 0x33	; 51
    1794:	02 de       	rcall	.-1020   	; 0x139a <LCD0_write>
    1796:	80 ed       	ldi	r24, 0xD0	; 208
    1798:	8a 95       	dec	r24
    179a:	f1 f7       	brne	.-4      	; 0x1798 <LCD0_inic+0x42>
	_delay_us(39);
	LCD0_write(0x2B,INST); //function set
    179c:	60 e0       	ldi	r22, 0x00	; 0
    179e:	70 e0       	ldi	r23, 0x00	; 0
    17a0:	8b e2       	ldi	r24, 0x2B	; 43
    17a2:	fb dd       	rcall	.-1034   	; 0x139a <LCD0_write>
    17a4:	95 ec       	ldi	r25, 0xC5	; 197
    17a6:	9a 95       	dec	r25
    17a8:	f1 f7       	brne	.-4      	; 0x17a6 <LCD0_inic+0x50>
    17aa:	00 00       	nop
	_delay_us(37);
	LCD0_write(0x0C,INST);// display on/off control
    17ac:	60 e0       	ldi	r22, 0x00	; 0
    17ae:	70 e0       	ldi	r23, 0x00	; 0
    17b0:	8c e0       	ldi	r24, 0x0C	; 12
    17b2:	f3 dd       	rcall	.-1050   	; 0x139a <LCD0_write>
    17b4:	25 ec       	ldi	r18, 0xC5	; 197
    17b6:	2a 95       	dec	r18
    17b8:	f1 f7       	brne	.-4      	; 0x17b6 <LCD0_inic+0x60>
	_delay_us(37);
	LCD0_write(0x01,INST);// clear display
    17ba:	00 00       	nop
    17bc:	60 e0       	ldi	r22, 0x00	; 0
    17be:	70 e0       	ldi	r23, 0x00	; 0
    17c0:	81 e0       	ldi	r24, 0x01	; 1
    17c2:	eb dd       	rcall	.-1066   	; 0x139a <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    17c4:	87 ee       	ldi	r24, 0xE7	; 231
    17c6:	97 e1       	ldi	r25, 0x17	; 23
    17c8:	01 97       	sbiw	r24, 0x01	; 1
    17ca:	f1 f7       	brne	.-4      	; 0x17c8 <LCD0_inic+0x72>
    17cc:	00 c0       	rjmp	.+0      	; 0x17ce <LCD0_inic+0x78>
	_delay_ms(1.53);
	LCD0_write(0x06,INST);// entry mode set (crazy settings)
    17ce:	00 00       	nop
    17d0:	60 e0       	ldi	r22, 0x00	; 0
    17d2:	70 e0       	ldi	r23, 0x00	; 0
    17d4:	86 e0       	ldi	r24, 0x06	; 6
    17d6:	e1 dd       	rcall	.-1086   	; 0x139a <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    17d8:	95 ec       	ldi	r25, 0xC5	; 197
    17da:	9a 95       	dec	r25
    17dc:	f1 f7       	brne	.-4      	; 0x17da <LCD0_inic+0x84>
    17de:	00 00       	nop
    17e0:	08 95       	ret

000017e2 <LCD0enable>:
void LCD1_strobe(unsigned int num);
void LCD1_reboot(void);
unsigned int LCD_ticks(unsigned int num);
/***Procedure & Function***/
LCD0 LCD0enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port)
{
    17e2:	1f 93       	push	r17
    17e4:	cf 93       	push	r28
    17e6:	df 93       	push	r29
    17e8:	ec 01       	movw	r28, r24
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    17ea:	1f b7       	in	r17, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    17ec:	8f b7       	in	r24, 0x3f	; 63
    17ee:	8f 77       	andi	r24, 0x7F	; 127
    17f0:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	LCD0 lcd0;
	//import parametros
	lcd0_DDR=ddr;
    17f2:	70 93 66 01 	sts	0x0166, r23	; 0x800166 <lcd0_DDR+0x1>
    17f6:	60 93 65 01 	sts	0x0165, r22	; 0x800165 <lcd0_DDR>
	lcd0_PIN=pin;
    17fa:	50 93 5f 01 	sts	0x015F, r21	; 0x80015f <lcd0_PIN+0x1>
    17fe:	40 93 5e 01 	sts	0x015E, r20	; 0x80015e <lcd0_PIN>
	lcd0_PORT=port;
    1802:	30 93 69 01 	sts	0x0169, r19	; 0x800169 <lcd0_PORT+0x1>
    1806:	20 93 68 01 	sts	0x0168, r18	; 0x800168 <lcd0_PORT>
	//inic variables
	*lcd0_DDR=0x00;
    180a:	fb 01       	movw	r30, r22
    180c:	10 82       	st	Z, r1
	*lcd0_PORT=0xFF;
    180e:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <lcd0_PORT>
    1812:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <lcd0_PORT+0x1>
    1816:	8f ef       	ldi	r24, 0xFF	; 255
    1818:	80 83       	st	Z, r24
	lcd0_detect=*lcd0_PIN & (1<<NC);
    181a:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <lcd0_PIN>
    181e:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <lcd0_PIN+0x1>
    1822:	80 81       	ld	r24, Z
    1824:	88 70       	andi	r24, 0x08	; 8
    1826:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <lcd0_detect>
	lcd0.hspace=LCD0_hspace;
	lcd0.clear=LCD0_clear;
	lcd0.gotoxy=LCD0_gotoxy;
	lcd0.reboot=LCD0_reboot;
	//LCD INIC
	LCD0_inic();
    182a:	95 df       	rcall	.-214    	; 0x1756 <LCD0_inic>
	SREG=tSREG;
    182c:	1f bf       	out	0x3f, r17	; 63
	//
	return lcd0;
    182e:	8d ec       	ldi	r24, 0xCD	; 205
    1830:	99 e0       	ldi	r25, 0x09	; 9
    1832:	99 83       	std	Y+1, r25	; 0x01
    1834:	88 83       	st	Y, r24
    1836:	81 e9       	ldi	r24, 0x91	; 145
    1838:	9a e0       	ldi	r25, 0x0A	; 10
    183a:	9b 83       	std	Y+3, r25	; 0x03
    183c:	8a 83       	std	Y+2, r24	; 0x02
    183e:	8c e0       	ldi	r24, 0x0C	; 12
    1840:	9b e0       	ldi	r25, 0x0B	; 11
    1842:	9d 83       	std	Y+5, r25	; 0x05
    1844:	8c 83       	std	Y+4, r24	; 0x04
    1846:	8e e1       	ldi	r24, 0x1E	; 30
    1848:	9b e0       	ldi	r25, 0x0B	; 11
    184a:	9f 83       	std	Y+7, r25	; 0x07
    184c:	8e 83       	std	Y+6, r24	; 0x06
    184e:	83 e2       	ldi	r24, 0x23	; 35
    1850:	9b e0       	ldi	r25, 0x0B	; 11
    1852:	99 87       	std	Y+9, r25	; 0x09
    1854:	88 87       	std	Y+8, r24	; 0x08
    1856:	8c e2       	ldi	r24, 0x2C	; 44
    1858:	9b e0       	ldi	r25, 0x0B	; 11
    185a:	9b 87       	std	Y+11, r25	; 0x0b
    185c:	8a 87       	std	Y+10, r24	; 0x0a
    185e:	8d e3       	ldi	r24, 0x3D	; 61
    1860:	9b e0       	ldi	r25, 0x0B	; 11
    1862:	9d 87       	std	Y+13, r25	; 0x0d
    1864:	8c 87       	std	Y+12, r24	; 0x0c
    1866:	8c e6       	ldi	r24, 0x6C	; 108
    1868:	9b e0       	ldi	r25, 0x0B	; 11
    186a:	9f 87       	std	Y+15, r25	; 0x0f
    186c:	8e 87       	std	Y+14, r24	; 0x0e
    186e:	80 ea       	ldi	r24, 0xA0	; 160
    1870:	9b e0       	ldi	r25, 0x0B	; 11
    1872:	99 8b       	std	Y+17, r25	; 0x11
    1874:	88 8b       	std	Y+16, r24	; 0x10
    1876:	89 e7       	ldi	r24, 0x79	; 121
    1878:	9b e0       	ldi	r25, 0x0B	; 11
    187a:	9b 8b       	std	Y+19, r25	; 0x13
    187c:	8a 8b       	std	Y+18, r24	; 0x12
    187e:	88 e4       	ldi	r24, 0x48	; 72
    1880:	9c e0       	ldi	r25, 0x0C	; 12
    1882:	9d 8b       	std	Y+21, r25	; 0x15
    1884:	8c 8b       	std	Y+20, r24	; 0x14
}
    1886:	ce 01       	movw	r24, r28
    1888:	df 91       	pop	r29
    188a:	cf 91       	pop	r28
    188c:	1f 91       	pop	r17
    188e:	08 95       	ret

00001890 <LCD0_reboot>:
	*lcd0_PORT|=(1<<EN);
	LCD_ticks(num);
	*lcd0_PORT&=~(1<<EN);
}
void LCD0_reboot(void)
{
    1890:	cf 93       	push	r28
    1892:	df 93       	push	r29
	uint8_t tSREG;
	tSREG=SREG;
    1894:	df b7       	in	r29, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1896:	8f b7       	in	r24, 0x3f	; 63
    1898:	8f 77       	andi	r24, 0x7F	; 127
    189a:	8f bf       	out	0x3f, r24	; 63
	//low high detect pin NC
	uint8_t i;
	uint8_t tmp;
	tmp=*lcd0_PIN & (1<<NC);
    189c:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <lcd0_PIN>
    18a0:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <lcd0_PIN+0x1>
    18a4:	c0 81       	ld	r28, Z
    18a6:	c8 70       	andi	r28, 0x08	; 8
	i=tmp^lcd0_detect;
    18a8:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <lcd0_detect>
    18ac:	8c 27       	eor	r24, r28
	i&=tmp;
	if(i)
    18ae:	8c 23       	and	r24, r28
    18b0:	09 f0       	breq	.+2      	; 0x18b4 <LCD0_reboot+0x24>
		LCD0_inic();
    18b2:	51 df       	rcall	.-350    	; 0x1756 <LCD0_inic>
	lcd0_detect=tmp;
    18b4:	c0 93 67 01 	sts	0x0167, r28	; 0x800167 <lcd0_detect>
	SREG=tSREG;
    18b8:	df bf       	out	0x3f, r29	; 63
}
    18ba:	df 91       	pop	r29
    18bc:	cf 91       	pop	r28
    18be:	08 95       	ret

000018c0 <HX711_set_readflag>:
	// returns a copy
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=ONE;
    18c0:	21 e0       	ldi	r18, 0x01	; 1
    18c2:	fc 01       	movw	r30, r24
    18c4:	20 83       	st	Z, r18
    18c6:	08 95       	ret

000018c8 <HX711_check_readflag>:
	self->readflag=ZERO;
}
uint8_t HX711_check_readflag(HX711* self)
{
	return self->readflag;	
}
    18c8:	fc 01       	movw	r30, r24
    18ca:	80 81       	ld	r24, Z
    18cc:	08 95       	ret

000018ce <HX711_read_bit>:
uint8_t HX711_read_bit(void)
{	
	uint16_t bool;
	*hx711_PORT|=(ONE<<hx711_clkpin);
    18ce:	e0 91 6f 01 	lds	r30, 0x016F	; 0x80016f <hx711_PORT>
    18d2:	f0 91 70 01 	lds	r31, 0x0170	; 0x800170 <hx711_PORT+0x1>
    18d6:	20 81       	ld	r18, Z
    18d8:	81 e0       	ldi	r24, 0x01	; 1
    18da:	90 e0       	ldi	r25, 0x00	; 0
    18dc:	00 90 73 01 	lds	r0, 0x0173	; 0x800173 <hx711_clkpin>
    18e0:	02 c0       	rjmp	.+4      	; 0x18e6 <HX711_read_bit+0x18>
    18e2:	88 0f       	add	r24, r24
    18e4:	99 1f       	adc	r25, r25
    18e6:	0a 94       	dec	r0
    18e8:	e2 f7       	brpl	.-8      	; 0x18e2 <HX711_read_bit+0x14>
    18ea:	82 2b       	or	r24, r18
    18ec:	80 83       	st	Z, r24
    18ee:	89 e6       	ldi	r24, 0x69	; 105
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	01 97       	sbiw	r24, 0x01	; 1
	/**0.1us minimum**/
	for(bool=0;bool<HX711_ticks;bool++);
    18f4:	f1 f7       	brne	.-4      	; 0x18f2 <HX711_read_bit+0x24>
	bool=*hx711_PIN & (ONE<<hx711_datapin);
    18f6:	e0 91 6d 01 	lds	r30, 0x016D	; 0x80016d <hx711_PIN>
    18fa:	f0 91 6e 01 	lds	r31, 0x016E	; 0x80016e <hx711_PIN+0x1>
    18fe:	40 81       	ld	r20, Z
    1900:	21 e0       	ldi	r18, 0x01	; 1
    1902:	30 e0       	ldi	r19, 0x00	; 0
    1904:	c9 01       	movw	r24, r18
    1906:	00 90 6c 01 	lds	r0, 0x016C	; 0x80016c <hx711_datapin>
    190a:	02 c0       	rjmp	.+4      	; 0x1910 <HX711_read_bit+0x42>
    190c:	88 0f       	add	r24, r24
    190e:	99 1f       	adc	r25, r25
    1910:	0a 94       	dec	r0
    1912:	e2 f7       	brpl	.-8      	; 0x190c <HX711_read_bit+0x3e>
	*hx711_PORT&=~(ONE<<hx711_clkpin);
    1914:	e0 91 6f 01 	lds	r30, 0x016F	; 0x80016f <hx711_PORT>
    1918:	f0 91 70 01 	lds	r31, 0x0170	; 0x800170 <hx711_PORT+0x1>
    191c:	90 81       	ld	r25, Z
    191e:	00 90 73 01 	lds	r0, 0x0173	; 0x800173 <hx711_clkpin>
    1922:	02 c0       	rjmp	.+4      	; 0x1928 <HX711_read_bit+0x5a>
    1924:	22 0f       	add	r18, r18
    1926:	33 1f       	adc	r19, r19
    1928:	0a 94       	dec	r0
    192a:	e2 f7       	brpl	.-8      	; 0x1924 <HX711_read_bit+0x56>
    192c:	20 95       	com	r18
    192e:	29 23       	and	r18, r25
    1930:	20 83       	st	Z, r18
	return bool;
}
    1932:	84 23       	and	r24, r20
    1934:	08 95       	ret

00001936 <HX711_set_amplify>:
// Gain selector
// AVDD connected to 5V, channel B gain=32
void HX711_set_amplify(HX711* self, uint8_t amplify)
{
	switch(amplify){
    1936:	60 34       	cpi	r22, 0x40	; 64
    1938:	79 f0       	breq	.+30     	; 0x1958 <HX711_set_amplify+0x22>
    193a:	60 38       	cpi	r22, 0x80	; 128
    193c:	19 f0       	breq	.+6      	; 0x1944 <HX711_set_amplify+0xe>
    193e:	60 32       	cpi	r22, 0x20	; 32
    1940:	81 f4       	brne	.+32     	; 0x1962 <HX711_set_amplify+0x2c>
    1942:	05 c0       	rjmp	.+10     	; 0x194e <HX711_set_amplify+0x18>
		case 128:
			self->amplify=ONE; //channel A
    1944:	21 e0       	ldi	r18, 0x01	; 1
    1946:	fc 01       	movw	r30, r24
    1948:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=ONE;
    194a:	23 83       	std	Z+3, r18	; 0x03
			break;
    194c:	08 95       	ret
		case 32:
			self->amplify=2; //channel B
    194e:	22 e0       	ldi	r18, 0x02	; 2
    1950:	fc 01       	movw	r30, r24
    1952:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=2; 
    1954:	23 83       	std	Z+3, r18	; 0x03
			break;
    1956:	08 95       	ret
		case 64:
			self->amplify=3; //channel A
    1958:	23 e0       	ldi	r18, 0x03	; 3
    195a:	fc 01       	movw	r30, r24
    195c:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=3;
    195e:	23 83       	std	Z+3, r18	; 0x03
			break;
    1960:	08 95       	ret
		default:
			self->amplify=ONE;
    1962:	21 e0       	ldi	r18, 0x01	; 1
    1964:	fc 01       	movw	r30, r24
    1966:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=ONE;
    1968:	23 83       	std	Z+3, r18	; 0x03
    196a:	08 95       	ret

0000196c <HX711_raw_average>:
		}
	}
	return self->raw_reading;
}
float HX711_raw_average(HX711* self, uint8_t n)
{
    196c:	0f 93       	push	r16
    196e:	1f 93       	push	r17
    1970:	cf 93       	push	r28
    1972:	df 93       	push	r29
    1974:	ec 01       	movw	r28, r24
	if(self->trigger){
    1976:	89 81       	ldd	r24, Y+1	; 0x01
    1978:	88 23       	and	r24, r24
    197a:	91 f1       	breq	.+100    	; 0x19e0 <HX711_raw_average+0x74>
		if(self->av_n < n){
    197c:	8a 89       	ldd	r24, Y+18	; 0x12
    197e:	86 17       	cp	r24, r22
    1980:	98 f4       	brcc	.+38     	; 0x19a8 <HX711_raw_average+0x3c>
			self->sum+=self->raw_reading;
    1982:	0e 85       	ldd	r16, Y+14	; 0x0e
    1984:	1f 85       	ldd	r17, Y+15	; 0x0f
    1986:	28 89       	ldd	r18, Y+16	; 0x10
    1988:	39 89       	ldd	r19, Y+17	; 0x11
    198a:	4a 85       	ldd	r20, Y+10	; 0x0a
    198c:	5b 85       	ldd	r21, Y+11	; 0x0b
    198e:	6c 85       	ldd	r22, Y+12	; 0x0c
    1990:	7d 85       	ldd	r23, Y+13	; 0x0d
    1992:	40 0f       	add	r20, r16
    1994:	51 1f       	adc	r21, r17
    1996:	62 1f       	adc	r22, r18
    1998:	73 1f       	adc	r23, r19
    199a:	4e 87       	std	Y+14, r20	; 0x0e
    199c:	5f 87       	std	Y+15, r21	; 0x0f
    199e:	68 8b       	std	Y+16, r22	; 0x10
    19a0:	79 8b       	std	Y+17, r23	; 0x11
			self->av_n++;
    19a2:	8f 5f       	subi	r24, 0xFF	; 255
    19a4:	8a 8b       	std	Y+18, r24	; 0x12
    19a6:	1b c0       	rjmp	.+54     	; 0x19de <HX711_raw_average+0x72>
			}else{
			self->av_n=0;
			self->raw_mean=self->sum/n;
    19a8:	26 2f       	mov	r18, r22
    19aa:	30 e0       	ldi	r19, 0x00	; 0
    19ac:	40 e0       	ldi	r20, 0x00	; 0
    19ae:	50 e0       	ldi	r21, 0x00	; 0
    19b0:	6e 85       	ldd	r22, Y+14	; 0x0e
    19b2:	7f 85       	ldd	r23, Y+15	; 0x0f
    19b4:	88 89       	ldd	r24, Y+16	; 0x10
    19b6:	99 89       	ldd	r25, Y+17	; 0x11
    19b8:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <__divmodsi4>
    19bc:	ca 01       	movw	r24, r20
    19be:	b9 01       	movw	r22, r18
    19c0:	b6 d5       	rcall	.+2924   	; 0x252e <__floatsisf>
    19c2:	6b 8b       	std	Y+19, r22	; 0x13
    19c4:	7c 8b       	std	Y+20, r23	; 0x14
    19c6:	8d 8b       	std	Y+21, r24	; 0x15
    19c8:	9e 8b       	std	Y+22, r25	; 0x16
			self->sum=0;
			self->sum+=self->raw_reading;
    19ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    19cc:	9b 85       	ldd	r25, Y+11	; 0x0b
    19ce:	ac 85       	ldd	r26, Y+12	; 0x0c
    19d0:	bd 85       	ldd	r27, Y+13	; 0x0d
    19d2:	8e 87       	std	Y+14, r24	; 0x0e
    19d4:	9f 87       	std	Y+15, r25	; 0x0f
    19d6:	a8 8b       	std	Y+16, r26	; 0x10
    19d8:	b9 8b       	std	Y+17, r27	; 0x11
			self->av_n++;
    19da:	81 e0       	ldi	r24, 0x01	; 1
    19dc:	8a 8b       	std	Y+18, r24	; 0x12
		}
		self->trigger=ZERO;
    19de:	19 82       	std	Y+1, r1	; 0x01
	}
	return self->raw_mean;
    19e0:	6b 89       	ldd	r22, Y+19	; 0x13
    19e2:	7c 89       	ldd	r23, Y+20	; 0x14
    19e4:	8d 89       	ldd	r24, Y+21	; 0x15
    19e6:	9e 89       	ldd	r25, Y+22	; 0x16
}
    19e8:	df 91       	pop	r29
    19ea:	cf 91       	pop	r28
    19ec:	1f 91       	pop	r17
    19ee:	0f 91       	pop	r16
    19f0:	08 95       	ret

000019f2 <HX711_get_cal>:
struct HX711_calibration* HX711_get_cal(HX711* self)
{
	return &(self->cal_data);
}
    19f2:	47 96       	adiw	r24, 0x17	; 23
    19f4:	08 95       	ret

000019f6 <HX711_get_offset_32>:
int32_t HX711_get_offset_32(HX711* self)
{
	return self->cal_data.offset_32;
    19f6:	fc 01       	movw	r30, r24
    19f8:	67 89       	ldd	r22, Z+23	; 0x17
    19fa:	70 8d       	ldd	r23, Z+24	; 0x18
    19fc:	81 8d       	ldd	r24, Z+25	; 0x19
    19fe:	92 8d       	ldd	r25, Z+26	; 0x1a
}
    1a00:	08 95       	ret

00001a02 <HX711_get_offset_64>:
int32_t HX711_get_offset_64(HX711* self)
{
	return self->cal_data.offset_64;
    1a02:	fc 01       	movw	r30, r24
    1a04:	63 8d       	ldd	r22, Z+27	; 0x1b
    1a06:	74 8d       	ldd	r23, Z+28	; 0x1c
    1a08:	85 8d       	ldd	r24, Z+29	; 0x1d
    1a0a:	96 8d       	ldd	r25, Z+30	; 0x1e
}
    1a0c:	08 95       	ret

00001a0e <HX711_get_offset_128>:
int32_t HX711_get_offset_128(HX711* self)
{
	return self->cal_data.offset_128;
    1a0e:	fc 01       	movw	r30, r24
    1a10:	67 8d       	ldd	r22, Z+31	; 0x1f
    1a12:	70 a1       	ldd	r23, Z+32	; 0x20
    1a14:	81 a1       	ldd	r24, Z+33	; 0x21
    1a16:	92 a1       	ldd	r25, Z+34	; 0x22
}
    1a18:	08 95       	ret

00001a1a <HX711_get_divfactor_32>:
uint8_t HX711_get_divfactor_32(HX711* self)
{
	return self->cal_data.divfactor_32;
}
    1a1a:	fc 01       	movw	r30, r24
    1a1c:	83 a1       	ldd	r24, Z+35	; 0x23
    1a1e:	08 95       	ret

00001a20 <HX711_get_divfactor_64>:
uint8_t HX711_get_divfactor_64(HX711* self)
{
	return self->cal_data.divfactor_64;
}
    1a20:	fc 01       	movw	r30, r24
    1a22:	84 a1       	ldd	r24, Z+36	; 0x24
    1a24:	08 95       	ret

00001a26 <HX711_get_divfactor_128>:
uint8_t HX711_get_divfactor_128(HX711* self)
{
	return self->cal_data.divfactor_128;
}
    1a26:	fc 01       	movw	r30, r24
    1a28:	85 a1       	ldd	r24, Z+37	; 0x25
    1a2a:	08 95       	ret

00001a2c <HX711_read_raw>:
}
/***
Function to be used in the interrupt routine with appropriate cycle period.
***/
int32_t HX711_read_raw(HX711* self)
{
    1a2c:	0f 93       	push	r16
    1a2e:	1f 93       	push	r17
    1a30:	cf 93       	push	r28
    1a32:	df 93       	push	r29
    1a34:	ec 01       	movw	r28, r24
	uint8_t aindex, bindex;
	int32_t value;
	aindex = self->bufferindex-ONE;
    1a36:	09 85       	ldd	r16, Y+9	; 0x09
	bindex = self->bitcount-ONE;
    1a38:	1c 81       	ldd	r17, Y+4	; 0x04
	ptr=(int32_t*)self->buffer;
    1a3a:	05 96       	adiw	r24, 0x05	; 5
    1a3c:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <ptr+0x1>
    1a40:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <ptr>
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
    1a44:	e0 91 6d 01 	lds	r30, 0x016D	; 0x80016d <hx711_PIN>
    1a48:	f0 91 6e 01 	lds	r31, 0x016E	; 0x80016e <hx711_PIN+0x1>
    1a4c:	80 81       	ld	r24, Z
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	00 90 6c 01 	lds	r0, 0x016C	; 0x80016c <hx711_datapin>
    1a54:	02 c0       	rjmp	.+4      	; 0x1a5a <HX711_read_raw+0x2e>
    1a56:	95 95       	asr	r25
    1a58:	87 95       	ror	r24
    1a5a:	0a 94       	dec	r0
    1a5c:	e2 f7       	brpl	.-8      	; 0x1a56 <HX711_read_raw+0x2a>
    1a5e:	80 fd       	sbrc	r24, 0
    1a60:	06 c0       	rjmp	.+12     	; 0x1a6e <HX711_read_raw+0x42>
    1a62:	88 81       	ld	r24, Y
    1a64:	81 11       	cpse	r24, r1
    1a66:	07 c0       	rjmp	.+14     	; 0x1a76 <HX711_read_raw+0x4a>
	// returns a copy
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=ONE;
    1a68:	81 e0       	ldi	r24, 0x01	; 1
    1a6a:	88 83       	st	Y, r24
    1a6c:	04 c0       	rjmp	.+8      	; 0x1a76 <HX711_read_raw+0x4a>
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
		HX711_set_readflag(self);
	}
	/***Interrupt 24 times sequence***/
	if(self->readflag){
    1a6e:	88 81       	ld	r24, Y
    1a70:	88 23       	and	r24, r24
    1a72:	09 f4       	brne	.+2      	; 0x1a76 <HX711_read_raw+0x4a>
    1a74:	48 c0       	rjmp	.+144    	; 0x1b06 <HX711_read_raw+0xda>
		if(self->bitcount){
    1a76:	11 23       	and	r17, r17
    1a78:	29 f1       	breq	.+74     	; 0x1ac4 <HX711_read_raw+0x98>
			if (HX711_read_bit())
    1a7a:	29 df       	rcall	.-430    	; 0x18ce <HX711_read_bit>
    1a7c:	88 23       	and	r24, r24
    1a7e:	a9 f0       	breq	.+42     	; 0x1aaa <HX711_read_raw+0x7e>
				self->buffer[aindex] |= ONE<<(bindex-(aindex*8));
    1a80:	01 50       	subi	r16, 0x01	; 1
    1a82:	80 2f       	mov	r24, r16
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	fe 01       	movw	r30, r28
    1a88:	e8 0f       	add	r30, r24
    1a8a:	f9 1f       	adc	r31, r25
    1a8c:	11 50       	subi	r17, 0x01	; 1
    1a8e:	28 e0       	ldi	r18, 0x08	; 8
    1a90:	02 9f       	mul	r16, r18
    1a92:	10 19       	sub	r17, r0
    1a94:	11 24       	eor	r1, r1
    1a96:	81 e0       	ldi	r24, 0x01	; 1
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	02 c0       	rjmp	.+4      	; 0x1aa0 <HX711_read_raw+0x74>
    1a9c:	88 0f       	add	r24, r24
    1a9e:	99 1f       	adc	r25, r25
    1aa0:	1a 95       	dec	r17
    1aa2:	e2 f7       	brpl	.-8      	; 0x1a9c <HX711_read_raw+0x70>
    1aa4:	95 81       	ldd	r25, Z+5	; 0x05
    1aa6:	89 2b       	or	r24, r25
    1aa8:	85 83       	std	Z+5, r24	; 0x05
			self->bitcount--;
    1aaa:	8c 81       	ldd	r24, Y+4	; 0x04
    1aac:	81 50       	subi	r24, 0x01	; 1
    1aae:	8c 83       	std	Y+4, r24	; 0x04
			if(self->bitcount==16)
    1ab0:	80 31       	cpi	r24, 0x10	; 16
    1ab2:	19 f4       	brne	.+6      	; 0x1aba <HX711_read_raw+0x8e>
				self->bufferindex=2;
    1ab4:	82 e0       	ldi	r24, 0x02	; 2
    1ab6:	89 87       	std	Y+9, r24	; 0x09
    1ab8:	26 c0       	rjmp	.+76     	; 0x1b06 <HX711_read_raw+0xda>
			if(self->bitcount==8)
    1aba:	88 30       	cpi	r24, 0x08	; 8
    1abc:	21 f5       	brne	.+72     	; 0x1b06 <HX711_read_raw+0xda>
				self->bufferindex=ONE;
    1abe:	81 e0       	ldi	r24, 0x01	; 1
    1ac0:	89 87       	std	Y+9, r24	; 0x09
    1ac2:	21 c0       	rjmp	.+66     	; 0x1b06 <HX711_read_raw+0xda>
		}else{
			if(self->ampcount){
    1ac4:	8b 81       	ldd	r24, Y+3	; 0x03
    1ac6:	88 23       	and	r24, r24
				HX711_read_bit();
    1ac8:	29 f0       	breq	.+10     	; 0x1ad4 <HX711_read_raw+0xa8>
    1aca:	01 df       	rcall	.-510    	; 0x18ce <HX711_read_bit>
				self->ampcount--;
    1acc:	8b 81       	ldd	r24, Y+3	; 0x03
    1ace:	81 50       	subi	r24, 0x01	; 1
    1ad0:	8b 83       	std	Y+3, r24	; 0x03
    1ad2:	19 c0       	rjmp	.+50     	; 0x1b06 <HX711_read_raw+0xda>
			}else{
				value=*(ptr);
    1ad4:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <ptr>
    1ad8:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <ptr+0x1>
    1adc:	80 81       	ld	r24, Z
    1ade:	91 81       	ldd	r25, Z+1	; 0x01
    1ae0:	a2 81       	ldd	r26, Z+2	; 0x02
    1ae2:	b3 81       	ldd	r27, Z+3	; 0x03
				self->raw_reading=value;
    1ae4:	8a 87       	std	Y+10, r24	; 0x0a
    1ae6:	9b 87       	std	Y+11, r25	; 0x0b
    1ae8:	ac 87       	std	Y+12, r26	; 0x0c
    1aea:	bd 87       	std	Y+13, r27	; 0x0d
				self->bitcount=HX711_ADC_bits;
    1aec:	88 e1       	ldi	r24, 0x18	; 24
    1aee:	8c 83       	std	Y+4, r24	; 0x04
				self->bufferindex=HX711_VECT_SIZE-ONE;
    1af0:	83 e0       	ldi	r24, 0x03	; 3
    1af2:	89 87       	std	Y+9, r24	; 0x09
				self->ampcount=self->amplify;
    1af4:	8a 81       	ldd	r24, Y+2	; 0x02
    1af6:	8b 83       	std	Y+3, r24	; 0x03
				self->buffer[0]=ZERO;
    1af8:	1d 82       	std	Y+5, r1	; 0x05
				self->buffer[1]=ZERO;
    1afa:	1e 82       	std	Y+6, r1	; 0x06
				self->buffer[2]=ZERO;
    1afc:	1f 82       	std	Y+7, r1	; 0x07
				self->buffer[3]=ZERO;
    1afe:	18 86       	std	Y+8, r1	; 0x08
				self->trigger=ONE;
    1b00:	81 e0       	ldi	r24, 0x01	; 1
    1b02:	89 83       	std	Y+1, r24	; 0x01
{
	self->readflag=ONE;
}
void HX711_reset_readflag(HX711* self)
{
	self->readflag=ZERO;
    1b04:	18 82       	st	Y, r1
				/***Reset ready for next query***/
				HX711_reset_readflag(self);
			}
		}
	}
	return self->raw_reading;
    1b06:	6a 85       	ldd	r22, Y+10	; 0x0a
    1b08:	7b 85       	ldd	r23, Y+11	; 0x0b
    1b0a:	8c 85       	ldd	r24, Y+12	; 0x0c
    1b0c:	9d 85       	ldd	r25, Y+13	; 0x0d
}
    1b0e:	df 91       	pop	r29
    1b10:	cf 91       	pop	r28
    1b12:	1f 91       	pop	r17
    1b14:	0f 91       	pop	r16
    1b16:	08 95       	ret

00001b18 <HX711enable>:
uint8_t HX711_get_divfactor_32(HX711* self);
uint8_t HX711_get_divfactor_64(HX711* self);
uint8_t HX711_get_divfactor_128(HX711* self);
/***Procedure & Function***/
HX711 HX711enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port, uint8_t datapin, uint8_t clkpin)
{
    1b18:	ef 92       	push	r14
    1b1a:	0f 93       	push	r16
    1b1c:	fc 01       	movw	r30, r24
    1b1e:	da 01       	movw	r26, r20
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    1b20:	5f b7       	in	r21, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1b22:	8f b7       	in	r24, 0x3f	; 63
    1b24:	8f 77       	andi	r24, 0x7F	; 127
    1b26:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	HX711 hx711;
	//import parametros
	hx711_DDR=ddr;
    1b28:	70 93 75 01 	sts	0x0175, r23	; 0x800175 <hx711_DDR+0x1>
    1b2c:	60 93 74 01 	sts	0x0174, r22	; 0x800174 <hx711_DDR>
	hx711_PIN=pin;
    1b30:	b0 93 6e 01 	sts	0x016E, r27	; 0x80016e <hx711_PIN+0x1>
    1b34:	a0 93 6d 01 	sts	0x016D, r26	; 0x80016d <hx711_PIN>
	hx711_PORT=port;
    1b38:	30 93 70 01 	sts	0x0170, r19	; 0x800170 <hx711_PORT+0x1>
    1b3c:	20 93 6f 01 	sts	0x016F, r18	; 0x80016f <hx711_PORT>
	hx711_datapin=datapin;
    1b40:	00 93 6c 01 	sts	0x016C, r16	; 0x80016c <hx711_datapin>
	hx711_clkpin=clkpin;
    1b44:	e0 92 73 01 	sts	0x0173, r14	; 0x800173 <hx711_clkpin>
	//inic variables
	*hx711_DDR |= (ONE<<clkpin);
    1b48:	db 01       	movw	r26, r22
    1b4a:	4c 91       	ld	r20, X
    1b4c:	81 e0       	ldi	r24, 0x01	; 1
    1b4e:	90 e0       	ldi	r25, 0x00	; 0
    1b50:	9c 01       	movw	r18, r24
    1b52:	02 c0       	rjmp	.+4      	; 0x1b58 <HX711enable+0x40>
    1b54:	22 0f       	add	r18, r18
    1b56:	33 1f       	adc	r19, r19
    1b58:	ea 94       	dec	r14
    1b5a:	e2 f7       	brpl	.-8      	; 0x1b54 <HX711enable+0x3c>
    1b5c:	24 2b       	or	r18, r20
    1b5e:	2c 93       	st	X, r18
	*hx711_PORT |= (ONE<<datapin);
    1b60:	a0 91 6f 01 	lds	r26, 0x016F	; 0x80016f <hx711_PORT>
    1b64:	b0 91 70 01 	lds	r27, 0x0170	; 0x800170 <hx711_PORT+0x1>
    1b68:	2c 91       	ld	r18, X
    1b6a:	02 c0       	rjmp	.+4      	; 0x1b70 <HX711enable+0x58>
    1b6c:	88 0f       	add	r24, r24
    1b6e:	99 1f       	adc	r25, r25
    1b70:	0a 95       	dec	r16
    1b72:	e2 f7       	brpl	.-8      	; 0x1b6c <HX711enable+0x54>
    1b74:	82 2b       	or	r24, r18
    1b76:	8c 93       	st	X, r24
	hx711.get_offset_64=HX711_get_offset_64;
	hx711.get_offset_128=HX711_get_offset_128;
	hx711.get_divfactor_32=HX711_get_divfactor_32;
	hx711.get_divfactor_64=HX711_get_divfactor_64;
	hx711.get_divfactor_128=HX711_get_divfactor_128;
	SREG=tSREG;
    1b78:	5f bf       	out	0x3f, r21	; 63
	// returns a copy
	return hx711;
    1b7a:	10 82       	st	Z, r1
    1b7c:	11 82       	std	Z+1, r1	; 0x01
    1b7e:	81 e0       	ldi	r24, 0x01	; 1
    1b80:	82 83       	std	Z+2, r24	; 0x02
    1b82:	83 83       	std	Z+3, r24	; 0x03
    1b84:	88 e1       	ldi	r24, 0x18	; 24
    1b86:	84 83       	std	Z+4, r24	; 0x04
    1b88:	15 82       	std	Z+5, r1	; 0x05
    1b8a:	16 82       	std	Z+6, r1	; 0x06
    1b8c:	17 82       	std	Z+7, r1	; 0x07
    1b8e:	10 86       	std	Z+8, r1	; 0x08
    1b90:	83 e0       	ldi	r24, 0x03	; 3
    1b92:	81 87       	std	Z+9, r24	; 0x09
    1b94:	12 86       	std	Z+10, r1	; 0x0a
    1b96:	13 86       	std	Z+11, r1	; 0x0b
    1b98:	14 86       	std	Z+12, r1	; 0x0c
    1b9a:	15 86       	std	Z+13, r1	; 0x0d
    1b9c:	16 86       	std	Z+14, r1	; 0x0e
    1b9e:	17 86       	std	Z+15, r1	; 0x0f
    1ba0:	10 8a       	std	Z+16, r1	; 0x10
    1ba2:	11 8a       	std	Z+17, r1	; 0x11
    1ba4:	12 8a       	std	Z+18, r1	; 0x12
    1ba6:	13 8a       	std	Z+19, r1	; 0x13
    1ba8:	14 8a       	std	Z+20, r1	; 0x14
    1baa:	15 8a       	std	Z+21, r1	; 0x15
    1bac:	16 8a       	std	Z+22, r1	; 0x16
    1bae:	80 ec       	ldi	r24, 0xC0	; 192
    1bb0:	9f e8       	ldi	r25, 0x8F	; 143
    1bb2:	a0 e0       	ldi	r26, 0x00	; 0
    1bb4:	b0 e0       	ldi	r27, 0x00	; 0
    1bb6:	87 8b       	std	Z+23, r24	; 0x17
    1bb8:	90 8f       	std	Z+24, r25	; 0x18
    1bba:	a1 8f       	std	Z+25, r26	; 0x19
    1bbc:	b2 8f       	std	Z+26, r27	; 0x1a
    1bbe:	80 e8       	ldi	r24, 0x80	; 128
    1bc0:	9f e1       	ldi	r25, 0x1F	; 31
    1bc2:	a1 e0       	ldi	r26, 0x01	; 1
    1bc4:	b0 e0       	ldi	r27, 0x00	; 0
    1bc6:	83 8f       	std	Z+27, r24	; 0x1b
    1bc8:	94 8f       	std	Z+28, r25	; 0x1c
    1bca:	a5 8f       	std	Z+29, r26	; 0x1d
    1bcc:	b6 8f       	std	Z+30, r27	; 0x1e
    1bce:	80 e0       	ldi	r24, 0x00	; 0
    1bd0:	9f e3       	ldi	r25, 0x3F	; 63
    1bd2:	a2 e0       	ldi	r26, 0x02	; 2
    1bd4:	b0 e0       	ldi	r27, 0x00	; 0
    1bd6:	87 8f       	std	Z+31, r24	; 0x1f
    1bd8:	90 a3       	std	Z+32, r25	; 0x20
    1bda:	a1 a3       	std	Z+33, r26	; 0x21
    1bdc:	b2 a3       	std	Z+34, r27	; 0x22
    1bde:	87 e1       	ldi	r24, 0x17	; 23
    1be0:	83 a3       	std	Z+35, r24	; 0x23
    1be2:	8e e2       	ldi	r24, 0x2E	; 46
    1be4:	84 a3       	std	Z+36, r24	; 0x24
    1be6:	8c e5       	ldi	r24, 0x5C	; 92
    1be8:	85 a3       	std	Z+37, r24	; 0x25
    1bea:	16 a2       	std	Z+38, r1	; 0x26
    1bec:	80 e6       	ldi	r24, 0x60	; 96
    1bee:	9c e0       	ldi	r25, 0x0C	; 12
    1bf0:	90 a7       	std	Z+40, r25	; 0x28
    1bf2:	87 a3       	std	Z+39, r24	; 0x27
    1bf4:	84 e6       	ldi	r24, 0x64	; 100
    1bf6:	9c e0       	ldi	r25, 0x0C	; 12
    1bf8:	92 a7       	std	Z+42, r25	; 0x2a
    1bfa:	81 a7       	std	Z+41, r24	; 0x29
    1bfc:	87 e6       	ldi	r24, 0x67	; 103
    1bfe:	9c e0       	ldi	r25, 0x0C	; 12
    1c00:	94 a7       	std	Z+44, r25	; 0x2c
    1c02:	83 a7       	std	Z+43, r24	; 0x2b
    1c04:	8b e9       	ldi	r24, 0x9B	; 155
    1c06:	9c e0       	ldi	r25, 0x0C	; 12
    1c08:	96 a7       	std	Z+46, r25	; 0x2e
    1c0a:	85 a7       	std	Z+45, r24	; 0x2d
    1c0c:	86 e1       	ldi	r24, 0x16	; 22
    1c0e:	9d e0       	ldi	r25, 0x0D	; 13
    1c10:	90 ab       	std	Z+48, r25	; 0x30
    1c12:	87 a7       	std	Z+47, r24	; 0x2f
    1c14:	86 eb       	ldi	r24, 0xB6	; 182
    1c16:	9c e0       	ldi	r25, 0x0C	; 12
    1c18:	92 ab       	std	Z+50, r25	; 0x32
    1c1a:	81 ab       	std	Z+49, r24	; 0x31
    1c1c:	89 ef       	ldi	r24, 0xF9	; 249
    1c1e:	9c e0       	ldi	r25, 0x0C	; 12
    1c20:	94 ab       	std	Z+52, r25	; 0x34
    1c22:	83 ab       	std	Z+51, r24	; 0x33
    1c24:	8b ef       	ldi	r24, 0xFB	; 251
    1c26:	9c e0       	ldi	r25, 0x0C	; 12
    1c28:	96 ab       	std	Z+54, r25	; 0x36
    1c2a:	85 ab       	std	Z+53, r24	; 0x35
    1c2c:	81 e0       	ldi	r24, 0x01	; 1
    1c2e:	9d e0       	ldi	r25, 0x0D	; 13
    1c30:	90 af       	std	Z+56, r25	; 0x38
    1c32:	87 ab       	std	Z+55, r24	; 0x37
    1c34:	87 e0       	ldi	r24, 0x07	; 7
    1c36:	9d e0       	ldi	r25, 0x0D	; 13
    1c38:	92 af       	std	Z+58, r25	; 0x3a
    1c3a:	81 af       	std	Z+57, r24	; 0x39
    1c3c:	8d e0       	ldi	r24, 0x0D	; 13
    1c3e:	9d e0       	ldi	r25, 0x0D	; 13
    1c40:	94 af       	std	Z+60, r25	; 0x3c
    1c42:	83 af       	std	Z+59, r24	; 0x3b
    1c44:	80 e1       	ldi	r24, 0x10	; 16
    1c46:	9d e0       	ldi	r25, 0x0D	; 13
    1c48:	96 af       	std	Z+62, r25	; 0x3e
    1c4a:	85 af       	std	Z+61, r24	; 0x3d
    1c4c:	df 01       	movw	r26, r30
    1c4e:	df 96       	adiw	r26, 0x3f	; 63
    1c50:	83 e1       	ldi	r24, 0x13	; 19
    1c52:	9d e0       	ldi	r25, 0x0D	; 13
    1c54:	8d 93       	st	X+, r24
    1c56:	9c 93       	st	X, r25
}
    1c58:	cf 01       	movw	r24, r30
    1c5a:	0f 91       	pop	r16
    1c5c:	ef 90       	pop	r14
    1c5e:	08 95       	ret

00001c60 <PORTINIT>:
** procedure and function
*/
void PORTINIT(void)
{
	//Control buttons
	PORTF |= 0x3F;
    1c60:	e2 e6       	ldi	r30, 0x62	; 98
    1c62:	f0 e0       	ldi	r31, 0x00	; 0
    1c64:	80 81       	ld	r24, Z
    1c66:	8f 63       	ori	r24, 0x3F	; 63
    1c68:	80 83       	st	Z, r24
	//troubleshooting output
	DDRC = 0xFF;
    1c6a:	8f ef       	ldi	r24, 0xFF	; 255
    1c6c:	84 bb       	out	0x14, r24	; 20
	PORTC = 0xFF;
    1c6e:	85 bb       	out	0x15, r24	; 21
    1c70:	08 95       	ret

00001c72 <main>:
** Header
*/
void PORTINIT();
/****MAIN****/
int main(void)
{
    1c72:	cf 93       	push	r28
    1c74:	df 93       	push	r29
    1c76:	cd b7       	in	r28, 0x3d	; 61
    1c78:	de b7       	in	r29, 0x3e	; 62
    1c7a:	cd 5d       	subi	r28, 0xDD	; 221
    1c7c:	d1 09       	sbc	r29, r1
    1c7e:	0f b6       	in	r0, 0x3f	; 63
    1c80:	f8 94       	cli
    1c82:	de bf       	out	0x3e, r29	; 62
    1c84:	0f be       	out	0x3f, r0	; 63
    1c86:	cd bf       	out	0x3d, r28	; 61
	PORTINIT();
    1c88:	eb df       	rcall	.-42     	; 0x1c60 <PORTINIT>
	
	HX711_ptr=&HX711_data; // CALIBRATION DATA BUS
    1c8a:	0f 2e       	mov	r0, r31
    1c8c:	f4 e9       	ldi	r31, 0x94	; 148
    1c8e:	cf 2e       	mov	r12, r31
    1c90:	f1 e0       	ldi	r31, 0x01	; 1
    1c92:	df 2e       	mov	r13, r31
    1c94:	f0 2d       	mov	r31, r0
    1c96:	d0 92 a5 01 	sts	0x01A5, r13	; 0x8001a5 <HX711_ptr+0x1>
    1c9a:	c0 92 a4 01 	sts	0x01A4, r12	; 0x8001a4 <HX711_ptr>
	
	/***INICIALIZE OBJECTS***/
	F = EXPLODEenable();
    1c9e:	ce 01       	movw	r24, r28
    1ca0:	83 59       	subi	r24, 0x93	; 147
    1ca2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca4:	0e 94 00 04 	call	0x800	; 0x800 <EXPLODEenable>
    1ca8:	84 e1       	ldi	r24, 0x14	; 20
    1caa:	fe 01       	movw	r30, r28
    1cac:	e3 59       	subi	r30, 0x93	; 147
    1cae:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb0:	ad e1       	ldi	r26, 0x1D	; 29
    1cb2:	b2 e0       	ldi	r27, 0x02	; 2
    1cb4:	01 90       	ld	r0, Z+
    1cb6:	0d 92       	st	X+, r0
    1cb8:	8a 95       	dec	r24
    1cba:	e1 f7       	brne	.-8      	; 0x1cb4 <main+0x42>
	FUNC function = FUNCenable();
    1cbc:	ce 01       	movw	r24, r28
    1cbe:	01 96       	adiw	r24, 0x01	; 1
    1cc0:	cf d9       	rcall	.-3170   	; 0x1060 <FUNCenable>
    1cc2:	2d 96       	adiw	r28, 0x0d	; 13
    1cc4:	8e ad       	ldd	r24, Y+62	; 0x3e
    1cc6:	9f ad       	ldd	r25, Y+63	; 0x3f
    1cc8:	2d 97       	sbiw	r28, 0x0d	; 13
    1cca:	c4 52       	subi	r28, 0x24	; 36
    1ccc:	df 4f       	sbci	r29, 0xFF	; 255
    1cce:	99 83       	std	Y+1, r25	; 0x01
    1cd0:	88 83       	st	Y, r24
    1cd2:	cc 5d       	subi	r28, 0xDC	; 220
    1cd4:	d0 40       	sbci	r29, 0x00	; 0
	lcd0 = LCD0enable(&DDRA,&PINA,&PORTA);
    1cd6:	2b e3       	ldi	r18, 0x3B	; 59
    1cd8:	30 e0       	ldi	r19, 0x00	; 0
    1cda:	49 e3       	ldi	r20, 0x39	; 57
    1cdc:	50 e0       	ldi	r21, 0x00	; 0
    1cde:	6a e3       	ldi	r22, 0x3A	; 58
    1ce0:	70 e0       	ldi	r23, 0x00	; 0
    1ce2:	ce 01       	movw	r24, r28
    1ce4:	8f 57       	subi	r24, 0x7F	; 127
    1ce6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ce8:	7c dd       	rcall	.-1288   	; 0x17e2 <LCD0enable>
    1cea:	86 e1       	ldi	r24, 0x16	; 22
    1cec:	fe 01       	movw	r30, r28
    1cee:	ef 57       	subi	r30, 0x7F	; 127
    1cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf2:	a6 ec       	ldi	r26, 0xC6	; 198
    1cf4:	b1 e0       	ldi	r27, 0x01	; 1
    1cf6:	01 90       	ld	r0, Z+
    1cf8:	0d 92       	st	X+, r0
    1cfa:	8a 95       	dec	r24
    1cfc:	e1 f7       	brne	.-8      	; 0x1cf6 <main+0x84>
	TIMER_COUNTER0 timer0 = TIMER_COUNTER0enable(2,2); //2,2
    1cfe:	42 e0       	ldi	r20, 0x02	; 2
    1d00:	62 e0       	ldi	r22, 0x02	; 2
    1d02:	ce 01       	movw	r24, r28
    1d04:	83 5b       	subi	r24, 0xB3	; 179
    1d06:	9f 4f       	sbci	r25, 0xFF	; 255
    1d08:	0e 94 cd 01 	call	0x39a	; 0x39a <TIMER_COUNTER0enable>
	TIMER_COUNTER1 timer1 = TIMER_COUNTER1enable(4,2); //4,2
    1d0c:	42 e0       	ldi	r20, 0x02	; 2
    1d0e:	64 e0       	ldi	r22, 0x04	; 4
    1d10:	ce 01       	movw	r24, r28
    1d12:	83 5a       	subi	r24, 0xA3	; 163
    1d14:	9f 4f       	sbci	r25, 0xFF	; 255
    1d16:	0e 94 11 02 	call	0x422	; 0x422 <TIMER_COUNTER1enable>
	hx = HX711enable(&DDRF, &PINF, &PORTF, 6, 7); //6,7
    1d1a:	0f 2e       	mov	r0, r31
    1d1c:	f7 e0       	ldi	r31, 0x07	; 7
    1d1e:	ef 2e       	mov	r14, r31
    1d20:	f0 2d       	mov	r31, r0
    1d22:	06 e0       	ldi	r16, 0x06	; 6
    1d24:	22 e6       	ldi	r18, 0x62	; 98
    1d26:	30 e0       	ldi	r19, 0x00	; 0
    1d28:	40 e2       	ldi	r20, 0x20	; 32
    1d2a:	50 e0       	ldi	r21, 0x00	; 0
    1d2c:	61 e6       	ldi	r22, 0x61	; 97
    1d2e:	70 e0       	ldi	r23, 0x00	; 0
    1d30:	ce 01       	movw	r24, r28
    1d32:	89 56       	subi	r24, 0x69	; 105
    1d34:	9f 4f       	sbci	r25, 0xFF	; 255
    1d36:	f0 de       	rcall	.-544    	; 0x1b18 <HX711enable>
    1d38:	81 e4       	ldi	r24, 0x41	; 65
    1d3a:	fe 01       	movw	r30, r28
    1d3c:	e9 56       	subi	r30, 0x69	; 105
    1d3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d40:	ac ed       	ldi	r26, 0xDC	; 220
    1d42:	b1 e0       	ldi	r27, 0x01	; 1
    1d44:	01 90       	ld	r0, Z+
    1d46:	0d 92       	st	X+, r0
    1d48:	8a 95       	dec	r24
    1d4a:	e1 f7       	brne	.-8      	; 0x1d44 <main+0xd2>
	eprom = EEPROMenable();
    1d4c:	ce 01       	movw	r24, r28
    1d4e:	83 59       	subi	r24, 0x93	; 147
    1d50:	9f 4f       	sbci	r25, 0xFF	; 255
    1d52:	0e 94 79 03 	call	0x6f2	; 0x6f2 <EEPROMenable>
    1d56:	8e e1       	ldi	r24, 0x1E	; 30
    1d58:	fe 01       	movw	r30, r28
    1d5a:	e3 59       	subi	r30, 0x93	; 147
    1d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5e:	a6 e7       	ldi	r26, 0x76	; 118
    1d60:	b1 e0       	ldi	r27, 0x01	; 1
    1d62:	01 90       	ld	r0, Z+
    1d64:	0d 92       	st	X+, r0
    1d66:	8a 95       	dec	r24
    1d68:	e1 f7       	brne	.-8      	; 0x1d62 <main+0xf0>
	float tmp;
	float value=0;
	float publish=0;
	
	// Get default values to memory
	HX711_data.offset_32 = hx.get_offset_32(&hx);
    1d6a:	0c ed       	ldi	r16, 0xDC	; 220
    1d6c:	11 e0       	ldi	r17, 0x01	; 1
    1d6e:	d8 01       	movw	r26, r16
    1d70:	d5 96       	adiw	r26, 0x35	; 53
    1d72:	6d 91       	ld	r22, X+
    1d74:	7c 91       	ld	r23, X
    1d76:	d6 97       	sbiw	r26, 0x36	; 54
    1d78:	c8 01       	movw	r24, r16
    1d7a:	fb 01       	movw	r30, r22
    1d7c:	09 95       	icall
    1d7e:	d6 01       	movw	r26, r12
    1d80:	6d 93       	st	X+, r22
    1d82:	7d 93       	st	X+, r23
    1d84:	8d 93       	st	X+, r24
    1d86:	9c 93       	st	X, r25
    1d88:	13 97       	sbiw	r26, 0x03	; 3
	HX711_data.offset_64 = hx.get_offset_64(&hx);
    1d8a:	f8 01       	movw	r30, r16
    1d8c:	67 a9       	ldd	r22, Z+55	; 0x37
    1d8e:	70 ad       	ldd	r23, Z+56	; 0x38
    1d90:	c8 01       	movw	r24, r16
    1d92:	fb 01       	movw	r30, r22
    1d94:	09 95       	icall
    1d96:	d6 01       	movw	r26, r12
    1d98:	14 96       	adiw	r26, 0x04	; 4
    1d9a:	6d 93       	st	X+, r22
    1d9c:	7d 93       	st	X+, r23
    1d9e:	8d 93       	st	X+, r24
    1da0:	9c 93       	st	X, r25
    1da2:	17 97       	sbiw	r26, 0x07	; 7
	HX711_data.offset_128 = hx.get_offset_128(&hx);
    1da4:	f8 01       	movw	r30, r16
    1da6:	61 ad       	ldd	r22, Z+57	; 0x39
    1da8:	72 ad       	ldd	r23, Z+58	; 0x3a
    1daa:	c8 01       	movw	r24, r16
    1dac:	fb 01       	movw	r30, r22
    1dae:	09 95       	icall
    1db0:	d6 01       	movw	r26, r12
    1db2:	18 96       	adiw	r26, 0x08	; 8
    1db4:	6d 93       	st	X+, r22
    1db6:	7d 93       	st	X+, r23
    1db8:	8d 93       	st	X+, r24
    1dba:	9c 93       	st	X, r25
    1dbc:	1b 97       	sbiw	r26, 0x0b	; 11
	HX711_data.divfactor_32 = hx.get_divfactor_32(&hx);
    1dbe:	d8 01       	movw	r26, r16
    1dc0:	db 96       	adiw	r26, 0x3b	; 59
    1dc2:	ed 91       	ld	r30, X+
    1dc4:	fc 91       	ld	r31, X
    1dc6:	dc 97       	sbiw	r26, 0x3c	; 60
    1dc8:	c8 01       	movw	r24, r16
    1dca:	09 95       	icall
    1dcc:	f6 01       	movw	r30, r12
    1dce:	84 87       	std	Z+12, r24	; 0x0c
	HX711_data.divfactor_64 = hx.get_divfactor_64(&hx);
    1dd0:	d8 01       	movw	r26, r16
    1dd2:	dd 96       	adiw	r26, 0x3d	; 61
    1dd4:	ed 91       	ld	r30, X+
    1dd6:	fc 91       	ld	r31, X
    1dd8:	de 97       	sbiw	r26, 0x3e	; 62
    1dda:	c8 01       	movw	r24, r16
    1ddc:	09 95       	icall
    1dde:	f6 01       	movw	r30, r12
    1de0:	85 87       	std	Z+13, r24	; 0x0d
	HX711_data.divfactor_128 = hx.get_divfactor_128(&hx);
    1de2:	e0 91 1b 02 	lds	r30, 0x021B	; 0x80021b <hx+0x3f>
    1de6:	f0 91 1c 02 	lds	r31, 0x021C	; 0x80021c <hx+0x40>
    1dea:	c8 01       	movw	r24, r16
    1dec:	09 95       	icall
    1dee:	d6 01       	movw	r26, r12
    1df0:	1e 96       	adiw	r26, 0x0e	; 14
    1df2:	8c 93       	st	X, r24
	
	/***Parameters timers***/
	timer0.compoutmode(1);
    1df4:	2f 96       	adiw	r28, 0x0f	; 15
    1df6:	ee ad       	ldd	r30, Y+62	; 0x3e
    1df8:	ff ad       	ldd	r31, Y+63	; 0x3f
    1dfa:	2f 97       	sbiw	r28, 0x0f	; 15
    1dfc:	81 e0       	ldi	r24, 0x01	; 1
    1dfe:	09 95       	icall
	timer0.compare(79); // 1 -> 159 -> 20 us, 1 -> 79 -> 10 us, 1 -> 15 -> 2 us, 8 -> 99 -> 100 us, 8 -> 79 -> 80 us
    1e00:	65 96       	adiw	r28, 0x15	; 21
    1e02:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e04:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e06:	65 97       	sbiw	r28, 0x15	; 21
    1e08:	8f e4       	ldi	r24, 0x4F	; 79
    1e0a:	09 95       	icall
	timer0.start(8); // 1 -> 32 us , 8 -> 256 us , 32 64 128 256 1024
    1e0c:	6b 96       	adiw	r28, 0x1b	; 27
    1e0e:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e10:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e12:	6b 97       	sbiw	r28, 0x1b	; 27
    1e14:	88 e0       	ldi	r24, 0x08	; 8
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	09 95       	icall
	
	// to be used to jump menu for calibration in progress
	timer1.compoutmodeA(1);
    1e1a:	6f 96       	adiw	r28, 0x1f	; 31
    1e1c:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e1e:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e20:	6f 97       	sbiw	r28, 0x1f	; 31
    1e22:	81 e0       	ldi	r24, 0x01	; 1
    1e24:	09 95       	icall
	timer1.compareA(62800); // 256 -> 62800 -> 2 s
    1e26:	a5 96       	adiw	r28, 0x25	; 37
    1e28:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e2a:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e2c:	a5 97       	sbiw	r28, 0x25	; 37
    1e2e:	80 e5       	ldi	r24, 0x50	; 80
    1e30:	95 ef       	ldi	r25, 0xF5	; 245
    1e32:	09 95       	icall
	timer1.start(256);
    1e34:	ab 96       	adiw	r28, 0x2b	; 43
    1e36:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e38:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e3a:	ab 97       	sbiw	r28, 0x2b	; 43
    1e3c:	80 e0       	ldi	r24, 0x00	; 0
    1e3e:	91 e0       	ldi	r25, 0x01	; 1
    1e40:	09 95       	icall
	
	// HX711 Gain
	hx.set_amplify(&hx, 64); // 32 64 128
    1e42:	d8 01       	movw	r26, r16
    1e44:	9d 96       	adiw	r26, 0x2d	; 45
    1e46:	ed 91       	ld	r30, X+
    1e48:	fc 91       	ld	r31, X
    1e4a:	9e 97       	sbiw	r26, 0x2e	; 46
    1e4c:	60 e4       	ldi	r22, 0x40	; 64
    1e4e:	c8 01       	movw	r24, r16
    1e50:	09 95       	icall
	
	//Get stored calibration values and put them to effect
	eprom.read_block(HX711_ptr, (const void*) ZERO, sizeblock);
    1e52:	e0 91 8e 01 	lds	r30, 0x018E	; 0x80018e <eprom+0x18>
    1e56:	f0 91 8f 01 	lds	r31, 0x018F	; 0x80018f <eprom+0x19>
    1e5a:	40 e1       	ldi	r20, 0x10	; 16
    1e5c:	50 e0       	ldi	r21, 0x00	; 0
    1e5e:	60 e0       	ldi	r22, 0x00	; 0
    1e60:	70 e0       	ldi	r23, 0x00	; 0
    1e62:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <HX711_ptr>
    1e66:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <HX711_ptr+0x1>
    1e6a:	09 95       	icall
	if(HX711_ptr->status == 1){
    1e6c:	00 91 a4 01 	lds	r16, 0x01A4	; 0x8001a4 <HX711_ptr>
    1e70:	10 91 a5 01 	lds	r17, 0x01A5	; 0x8001a5 <HX711_ptr+0x1>
    1e74:	f8 01       	movw	r30, r16
    1e76:	87 85       	ldd	r24, Z+15	; 0x0f
    1e78:	81 30       	cpi	r24, 0x01	; 1
    1e7a:	91 f4       	brne	.+36     	; 0x1ea0 <main+0x22e>
		memcpy ( hx.get_cal(&hx), HX711_ptr, sizeblock );
    1e7c:	e0 91 0f 02 	lds	r30, 0x020F	; 0x80020f <hx+0x33>
    1e80:	f0 91 10 02 	lds	r31, 0x0210	; 0x800210 <hx+0x34>
    1e84:	8c ed       	ldi	r24, 0xDC	; 220
    1e86:	91 e0       	ldi	r25, 0x01	; 1
    1e88:	09 95       	icall
    1e8a:	dc 01       	movw	r26, r24
    1e8c:	90 e1       	ldi	r25, 0x10	; 16
    1e8e:	f8 01       	movw	r30, r16
    1e90:	01 90       	ld	r0, Z+
    1e92:	0d 92       	st	X+, r0
    1e94:	9a 95       	dec	r25
    1e96:	e1 f7       	brne	.-8      	; 0x1e90 <main+0x21e>
		PORTC ^= (ONE << 5); // troubleshooting
    1e98:	95 b3       	in	r25, 0x15	; 21
    1e9a:	80 e2       	ldi	r24, 0x20	; 32
    1e9c:	89 27       	eor	r24, r25
    1e9e:	85 bb       	out	0x15, r24	; 21
** Header
*/
void PORTINIT();
/****MAIN****/
int main(void)
{
    1ea0:	41 2c       	mov	r4, r1
    1ea2:	51 2c       	mov	r5, r1
    1ea4:	32 01       	movw	r6, r4
		PORTC ^= (ONE << 5); // troubleshooting
	}
	/***********************************************************************************************/
	while(TRUE){
		/******PREAMBLE******/
		lcd0.reboot();
    1ea6:	06 ec       	ldi	r16, 0xC6	; 198
    1ea8:	11 e0       	ldi	r17, 0x01	; 1
		/************INPUT***********/
		F.boot(&F,PINF);
    1eaa:	0f 2e       	mov	r0, r31
    1eac:	fd e1       	ldi	r31, 0x1D	; 29
    1eae:	ef 2e       	mov	r14, r31
    1eb0:	f2 e0       	ldi	r31, 0x02	; 2
    1eb2:	ff 2e       	mov	r15, r31
    1eb4:	f0 2d       	mov	r31, r0
				lcd0.gotoxy(0,3);
				lcd0.string_size("SETUP DIVFACTOR",15);
				
				// Jump Menus signal
				if(signal==2){
					Menu='1';
    1eb6:	0f 2e       	mov	r0, r31
    1eb8:	f1 e3       	ldi	r31, 0x31	; 49
    1eba:	3f 2e       	mov	r3, r31
    1ebc:	f0 2d       	mov	r31, r0
			/***MENU 1***/
			case '1': // Main Program Menu
				lcd0.gotoxy(0,3); //TITLE
				lcd0.string_size("Weight Scale", 12); //TITLE
				
				tmp = hx.raw_average(&hx, average_n); // 25 50, smaller means faster or more readings
    1ebe:	0f 2e       	mov	r0, r31
    1ec0:	fc ed       	ldi	r31, 0xDC	; 220
    1ec2:	cf 2e       	mov	r12, r31
    1ec4:	f1 e0       	ldi	r31, 0x01	; 1
    1ec6:	df 2e       	mov	r13, r31
    1ec8:	f0 2d       	mov	r31, r0
				//lcd0.string_size(function.ftoa(hx.get_divfactor_64(&hx), result, ZERO), 13);
				//lcd0.string_size(function.ftoa(HX711_data.divfactor_128, result, ZERO), 13);
				//lcd0.string_size(function.ftoa(hx.get_divfactor_128(&hx), result, ZERO), 13);
				
				if(F.hl(&F) & ONE){ // calibrate offset by pressing button 1
					PORTC^=(ONE<<5); // troubleshooting
    1eca:	68 94       	set
    1ecc:	22 24       	eor	r2, r2
    1ece:	25 f8       	bld	r2, 5
					HX711_data.offset_32 = value;
    1ed0:	0f 2e       	mov	r0, r31
    1ed2:	f4 e9       	ldi	r31, 0x94	; 148
    1ed4:	af 2e       	mov	r10, r31
    1ed6:	f1 e0       	ldi	r31, 0x01	; 1
    1ed8:	bf 2e       	mov	r11, r31
    1eda:	f0 2d       	mov	r31, r0
		PORTC ^= (ONE << 5); // troubleshooting
	}
	/***********************************************************************************************/
	while(TRUE){
		/******PREAMBLE******/
		lcd0.reboot();
    1edc:	d8 01       	movw	r26, r16
    1ede:	54 96       	adiw	r26, 0x14	; 20
    1ee0:	ed 91       	ld	r30, X+
    1ee2:	fc 91       	ld	r31, X
    1ee4:	55 97       	sbiw	r26, 0x15	; 21
    1ee6:	09 95       	icall
		/************INPUT***********/
		F.boot(&F,PINF);
    1ee8:	60 b1       	in	r22, 0x00	; 0
    1eea:	d7 01       	movw	r26, r14
    1eec:	14 96       	adiw	r26, 0x04	; 4
    1eee:	ed 91       	ld	r30, X+
    1ef0:	fc 91       	ld	r31, X
    1ef2:	15 97       	sbiw	r26, 0x05	; 5
    1ef4:	c7 01       	movw	r24, r14
    1ef6:	09 95       	icall
		// tmp also entry from interrupt routine
		
		/****************************/
		switch(Menu){
    1ef8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1efc:	82 33       	cpi	r24, 0x32	; 50
    1efe:	09 f4       	brne	.+2      	; 0x1f02 <main+0x290>
    1f00:	17 c1       	rjmp	.+558    	; 0x2130 <main+0x4be>
    1f02:	83 33       	cpi	r24, 0x33	; 51
    1f04:	09 f4       	brne	.+2      	; 0x1f08 <main+0x296>
    1f06:	35 c1       	rjmp	.+618    	; 0x2172 <main+0x500>
    1f08:	81 33       	cpi	r24, 0x31	; 49
    1f0a:	09 f0       	breq	.+2      	; 0x1f0e <main+0x29c>
    1f0c:	46 c1       	rjmp	.+652    	; 0x219a <main+0x528>
			/***MENU 1***/
			case '1': // Main Program Menu
				lcd0.gotoxy(0,3); //TITLE
    1f0e:	d8 01       	movw	r26, r16
    1f10:	52 96       	adiw	r26, 0x12	; 18
    1f12:	ed 91       	ld	r30, X+
    1f14:	fc 91       	ld	r31, X
    1f16:	53 97       	sbiw	r26, 0x13	; 19
    1f18:	63 e0       	ldi	r22, 0x03	; 3
    1f1a:	70 e0       	ldi	r23, 0x00	; 0
    1f1c:	80 e0       	ldi	r24, 0x00	; 0
    1f1e:	90 e0       	ldi	r25, 0x00	; 0
    1f20:	09 95       	icall
				lcd0.string_size("Weight Scale", 12); //TITLE
    1f22:	d8 01       	movw	r26, r16
    1f24:	1c 96       	adiw	r26, 0x0c	; 12
    1f26:	ed 91       	ld	r30, X+
    1f28:	fc 91       	ld	r31, X
    1f2a:	1d 97       	sbiw	r26, 0x0d	; 13
    1f2c:	6c e0       	ldi	r22, 0x0C	; 12
    1f2e:	81 e0       	ldi	r24, 0x01	; 1
    1f30:	91 e0       	ldi	r25, 0x01	; 1
    1f32:	09 95       	icall
				
				tmp = hx.raw_average(&hx, average_n); // 25 50, smaller means faster or more readings
    1f34:	d6 01       	movw	r26, r12
    1f36:	d1 96       	adiw	r26, 0x31	; 49
    1f38:	ed 91       	ld	r30, X+
    1f3a:	fc 91       	ld	r31, X
    1f3c:	d2 97       	sbiw	r26, 0x32	; 50
    1f3e:	69 e1       	ldi	r22, 0x19	; 25
    1f40:	c6 01       	movw	r24, r12
    1f42:	09 95       	icall
    1f44:	c8 52       	subi	r28, 0x28	; 40
    1f46:	df 4f       	sbci	r29, 0xFF	; 255
    1f48:	68 83       	st	Y, r22
    1f4a:	79 83       	std	Y+1, r23	; 0x01
    1f4c:	8a 83       	std	Y+2, r24	; 0x02
    1f4e:	9b 83       	std	Y+3, r25	; 0x03
    1f50:	c8 5d       	subi	r28, 0xD8	; 216
    1f52:	d0 40       	sbci	r29, 0x00	; 0
				//lcd0.string_size(function.ftoa(value, result, ZERO), 13); lcd0.string_size("raw_av", 6);
				//lcd0.string_size(function.ftoa(hx.get_divfactor_64(&hx), result, ZERO), 13);
				//lcd0.string_size(function.ftoa(HX711_data.divfactor_128, result, ZERO), 13);
				//lcd0.string_size(function.ftoa(hx.get_divfactor_128(&hx), result, ZERO), 13);
				
				if(F.hl(&F) & ONE){ // calibrate offset by pressing button 1
    1f54:	d7 01       	movw	r26, r14
    1f56:	1e 96       	adiw	r26, 0x0e	; 14
    1f58:	ed 91       	ld	r30, X+
    1f5a:	fc 91       	ld	r31, X
    1f5c:	1f 97       	sbiw	r26, 0x0f	; 15
    1f5e:	c7 01       	movw	r24, r14
    1f60:	09 95       	icall
    1f62:	80 ff       	sbrs	r24, 0
    1f64:	4e c0       	rjmp	.+156    	; 0x2002 <main+0x390>
					PORTC^=(ONE<<5); // troubleshooting
    1f66:	85 b3       	in	r24, 0x15	; 21
    1f68:	82 25       	eor	r24, r2
					HX711_data.offset_32 = value;
    1f6a:	85 bb       	out	0x15, r24	; 21
    1f6c:	c3 01       	movw	r24, r6
    1f6e:	b2 01       	movw	r22, r4
    1f70:	ab d2       	rcall	.+1366   	; 0x24c8 <__fixsfsi>
    1f72:	f5 01       	movw	r30, r10
    1f74:	60 83       	st	Z, r22
    1f76:	71 83       	std	Z+1, r23	; 0x01
    1f78:	82 83       	std	Z+2, r24	; 0x02
    1f7a:	93 83       	std	Z+3, r25	; 0x03
					HX711_data.offset_64 = value;
    1f7c:	64 83       	std	Z+4, r22	; 0x04
    1f7e:	75 83       	std	Z+5, r23	; 0x05
    1f80:	86 83       	std	Z+6, r24	; 0x06
    1f82:	97 83       	std	Z+7, r25	; 0x07
					HX711_data.offset_128 = value;
    1f84:	60 87       	std	Z+8, r22	; 0x08
    1f86:	71 87       	std	Z+9, r23	; 0x09
    1f88:	82 87       	std	Z+10, r24	; 0x0a
    1f8a:	93 87       	std	Z+11, r25	; 0x0b
					HX711_data.divfactor_32 = hx.get_divfactor_32(&hx);
    1f8c:	d6 01       	movw	r26, r12
    1f8e:	db 96       	adiw	r26, 0x3b	; 59
    1f90:	ed 91       	ld	r30, X+
    1f92:	fc 91       	ld	r31, X
    1f94:	dc 97       	sbiw	r26, 0x3c	; 60
    1f96:	c6 01       	movw	r24, r12
    1f98:	09 95       	icall
    1f9a:	f5 01       	movw	r30, r10
    1f9c:	84 87       	std	Z+12, r24	; 0x0c
					HX711_data.divfactor_64 = hx.get_divfactor_64(&hx);
    1f9e:	d6 01       	movw	r26, r12
    1fa0:	dd 96       	adiw	r26, 0x3d	; 61
    1fa2:	ed 91       	ld	r30, X+
    1fa4:	fc 91       	ld	r31, X
    1fa6:	de 97       	sbiw	r26, 0x3e	; 62
    1fa8:	c6 01       	movw	r24, r12
    1faa:	09 95       	icall
    1fac:	f5 01       	movw	r30, r10
    1fae:	85 87       	std	Z+13, r24	; 0x0d
					HX711_data.divfactor_128 = hx.get_divfactor_128(&hx);
    1fb0:	ab e1       	ldi	r26, 0x1B	; 27
    1fb2:	b2 e0       	ldi	r27, 0x02	; 2
    1fb4:	ed 91       	ld	r30, X+
    1fb6:	fc 91       	ld	r31, X
    1fb8:	c6 01       	movw	r24, r12
    1fba:	09 95       	icall
    1fbc:	f5 01       	movw	r30, r10
    1fbe:	86 87       	std	Z+14, r24	; 0x0e
					HX711_data.status = ONE;
    1fc0:	81 e0       	ldi	r24, 0x01	; 1
    1fc2:	87 87       	std	Z+15, r24	; 0x0f
					eprom.update_block(HX711_ptr, (void*) ZERO, sizeblock);
    1fc4:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <eprom+0x1c>
    1fc8:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <eprom+0x1d>
    1fcc:	40 e1       	ldi	r20, 0x10	; 16
    1fce:	50 e0       	ldi	r21, 0x00	; 0
    1fd0:	60 e0       	ldi	r22, 0x00	; 0
    1fd2:	70 e0       	ldi	r23, 0x00	; 0
    1fd4:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <HX711_ptr>
    1fd8:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <HX711_ptr+0x1>
    1fdc:	09 95       	icall
					memcpy ( hx.get_cal(&hx), HX711_ptr, sizeblock ); // Update new values
    1fde:	80 90 a4 01 	lds	r8, 0x01A4	; 0x8001a4 <HX711_ptr>
    1fe2:	90 90 a5 01 	lds	r9, 0x01A5	; 0x8001a5 <HX711_ptr+0x1>
    1fe6:	d6 01       	movw	r26, r12
    1fe8:	d3 96       	adiw	r26, 0x33	; 51
    1fea:	ed 91       	ld	r30, X+
    1fec:	fc 91       	ld	r31, X
    1fee:	d4 97       	sbiw	r26, 0x34	; 52
    1ff0:	c6 01       	movw	r24, r12
    1ff2:	09 95       	icall
    1ff4:	dc 01       	movw	r26, r24
    1ff6:	90 e1       	ldi	r25, 0x10	; 16
    1ff8:	f4 01       	movw	r30, r8
    1ffa:	01 90       	ld	r0, Z+
    1ffc:	0d 92       	st	X+, r0
    1ffe:	9a 95       	dec	r25
    2000:	e1 f7       	brne	.-8      	; 0x1ffa <main+0x388>
				}
				
				//value = (value - hx.get_offset_128(&hx)) / hx.get_divfactor_128(&hx); //value to be published to LCD
				value = (tmp - hx.get_offset_64(&hx)) / hx.get_divfactor_64(&hx); //value to be published to LCD
    2002:	d6 01       	movw	r26, r12
    2004:	d7 96       	adiw	r26, 0x37	; 55
    2006:	ed 91       	ld	r30, X+
    2008:	fc 91       	ld	r31, X
    200a:	d8 97       	sbiw	r26, 0x38	; 56
    200c:	c6 01       	movw	r24, r12
    200e:	09 95       	icall
    2010:	8e d2       	rcall	.+1308   	; 0x252e <__floatsisf>
    2012:	9b 01       	movw	r18, r22
    2014:	ac 01       	movw	r20, r24
    2016:	c8 52       	subi	r28, 0x28	; 40
    2018:	df 4f       	sbci	r29, 0xFF	; 255
    201a:	68 81       	ld	r22, Y
    201c:	79 81       	ldd	r23, Y+1	; 0x01
    201e:	8a 81       	ldd	r24, Y+2	; 0x02
    2020:	9b 81       	ldd	r25, Y+3	; 0x03
    2022:	c8 5d       	subi	r28, 0xD8	; 216
    2024:	d0 40       	sbci	r29, 0x00	; 0
    2026:	7f d1       	rcall	.+766    	; 0x2326 <__subsf3>
    2028:	2b 01       	movw	r4, r22
    202a:	3c 01       	movw	r6, r24
    202c:	d6 01       	movw	r26, r12
    202e:	dd 96       	adiw	r26, 0x3d	; 61
    2030:	ed 91       	ld	r30, X+
    2032:	fc 91       	ld	r31, X
    2034:	de 97       	sbiw	r26, 0x3e	; 62
    2036:	c6 01       	movw	r24, r12
    2038:	09 95       	icall
    203a:	68 2f       	mov	r22, r24
    203c:	70 e0       	ldi	r23, 0x00	; 0
    203e:	80 e0       	ldi	r24, 0x00	; 0
    2040:	90 e0       	ldi	r25, 0x00	; 0
    2042:	75 d2       	rcall	.+1258   	; 0x252e <__floatsisf>
    2044:	9b 01       	movw	r18, r22
    2046:	ac 01       	movw	r20, r24
    2048:	c3 01       	movw	r24, r6
    204a:	b2 01       	movw	r22, r4
    204c:	d5 d1       	rcall	.+938    	; 0x23f8 <__divsf3>
    204e:	2b 01       	movw	r4, r22
				
				//lcd0.gotoxy(3,0);
				//lcd0.string_size(function.ftoa(value, result, ZERO), 13);
				
				//Display
				if (value > 1000 || value < -1000){
    2050:	3c 01       	movw	r6, r24
    2052:	20 e0       	ldi	r18, 0x00	; 0
    2054:	30 e0       	ldi	r19, 0x00	; 0
    2056:	4a e7       	ldi	r20, 0x7A	; 122
    2058:	54 e4       	ldi	r21, 0x44	; 68
    205a:	19 d3       	rcall	.+1586   	; 0x268e <__gesf2>
    205c:	18 16       	cp	r1, r24
    205e:	4c f0       	brlt	.+18     	; 0x2072 <main+0x400>
    2060:	20 e0       	ldi	r18, 0x00	; 0
    2062:	30 e0       	ldi	r19, 0x00	; 0
    2064:	4a e7       	ldi	r20, 0x7A	; 122
    2066:	54 ec       	ldi	r21, 0xC4	; 196
    2068:	c3 01       	movw	r24, r6
    206a:	b2 01       	movw	r22, r4
    206c:	c1 d1       	rcall	.+898    	; 0x23f0 <__cmpsf2>
    206e:	88 23       	and	r24, r24
    2070:	5c f5       	brge	.+86     	; 0x20c8 <main+0x456>
					publish = value / 1000;
					lcd0.gotoxy(2,0);
    2072:	d8 01       	movw	r26, r16
    2074:	52 96       	adiw	r26, 0x12	; 18
    2076:	ed 91       	ld	r30, X+
    2078:	fc 91       	ld	r31, X
    207a:	53 97       	sbiw	r26, 0x13	; 19
    207c:	60 e0       	ldi	r22, 0x00	; 0
    207e:	70 e0       	ldi	r23, 0x00	; 0
    2080:	82 e0       	ldi	r24, 0x02	; 2
    2082:	90 e0       	ldi	r25, 0x00	; 0
					lcd0.string_size(function.ftoa(publish, result, 3), 13); lcd0.string_size("Kg", 4);
    2084:	09 95       	icall
    2086:	f8 01       	movw	r30, r16
    2088:	84 84       	ldd	r8, Z+12	; 0x0c
    208a:	95 84       	ldd	r9, Z+13	; 0x0d
    208c:	20 e0       	ldi	r18, 0x00	; 0
    208e:	30 e0       	ldi	r19, 0x00	; 0
    2090:	4a e7       	ldi	r20, 0x7A	; 122
    2092:	54 e4       	ldi	r21, 0x44	; 68
    2094:	c3 01       	movw	r24, r6
    2096:	b2 01       	movw	r22, r4
    2098:	af d1       	rcall	.+862    	; 0x23f8 <__divsf3>
    209a:	23 e0       	ldi	r18, 0x03	; 3
    209c:	46 ea       	ldi	r20, 0xA6	; 166
    209e:	51 e0       	ldi	r21, 0x01	; 1
    20a0:	c4 52       	subi	r28, 0x24	; 36
    20a2:	df 4f       	sbci	r29, 0xFF	; 255
    20a4:	e8 81       	ld	r30, Y
    20a6:	f9 81       	ldd	r31, Y+1	; 0x01
    20a8:	cc 5d       	subi	r28, 0xDC	; 220
    20aa:	d0 40       	sbci	r29, 0x00	; 0
    20ac:	09 95       	icall
    20ae:	6d e0       	ldi	r22, 0x0D	; 13
    20b0:	f4 01       	movw	r30, r8
    20b2:	09 95       	icall
    20b4:	d8 01       	movw	r26, r16
    20b6:	1c 96       	adiw	r26, 0x0c	; 12
    20b8:	ed 91       	ld	r30, X+
    20ba:	fc 91       	ld	r31, X
    20bc:	1d 97       	sbiw	r26, 0x0d	; 13
    20be:	64 e0       	ldi	r22, 0x04	; 4
    20c0:	8e e0       	ldi	r24, 0x0E	; 14
    20c2:	91 e0       	ldi	r25, 0x01	; 1
    20c4:	09 95       	icall
    20c6:	25 c0       	rjmp	.+74     	; 0x2112 <main+0x4a0>
				}else{
					lcd0.gotoxy(2,0);
    20c8:	d8 01       	movw	r26, r16
    20ca:	52 96       	adiw	r26, 0x12	; 18
    20cc:	ed 91       	ld	r30, X+
    20ce:	fc 91       	ld	r31, X
    20d0:	53 97       	sbiw	r26, 0x13	; 19
    20d2:	60 e0       	ldi	r22, 0x00	; 0
    20d4:	70 e0       	ldi	r23, 0x00	; 0
    20d6:	82 e0       	ldi	r24, 0x02	; 2
    20d8:	90 e0       	ldi	r25, 0x00	; 0
    20da:	09 95       	icall
					lcd0.string_size(function.ftoa(value, result, ZERO), 13); lcd0.string_size("gram", 4);
    20dc:	f8 01       	movw	r30, r16
    20de:	84 84       	ldd	r8, Z+12	; 0x0c
    20e0:	95 84       	ldd	r9, Z+13	; 0x0d
    20e2:	20 e0       	ldi	r18, 0x00	; 0
    20e4:	46 ea       	ldi	r20, 0xA6	; 166
    20e6:	51 e0       	ldi	r21, 0x01	; 1
    20e8:	c3 01       	movw	r24, r6
    20ea:	b2 01       	movw	r22, r4
    20ec:	c4 52       	subi	r28, 0x24	; 36
    20ee:	df 4f       	sbci	r29, 0xFF	; 255
    20f0:	e8 81       	ld	r30, Y
    20f2:	f9 81       	ldd	r31, Y+1	; 0x01
    20f4:	cc 5d       	subi	r28, 0xDC	; 220
    20f6:	d0 40       	sbci	r29, 0x00	; 0
    20f8:	09 95       	icall
    20fa:	6d e0       	ldi	r22, 0x0D	; 13
    20fc:	f4 01       	movw	r30, r8
    20fe:	09 95       	icall
    2100:	d8 01       	movw	r26, r16
    2102:	1c 96       	adiw	r26, 0x0c	; 12
    2104:	ed 91       	ld	r30, X+
    2106:	fc 91       	ld	r31, X
    2108:	1d 97       	sbiw	r26, 0x0d	; 13
    210a:	64 e0       	ldi	r22, 0x04	; 4
    210c:	81 e1       	ldi	r24, 0x11	; 17
    210e:	91 e0       	ldi	r25, 0x01	; 1
    2110:	09 95       	icall
				}
				
				
				// Jump Menu signal
				if(signal==1){
    2112:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__data_end>
    2116:	81 30       	cpi	r24, 0x01	; 1
    2118:	09 f0       	breq	.+2      	; 0x211c <main+0x4aa>
    211a:	e0 ce       	rjmp	.-576    	; 0x1edc <main+0x26a>
					Menu='2';
    211c:	b2 e3       	ldi	r27, 0x32	; 50
    211e:	b0 93 00 01 	sts	0x0100, r27	; 0x800100 <__DATA_REGION_ORIGIN__>
					lcd0.clear();
    2122:	d8 01       	movw	r26, r16
    2124:	50 96       	adiw	r26, 0x10	; 16
    2126:	ed 91       	ld	r30, X+
    2128:	fc 91       	ld	r31, X
    212a:	51 97       	sbiw	r26, 0x11	; 17
    212c:	09 95       	icall
    212e:	d6 ce       	rjmp	.-596    	; 0x1edc <main+0x26a>
				}
					
				break;
			/***MENU 2***/
			case '2': //
				lcd0.gotoxy(0,3);
    2130:	d8 01       	movw	r26, r16
    2132:	52 96       	adiw	r26, 0x12	; 18
    2134:	ed 91       	ld	r30, X+
    2136:	fc 91       	ld	r31, X
    2138:	53 97       	sbiw	r26, 0x13	; 19
    213a:	63 e0       	ldi	r22, 0x03	; 3
    213c:	70 e0       	ldi	r23, 0x00	; 0
    213e:	80 e0       	ldi	r24, 0x00	; 0
    2140:	90 e0       	ldi	r25, 0x00	; 0
    2142:	09 95       	icall
				lcd0.string_size("SETUP DIVFACTOR",15);
    2144:	d8 01       	movw	r26, r16
    2146:	1c 96       	adiw	r26, 0x0c	; 12
    2148:	ed 91       	ld	r30, X+
    214a:	fc 91       	ld	r31, X
    214c:	1d 97       	sbiw	r26, 0x0d	; 13
    214e:	6f e0       	ldi	r22, 0x0F	; 15
    2150:	86 e1       	ldi	r24, 0x16	; 22
    2152:	91 e0       	ldi	r25, 0x01	; 1
    2154:	09 95       	icall
				
				// Jump Menus signal
				if(signal==2){
    2156:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__data_end>
    215a:	82 30       	cpi	r24, 0x02	; 2
    215c:	09 f0       	breq	.+2      	; 0x2160 <main+0x4ee>
    215e:	be ce       	rjmp	.-644    	; 0x1edc <main+0x26a>
					Menu='1';
    2160:	30 92 00 01 	sts	0x0100, r3	; 0x800100 <__DATA_REGION_ORIGIN__>
					lcd0.clear();
    2164:	d8 01       	movw	r26, r16
    2166:	50 96       	adiw	r26, 0x10	; 16
    2168:	ed 91       	ld	r30, X+
    216a:	fc 91       	ld	r31, X
    216c:	51 97       	sbiw	r26, 0x11	; 17
    216e:	09 95       	icall
    2170:	b5 ce       	rjmp	.-662    	; 0x1edc <main+0x26a>
				}
				break;
			/***MENU 3***/
			case '3': //
				lcd0.gotoxy(0,0);
    2172:	d8 01       	movw	r26, r16
    2174:	52 96       	adiw	r26, 0x12	; 18
    2176:	ed 91       	ld	r30, X+
    2178:	fc 91       	ld	r31, X
    217a:	53 97       	sbiw	r26, 0x13	; 19
    217c:	60 e0       	ldi	r22, 0x00	; 0
    217e:	70 e0       	ldi	r23, 0x00	; 0
    2180:	80 e0       	ldi	r24, 0x00	; 0
    2182:	90 e0       	ldi	r25, 0x00	; 0
    2184:	09 95       	icall
				lcd0.string_size("Not being used",19);
    2186:	d8 01       	movw	r26, r16
    2188:	1c 96       	adiw	r26, 0x0c	; 12
    218a:	ed 91       	ld	r30, X+
    218c:	fc 91       	ld	r31, X
    218e:	1d 97       	sbiw	r26, 0x0d	; 13
    2190:	63 e1       	ldi	r22, 0x13	; 19
    2192:	86 e2       	ldi	r24, 0x26	; 38
    2194:	91 e0       	ldi	r25, 0x01	; 1
    2196:	09 95       	icall
				/***Play around***/
				break;
    2198:	a1 ce       	rjmp	.-702    	; 0x1edc <main+0x26a>
				/********************************************************************/
			default:
				Menu='1';
    219a:	30 92 00 01 	sts	0x0100, r3	; 0x800100 <__DATA_REGION_ORIGIN__>
				break;
    219e:	9e ce       	rjmp	.-708    	; 0x1edc <main+0x26a>

000021a0 <__vector_15>:
}
/*
** interrupt
*/
ISR(TIMER0_COMP_vect) // 20 us intervals
{
    21a0:	1f 92       	push	r1
    21a2:	0f 92       	push	r0
    21a4:	0f b6       	in	r0, 0x3f	; 63
    21a6:	0f 92       	push	r0
    21a8:	11 24       	eor	r1, r1
    21aa:	0b b6       	in	r0, 0x3b	; 59
    21ac:	0f 92       	push	r0
    21ae:	2f 93       	push	r18
    21b0:	3f 93       	push	r19
    21b2:	4f 93       	push	r20
    21b4:	5f 93       	push	r21
    21b6:	6f 93       	push	r22
    21b8:	7f 93       	push	r23
    21ba:	8f 93       	push	r24
    21bc:	9f 93       	push	r25
    21be:	af 93       	push	r26
    21c0:	bf 93       	push	r27
    21c2:	cf 93       	push	r28
    21c4:	ef 93       	push	r30
    21c6:	ff 93       	push	r31
	/***Block other interrupts during this procedure***/
	uint8_t Sreg;
	Sreg = SREG;
    21c8:	cf b7       	in	r28, 0x3f	; 63
	SREG &= ~(ONE<<7);
    21ca:	8f b7       	in	r24, 0x3f	; 63
    21cc:	8f 77       	andi	r24, 0x7F	; 127
    21ce:	8f bf       	out	0x3f, r24	; 63
	/***Block other interrupts during this procedure***/	
	hx.read_raw(&hx);
    21d0:	e0 91 0b 02 	lds	r30, 0x020B	; 0x80020b <hx+0x2f>
    21d4:	f0 91 0c 02 	lds	r31, 0x020C	; 0x80020c <hx+0x30>
    21d8:	8c ed       	ldi	r24, 0xDC	; 220
    21da:	91 e0       	ldi	r25, 0x01	; 1
    21dc:	09 95       	icall
	/***enable interrupts again***/
	SREG = Sreg;
    21de:	cf bf       	out	0x3f, r28	; 63
}
    21e0:	ff 91       	pop	r31
    21e2:	ef 91       	pop	r30
    21e4:	cf 91       	pop	r28
    21e6:	bf 91       	pop	r27
    21e8:	af 91       	pop	r26
    21ea:	9f 91       	pop	r25
    21ec:	8f 91       	pop	r24
    21ee:	7f 91       	pop	r23
    21f0:	6f 91       	pop	r22
    21f2:	5f 91       	pop	r21
    21f4:	4f 91       	pop	r20
    21f6:	3f 91       	pop	r19
    21f8:	2f 91       	pop	r18
    21fa:	0f 90       	pop	r0
    21fc:	0b be       	out	0x3b, r0	; 59
    21fe:	0f 90       	pop	r0
    2200:	0f be       	out	0x3f, r0	; 63
    2202:	0f 90       	pop	r0
    2204:	1f 90       	pop	r1
    2206:	18 95       	reti

00002208 <__vector_12>:
ISR(TIMER1_COMPA_vect) // 1 second intervals
{
    2208:	1f 92       	push	r1
    220a:	0f 92       	push	r0
    220c:	0f b6       	in	r0, 0x3f	; 63
    220e:	0f 92       	push	r0
    2210:	11 24       	eor	r1, r1
    2212:	0b b6       	in	r0, 0x3b	; 59
    2214:	0f 92       	push	r0
    2216:	2f 93       	push	r18
    2218:	3f 93       	push	r19
    221a:	4f 93       	push	r20
    221c:	5f 93       	push	r21
    221e:	6f 93       	push	r22
    2220:	7f 93       	push	r23
    2222:	8f 93       	push	r24
    2224:	9f 93       	push	r25
    2226:	af 93       	push	r26
    2228:	bf 93       	push	r27
    222a:	ef 93       	push	r30
    222c:	ff 93       	push	r31
	
	if((F.ll(&F) & 0x3F) == ONE)
    222e:	e0 91 27 02 	lds	r30, 0x0227	; 0x800227 <F+0xa>
    2232:	f0 91 28 02 	lds	r31, 0x0228	; 0x800228 <F+0xb>
    2236:	8d e1       	ldi	r24, 0x1D	; 29
    2238:	92 e0       	ldi	r25, 0x02	; 2
    223a:	09 95       	icall
    223c:	8f 73       	andi	r24, 0x3F	; 63
    223e:	81 30       	cpi	r24, 0x01	; 1
    2240:	29 f4       	brne	.+10     	; 0x224c <__vector_12+0x44>
		counter_1++;
    2242:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <counter_1>
    2246:	8f 5f       	subi	r24, 0xFF	; 255
    2248:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <counter_1>
	
	if((F.ll(&F) & 0x3F) == 3)
    224c:	e0 91 27 02 	lds	r30, 0x0227	; 0x800227 <F+0xa>
    2250:	f0 91 28 02 	lds	r31, 0x0228	; 0x800228 <F+0xb>
    2254:	8d e1       	ldi	r24, 0x1D	; 29
    2256:	92 e0       	ldi	r25, 0x02	; 2
    2258:	09 95       	icall
    225a:	8f 73       	andi	r24, 0x3F	; 63
    225c:	83 30       	cpi	r24, 0x03	; 3
    225e:	29 f4       	brne	.+10     	; 0x226a <__vector_12+0x62>
		counter_2++;
    2260:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <counter_2>
    2264:	8f 5f       	subi	r24, 0xFF	; 255
    2266:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <counter_2>
	
	if(counter_1 > _5sec){
    226a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <counter_1>
    226e:	86 30       	cpi	r24, 0x06	; 6
    2270:	30 f1       	brcs	.+76     	; 0x22be <__vector_12+0xb6>
		counter_1 = _5sec+ONE; //lock in place
    2272:	86 e0       	ldi	r24, 0x06	; 6
    2274:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <counter_1>
		PORTC ^= (ONE << 5); // troubleshooting
    2278:	95 b3       	in	r25, 0x15	; 21
    227a:	80 e2       	ldi	r24, 0x20	; 32
    227c:	89 27       	eor	r24, r25
    227e:	85 bb       	out	0x15, r24	; 21
		if((F.ll(&F) & 0x3F) == 2){
    2280:	e0 91 27 02 	lds	r30, 0x0227	; 0x800227 <F+0xa>
    2284:	f0 91 28 02 	lds	r31, 0x0228	; 0x800228 <F+0xb>
    2288:	8d e1       	ldi	r24, 0x1D	; 29
    228a:	92 e0       	ldi	r25, 0x02	; 2
    228c:	09 95       	icall
    228e:	8f 73       	andi	r24, 0x3F	; 63
    2290:	82 30       	cpi	r24, 0x02	; 2
    2292:	a9 f4       	brne	.+42     	; 0x22be <__vector_12+0xb6>
			// Delete eerpom memory ZERO
			HX711_data.status = ZERO;
    2294:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <HX711_data+0xf>
			eprom.update_block(HX711_ptr, (void*) ZERO, sizeblock);
    2298:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <eprom+0x1c>
    229c:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <eprom+0x1d>
    22a0:	40 e1       	ldi	r20, 0x10	; 16
    22a2:	50 e0       	ldi	r21, 0x00	; 0
    22a4:	60 e0       	ldi	r22, 0x00	; 0
    22a6:	70 e0       	ldi	r23, 0x00	; 0
    22a8:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <HX711_ptr>
    22ac:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <HX711_ptr+0x1>
    22b0:	09 95       	icall
			PORTC ^= (ONE << 5); // troubleshooting
    22b2:	95 b3       	in	r25, 0x15	; 21
    22b4:	80 e2       	ldi	r24, 0x20	; 32
    22b6:	89 27       	eor	r24, r25
    22b8:	85 bb       	out	0x15, r24	; 21
			counter_1 = ZERO;
    22ba:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <counter_1>
		}
	}
	
	if(counter_2 > _5sec){
    22be:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <counter_2>
    22c2:	86 30       	cpi	r24, 0x06	; 6
    22c4:	e8 f0       	brcs	.+58     	; 0x2300 <__vector_12+0xf8>
		counter_2 = _5sec+ONE; //lock in place
    22c6:	86 e0       	ldi	r24, 0x06	; 6
    22c8:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <counter_2>
		signal = ONE;
    22cc:	81 e0       	ldi	r24, 0x01	; 1
    22ce:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__data_end>
		
		PORTC ^= (ONE << 5); // troubleshooting
    22d2:	95 b3       	in	r25, 0x15	; 21
    22d4:	80 e2       	ldi	r24, 0x20	; 32
    22d6:	89 27       	eor	r24, r25
    22d8:	85 bb       	out	0x15, r24	; 21

		if((F.ll(&F) & 0x3F) == 1){
    22da:	e0 91 27 02 	lds	r30, 0x0227	; 0x800227 <F+0xa>
    22de:	f0 91 28 02 	lds	r31, 0x0228	; 0x800228 <F+0xb>
    22e2:	8d e1       	ldi	r24, 0x1D	; 29
    22e4:	92 e0       	ldi	r25, 0x02	; 2
    22e6:	09 95       	icall
    22e8:	8f 73       	andi	r24, 0x3F	; 63
    22ea:	81 30       	cpi	r24, 0x01	; 1
    22ec:	49 f4       	brne	.+18     	; 0x2300 <__vector_12+0xf8>
			signal = 2;
    22ee:	82 e0       	ldi	r24, 0x02	; 2
    22f0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__data_end>
			PORTC ^= (ONE << 5); // troubleshooting
    22f4:	95 b3       	in	r25, 0x15	; 21
    22f6:	80 e2       	ldi	r24, 0x20	; 32
    22f8:	89 27       	eor	r24, r25
    22fa:	85 bb       	out	0x15, r24	; 21
			counter_2 = ZERO;
    22fc:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <counter_2>
		}
	}
	
	
}
    2300:	ff 91       	pop	r31
    2302:	ef 91       	pop	r30
    2304:	bf 91       	pop	r27
    2306:	af 91       	pop	r26
    2308:	9f 91       	pop	r25
    230a:	8f 91       	pop	r24
    230c:	7f 91       	pop	r23
    230e:	6f 91       	pop	r22
    2310:	5f 91       	pop	r21
    2312:	4f 91       	pop	r20
    2314:	3f 91       	pop	r19
    2316:	2f 91       	pop	r18
    2318:	0f 90       	pop	r0
    231a:	0b be       	out	0x3b, r0	; 59
    231c:	0f 90       	pop	r0
    231e:	0f be       	out	0x3f, r0	; 63
    2320:	0f 90       	pop	r0
    2322:	1f 90       	pop	r1
    2324:	18 95       	reti

00002326 <__subsf3>:
    2326:	50 58       	subi	r21, 0x80	; 128

00002328 <__addsf3>:
    2328:	bb 27       	eor	r27, r27
    232a:	aa 27       	eor	r26, r26
    232c:	0e d0       	rcall	.+28     	; 0x234a <__addsf3x>
    232e:	75 c1       	rjmp	.+746    	; 0x261a <__fp_round>
    2330:	66 d1       	rcall	.+716    	; 0x25fe <__fp_pscA>
    2332:	30 f0       	brcs	.+12     	; 0x2340 <__addsf3+0x18>
    2334:	6b d1       	rcall	.+726    	; 0x260c <__fp_pscB>
    2336:	20 f0       	brcs	.+8      	; 0x2340 <__addsf3+0x18>
    2338:	31 f4       	brne	.+12     	; 0x2346 <__addsf3+0x1e>
    233a:	9f 3f       	cpi	r25, 0xFF	; 255
    233c:	11 f4       	brne	.+4      	; 0x2342 <__addsf3+0x1a>
    233e:	1e f4       	brtc	.+6      	; 0x2346 <__addsf3+0x1e>
    2340:	5b c1       	rjmp	.+694    	; 0x25f8 <__fp_nan>
    2342:	0e f4       	brtc	.+2      	; 0x2346 <__addsf3+0x1e>
    2344:	e0 95       	com	r30
    2346:	e7 fb       	bst	r30, 7
    2348:	51 c1       	rjmp	.+674    	; 0x25ec <__fp_inf>

0000234a <__addsf3x>:
    234a:	e9 2f       	mov	r30, r25
    234c:	77 d1       	rcall	.+750    	; 0x263c <__fp_split3>
    234e:	80 f3       	brcs	.-32     	; 0x2330 <__addsf3+0x8>
    2350:	ba 17       	cp	r27, r26
    2352:	62 07       	cpc	r22, r18
    2354:	73 07       	cpc	r23, r19
    2356:	84 07       	cpc	r24, r20
    2358:	95 07       	cpc	r25, r21
    235a:	18 f0       	brcs	.+6      	; 0x2362 <__addsf3x+0x18>
    235c:	71 f4       	brne	.+28     	; 0x237a <__addsf3x+0x30>
    235e:	9e f5       	brtc	.+102    	; 0x23c6 <__addsf3x+0x7c>
    2360:	8f c1       	rjmp	.+798    	; 0x2680 <__fp_zero>
    2362:	0e f4       	brtc	.+2      	; 0x2366 <__addsf3x+0x1c>
    2364:	e0 95       	com	r30
    2366:	0b 2e       	mov	r0, r27
    2368:	ba 2f       	mov	r27, r26
    236a:	a0 2d       	mov	r26, r0
    236c:	0b 01       	movw	r0, r22
    236e:	b9 01       	movw	r22, r18
    2370:	90 01       	movw	r18, r0
    2372:	0c 01       	movw	r0, r24
    2374:	ca 01       	movw	r24, r20
    2376:	a0 01       	movw	r20, r0
    2378:	11 24       	eor	r1, r1
    237a:	ff 27       	eor	r31, r31
    237c:	59 1b       	sub	r21, r25
    237e:	99 f0       	breq	.+38     	; 0x23a6 <__addsf3x+0x5c>
    2380:	59 3f       	cpi	r21, 0xF9	; 249
    2382:	50 f4       	brcc	.+20     	; 0x2398 <__addsf3x+0x4e>
    2384:	50 3e       	cpi	r21, 0xE0	; 224
    2386:	68 f1       	brcs	.+90     	; 0x23e2 <__addsf3x+0x98>
    2388:	1a 16       	cp	r1, r26
    238a:	f0 40       	sbci	r31, 0x00	; 0
    238c:	a2 2f       	mov	r26, r18
    238e:	23 2f       	mov	r18, r19
    2390:	34 2f       	mov	r19, r20
    2392:	44 27       	eor	r20, r20
    2394:	58 5f       	subi	r21, 0xF8	; 248
    2396:	f3 cf       	rjmp	.-26     	; 0x237e <__addsf3x+0x34>
    2398:	46 95       	lsr	r20
    239a:	37 95       	ror	r19
    239c:	27 95       	ror	r18
    239e:	a7 95       	ror	r26
    23a0:	f0 40       	sbci	r31, 0x00	; 0
    23a2:	53 95       	inc	r21
    23a4:	c9 f7       	brne	.-14     	; 0x2398 <__addsf3x+0x4e>
    23a6:	7e f4       	brtc	.+30     	; 0x23c6 <__addsf3x+0x7c>
    23a8:	1f 16       	cp	r1, r31
    23aa:	ba 0b       	sbc	r27, r26
    23ac:	62 0b       	sbc	r22, r18
    23ae:	73 0b       	sbc	r23, r19
    23b0:	84 0b       	sbc	r24, r20
    23b2:	ba f0       	brmi	.+46     	; 0x23e2 <__addsf3x+0x98>
    23b4:	91 50       	subi	r25, 0x01	; 1
    23b6:	a1 f0       	breq	.+40     	; 0x23e0 <__addsf3x+0x96>
    23b8:	ff 0f       	add	r31, r31
    23ba:	bb 1f       	adc	r27, r27
    23bc:	66 1f       	adc	r22, r22
    23be:	77 1f       	adc	r23, r23
    23c0:	88 1f       	adc	r24, r24
    23c2:	c2 f7       	brpl	.-16     	; 0x23b4 <__addsf3x+0x6a>
    23c4:	0e c0       	rjmp	.+28     	; 0x23e2 <__addsf3x+0x98>
    23c6:	ba 0f       	add	r27, r26
    23c8:	62 1f       	adc	r22, r18
    23ca:	73 1f       	adc	r23, r19
    23cc:	84 1f       	adc	r24, r20
    23ce:	48 f4       	brcc	.+18     	; 0x23e2 <__addsf3x+0x98>
    23d0:	87 95       	ror	r24
    23d2:	77 95       	ror	r23
    23d4:	67 95       	ror	r22
    23d6:	b7 95       	ror	r27
    23d8:	f7 95       	ror	r31
    23da:	9e 3f       	cpi	r25, 0xFE	; 254
    23dc:	08 f0       	brcs	.+2      	; 0x23e0 <__addsf3x+0x96>
    23de:	b3 cf       	rjmp	.-154    	; 0x2346 <__addsf3+0x1e>
    23e0:	93 95       	inc	r25
    23e2:	88 0f       	add	r24, r24
    23e4:	08 f0       	brcs	.+2      	; 0x23e8 <__addsf3x+0x9e>
    23e6:	99 27       	eor	r25, r25
    23e8:	ee 0f       	add	r30, r30
    23ea:	97 95       	ror	r25
    23ec:	87 95       	ror	r24
    23ee:	08 95       	ret

000023f0 <__cmpsf2>:
    23f0:	d9 d0       	rcall	.+434    	; 0x25a4 <__fp_cmp>
    23f2:	08 f4       	brcc	.+2      	; 0x23f6 <__cmpsf2+0x6>
    23f4:	81 e0       	ldi	r24, 0x01	; 1
    23f6:	08 95       	ret

000023f8 <__divsf3>:
    23f8:	0c d0       	rcall	.+24     	; 0x2412 <__divsf3x>
    23fa:	0f c1       	rjmp	.+542    	; 0x261a <__fp_round>
    23fc:	07 d1       	rcall	.+526    	; 0x260c <__fp_pscB>
    23fe:	40 f0       	brcs	.+16     	; 0x2410 <__divsf3+0x18>
    2400:	fe d0       	rcall	.+508    	; 0x25fe <__fp_pscA>
    2402:	30 f0       	brcs	.+12     	; 0x2410 <__divsf3+0x18>
    2404:	21 f4       	brne	.+8      	; 0x240e <__divsf3+0x16>
    2406:	5f 3f       	cpi	r21, 0xFF	; 255
    2408:	19 f0       	breq	.+6      	; 0x2410 <__divsf3+0x18>
    240a:	f0 c0       	rjmp	.+480    	; 0x25ec <__fp_inf>
    240c:	51 11       	cpse	r21, r1
    240e:	39 c1       	rjmp	.+626    	; 0x2682 <__fp_szero>
    2410:	f3 c0       	rjmp	.+486    	; 0x25f8 <__fp_nan>

00002412 <__divsf3x>:
    2412:	14 d1       	rcall	.+552    	; 0x263c <__fp_split3>
    2414:	98 f3       	brcs	.-26     	; 0x23fc <__divsf3+0x4>

00002416 <__divsf3_pse>:
    2416:	99 23       	and	r25, r25
    2418:	c9 f3       	breq	.-14     	; 0x240c <__divsf3+0x14>
    241a:	55 23       	and	r21, r21
    241c:	b1 f3       	breq	.-20     	; 0x240a <__divsf3+0x12>
    241e:	95 1b       	sub	r25, r21
    2420:	55 0b       	sbc	r21, r21
    2422:	bb 27       	eor	r27, r27
    2424:	aa 27       	eor	r26, r26
    2426:	62 17       	cp	r22, r18
    2428:	73 07       	cpc	r23, r19
    242a:	84 07       	cpc	r24, r20
    242c:	38 f0       	brcs	.+14     	; 0x243c <__divsf3_pse+0x26>
    242e:	9f 5f       	subi	r25, 0xFF	; 255
    2430:	5f 4f       	sbci	r21, 0xFF	; 255
    2432:	22 0f       	add	r18, r18
    2434:	33 1f       	adc	r19, r19
    2436:	44 1f       	adc	r20, r20
    2438:	aa 1f       	adc	r26, r26
    243a:	a9 f3       	breq	.-22     	; 0x2426 <__divsf3_pse+0x10>
    243c:	33 d0       	rcall	.+102    	; 0x24a4 <__divsf3_pse+0x8e>
    243e:	0e 2e       	mov	r0, r30
    2440:	3a f0       	brmi	.+14     	; 0x2450 <__divsf3_pse+0x3a>
    2442:	e0 e8       	ldi	r30, 0x80	; 128
    2444:	30 d0       	rcall	.+96     	; 0x24a6 <__divsf3_pse+0x90>
    2446:	91 50       	subi	r25, 0x01	; 1
    2448:	50 40       	sbci	r21, 0x00	; 0
    244a:	e6 95       	lsr	r30
    244c:	00 1c       	adc	r0, r0
    244e:	ca f7       	brpl	.-14     	; 0x2442 <__divsf3_pse+0x2c>
    2450:	29 d0       	rcall	.+82     	; 0x24a4 <__divsf3_pse+0x8e>
    2452:	fe 2f       	mov	r31, r30
    2454:	27 d0       	rcall	.+78     	; 0x24a4 <__divsf3_pse+0x8e>
    2456:	66 0f       	add	r22, r22
    2458:	77 1f       	adc	r23, r23
    245a:	88 1f       	adc	r24, r24
    245c:	bb 1f       	adc	r27, r27
    245e:	26 17       	cp	r18, r22
    2460:	37 07       	cpc	r19, r23
    2462:	48 07       	cpc	r20, r24
    2464:	ab 07       	cpc	r26, r27
    2466:	b0 e8       	ldi	r27, 0x80	; 128
    2468:	09 f0       	breq	.+2      	; 0x246c <__divsf3_pse+0x56>
    246a:	bb 0b       	sbc	r27, r27
    246c:	80 2d       	mov	r24, r0
    246e:	bf 01       	movw	r22, r30
    2470:	ff 27       	eor	r31, r31
    2472:	93 58       	subi	r25, 0x83	; 131
    2474:	5f 4f       	sbci	r21, 0xFF	; 255
    2476:	2a f0       	brmi	.+10     	; 0x2482 <__divsf3_pse+0x6c>
    2478:	9e 3f       	cpi	r25, 0xFE	; 254
    247a:	51 05       	cpc	r21, r1
    247c:	68 f0       	brcs	.+26     	; 0x2498 <__divsf3_pse+0x82>
    247e:	b6 c0       	rjmp	.+364    	; 0x25ec <__fp_inf>
    2480:	00 c1       	rjmp	.+512    	; 0x2682 <__fp_szero>
    2482:	5f 3f       	cpi	r21, 0xFF	; 255
    2484:	ec f3       	brlt	.-6      	; 0x2480 <__divsf3_pse+0x6a>
    2486:	98 3e       	cpi	r25, 0xE8	; 232
    2488:	dc f3       	brlt	.-10     	; 0x2480 <__divsf3_pse+0x6a>
    248a:	86 95       	lsr	r24
    248c:	77 95       	ror	r23
    248e:	67 95       	ror	r22
    2490:	b7 95       	ror	r27
    2492:	f7 95       	ror	r31
    2494:	9f 5f       	subi	r25, 0xFF	; 255
    2496:	c9 f7       	brne	.-14     	; 0x248a <__divsf3_pse+0x74>
    2498:	88 0f       	add	r24, r24
    249a:	91 1d       	adc	r25, r1
    249c:	96 95       	lsr	r25
    249e:	87 95       	ror	r24
    24a0:	97 f9       	bld	r25, 7
    24a2:	08 95       	ret
    24a4:	e1 e0       	ldi	r30, 0x01	; 1
    24a6:	66 0f       	add	r22, r22
    24a8:	77 1f       	adc	r23, r23
    24aa:	88 1f       	adc	r24, r24
    24ac:	bb 1f       	adc	r27, r27
    24ae:	62 17       	cp	r22, r18
    24b0:	73 07       	cpc	r23, r19
    24b2:	84 07       	cpc	r24, r20
    24b4:	ba 07       	cpc	r27, r26
    24b6:	20 f0       	brcs	.+8      	; 0x24c0 <__divsf3_pse+0xaa>
    24b8:	62 1b       	sub	r22, r18
    24ba:	73 0b       	sbc	r23, r19
    24bc:	84 0b       	sbc	r24, r20
    24be:	ba 0b       	sbc	r27, r26
    24c0:	ee 1f       	adc	r30, r30
    24c2:	88 f7       	brcc	.-30     	; 0x24a6 <__divsf3_pse+0x90>
    24c4:	e0 95       	com	r30
    24c6:	08 95       	ret

000024c8 <__fixsfsi>:
    24c8:	04 d0       	rcall	.+8      	; 0x24d2 <__fixunssfsi>
    24ca:	68 94       	set
    24cc:	b1 11       	cpse	r27, r1
    24ce:	d9 c0       	rjmp	.+434    	; 0x2682 <__fp_szero>
    24d0:	08 95       	ret

000024d2 <__fixunssfsi>:
    24d2:	bc d0       	rcall	.+376    	; 0x264c <__fp_splitA>
    24d4:	88 f0       	brcs	.+34     	; 0x24f8 <__fixunssfsi+0x26>
    24d6:	9f 57       	subi	r25, 0x7F	; 127
    24d8:	90 f0       	brcs	.+36     	; 0x24fe <__fixunssfsi+0x2c>
    24da:	b9 2f       	mov	r27, r25
    24dc:	99 27       	eor	r25, r25
    24de:	b7 51       	subi	r27, 0x17	; 23
    24e0:	a0 f0       	brcs	.+40     	; 0x250a <__fixunssfsi+0x38>
    24e2:	d1 f0       	breq	.+52     	; 0x2518 <__fixunssfsi+0x46>
    24e4:	66 0f       	add	r22, r22
    24e6:	77 1f       	adc	r23, r23
    24e8:	88 1f       	adc	r24, r24
    24ea:	99 1f       	adc	r25, r25
    24ec:	1a f0       	brmi	.+6      	; 0x24f4 <__fixunssfsi+0x22>
    24ee:	ba 95       	dec	r27
    24f0:	c9 f7       	brne	.-14     	; 0x24e4 <__fixunssfsi+0x12>
    24f2:	12 c0       	rjmp	.+36     	; 0x2518 <__fixunssfsi+0x46>
    24f4:	b1 30       	cpi	r27, 0x01	; 1
    24f6:	81 f0       	breq	.+32     	; 0x2518 <__fixunssfsi+0x46>
    24f8:	c3 d0       	rcall	.+390    	; 0x2680 <__fp_zero>
    24fa:	b1 e0       	ldi	r27, 0x01	; 1
    24fc:	08 95       	ret
    24fe:	c0 c0       	rjmp	.+384    	; 0x2680 <__fp_zero>
    2500:	67 2f       	mov	r22, r23
    2502:	78 2f       	mov	r23, r24
    2504:	88 27       	eor	r24, r24
    2506:	b8 5f       	subi	r27, 0xF8	; 248
    2508:	39 f0       	breq	.+14     	; 0x2518 <__fixunssfsi+0x46>
    250a:	b9 3f       	cpi	r27, 0xF9	; 249
    250c:	cc f3       	brlt	.-14     	; 0x2500 <__fixunssfsi+0x2e>
    250e:	86 95       	lsr	r24
    2510:	77 95       	ror	r23
    2512:	67 95       	ror	r22
    2514:	b3 95       	inc	r27
    2516:	d9 f7       	brne	.-10     	; 0x250e <__fixunssfsi+0x3c>
    2518:	3e f4       	brtc	.+14     	; 0x2528 <__fixunssfsi+0x56>
    251a:	90 95       	com	r25
    251c:	80 95       	com	r24
    251e:	70 95       	com	r23
    2520:	61 95       	neg	r22
    2522:	7f 4f       	sbci	r23, 0xFF	; 255
    2524:	8f 4f       	sbci	r24, 0xFF	; 255
    2526:	9f 4f       	sbci	r25, 0xFF	; 255
    2528:	08 95       	ret

0000252a <__floatunsisf>:
    252a:	e8 94       	clt
    252c:	09 c0       	rjmp	.+18     	; 0x2540 <__floatsisf+0x12>

0000252e <__floatsisf>:
    252e:	97 fb       	bst	r25, 7
    2530:	3e f4       	brtc	.+14     	; 0x2540 <__floatsisf+0x12>
    2532:	90 95       	com	r25
    2534:	80 95       	com	r24
    2536:	70 95       	com	r23
    2538:	61 95       	neg	r22
    253a:	7f 4f       	sbci	r23, 0xFF	; 255
    253c:	8f 4f       	sbci	r24, 0xFF	; 255
    253e:	9f 4f       	sbci	r25, 0xFF	; 255
    2540:	99 23       	and	r25, r25
    2542:	a9 f0       	breq	.+42     	; 0x256e <__floatsisf+0x40>
    2544:	f9 2f       	mov	r31, r25
    2546:	96 e9       	ldi	r25, 0x96	; 150
    2548:	bb 27       	eor	r27, r27
    254a:	93 95       	inc	r25
    254c:	f6 95       	lsr	r31
    254e:	87 95       	ror	r24
    2550:	77 95       	ror	r23
    2552:	67 95       	ror	r22
    2554:	b7 95       	ror	r27
    2556:	f1 11       	cpse	r31, r1
    2558:	f8 cf       	rjmp	.-16     	; 0x254a <__floatsisf+0x1c>
    255a:	fa f4       	brpl	.+62     	; 0x259a <__floatsisf+0x6c>
    255c:	bb 0f       	add	r27, r27
    255e:	11 f4       	brne	.+4      	; 0x2564 <__floatsisf+0x36>
    2560:	60 ff       	sbrs	r22, 0
    2562:	1b c0       	rjmp	.+54     	; 0x259a <__floatsisf+0x6c>
    2564:	6f 5f       	subi	r22, 0xFF	; 255
    2566:	7f 4f       	sbci	r23, 0xFF	; 255
    2568:	8f 4f       	sbci	r24, 0xFF	; 255
    256a:	9f 4f       	sbci	r25, 0xFF	; 255
    256c:	16 c0       	rjmp	.+44     	; 0x259a <__floatsisf+0x6c>
    256e:	88 23       	and	r24, r24
    2570:	11 f0       	breq	.+4      	; 0x2576 <__floatsisf+0x48>
    2572:	96 e9       	ldi	r25, 0x96	; 150
    2574:	11 c0       	rjmp	.+34     	; 0x2598 <__floatsisf+0x6a>
    2576:	77 23       	and	r23, r23
    2578:	21 f0       	breq	.+8      	; 0x2582 <__floatsisf+0x54>
    257a:	9e e8       	ldi	r25, 0x8E	; 142
    257c:	87 2f       	mov	r24, r23
    257e:	76 2f       	mov	r23, r22
    2580:	05 c0       	rjmp	.+10     	; 0x258c <__floatsisf+0x5e>
    2582:	66 23       	and	r22, r22
    2584:	71 f0       	breq	.+28     	; 0x25a2 <__floatsisf+0x74>
    2586:	96 e8       	ldi	r25, 0x86	; 134
    2588:	86 2f       	mov	r24, r22
    258a:	70 e0       	ldi	r23, 0x00	; 0
    258c:	60 e0       	ldi	r22, 0x00	; 0
    258e:	2a f0       	brmi	.+10     	; 0x259a <__floatsisf+0x6c>
    2590:	9a 95       	dec	r25
    2592:	66 0f       	add	r22, r22
    2594:	77 1f       	adc	r23, r23
    2596:	88 1f       	adc	r24, r24
    2598:	da f7       	brpl	.-10     	; 0x2590 <__floatsisf+0x62>
    259a:	88 0f       	add	r24, r24
    259c:	96 95       	lsr	r25
    259e:	87 95       	ror	r24
    25a0:	97 f9       	bld	r25, 7
    25a2:	08 95       	ret

000025a4 <__fp_cmp>:
    25a4:	99 0f       	add	r25, r25
    25a6:	00 08       	sbc	r0, r0
    25a8:	55 0f       	add	r21, r21
    25aa:	aa 0b       	sbc	r26, r26
    25ac:	e0 e8       	ldi	r30, 0x80	; 128
    25ae:	fe ef       	ldi	r31, 0xFE	; 254
    25b0:	16 16       	cp	r1, r22
    25b2:	17 06       	cpc	r1, r23
    25b4:	e8 07       	cpc	r30, r24
    25b6:	f9 07       	cpc	r31, r25
    25b8:	c0 f0       	brcs	.+48     	; 0x25ea <__fp_cmp+0x46>
    25ba:	12 16       	cp	r1, r18
    25bc:	13 06       	cpc	r1, r19
    25be:	e4 07       	cpc	r30, r20
    25c0:	f5 07       	cpc	r31, r21
    25c2:	98 f0       	brcs	.+38     	; 0x25ea <__fp_cmp+0x46>
    25c4:	62 1b       	sub	r22, r18
    25c6:	73 0b       	sbc	r23, r19
    25c8:	84 0b       	sbc	r24, r20
    25ca:	95 0b       	sbc	r25, r21
    25cc:	39 f4       	brne	.+14     	; 0x25dc <__fp_cmp+0x38>
    25ce:	0a 26       	eor	r0, r26
    25d0:	61 f0       	breq	.+24     	; 0x25ea <__fp_cmp+0x46>
    25d2:	23 2b       	or	r18, r19
    25d4:	24 2b       	or	r18, r20
    25d6:	25 2b       	or	r18, r21
    25d8:	21 f4       	brne	.+8      	; 0x25e2 <__fp_cmp+0x3e>
    25da:	08 95       	ret
    25dc:	0a 26       	eor	r0, r26
    25de:	09 f4       	brne	.+2      	; 0x25e2 <__fp_cmp+0x3e>
    25e0:	a1 40       	sbci	r26, 0x01	; 1
    25e2:	a6 95       	lsr	r26
    25e4:	8f ef       	ldi	r24, 0xFF	; 255
    25e6:	81 1d       	adc	r24, r1
    25e8:	81 1d       	adc	r24, r1
    25ea:	08 95       	ret

000025ec <__fp_inf>:
    25ec:	97 f9       	bld	r25, 7
    25ee:	9f 67       	ori	r25, 0x7F	; 127
    25f0:	80 e8       	ldi	r24, 0x80	; 128
    25f2:	70 e0       	ldi	r23, 0x00	; 0
    25f4:	60 e0       	ldi	r22, 0x00	; 0
    25f6:	08 95       	ret

000025f8 <__fp_nan>:
    25f8:	9f ef       	ldi	r25, 0xFF	; 255
    25fa:	80 ec       	ldi	r24, 0xC0	; 192
    25fc:	08 95       	ret

000025fe <__fp_pscA>:
    25fe:	00 24       	eor	r0, r0
    2600:	0a 94       	dec	r0
    2602:	16 16       	cp	r1, r22
    2604:	17 06       	cpc	r1, r23
    2606:	18 06       	cpc	r1, r24
    2608:	09 06       	cpc	r0, r25
    260a:	08 95       	ret

0000260c <__fp_pscB>:
    260c:	00 24       	eor	r0, r0
    260e:	0a 94       	dec	r0
    2610:	12 16       	cp	r1, r18
    2612:	13 06       	cpc	r1, r19
    2614:	14 06       	cpc	r1, r20
    2616:	05 06       	cpc	r0, r21
    2618:	08 95       	ret

0000261a <__fp_round>:
    261a:	09 2e       	mov	r0, r25
    261c:	03 94       	inc	r0
    261e:	00 0c       	add	r0, r0
    2620:	11 f4       	brne	.+4      	; 0x2626 <__fp_round+0xc>
    2622:	88 23       	and	r24, r24
    2624:	52 f0       	brmi	.+20     	; 0x263a <__fp_round+0x20>
    2626:	bb 0f       	add	r27, r27
    2628:	40 f4       	brcc	.+16     	; 0x263a <__fp_round+0x20>
    262a:	bf 2b       	or	r27, r31
    262c:	11 f4       	brne	.+4      	; 0x2632 <__fp_round+0x18>
    262e:	60 ff       	sbrs	r22, 0
    2630:	04 c0       	rjmp	.+8      	; 0x263a <__fp_round+0x20>
    2632:	6f 5f       	subi	r22, 0xFF	; 255
    2634:	7f 4f       	sbci	r23, 0xFF	; 255
    2636:	8f 4f       	sbci	r24, 0xFF	; 255
    2638:	9f 4f       	sbci	r25, 0xFF	; 255
    263a:	08 95       	ret

0000263c <__fp_split3>:
    263c:	57 fd       	sbrc	r21, 7
    263e:	90 58       	subi	r25, 0x80	; 128
    2640:	44 0f       	add	r20, r20
    2642:	55 1f       	adc	r21, r21
    2644:	59 f0       	breq	.+22     	; 0x265c <__fp_splitA+0x10>
    2646:	5f 3f       	cpi	r21, 0xFF	; 255
    2648:	71 f0       	breq	.+28     	; 0x2666 <__fp_splitA+0x1a>
    264a:	47 95       	ror	r20

0000264c <__fp_splitA>:
    264c:	88 0f       	add	r24, r24
    264e:	97 fb       	bst	r25, 7
    2650:	99 1f       	adc	r25, r25
    2652:	61 f0       	breq	.+24     	; 0x266c <__fp_splitA+0x20>
    2654:	9f 3f       	cpi	r25, 0xFF	; 255
    2656:	79 f0       	breq	.+30     	; 0x2676 <__fp_splitA+0x2a>
    2658:	87 95       	ror	r24
    265a:	08 95       	ret
    265c:	12 16       	cp	r1, r18
    265e:	13 06       	cpc	r1, r19
    2660:	14 06       	cpc	r1, r20
    2662:	55 1f       	adc	r21, r21
    2664:	f2 cf       	rjmp	.-28     	; 0x264a <__fp_split3+0xe>
    2666:	46 95       	lsr	r20
    2668:	f1 df       	rcall	.-30     	; 0x264c <__fp_splitA>
    266a:	08 c0       	rjmp	.+16     	; 0x267c <__fp_splitA+0x30>
    266c:	16 16       	cp	r1, r22
    266e:	17 06       	cpc	r1, r23
    2670:	18 06       	cpc	r1, r24
    2672:	99 1f       	adc	r25, r25
    2674:	f1 cf       	rjmp	.-30     	; 0x2658 <__fp_splitA+0xc>
    2676:	86 95       	lsr	r24
    2678:	71 05       	cpc	r23, r1
    267a:	61 05       	cpc	r22, r1
    267c:	08 94       	sec
    267e:	08 95       	ret

00002680 <__fp_zero>:
    2680:	e8 94       	clt

00002682 <__fp_szero>:
    2682:	bb 27       	eor	r27, r27
    2684:	66 27       	eor	r22, r22
    2686:	77 27       	eor	r23, r23
    2688:	cb 01       	movw	r24, r22
    268a:	97 f9       	bld	r25, 7
    268c:	08 95       	ret

0000268e <__gesf2>:
    268e:	8a df       	rcall	.-236    	; 0x25a4 <__fp_cmp>
    2690:	08 f4       	brcc	.+2      	; 0x2694 <__gesf2+0x6>
    2692:	8f ef       	ldi	r24, 0xFF	; 255
    2694:	08 95       	ret

00002696 <__mulsf3>:
    2696:	0b d0       	rcall	.+22     	; 0x26ae <__mulsf3x>
    2698:	c0 cf       	rjmp	.-128    	; 0x261a <__fp_round>
    269a:	b1 df       	rcall	.-158    	; 0x25fe <__fp_pscA>
    269c:	28 f0       	brcs	.+10     	; 0x26a8 <__mulsf3+0x12>
    269e:	b6 df       	rcall	.-148    	; 0x260c <__fp_pscB>
    26a0:	18 f0       	brcs	.+6      	; 0x26a8 <__mulsf3+0x12>
    26a2:	95 23       	and	r25, r21
    26a4:	09 f0       	breq	.+2      	; 0x26a8 <__mulsf3+0x12>
    26a6:	a2 cf       	rjmp	.-188    	; 0x25ec <__fp_inf>
    26a8:	a7 cf       	rjmp	.-178    	; 0x25f8 <__fp_nan>
    26aa:	11 24       	eor	r1, r1
    26ac:	ea cf       	rjmp	.-44     	; 0x2682 <__fp_szero>

000026ae <__mulsf3x>:
    26ae:	c6 df       	rcall	.-116    	; 0x263c <__fp_split3>
    26b0:	a0 f3       	brcs	.-24     	; 0x269a <__mulsf3+0x4>

000026b2 <__mulsf3_pse>:
    26b2:	95 9f       	mul	r25, r21
    26b4:	d1 f3       	breq	.-12     	; 0x26aa <__mulsf3+0x14>
    26b6:	95 0f       	add	r25, r21
    26b8:	50 e0       	ldi	r21, 0x00	; 0
    26ba:	55 1f       	adc	r21, r21
    26bc:	62 9f       	mul	r22, r18
    26be:	f0 01       	movw	r30, r0
    26c0:	72 9f       	mul	r23, r18
    26c2:	bb 27       	eor	r27, r27
    26c4:	f0 0d       	add	r31, r0
    26c6:	b1 1d       	adc	r27, r1
    26c8:	63 9f       	mul	r22, r19
    26ca:	aa 27       	eor	r26, r26
    26cc:	f0 0d       	add	r31, r0
    26ce:	b1 1d       	adc	r27, r1
    26d0:	aa 1f       	adc	r26, r26
    26d2:	64 9f       	mul	r22, r20
    26d4:	66 27       	eor	r22, r22
    26d6:	b0 0d       	add	r27, r0
    26d8:	a1 1d       	adc	r26, r1
    26da:	66 1f       	adc	r22, r22
    26dc:	82 9f       	mul	r24, r18
    26de:	22 27       	eor	r18, r18
    26e0:	b0 0d       	add	r27, r0
    26e2:	a1 1d       	adc	r26, r1
    26e4:	62 1f       	adc	r22, r18
    26e6:	73 9f       	mul	r23, r19
    26e8:	b0 0d       	add	r27, r0
    26ea:	a1 1d       	adc	r26, r1
    26ec:	62 1f       	adc	r22, r18
    26ee:	83 9f       	mul	r24, r19
    26f0:	a0 0d       	add	r26, r0
    26f2:	61 1d       	adc	r22, r1
    26f4:	22 1f       	adc	r18, r18
    26f6:	74 9f       	mul	r23, r20
    26f8:	33 27       	eor	r19, r19
    26fa:	a0 0d       	add	r26, r0
    26fc:	61 1d       	adc	r22, r1
    26fe:	23 1f       	adc	r18, r19
    2700:	84 9f       	mul	r24, r20
    2702:	60 0d       	add	r22, r0
    2704:	21 1d       	adc	r18, r1
    2706:	82 2f       	mov	r24, r18
    2708:	76 2f       	mov	r23, r22
    270a:	6a 2f       	mov	r22, r26
    270c:	11 24       	eor	r1, r1
    270e:	9f 57       	subi	r25, 0x7F	; 127
    2710:	50 40       	sbci	r21, 0x00	; 0
    2712:	8a f0       	brmi	.+34     	; 0x2736 <__mulsf3_pse+0x84>
    2714:	e1 f0       	breq	.+56     	; 0x274e <__mulsf3_pse+0x9c>
    2716:	88 23       	and	r24, r24
    2718:	4a f0       	brmi	.+18     	; 0x272c <__mulsf3_pse+0x7a>
    271a:	ee 0f       	add	r30, r30
    271c:	ff 1f       	adc	r31, r31
    271e:	bb 1f       	adc	r27, r27
    2720:	66 1f       	adc	r22, r22
    2722:	77 1f       	adc	r23, r23
    2724:	88 1f       	adc	r24, r24
    2726:	91 50       	subi	r25, 0x01	; 1
    2728:	50 40       	sbci	r21, 0x00	; 0
    272a:	a9 f7       	brne	.-22     	; 0x2716 <__mulsf3_pse+0x64>
    272c:	9e 3f       	cpi	r25, 0xFE	; 254
    272e:	51 05       	cpc	r21, r1
    2730:	70 f0       	brcs	.+28     	; 0x274e <__mulsf3_pse+0x9c>
    2732:	5c cf       	rjmp	.-328    	; 0x25ec <__fp_inf>
    2734:	a6 cf       	rjmp	.-180    	; 0x2682 <__fp_szero>
    2736:	5f 3f       	cpi	r21, 0xFF	; 255
    2738:	ec f3       	brlt	.-6      	; 0x2734 <__mulsf3_pse+0x82>
    273a:	98 3e       	cpi	r25, 0xE8	; 232
    273c:	dc f3       	brlt	.-10     	; 0x2734 <__mulsf3_pse+0x82>
    273e:	86 95       	lsr	r24
    2740:	77 95       	ror	r23
    2742:	67 95       	ror	r22
    2744:	b7 95       	ror	r27
    2746:	f7 95       	ror	r31
    2748:	e7 95       	ror	r30
    274a:	9f 5f       	subi	r25, 0xFF	; 255
    274c:	c1 f7       	brne	.-16     	; 0x273e <__mulsf3_pse+0x8c>
    274e:	fe 2b       	or	r31, r30
    2750:	88 0f       	add	r24, r24
    2752:	91 1d       	adc	r25, r1
    2754:	96 95       	lsr	r25
    2756:	87 95       	ror	r24
    2758:	97 f9       	bld	r25, 7
    275a:	08 95       	ret

0000275c <pow>:
    275c:	fa 01       	movw	r30, r20
    275e:	ee 0f       	add	r30, r30
    2760:	ff 1f       	adc	r31, r31
    2762:	30 96       	adiw	r30, 0x00	; 0
    2764:	21 05       	cpc	r18, r1
    2766:	31 05       	cpc	r19, r1
    2768:	99 f1       	breq	.+102    	; 0x27d0 <pow+0x74>
    276a:	61 15       	cp	r22, r1
    276c:	71 05       	cpc	r23, r1
    276e:	61 f4       	brne	.+24     	; 0x2788 <pow+0x2c>
    2770:	80 38       	cpi	r24, 0x80	; 128
    2772:	bf e3       	ldi	r27, 0x3F	; 63
    2774:	9b 07       	cpc	r25, r27
    2776:	49 f1       	breq	.+82     	; 0x27ca <pow+0x6e>
    2778:	68 94       	set
    277a:	90 38       	cpi	r25, 0x80	; 128
    277c:	81 05       	cpc	r24, r1
    277e:	61 f0       	breq	.+24     	; 0x2798 <pow+0x3c>
    2780:	80 38       	cpi	r24, 0x80	; 128
    2782:	bf ef       	ldi	r27, 0xFF	; 255
    2784:	9b 07       	cpc	r25, r27
    2786:	41 f0       	breq	.+16     	; 0x2798 <pow+0x3c>
    2788:	99 23       	and	r25, r25
    278a:	42 f5       	brpl	.+80     	; 0x27dc <pow+0x80>
    278c:	ff 3f       	cpi	r31, 0xFF	; 255
    278e:	e1 05       	cpc	r30, r1
    2790:	31 05       	cpc	r19, r1
    2792:	21 05       	cpc	r18, r1
    2794:	11 f1       	breq	.+68     	; 0x27da <pow+0x7e>
    2796:	e8 94       	clt
    2798:	08 94       	sec
    279a:	e7 95       	ror	r30
    279c:	d9 01       	movw	r26, r18
    279e:	aa 23       	and	r26, r26
    27a0:	29 f4       	brne	.+10     	; 0x27ac <pow+0x50>
    27a2:	ab 2f       	mov	r26, r27
    27a4:	be 2f       	mov	r27, r30
    27a6:	f8 5f       	subi	r31, 0xF8	; 248
    27a8:	d0 f3       	brcs	.-12     	; 0x279e <pow+0x42>
    27aa:	10 c0       	rjmp	.+32     	; 0x27cc <pow+0x70>
    27ac:	ff 5f       	subi	r31, 0xFF	; 255
    27ae:	70 f4       	brcc	.+28     	; 0x27cc <pow+0x70>
    27b0:	a6 95       	lsr	r26
    27b2:	e0 f7       	brcc	.-8      	; 0x27ac <pow+0x50>
    27b4:	f7 39       	cpi	r31, 0x97	; 151
    27b6:	50 f0       	brcs	.+20     	; 0x27cc <pow+0x70>
    27b8:	19 f0       	breq	.+6      	; 0x27c0 <pow+0x64>
    27ba:	ff 3a       	cpi	r31, 0xAF	; 175
    27bc:	38 f4       	brcc	.+14     	; 0x27cc <pow+0x70>
    27be:	9f 77       	andi	r25, 0x7F	; 127
    27c0:	9f 93       	push	r25
    27c2:	0c d0       	rcall	.+24     	; 0x27dc <pow+0x80>
    27c4:	0f 90       	pop	r0
    27c6:	07 fc       	sbrc	r0, 7
    27c8:	90 58       	subi	r25, 0x80	; 128
    27ca:	08 95       	ret
    27cc:	3e f0       	brts	.+14     	; 0x27dc <pow+0x80>
    27ce:	14 cf       	rjmp	.-472    	; 0x25f8 <__fp_nan>
    27d0:	60 e0       	ldi	r22, 0x00	; 0
    27d2:	70 e0       	ldi	r23, 0x00	; 0
    27d4:	80 e8       	ldi	r24, 0x80	; 128
    27d6:	9f e3       	ldi	r25, 0x3F	; 63
    27d8:	08 95       	ret
    27da:	4f e7       	ldi	r20, 0x7F	; 127
    27dc:	9f 77       	andi	r25, 0x7F	; 127
    27de:	5f 93       	push	r21
    27e0:	4f 93       	push	r20
    27e2:	3f 93       	push	r19
    27e4:	2f 93       	push	r18
    27e6:	9e d0       	rcall	.+316    	; 0x2924 <log>
    27e8:	2f 91       	pop	r18
    27ea:	3f 91       	pop	r19
    27ec:	4f 91       	pop	r20
    27ee:	5f 91       	pop	r21
    27f0:	52 df       	rcall	.-348    	; 0x2696 <__mulsf3>
    27f2:	05 c0       	rjmp	.+10     	; 0x27fe <exp>
    27f4:	19 f4       	brne	.+6      	; 0x27fc <pow+0xa0>
    27f6:	0e f0       	brts	.+2      	; 0x27fa <pow+0x9e>
    27f8:	f9 ce       	rjmp	.-526    	; 0x25ec <__fp_inf>
    27fa:	42 cf       	rjmp	.-380    	; 0x2680 <__fp_zero>
    27fc:	fd ce       	rjmp	.-518    	; 0x25f8 <__fp_nan>

000027fe <exp>:
    27fe:	26 df       	rcall	.-436    	; 0x264c <__fp_splitA>
    2800:	c8 f3       	brcs	.-14     	; 0x27f4 <pow+0x98>
    2802:	96 38       	cpi	r25, 0x86	; 134
    2804:	c0 f7       	brcc	.-16     	; 0x27f6 <pow+0x9a>
    2806:	07 f8       	bld	r0, 7
    2808:	0f 92       	push	r0
    280a:	e8 94       	clt
    280c:	2b e3       	ldi	r18, 0x3B	; 59
    280e:	3a ea       	ldi	r19, 0xAA	; 170
    2810:	48 eb       	ldi	r20, 0xB8	; 184
    2812:	5f e7       	ldi	r21, 0x7F	; 127
    2814:	4e df       	rcall	.-356    	; 0x26b2 <__mulsf3_pse>
    2816:	0f 92       	push	r0
    2818:	0f 92       	push	r0
    281a:	0f 92       	push	r0
    281c:	4d b7       	in	r20, 0x3d	; 61
    281e:	5e b7       	in	r21, 0x3e	; 62
    2820:	0f 92       	push	r0
    2822:	c0 d0       	rcall	.+384    	; 0x29a4 <modf>
    2824:	e2 ec       	ldi	r30, 0xC2	; 194
    2826:	f0 e0       	ldi	r31, 0x00	; 0
    2828:	16 d0       	rcall	.+44     	; 0x2856 <__fp_powser>
    282a:	4f 91       	pop	r20
    282c:	5f 91       	pop	r21
    282e:	ef 91       	pop	r30
    2830:	ff 91       	pop	r31
    2832:	e5 95       	asr	r30
    2834:	ee 1f       	adc	r30, r30
    2836:	ff 1f       	adc	r31, r31
    2838:	49 f0       	breq	.+18     	; 0x284c <exp+0x4e>
    283a:	fe 57       	subi	r31, 0x7E	; 126
    283c:	e0 68       	ori	r30, 0x80	; 128
    283e:	44 27       	eor	r20, r20
    2840:	ee 0f       	add	r30, r30
    2842:	44 1f       	adc	r20, r20
    2844:	fa 95       	dec	r31
    2846:	e1 f7       	brne	.-8      	; 0x2840 <exp+0x42>
    2848:	41 95       	neg	r20
    284a:	55 0b       	sbc	r21, r21
    284c:	32 d0       	rcall	.+100    	; 0x28b2 <ldexp>
    284e:	0f 90       	pop	r0
    2850:	07 fe       	sbrs	r0, 7
    2852:	26 c0       	rjmp	.+76     	; 0x28a0 <inverse>
    2854:	08 95       	ret

00002856 <__fp_powser>:
    2856:	df 93       	push	r29
    2858:	cf 93       	push	r28
    285a:	1f 93       	push	r17
    285c:	0f 93       	push	r16
    285e:	ff 92       	push	r15
    2860:	ef 92       	push	r14
    2862:	df 92       	push	r13
    2864:	7b 01       	movw	r14, r22
    2866:	8c 01       	movw	r16, r24
    2868:	68 94       	set
    286a:	05 c0       	rjmp	.+10     	; 0x2876 <__fp_powser+0x20>
    286c:	da 2e       	mov	r13, r26
    286e:	ef 01       	movw	r28, r30
    2870:	1e df       	rcall	.-452    	; 0x26ae <__mulsf3x>
    2872:	fe 01       	movw	r30, r28
    2874:	e8 94       	clt
    2876:	a5 91       	lpm	r26, Z+
    2878:	25 91       	lpm	r18, Z+
    287a:	35 91       	lpm	r19, Z+
    287c:	45 91       	lpm	r20, Z+
    287e:	55 91       	lpm	r21, Z+
    2880:	ae f3       	brts	.-22     	; 0x286c <__fp_powser+0x16>
    2882:	ef 01       	movw	r28, r30
    2884:	62 dd       	rcall	.-1340   	; 0x234a <__addsf3x>
    2886:	fe 01       	movw	r30, r28
    2888:	97 01       	movw	r18, r14
    288a:	a8 01       	movw	r20, r16
    288c:	da 94       	dec	r13
    288e:	79 f7       	brne	.-34     	; 0x286e <__fp_powser+0x18>
    2890:	df 90       	pop	r13
    2892:	ef 90       	pop	r14
    2894:	ff 90       	pop	r15
    2896:	0f 91       	pop	r16
    2898:	1f 91       	pop	r17
    289a:	cf 91       	pop	r28
    289c:	df 91       	pop	r29
    289e:	08 95       	ret

000028a0 <inverse>:
    28a0:	9b 01       	movw	r18, r22
    28a2:	ac 01       	movw	r20, r24
    28a4:	60 e0       	ldi	r22, 0x00	; 0
    28a6:	70 e0       	ldi	r23, 0x00	; 0
    28a8:	80 e8       	ldi	r24, 0x80	; 128
    28aa:	9f e3       	ldi	r25, 0x3F	; 63
    28ac:	a5 cd       	rjmp	.-1206   	; 0x23f8 <__divsf3>
    28ae:	9e ce       	rjmp	.-708    	; 0x25ec <__fp_inf>
    28b0:	ac c0       	rjmp	.+344    	; 0x2a0a <__fp_mpack>

000028b2 <ldexp>:
    28b2:	cc de       	rcall	.-616    	; 0x264c <__fp_splitA>
    28b4:	e8 f3       	brcs	.-6      	; 0x28b0 <inverse+0x10>
    28b6:	99 23       	and	r25, r25
    28b8:	d9 f3       	breq	.-10     	; 0x28b0 <inverse+0x10>
    28ba:	94 0f       	add	r25, r20
    28bc:	51 1d       	adc	r21, r1
    28be:	bb f3       	brvs	.-18     	; 0x28ae <inverse+0xe>
    28c0:	91 50       	subi	r25, 0x01	; 1
    28c2:	50 40       	sbci	r21, 0x00	; 0
    28c4:	94 f0       	brlt	.+36     	; 0x28ea <ldexp+0x38>
    28c6:	59 f0       	breq	.+22     	; 0x28de <ldexp+0x2c>
    28c8:	88 23       	and	r24, r24
    28ca:	32 f0       	brmi	.+12     	; 0x28d8 <ldexp+0x26>
    28cc:	66 0f       	add	r22, r22
    28ce:	77 1f       	adc	r23, r23
    28d0:	88 1f       	adc	r24, r24
    28d2:	91 50       	subi	r25, 0x01	; 1
    28d4:	50 40       	sbci	r21, 0x00	; 0
    28d6:	c1 f7       	brne	.-16     	; 0x28c8 <ldexp+0x16>
    28d8:	9e 3f       	cpi	r25, 0xFE	; 254
    28da:	51 05       	cpc	r21, r1
    28dc:	44 f7       	brge	.-48     	; 0x28ae <inverse+0xe>
    28de:	88 0f       	add	r24, r24
    28e0:	91 1d       	adc	r25, r1
    28e2:	96 95       	lsr	r25
    28e4:	87 95       	ror	r24
    28e6:	97 f9       	bld	r25, 7
    28e8:	08 95       	ret
    28ea:	5f 3f       	cpi	r21, 0xFF	; 255
    28ec:	ac f0       	brlt	.+42     	; 0x2918 <ldexp+0x66>
    28ee:	98 3e       	cpi	r25, 0xE8	; 232
    28f0:	9c f0       	brlt	.+38     	; 0x2918 <ldexp+0x66>
    28f2:	bb 27       	eor	r27, r27
    28f4:	86 95       	lsr	r24
    28f6:	77 95       	ror	r23
    28f8:	67 95       	ror	r22
    28fa:	b7 95       	ror	r27
    28fc:	08 f4       	brcc	.+2      	; 0x2900 <ldexp+0x4e>
    28fe:	b1 60       	ori	r27, 0x01	; 1
    2900:	93 95       	inc	r25
    2902:	c1 f7       	brne	.-16     	; 0x28f4 <ldexp+0x42>
    2904:	bb 0f       	add	r27, r27
    2906:	58 f7       	brcc	.-42     	; 0x28de <ldexp+0x2c>
    2908:	11 f4       	brne	.+4      	; 0x290e <ldexp+0x5c>
    290a:	60 ff       	sbrs	r22, 0
    290c:	e8 cf       	rjmp	.-48     	; 0x28de <ldexp+0x2c>
    290e:	6f 5f       	subi	r22, 0xFF	; 255
    2910:	7f 4f       	sbci	r23, 0xFF	; 255
    2912:	8f 4f       	sbci	r24, 0xFF	; 255
    2914:	9f 4f       	sbci	r25, 0xFF	; 255
    2916:	e3 cf       	rjmp	.-58     	; 0x28de <ldexp+0x2c>
    2918:	b4 ce       	rjmp	.-664    	; 0x2682 <__fp_szero>
    291a:	0e f0       	brts	.+2      	; 0x291e <ldexp+0x6c>
    291c:	76 c0       	rjmp	.+236    	; 0x2a0a <__fp_mpack>
    291e:	6c ce       	rjmp	.-808    	; 0x25f8 <__fp_nan>
    2920:	68 94       	set
    2922:	64 ce       	rjmp	.-824    	; 0x25ec <__fp_inf>

00002924 <log>:
    2924:	93 de       	rcall	.-730    	; 0x264c <__fp_splitA>
    2926:	c8 f3       	brcs	.-14     	; 0x291a <ldexp+0x68>
    2928:	99 23       	and	r25, r25
    292a:	d1 f3       	breq	.-12     	; 0x2920 <ldexp+0x6e>
    292c:	c6 f3       	brts	.-16     	; 0x291e <ldexp+0x6c>
    292e:	df 93       	push	r29
    2930:	cf 93       	push	r28
    2932:	1f 93       	push	r17
    2934:	0f 93       	push	r16
    2936:	ff 92       	push	r15
    2938:	c9 2f       	mov	r28, r25
    293a:	dd 27       	eor	r29, r29
    293c:	88 23       	and	r24, r24
    293e:	2a f0       	brmi	.+10     	; 0x294a <log+0x26>
    2940:	21 97       	sbiw	r28, 0x01	; 1
    2942:	66 0f       	add	r22, r22
    2944:	77 1f       	adc	r23, r23
    2946:	88 1f       	adc	r24, r24
    2948:	da f7       	brpl	.-10     	; 0x2940 <log+0x1c>
    294a:	20 e0       	ldi	r18, 0x00	; 0
    294c:	30 e0       	ldi	r19, 0x00	; 0
    294e:	40 e8       	ldi	r20, 0x80	; 128
    2950:	5f eb       	ldi	r21, 0xBF	; 191
    2952:	9f e3       	ldi	r25, 0x3F	; 63
    2954:	88 39       	cpi	r24, 0x98	; 152
    2956:	20 f0       	brcs	.+8      	; 0x2960 <log+0x3c>
    2958:	80 3e       	cpi	r24, 0xE0	; 224
    295a:	30 f0       	brcs	.+12     	; 0x2968 <log+0x44>
    295c:	21 96       	adiw	r28, 0x01	; 1
    295e:	8f 77       	andi	r24, 0x7F	; 127
    2960:	e3 dc       	rcall	.-1594   	; 0x2328 <__addsf3>
    2962:	ea ee       	ldi	r30, 0xEA	; 234
    2964:	f0 e0       	ldi	r31, 0x00	; 0
    2966:	03 c0       	rjmp	.+6      	; 0x296e <log+0x4a>
    2968:	df dc       	rcall	.-1602   	; 0x2328 <__addsf3>
    296a:	e7 e1       	ldi	r30, 0x17	; 23
    296c:	f1 e0       	ldi	r31, 0x01	; 1
    296e:	73 df       	rcall	.-282    	; 0x2856 <__fp_powser>
    2970:	8b 01       	movw	r16, r22
    2972:	be 01       	movw	r22, r28
    2974:	ec 01       	movw	r28, r24
    2976:	fb 2e       	mov	r15, r27
    2978:	6f 57       	subi	r22, 0x7F	; 127
    297a:	71 09       	sbc	r23, r1
    297c:	75 95       	asr	r23
    297e:	77 1f       	adc	r23, r23
    2980:	88 0b       	sbc	r24, r24
    2982:	99 0b       	sbc	r25, r25
    2984:	d4 dd       	rcall	.-1112   	; 0x252e <__floatsisf>
    2986:	28 e1       	ldi	r18, 0x18	; 24
    2988:	32 e7       	ldi	r19, 0x72	; 114
    298a:	41 e3       	ldi	r20, 0x31	; 49
    298c:	5f e3       	ldi	r21, 0x3F	; 63
    298e:	8f de       	rcall	.-738    	; 0x26ae <__mulsf3x>
    2990:	af 2d       	mov	r26, r15
    2992:	98 01       	movw	r18, r16
    2994:	ae 01       	movw	r20, r28
    2996:	ff 90       	pop	r15
    2998:	0f 91       	pop	r16
    299a:	1f 91       	pop	r17
    299c:	cf 91       	pop	r28
    299e:	df 91       	pop	r29
    29a0:	d4 dc       	rcall	.-1624   	; 0x234a <__addsf3x>
    29a2:	3b ce       	rjmp	.-906    	; 0x261a <__fp_round>

000029a4 <modf>:
    29a4:	fa 01       	movw	r30, r20
    29a6:	dc 01       	movw	r26, r24
    29a8:	aa 0f       	add	r26, r26
    29aa:	bb 1f       	adc	r27, r27
    29ac:	9b 01       	movw	r18, r22
    29ae:	ac 01       	movw	r20, r24
    29b0:	bf 57       	subi	r27, 0x7F	; 127
    29b2:	28 f4       	brcc	.+10     	; 0x29be <modf+0x1a>
    29b4:	22 27       	eor	r18, r18
    29b6:	33 27       	eor	r19, r19
    29b8:	44 27       	eor	r20, r20
    29ba:	50 78       	andi	r21, 0x80	; 128
    29bc:	1f c0       	rjmp	.+62     	; 0x29fc <modf+0x58>
    29be:	b7 51       	subi	r27, 0x17	; 23
    29c0:	88 f4       	brcc	.+34     	; 0x29e4 <modf+0x40>
    29c2:	ab 2f       	mov	r26, r27
    29c4:	00 24       	eor	r0, r0
    29c6:	46 95       	lsr	r20
    29c8:	37 95       	ror	r19
    29ca:	27 95       	ror	r18
    29cc:	01 1c       	adc	r0, r1
    29ce:	a3 95       	inc	r26
    29d0:	d2 f3       	brmi	.-12     	; 0x29c6 <modf+0x22>
    29d2:	00 20       	and	r0, r0
    29d4:	69 f0       	breq	.+26     	; 0x29f0 <modf+0x4c>
    29d6:	22 0f       	add	r18, r18
    29d8:	33 1f       	adc	r19, r19
    29da:	44 1f       	adc	r20, r20
    29dc:	b3 95       	inc	r27
    29de:	da f3       	brmi	.-10     	; 0x29d6 <modf+0x32>
    29e0:	0d d0       	rcall	.+26     	; 0x29fc <modf+0x58>
    29e2:	a1 cc       	rjmp	.-1726   	; 0x2326 <__subsf3>
    29e4:	61 30       	cpi	r22, 0x01	; 1
    29e6:	71 05       	cpc	r23, r1
    29e8:	a0 e8       	ldi	r26, 0x80	; 128
    29ea:	8a 07       	cpc	r24, r26
    29ec:	b9 46       	sbci	r27, 0x69	; 105
    29ee:	30 f4       	brcc	.+12     	; 0x29fc <modf+0x58>
    29f0:	9b 01       	movw	r18, r22
    29f2:	ac 01       	movw	r20, r24
    29f4:	66 27       	eor	r22, r22
    29f6:	77 27       	eor	r23, r23
    29f8:	88 27       	eor	r24, r24
    29fa:	90 78       	andi	r25, 0x80	; 128
    29fc:	30 96       	adiw	r30, 0x00	; 0
    29fe:	21 f0       	breq	.+8      	; 0x2a08 <modf+0x64>
    2a00:	20 83       	st	Z, r18
    2a02:	31 83       	std	Z+1, r19	; 0x01
    2a04:	42 83       	std	Z+2, r20	; 0x02
    2a06:	53 83       	std	Z+3, r21	; 0x03
    2a08:	08 95       	ret

00002a0a <__fp_mpack>:
    2a0a:	9f 3f       	cpi	r25, 0xFF	; 255
    2a0c:	31 f0       	breq	.+12     	; 0x2a1a <__fp_mpack_finite+0xc>

00002a0e <__fp_mpack_finite>:
    2a0e:	91 50       	subi	r25, 0x01	; 1
    2a10:	20 f4       	brcc	.+8      	; 0x2a1a <__fp_mpack_finite+0xc>
    2a12:	87 95       	ror	r24
    2a14:	77 95       	ror	r23
    2a16:	67 95       	ror	r22
    2a18:	b7 95       	ror	r27
    2a1a:	88 0f       	add	r24, r24
    2a1c:	91 1d       	adc	r25, r1
    2a1e:	96 95       	lsr	r25
    2a20:	87 95       	ror	r24
    2a22:	97 f9       	bld	r25, 7
    2a24:	08 95       	ret

00002a26 <__mulsi3>:
    2a26:	db 01       	movw	r26, r22
    2a28:	8f 93       	push	r24
    2a2a:	9f 93       	push	r25
    2a2c:	52 d0       	rcall	.+164    	; 0x2ad2 <__muluhisi3>
    2a2e:	bf 91       	pop	r27
    2a30:	af 91       	pop	r26
    2a32:	a2 9f       	mul	r26, r18
    2a34:	80 0d       	add	r24, r0
    2a36:	91 1d       	adc	r25, r1
    2a38:	a3 9f       	mul	r26, r19
    2a3a:	90 0d       	add	r25, r0
    2a3c:	b2 9f       	mul	r27, r18
    2a3e:	90 0d       	add	r25, r0
    2a40:	11 24       	eor	r1, r1
    2a42:	08 95       	ret

00002a44 <__divmodhi4>:
    2a44:	97 fb       	bst	r25, 7
    2a46:	07 2e       	mov	r0, r23
    2a48:	16 f4       	brtc	.+4      	; 0x2a4e <__divmodhi4+0xa>
    2a4a:	00 94       	com	r0
    2a4c:	06 d0       	rcall	.+12     	; 0x2a5a <__divmodhi4_neg1>
    2a4e:	77 fd       	sbrc	r23, 7
    2a50:	08 d0       	rcall	.+16     	; 0x2a62 <__divmodhi4_neg2>
    2a52:	49 d0       	rcall	.+146    	; 0x2ae6 <__udivmodhi4>
    2a54:	07 fc       	sbrc	r0, 7
    2a56:	05 d0       	rcall	.+10     	; 0x2a62 <__divmodhi4_neg2>
    2a58:	3e f4       	brtc	.+14     	; 0x2a68 <__divmodhi4_exit>

00002a5a <__divmodhi4_neg1>:
    2a5a:	90 95       	com	r25
    2a5c:	81 95       	neg	r24
    2a5e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a60:	08 95       	ret

00002a62 <__divmodhi4_neg2>:
    2a62:	70 95       	com	r23
    2a64:	61 95       	neg	r22
    2a66:	7f 4f       	sbci	r23, 0xFF	; 255

00002a68 <__divmodhi4_exit>:
    2a68:	08 95       	ret

00002a6a <__divmodsi4>:
    2a6a:	05 2e       	mov	r0, r21
    2a6c:	97 fb       	bst	r25, 7
    2a6e:	16 f4       	brtc	.+4      	; 0x2a74 <__divmodsi4+0xa>
    2a70:	00 94       	com	r0
    2a72:	0f d0       	rcall	.+30     	; 0x2a92 <__negsi2>
    2a74:	57 fd       	sbrc	r21, 7
    2a76:	05 d0       	rcall	.+10     	; 0x2a82 <__divmodsi4_neg2>
    2a78:	4a d0       	rcall	.+148    	; 0x2b0e <__udivmodsi4>
    2a7a:	07 fc       	sbrc	r0, 7
    2a7c:	02 d0       	rcall	.+4      	; 0x2a82 <__divmodsi4_neg2>
    2a7e:	46 f4       	brtc	.+16     	; 0x2a90 <__divmodsi4_exit>
    2a80:	08 c0       	rjmp	.+16     	; 0x2a92 <__negsi2>

00002a82 <__divmodsi4_neg2>:
    2a82:	50 95       	com	r21
    2a84:	40 95       	com	r20
    2a86:	30 95       	com	r19
    2a88:	21 95       	neg	r18
    2a8a:	3f 4f       	sbci	r19, 0xFF	; 255
    2a8c:	4f 4f       	sbci	r20, 0xFF	; 255
    2a8e:	5f 4f       	sbci	r21, 0xFF	; 255

00002a90 <__divmodsi4_exit>:
    2a90:	08 95       	ret

00002a92 <__negsi2>:
    2a92:	90 95       	com	r25
    2a94:	80 95       	com	r24
    2a96:	70 95       	com	r23
    2a98:	61 95       	neg	r22
    2a9a:	7f 4f       	sbci	r23, 0xFF	; 255
    2a9c:	8f 4f       	sbci	r24, 0xFF	; 255
    2a9e:	9f 4f       	sbci	r25, 0xFF	; 255
    2aa0:	08 95       	ret

00002aa2 <__tablejump2__>:
    2aa2:	ee 0f       	add	r30, r30
    2aa4:	ff 1f       	adc	r31, r31
    2aa6:	00 24       	eor	r0, r0
    2aa8:	00 1c       	adc	r0, r0
    2aaa:	0b be       	out	0x3b, r0	; 59
    2aac:	07 90       	elpm	r0, Z+
    2aae:	f6 91       	elpm	r31, Z
    2ab0:	e0 2d       	mov	r30, r0
    2ab2:	09 94       	ijmp

00002ab4 <__umulhisi3>:
    2ab4:	a2 9f       	mul	r26, r18
    2ab6:	b0 01       	movw	r22, r0
    2ab8:	b3 9f       	mul	r27, r19
    2aba:	c0 01       	movw	r24, r0
    2abc:	a3 9f       	mul	r26, r19
    2abe:	70 0d       	add	r23, r0
    2ac0:	81 1d       	adc	r24, r1
    2ac2:	11 24       	eor	r1, r1
    2ac4:	91 1d       	adc	r25, r1
    2ac6:	b2 9f       	mul	r27, r18
    2ac8:	70 0d       	add	r23, r0
    2aca:	81 1d       	adc	r24, r1
    2acc:	11 24       	eor	r1, r1
    2ace:	91 1d       	adc	r25, r1
    2ad0:	08 95       	ret

00002ad2 <__muluhisi3>:
    2ad2:	f0 df       	rcall	.-32     	; 0x2ab4 <__umulhisi3>
    2ad4:	a5 9f       	mul	r26, r21
    2ad6:	90 0d       	add	r25, r0
    2ad8:	b4 9f       	mul	r27, r20
    2ada:	90 0d       	add	r25, r0
    2adc:	a4 9f       	mul	r26, r20
    2ade:	80 0d       	add	r24, r0
    2ae0:	91 1d       	adc	r25, r1
    2ae2:	11 24       	eor	r1, r1
    2ae4:	08 95       	ret

00002ae6 <__udivmodhi4>:
    2ae6:	aa 1b       	sub	r26, r26
    2ae8:	bb 1b       	sub	r27, r27
    2aea:	51 e1       	ldi	r21, 0x11	; 17
    2aec:	07 c0       	rjmp	.+14     	; 0x2afc <__udivmodhi4_ep>

00002aee <__udivmodhi4_loop>:
    2aee:	aa 1f       	adc	r26, r26
    2af0:	bb 1f       	adc	r27, r27
    2af2:	a6 17       	cp	r26, r22
    2af4:	b7 07       	cpc	r27, r23
    2af6:	10 f0       	brcs	.+4      	; 0x2afc <__udivmodhi4_ep>
    2af8:	a6 1b       	sub	r26, r22
    2afa:	b7 0b       	sbc	r27, r23

00002afc <__udivmodhi4_ep>:
    2afc:	88 1f       	adc	r24, r24
    2afe:	99 1f       	adc	r25, r25
    2b00:	5a 95       	dec	r21
    2b02:	a9 f7       	brne	.-22     	; 0x2aee <__udivmodhi4_loop>
    2b04:	80 95       	com	r24
    2b06:	90 95       	com	r25
    2b08:	bc 01       	movw	r22, r24
    2b0a:	cd 01       	movw	r24, r26
    2b0c:	08 95       	ret

00002b0e <__udivmodsi4>:
    2b0e:	a1 e2       	ldi	r26, 0x21	; 33
    2b10:	1a 2e       	mov	r1, r26
    2b12:	aa 1b       	sub	r26, r26
    2b14:	bb 1b       	sub	r27, r27
    2b16:	fd 01       	movw	r30, r26
    2b18:	0d c0       	rjmp	.+26     	; 0x2b34 <__udivmodsi4_ep>

00002b1a <__udivmodsi4_loop>:
    2b1a:	aa 1f       	adc	r26, r26
    2b1c:	bb 1f       	adc	r27, r27
    2b1e:	ee 1f       	adc	r30, r30
    2b20:	ff 1f       	adc	r31, r31
    2b22:	a2 17       	cp	r26, r18
    2b24:	b3 07       	cpc	r27, r19
    2b26:	e4 07       	cpc	r30, r20
    2b28:	f5 07       	cpc	r31, r21
    2b2a:	20 f0       	brcs	.+8      	; 0x2b34 <__udivmodsi4_ep>
    2b2c:	a2 1b       	sub	r26, r18
    2b2e:	b3 0b       	sbc	r27, r19
    2b30:	e4 0b       	sbc	r30, r20
    2b32:	f5 0b       	sbc	r31, r21

00002b34 <__udivmodsi4_ep>:
    2b34:	66 1f       	adc	r22, r22
    2b36:	77 1f       	adc	r23, r23
    2b38:	88 1f       	adc	r24, r24
    2b3a:	99 1f       	adc	r25, r25
    2b3c:	1a 94       	dec	r1
    2b3e:	69 f7       	brne	.-38     	; 0x2b1a <__udivmodsi4_loop>
    2b40:	60 95       	com	r22
    2b42:	70 95       	com	r23
    2b44:	80 95       	com	r24
    2b46:	90 95       	com	r25
    2b48:	9b 01       	movw	r18, r22
    2b4a:	ac 01       	movw	r20, r24
    2b4c:	bd 01       	movw	r22, r26
    2b4e:	cf 01       	movw	r24, r30
    2b50:	08 95       	ret

00002b52 <eeprom_read_block>:
    2b52:	dc 01       	movw	r26, r24
    2b54:	cb 01       	movw	r24, r22

00002b56 <eeprom_read_blraw>:
    2b56:	fc 01       	movw	r30, r24
    2b58:	e1 99       	sbic	0x1c, 1	; 28
    2b5a:	fe cf       	rjmp	.-4      	; 0x2b58 <eeprom_read_blraw+0x2>
    2b5c:	06 c0       	rjmp	.+12     	; 0x2b6a <eeprom_read_blraw+0x14>
    2b5e:	ff bb       	out	0x1f, r31	; 31
    2b60:	ee bb       	out	0x1e, r30	; 30
    2b62:	e0 9a       	sbi	0x1c, 0	; 28
    2b64:	31 96       	adiw	r30, 0x01	; 1
    2b66:	0d b2       	in	r0, 0x1d	; 29
    2b68:	0d 92       	st	X+, r0
    2b6a:	41 50       	subi	r20, 0x01	; 1
    2b6c:	50 40       	sbci	r21, 0x00	; 0
    2b6e:	b8 f7       	brcc	.-18     	; 0x2b5e <eeprom_read_blraw+0x8>
    2b70:	08 95       	ret

00002b72 <eeprom_read_byte>:
    2b72:	e1 99       	sbic	0x1c, 1	; 28
    2b74:	fe cf       	rjmp	.-4      	; 0x2b72 <eeprom_read_byte>
    2b76:	9f bb       	out	0x1f, r25	; 31
    2b78:	8e bb       	out	0x1e, r24	; 30
    2b7a:	e0 9a       	sbi	0x1c, 0	; 28
    2b7c:	99 27       	eor	r25, r25
    2b7e:	8d b3       	in	r24, 0x1d	; 29
    2b80:	08 95       	ret

00002b82 <eeprom_read_word>:
    2b82:	a8 e1       	ldi	r26, 0x18	; 24
    2b84:	b0 e0       	ldi	r27, 0x00	; 0
    2b86:	42 e0       	ldi	r20, 0x02	; 2
    2b88:	50 e0       	ldi	r21, 0x00	; 0
    2b8a:	e5 cf       	rjmp	.-54     	; 0x2b56 <eeprom_read_blraw>

00002b8c <eeprom_update_block>:
    2b8c:	dc 01       	movw	r26, r24
    2b8e:	a4 0f       	add	r26, r20
    2b90:	b5 1f       	adc	r27, r21
    2b92:	41 50       	subi	r20, 0x01	; 1
    2b94:	50 40       	sbci	r21, 0x00	; 0
    2b96:	40 f0       	brcs	.+16     	; 0x2ba8 <eeprom_update_block+0x1c>
    2b98:	cb 01       	movw	r24, r22
    2b9a:	84 0f       	add	r24, r20
    2b9c:	95 1f       	adc	r25, r21
    2b9e:	2e 91       	ld	r18, -X
    2ba0:	05 d0       	rcall	.+10     	; 0x2bac <eeprom_update_r18>
    2ba2:	41 50       	subi	r20, 0x01	; 1
    2ba4:	50 40       	sbci	r21, 0x00	; 0
    2ba6:	d8 f7       	brcc	.-10     	; 0x2b9e <eeprom_update_block+0x12>
    2ba8:	08 95       	ret

00002baa <eeprom_update_byte>:
    2baa:	26 2f       	mov	r18, r22

00002bac <eeprom_update_r18>:
    2bac:	e1 99       	sbic	0x1c, 1	; 28
    2bae:	fe cf       	rjmp	.-4      	; 0x2bac <eeprom_update_r18>
    2bb0:	9f bb       	out	0x1f, r25	; 31
    2bb2:	8e bb       	out	0x1e, r24	; 30
    2bb4:	e0 9a       	sbi	0x1c, 0	; 28
    2bb6:	01 97       	sbiw	r24, 0x01	; 1
    2bb8:	0d b2       	in	r0, 0x1d	; 29
    2bba:	02 16       	cp	r0, r18
    2bbc:	31 f0       	breq	.+12     	; 0x2bca <eeprom_update_r18+0x1e>
    2bbe:	2d bb       	out	0x1d, r18	; 29
    2bc0:	0f b6       	in	r0, 0x3f	; 63
    2bc2:	f8 94       	cli
    2bc4:	e2 9a       	sbi	0x1c, 2	; 28
    2bc6:	e1 9a       	sbi	0x1c, 1	; 28
    2bc8:	0f be       	out	0x3f, r0	; 63
    2bca:	08 95       	ret

00002bcc <eeprom_update_dword>:
    2bcc:	03 96       	adiw	r24, 0x03	; 3
    2bce:	27 2f       	mov	r18, r23
    2bd0:	ed df       	rcall	.-38     	; 0x2bac <eeprom_update_r18>
    2bd2:	eb df       	rcall	.-42     	; 0x2baa <eeprom_update_byte>
    2bd4:	25 2f       	mov	r18, r21
    2bd6:	ea df       	rcall	.-44     	; 0x2bac <eeprom_update_r18>
    2bd8:	24 2f       	mov	r18, r20
    2bda:	e8 cf       	rjmp	.-48     	; 0x2bac <eeprom_update_r18>

00002bdc <eeprom_update_word>:
    2bdc:	01 96       	adiw	r24, 0x01	; 1
    2bde:	27 2f       	mov	r18, r23
    2be0:	e5 df       	rcall	.-54     	; 0x2bac <eeprom_update_r18>
    2be2:	e3 cf       	rjmp	.-58     	; 0x2baa <eeprom_update_byte>

00002be4 <eeprom_write_block>:
    2be4:	dc 01       	movw	r26, r24
    2be6:	cb 01       	movw	r24, r22
    2be8:	02 c0       	rjmp	.+4      	; 0x2bee <eeprom_write_block+0xa>
    2bea:	2d 91       	ld	r18, X+
    2bec:	05 d0       	rcall	.+10     	; 0x2bf8 <eeprom_write_r18>
    2bee:	41 50       	subi	r20, 0x01	; 1
    2bf0:	50 40       	sbci	r21, 0x00	; 0
    2bf2:	d8 f7       	brcc	.-10     	; 0x2bea <eeprom_write_block+0x6>
    2bf4:	08 95       	ret

00002bf6 <eeprom_write_byte>:
    2bf6:	26 2f       	mov	r18, r22

00002bf8 <eeprom_write_r18>:
    2bf8:	e1 99       	sbic	0x1c, 1	; 28
    2bfa:	fe cf       	rjmp	.-4      	; 0x2bf8 <eeprom_write_r18>
    2bfc:	9f bb       	out	0x1f, r25	; 31
    2bfe:	8e bb       	out	0x1e, r24	; 30
    2c00:	2d bb       	out	0x1d, r18	; 29
    2c02:	0f b6       	in	r0, 0x3f	; 63
    2c04:	f8 94       	cli
    2c06:	e2 9a       	sbi	0x1c, 2	; 28
    2c08:	e1 9a       	sbi	0x1c, 1	; 28
    2c0a:	0f be       	out	0x3f, r0	; 63
    2c0c:	01 96       	adiw	r24, 0x01	; 1
    2c0e:	08 95       	ret

00002c10 <eeprom_write_dword>:
    2c10:	24 2f       	mov	r18, r20
    2c12:	f2 df       	rcall	.-28     	; 0x2bf8 <eeprom_write_r18>
    2c14:	25 2f       	mov	r18, r21
    2c16:	f0 df       	rcall	.-32     	; 0x2bf8 <eeprom_write_r18>
    2c18:	00 c0       	rjmp	.+0      	; 0x2c1a <eeprom_write_word>

00002c1a <eeprom_write_word>:
    2c1a:	ed df       	rcall	.-38     	; 0x2bf6 <eeprom_write_byte>
    2c1c:	27 2f       	mov	r18, r23
    2c1e:	ec cf       	rjmp	.-40     	; 0x2bf8 <eeprom_write_r18>

00002c20 <_exit>:
    2c20:	f8 94       	cli

00002c22 <__stop_program>:
    2c22:	ff cf       	rjmp	.-2      	; 0x2c22 <__stop_program>
