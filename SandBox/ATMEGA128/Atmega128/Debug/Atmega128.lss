
Atmega128.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000027ee  00002882  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000027ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000237  0080010c  0080010c  0000288e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000288e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000028c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000005c0  00000000  00000000  000028fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005d08  00000000  00000000  00002ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000018bf  00000000  00000000  00008bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003566  00000000  00000000  0000a483  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001078  00000000  00000000  0000d9ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000136c  00000000  00000000  0000ea64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005342  00000000  00000000  0000fdd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000540  00000000  00000000  00015112  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a1 c0       	rjmp	.+322    	; 0x144 <__ctors_end>
       2:	00 00       	nop
       4:	be c0       	rjmp	.+380    	; 0x182 <__bad_interrupt>
       6:	00 00       	nop
       8:	bc c0       	rjmp	.+376    	; 0x182 <__bad_interrupt>
       a:	00 00       	nop
       c:	ba c0       	rjmp	.+372    	; 0x182 <__bad_interrupt>
       e:	00 00       	nop
      10:	b8 c0       	rjmp	.+368    	; 0x182 <__bad_interrupt>
      12:	00 00       	nop
      14:	b6 c0       	rjmp	.+364    	; 0x182 <__bad_interrupt>
      16:	00 00       	nop
      18:	b4 c0       	rjmp	.+360    	; 0x182 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b2 c0       	rjmp	.+356    	; 0x182 <__bad_interrupt>
      1e:	00 00       	nop
      20:	b0 c0       	rjmp	.+352    	; 0x182 <__bad_interrupt>
      22:	00 00       	nop
      24:	ae c0       	rjmp	.+348    	; 0x182 <__bad_interrupt>
      26:	00 00       	nop
      28:	c0 c3       	rjmp	.+1920   	; 0x7aa <__vector_10>
      2a:	00 00       	nop
      2c:	8c c3       	rjmp	.+1816   	; 0x746 <__vector_11>
      2e:	00 00       	nop
      30:	94 c3       	rjmp	.+1832   	; 0x75a <__vector_12>
      32:	00 00       	nop
      34:	9c c3       	rjmp	.+1848   	; 0x76e <__vector_13>
      36:	00 00       	nop
      38:	ae c3       	rjmp	.+1884   	; 0x796 <__vector_14>
      3a:	00 00       	nop
      3c:	0c 94 9f 0f 	jmp	0x1f3e	; 0x1f3e <__vector_15>
      40:	78 c3       	rjmp	.+1776   	; 0x732 <__vector_16>
      42:	00 00       	nop
      44:	9e c0       	rjmp	.+316    	; 0x182 <__bad_interrupt>
      46:	00 00       	nop
      48:	ec c3       	rjmp	.+2008   	; 0x822 <__vector_18>
      4a:	00 00       	nop
      4c:	20 c4       	rjmp	.+2112   	; 0x88e <__vector_19>
      4e:	00 00       	nop
      50:	98 c0       	rjmp	.+304    	; 0x182 <__bad_interrupt>
      52:	00 00       	nop
      54:	97 c0       	rjmp	.+302    	; 0x184 <__vector_21>
      56:	00 00       	nop
      58:	94 c0       	rjmp	.+296    	; 0x182 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	92 c0       	rjmp	.+292    	; 0x182 <__bad_interrupt>
      5e:	00 00       	nop
      60:	90 c3       	rjmp	.+1824   	; 0x782 <__vector_24>
      62:	00 00       	nop
      64:	ac c3       	rjmp	.+1880   	; 0x7be <__vector_25>
      66:	00 00       	nop
      68:	b4 c3       	rjmp	.+1896   	; 0x7d2 <__vector_26>
      6a:	00 00       	nop
      6c:	bc c3       	rjmp	.+1912   	; 0x7e6 <__vector_27>
      6e:	00 00       	nop
      70:	c4 c3       	rjmp	.+1928   	; 0x7fa <__vector_28>
      72:	00 00       	nop
      74:	cc c3       	rjmp	.+1944   	; 0x80e <__vector_29>
      76:	00 00       	nop
      78:	33 c4       	rjmp	.+2150   	; 0x8e0 <__vector_30>
      7a:	00 00       	nop
      7c:	6a c4       	rjmp	.+2260   	; 0x952 <__vector_31>
      7e:	00 00       	nop
      80:	80 c0       	rjmp	.+256    	; 0x182 <__bad_interrupt>
      82:	00 00       	nop
      84:	7e c0       	rjmp	.+252    	; 0x182 <__bad_interrupt>
      86:	00 00       	nop
      88:	7c c0       	rjmp	.+248    	; 0x182 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ba 02       	muls	r27, r26
      8e:	be 02       	muls	r27, r30
      90:	c2 02       	muls	r28, r18
      92:	c6 02       	muls	r28, r22
      94:	ca 02       	muls	r28, r26
      96:	d1 02       	muls	r29, r17
      98:	d8 02       	muls	r29, r24
      9a:	df 02       	muls	r29, r31
      9c:	e3 02       	muls	r30, r19
      9e:	ea 02       	muls	r30, r26
      a0:	f1 02       	muls	r31, r17
      a2:	f8 02       	muls	r31, r24
      a4:	fc 02       	muls	r31, r28
      a6:	03 03       	mulsu	r16, r19
      a8:	0a 03       	fmul	r16, r18
      aa:	26 03       	mulsu	r18, r22
      ac:	2a 03       	fmul	r18, r18
      ae:	2e 03       	fmul	r18, r22
      b0:	32 03       	mulsu	r19, r18
      b2:	38 03       	fmul	r19, r16
      b4:	3c 03       	fmul	r19, r20
      b6:	40 03       	mulsu	r20, r16
      b8:	44 03       	mulsu	r20, r20
      ba:	4d 03       	fmul	r20, r21
      bc:	51 03       	mulsu	r21, r17
      be:	55 03       	mulsu	r21, r21
      c0:	5e 03       	fmul	r21, r22
      c2:	07 63       	ori	r16, 0x37	; 55
      c4:	42 36       	cpi	r20, 0x62	; 98
      c6:	b7 9b       	sbis	0x16, 7	; 22
      c8:	d8 a7       	std	Y+40, r29	; 0x28
      ca:	1a 39       	cpi	r17, 0x9A	; 154
      cc:	68 56       	subi	r22, 0x68	; 104
      ce:	18 ae       	std	Y+56, r1	; 0x38
      d0:	ba ab       	std	Y+50, r27	; 0x32
      d2:	55 8c       	ldd	r5, Z+29	; 0x1d
      d4:	1d 3c       	cpi	r17, 0xCD	; 205
      d6:	b7 cc       	rjmp	.-1682   	; 0xfffffa46 <__eeprom_end+0xff7efa46>
      d8:	57 63       	ori	r21, 0x37	; 55
      da:	bd 6d       	ori	r27, 0xDD	; 221
      dc:	ed fd       	.word	0xfded	; ????
      de:	75 3e       	cpi	r23, 0xE5	; 229
      e0:	f6 17       	cp	r31, r22
      e2:	72 31       	cpi	r23, 0x12	; 18
      e4:	bf 00       	.word	0x00bf	; ????
      e6:	00 00       	nop
      e8:	80 3f       	cpi	r24, 0xF0	; 240
      ea:	08 00       	.word	0x0008	; ????
      ec:	00 00       	nop
      ee:	be 92       	st	-X, r11
      f0:	24 49       	sbci	r18, 0x94	; 148
      f2:	12 3e       	cpi	r17, 0xE2	; 226
      f4:	ab aa       	std	Y+51, r10	; 0x33
      f6:	aa 2a       	or	r10, r26
      f8:	be cd       	rjmp	.-1156   	; 0xfffffc76 <__eeprom_end+0xff7efc76>
      fa:	cc cc       	rjmp	.-1640   	; 0xfffffa94 <__eeprom_end+0xff7efa94>
      fc:	4c 3e       	cpi	r20, 0xEC	; 236
      fe:	00 00       	nop
     100:	00 80       	ld	r0, Z
     102:	be ab       	std	Y+54, r27	; 0x36
     104:	aa aa       	std	Y+50, r10	; 0x32
     106:	aa 3e       	cpi	r26, 0xEA	; 234
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	bf 00       	.word	0x00bf	; ????
     10e:	00 00       	nop
     110:	80 3f       	cpi	r24, 0xF0	; 240
     112:	00 00       	nop
     114:	00 00       	nop
     116:	00 08       	sbc	r0, r0
     118:	41 78       	andi	r20, 0x81	; 129
     11a:	d3 bb       	out	0x13, r29	; 19
     11c:	43 87       	std	Z+11, r20	; 0x0b
     11e:	d1 13       	cpse	r29, r17
     120:	3d 19       	sub	r19, r13
     122:	0e 3c       	cpi	r16, 0xCE	; 206
     124:	c3 bd       	out	0x23, r28	; 35
     126:	42 82       	std	Z+2, r4	; 0x02
     128:	ad 2b       	or	r26, r29
     12a:	3e 68       	ori	r19, 0x8E	; 142
     12c:	ec 82       	std	Y+4, r14	; 0x04
     12e:	76 be       	out	0x36, r7	; 54
     130:	d9 8f       	std	Y+25, r29	; 0x19
     132:	e1 a9       	ldd	r30, Z+49	; 0x31
     134:	3e 4c       	sbci	r19, 0xCE	; 206
     136:	80 ef       	ldi	r24, 0xF0	; 240
     138:	ff be       	out	0x3f, r15	; 63
     13a:	01 c4       	rjmp	.+2050   	; 0x93e <__vector_30+0x5e>
     13c:	ff 7f       	andi	r31, 0xFF	; 255
     13e:	3f 00       	.word	0x003f	; ????
     140:	00 00       	nop
	...

00000144 <__ctors_end>:
     144:	11 24       	eor	r1, r1
     146:	1f be       	out	0x3f, r1	; 63
     148:	cf ef       	ldi	r28, 0xFF	; 255
     14a:	d0 e1       	ldi	r29, 0x10	; 16
     14c:	de bf       	out	0x3e, r29	; 62
     14e:	cd bf       	out	0x3d, r28	; 61

00000150 <__do_copy_data>:
     150:	11 e0       	ldi	r17, 0x01	; 1
     152:	a0 e0       	ldi	r26, 0x00	; 0
     154:	b1 e0       	ldi	r27, 0x01	; 1
     156:	ee ee       	ldi	r30, 0xEE	; 238
     158:	f7 e2       	ldi	r31, 0x27	; 39
     15a:	00 e0       	ldi	r16, 0x00	; 0
     15c:	0b bf       	out	0x3b, r16	; 59
     15e:	02 c0       	rjmp	.+4      	; 0x164 <__do_copy_data+0x14>
     160:	07 90       	elpm	r0, Z+
     162:	0d 92       	st	X+, r0
     164:	ac 30       	cpi	r26, 0x0C	; 12
     166:	b1 07       	cpc	r27, r17
     168:	d9 f7       	brne	.-10     	; 0x160 <__do_copy_data+0x10>

0000016a <__do_clear_bss>:
     16a:	23 e0       	ldi	r18, 0x03	; 3
     16c:	ac e0       	ldi	r26, 0x0C	; 12
     16e:	b1 e0       	ldi	r27, 0x01	; 1
     170:	01 c0       	rjmp	.+2      	; 0x174 <.do_clear_bss_start>

00000172 <.do_clear_bss_loop>:
     172:	1d 92       	st	X+, r1

00000174 <.do_clear_bss_start>:
     174:	a3 34       	cpi	r26, 0x43	; 67
     176:	b2 07       	cpc	r27, r18
     178:	e1 f7       	brne	.-8      	; 0x172 <.do_clear_bss_loop>
     17a:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <main>
     17e:	0c 94 f5 13 	jmp	0x27ea	; 0x27ea <_exit>

00000182 <__bad_interrupt>:
     182:	3e cf       	rjmp	.-388    	; 0x0 <__vectors>

00000184 <__vector_21>:
ISR(ANALOG_INTERRUPT)
/*************************************************************************
Function: ANALOG interrupt
Purpose:  Read Analog Input
**************************************************************************/
{
     184:	1f 92       	push	r1
     186:	0f 92       	push	r0
     188:	0f b6       	in	r0, 0x3f	; 63
     18a:	0f 92       	push	r0
     18c:	11 24       	eor	r1, r1
     18e:	0b b6       	in	r0, 0x3b	; 59
     190:	0f 92       	push	r0
     192:	2f 93       	push	r18
     194:	3f 93       	push	r19
     196:	4f 93       	push	r20
     198:	5f 93       	push	r21
     19a:	8f 93       	push	r24
     19c:	9f 93       	push	r25
     19e:	ef 93       	push	r30
     1a0:	ff 93       	push	r31
	uint8_t Sreg;
	Sreg=STATUS_REGISTER;
     1a2:	2f b7       	in	r18, 0x3f	; 63
	STATUS_REGISTER&=~(1<<GLOBAL_INTERRUPT_ENABLE);
     1a4:	8f b7       	in	r24, 0x3f	; 63
     1a6:	8f 77       	andi	r24, 0x7F	; 127
     1a8:	8f bf       	out	0x3f, r24	; 63
	adc_tmp=ADCL;
     1aa:	84 b1       	in	r24, 0x04	; 4
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <adc_tmp+0x1>
     1b2:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <adc_tmp>
	adc_tmp|=(ADCH<<8);
     1b6:	35 b1       	in	r19, 0x05	; 5
     1b8:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <adc_tmp>
     1bc:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <adc_tmp+0x1>
     1c0:	93 2b       	or	r25, r19
     1c2:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <adc_tmp+0x1>
     1c6:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <adc_tmp>
	if(adc_n_sample < (1<<ADC_NUMBER_SAMPLE)){
     1ca:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
     1ce:	84 30       	cpi	r24, 0x04	; 4
     1d0:	a0 f4       	brcc	.+40     	; 0x1fa <__vector_21+0x76>
		adc_n_sample++;
     1d2:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
     1d6:	8f 5f       	subi	r24, 0xFF	; 255
     1d8:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
		adc_sample+=adc_tmp;
     1dc:	40 91 0d 01 	lds	r20, 0x010D	; 0x80010d <adc_tmp>
     1e0:	50 91 0e 01 	lds	r21, 0x010E	; 0x80010e <adc_tmp+0x1>
     1e4:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <adc_sample>
     1e8:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <adc_sample+0x1>
     1ec:	84 0f       	add	r24, r20
     1ee:	95 1f       	adc	r25, r21
     1f0:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <adc_sample+0x1>
     1f4:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <adc_sample>
     1f8:	43 c0       	rjmp	.+134    	; 0x280 <__vector_21+0xfc>
	}else{
		ADC_VALUE[ADC_SELECTOR]=adc_sample>>ADC_NUMBER_SAMPLE;
     1fa:	e0 91 11 01 	lds	r30, 0x0111	; 0x800111 <ADC_SELECTOR>
     1fe:	f0 91 12 01 	lds	r31, 0x0112	; 0x800112 <ADC_SELECTOR+0x1>
     202:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <adc_sample>
     206:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <adc_sample+0x1>
     20a:	95 95       	asr	r25
     20c:	87 95       	ror	r24
     20e:	95 95       	asr	r25
     210:	87 95       	ror	r24
     212:	ee 0f       	add	r30, r30
     214:	ff 1f       	adc	r31, r31
     216:	eb 5d       	subi	r30, 0xDB	; 219
     218:	fe 4f       	sbci	r31, 0xFE	; 254
     21a:	91 83       	std	Z+1, r25	; 0x01
     21c:	80 83       	st	Z, r24
		adc_n_sample=adc_sample=0;
     21e:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <adc_sample+0x1>
     222:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <adc_sample>
     226:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <__data_end>
		/******/
		if(ADC_SELECTOR < ADC_N_CHANNEL)
     22a:	40 91 11 01 	lds	r20, 0x0111	; 0x800111 <ADC_SELECTOR>
     22e:	50 91 12 01 	lds	r21, 0x0112	; 0x800112 <ADC_SELECTOR+0x1>
     232:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <ADC_N_CHANNEL>
     236:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <ADC_N_CHANNEL+0x1>
     23a:	48 17       	cp	r20, r24
     23c:	59 07       	cpc	r21, r25
     23e:	54 f4       	brge	.+20     	; 0x254 <__vector_21+0xd0>
			ADC_SELECTOR++;
     240:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <ADC_SELECTOR>
     244:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <ADC_SELECTOR+0x1>
     248:	01 96       	adiw	r24, 0x01	; 1
     24a:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <ADC_SELECTOR+0x1>
     24e:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <ADC_SELECTOR>
     252:	04 c0       	rjmp	.+8      	; 0x25c <__vector_21+0xd8>
		else
			ADC_SELECTOR=0;
     254:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <ADC_SELECTOR+0x1>
     258:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <ADC_SELECTOR>
		ADC_SELECT &= ~MUX_MASK;
     25c:	87 b1       	in	r24, 0x07	; 7
     25e:	80 7e       	andi	r24, 0xE0	; 224
     260:	87 b9       	out	0x07, r24	; 7
		ADC_SELECT |= (ADC_CHANNEL_GAIN[ADC_SELECTOR] & MUX_MASK);
     262:	e0 91 11 01 	lds	r30, 0x0111	; 0x800111 <ADC_SELECTOR>
     266:	f0 91 12 01 	lds	r31, 0x0112	; 0x800112 <ADC_SELECTOR+0x1>
     26a:	ee 0f       	add	r30, r30
     26c:	ff 1f       	adc	r31, r31
     26e:	eb 5e       	subi	r30, 0xEB	; 235
     270:	fe 4f       	sbci	r31, 0xFE	; 254
     272:	80 81       	ld	r24, Z
     274:	91 81       	ldd	r25, Z+1	; 0x01
     276:	37 b1       	in	r19, 0x07	; 7
     278:	8f 71       	andi	r24, 0x1F	; 31
     27a:	99 27       	eor	r25, r25
     27c:	83 2b       	or	r24, r19
     27e:	87 b9       	out	0x07, r24	; 7
	}
	STATUS_REGISTER=Sreg;
     280:	2f bf       	out	0x3f, r18	; 63
}
     282:	ff 91       	pop	r31
     284:	ef 91       	pop	r30
     286:	9f 91       	pop	r25
     288:	8f 91       	pop	r24
     28a:	5f 91       	pop	r21
     28c:	4f 91       	pop	r20
     28e:	3f 91       	pop	r19
     290:	2f 91       	pop	r18
     292:	0f 90       	pop	r0
     294:	0b be       	out	0x3b, r0	; 59
     296:	0f 90       	pop	r0
     298:	0f be       	out	0x3f, r0	; 63
     29a:	0f 90       	pop	r0
     29c:	1f 90       	pop	r1
     29e:	18 95       	reti

000002a0 <TIMER_COUNTER0_start>:
	timer3.compareB=TIMER_COUNTER3_compareB;
	timer3.compareC=TIMER_COUNTER3_compareC;
	timer3.start=TIMER_COUNTER3_start;
	timer3.stop=TIMER_COUNTER3_stop;
	return timer3;
}
     2a0:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <timer0_state>
     2a4:	21 11       	cpse	r18, r1
     2a6:	41 c0       	rjmp	.+130    	; 0x32a <TIMER_COUNTER0_start+0x8a>
     2a8:	23 b7       	in	r18, 0x33	; 51
     2aa:	28 7f       	andi	r18, 0xF8	; 248
     2ac:	23 bf       	out	0x33, r18	; 51
     2ae:	80 34       	cpi	r24, 0x40	; 64
     2b0:	91 05       	cpc	r25, r1
     2b2:	11 f1       	breq	.+68     	; 0x2f8 <TIMER_COUNTER0_start+0x58>
     2b4:	48 f4       	brcc	.+18     	; 0x2c8 <TIMER_COUNTER0_start+0x28>
     2b6:	88 30       	cpi	r24, 0x08	; 8
     2b8:	91 05       	cpc	r25, r1
     2ba:	b1 f0       	breq	.+44     	; 0x2e8 <TIMER_COUNTER0_start+0x48>
     2bc:	80 32       	cpi	r24, 0x20	; 32
     2be:	91 05       	cpc	r25, r1
     2c0:	b9 f0       	breq	.+46     	; 0x2f0 <TIMER_COUNTER0_start+0x50>
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	49 f5       	brne	.+82     	; 0x318 <TIMER_COUNTER0_start+0x78>
     2c6:	0c c0       	rjmp	.+24     	; 0x2e0 <TIMER_COUNTER0_start+0x40>
     2c8:	81 15       	cp	r24, r1
     2ca:	21 e0       	ldi	r18, 0x01	; 1
     2cc:	92 07       	cpc	r25, r18
     2ce:	e1 f0       	breq	.+56     	; 0x308 <TIMER_COUNTER0_start+0x68>
     2d0:	81 15       	cp	r24, r1
     2d2:	24 e0       	ldi	r18, 0x04	; 4
     2d4:	92 07       	cpc	r25, r18
     2d6:	e1 f0       	breq	.+56     	; 0x310 <TIMER_COUNTER0_start+0x70>
     2d8:	80 38       	cpi	r24, 0x80	; 128
     2da:	91 05       	cpc	r25, r1
     2dc:	e9 f4       	brne	.+58     	; 0x318 <TIMER_COUNTER0_start+0x78>
     2de:	10 c0       	rjmp	.+32     	; 0x300 <TIMER_COUNTER0_start+0x60>
     2e0:	83 b7       	in	r24, 0x33	; 51
     2e2:	81 60       	ori	r24, 0x01	; 1
     2e4:	83 bf       	out	0x33, r24	; 51
     2e6:	1b c0       	rjmp	.+54     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2e8:	83 b7       	in	r24, 0x33	; 51
     2ea:	82 60       	ori	r24, 0x02	; 2
     2ec:	83 bf       	out	0x33, r24	; 51
     2ee:	17 c0       	rjmp	.+46     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2f0:	83 b7       	in	r24, 0x33	; 51
     2f2:	83 60       	ori	r24, 0x03	; 3
     2f4:	83 bf       	out	0x33, r24	; 51
     2f6:	13 c0       	rjmp	.+38     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2f8:	83 b7       	in	r24, 0x33	; 51
     2fa:	84 60       	ori	r24, 0x04	; 4
     2fc:	83 bf       	out	0x33, r24	; 51
     2fe:	0f c0       	rjmp	.+30     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     300:	83 b7       	in	r24, 0x33	; 51
     302:	85 60       	ori	r24, 0x05	; 5
     304:	83 bf       	out	0x33, r24	; 51
     306:	0b c0       	rjmp	.+22     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     308:	83 b7       	in	r24, 0x33	; 51
     30a:	86 60       	ori	r24, 0x06	; 6
     30c:	83 bf       	out	0x33, r24	; 51
     30e:	07 c0       	rjmp	.+14     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     310:	83 b7       	in	r24, 0x33	; 51
     312:	87 60       	ori	r24, 0x07	; 7
     314:	83 bf       	out	0x33, r24	; 51
     316:	03 c0       	rjmp	.+6      	; 0x31e <TIMER_COUNTER0_start+0x7e>
     318:	83 b7       	in	r24, 0x33	; 51
     31a:	87 60       	ori	r24, 0x07	; 7
     31c:	83 bf       	out	0x33, r24	; 51
     31e:	8f b7       	in	r24, 0x3f	; 63
     320:	80 68       	ori	r24, 0x80	; 128
     322:	8f bf       	out	0x3f, r24	; 63
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timer0_state>
     32a:	08 95       	ret

0000032c <TIMER_COUNTER0_compoutmode>:
     32c:	93 b7       	in	r25, 0x33	; 51
     32e:	9f 7c       	andi	r25, 0xCF	; 207
     330:	93 bf       	out	0x33, r25	; 51
     332:	82 30       	cpi	r24, 0x02	; 2
     334:	51 f0       	breq	.+20     	; 0x34a <TIMER_COUNTER0_compoutmode+0x1e>
     336:	83 30       	cpi	r24, 0x03	; 3
     338:	71 f0       	breq	.+28     	; 0x356 <TIMER_COUNTER0_compoutmode+0x2a>
     33a:	81 30       	cpi	r24, 0x01	; 1
     33c:	89 f4       	brne	.+34     	; 0x360 <TIMER_COUNTER0_compoutmode+0x34>
     33e:	80 e1       	ldi	r24, 0x10	; 16
     340:	87 bb       	out	0x17, r24	; 23
     342:	83 b7       	in	r24, 0x33	; 51
     344:	80 61       	ori	r24, 0x10	; 16
     346:	83 bf       	out	0x33, r24	; 51
     348:	08 95       	ret
     34a:	80 e1       	ldi	r24, 0x10	; 16
     34c:	87 bb       	out	0x17, r24	; 23
     34e:	83 b7       	in	r24, 0x33	; 51
     350:	80 62       	ori	r24, 0x20	; 32
     352:	83 bf       	out	0x33, r24	; 51
     354:	08 95       	ret
     356:	80 e1       	ldi	r24, 0x10	; 16
     358:	87 bb       	out	0x17, r24	; 23
     35a:	83 b7       	in	r24, 0x33	; 51
     35c:	80 63       	ori	r24, 0x30	; 48
     35e:	83 bf       	out	0x33, r24	; 51
     360:	08 95       	ret

00000362 <TIMER_COUNTER0_compare>:
     362:	81 bf       	out	0x31, r24	; 49
     364:	08 95       	ret

00000366 <TIMER_COUNTER0_stop>:
     366:	83 b7       	in	r24, 0x33	; 51
     368:	88 7f       	andi	r24, 0xF8	; 248
     36a:	83 bf       	out	0x33, r24	; 51
     36c:	12 be       	out	0x32, r1	; 50
     36e:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <timer0_state>
     372:	08 95       	ret

00000374 <TIMER_COUNTER1_start>:
     374:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <timer1_state>
     378:	21 11       	cpse	r18, r1
     37a:	41 c0       	rjmp	.+130    	; 0x3fe <TIMER_COUNTER1_start+0x8a>
     37c:	2e b5       	in	r18, 0x2e	; 46
     37e:	28 7f       	andi	r18, 0xF8	; 248
     380:	2e bd       	out	0x2e, r18	; 46
     382:	88 30       	cpi	r24, 0x08	; 8
     384:	91 05       	cpc	r25, r1
     386:	d1 f0       	breq	.+52     	; 0x3bc <TIMER_COUNTER1_start+0x48>
     388:	48 f4       	brcc	.+18     	; 0x39c <TIMER_COUNTER1_start+0x28>
     38a:	83 30       	cpi	r24, 0x03	; 3
     38c:	91 05       	cpc	r25, r1
     38e:	31 f1       	breq	.+76     	; 0x3dc <TIMER_COUNTER1_start+0x68>
     390:	85 30       	cpi	r24, 0x05	; 5
     392:	91 05       	cpc	r25, r1
     394:	39 f1       	breq	.+78     	; 0x3e4 <TIMER_COUNTER1_start+0x70>
     396:	01 97       	sbiw	r24, 0x01	; 1
     398:	49 f5       	brne	.+82     	; 0x3ec <TIMER_COUNTER1_start+0x78>
     39a:	0c c0       	rjmp	.+24     	; 0x3b4 <TIMER_COUNTER1_start+0x40>
     39c:	81 15       	cp	r24, r1
     39e:	21 e0       	ldi	r18, 0x01	; 1
     3a0:	92 07       	cpc	r25, r18
     3a2:	a1 f0       	breq	.+40     	; 0x3cc <TIMER_COUNTER1_start+0x58>
     3a4:	81 15       	cp	r24, r1
     3a6:	24 e0       	ldi	r18, 0x04	; 4
     3a8:	92 07       	cpc	r25, r18
     3aa:	a1 f0       	breq	.+40     	; 0x3d4 <TIMER_COUNTER1_start+0x60>
     3ac:	80 34       	cpi	r24, 0x40	; 64
     3ae:	91 05       	cpc	r25, r1
     3b0:	e9 f4       	brne	.+58     	; 0x3ec <TIMER_COUNTER1_start+0x78>
     3b2:	08 c0       	rjmp	.+16     	; 0x3c4 <TIMER_COUNTER1_start+0x50>
     3b4:	8e b5       	in	r24, 0x2e	; 46
     3b6:	81 60       	ori	r24, 0x01	; 1
     3b8:	8e bd       	out	0x2e, r24	; 46
     3ba:	1b c0       	rjmp	.+54     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3bc:	8e b5       	in	r24, 0x2e	; 46
     3be:	82 60       	ori	r24, 0x02	; 2
     3c0:	8e bd       	out	0x2e, r24	; 46
     3c2:	17 c0       	rjmp	.+46     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3c4:	8e b5       	in	r24, 0x2e	; 46
     3c6:	83 60       	ori	r24, 0x03	; 3
     3c8:	8e bd       	out	0x2e, r24	; 46
     3ca:	13 c0       	rjmp	.+38     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3cc:	8e b5       	in	r24, 0x2e	; 46
     3ce:	84 60       	ori	r24, 0x04	; 4
     3d0:	8e bd       	out	0x2e, r24	; 46
     3d2:	0f c0       	rjmp	.+30     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3d4:	8e b5       	in	r24, 0x2e	; 46
     3d6:	85 60       	ori	r24, 0x05	; 5
     3d8:	8e bd       	out	0x2e, r24	; 46
     3da:	0b c0       	rjmp	.+22     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3dc:	8e b5       	in	r24, 0x2e	; 46
     3de:	86 60       	ori	r24, 0x06	; 6
     3e0:	8e bd       	out	0x2e, r24	; 46
     3e2:	07 c0       	rjmp	.+14     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3e4:	8e b5       	in	r24, 0x2e	; 46
     3e6:	87 60       	ori	r24, 0x07	; 7
     3e8:	8e bd       	out	0x2e, r24	; 46
     3ea:	03 c0       	rjmp	.+6      	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3ec:	8e b5       	in	r24, 0x2e	; 46
     3ee:	85 60       	ori	r24, 0x05	; 5
     3f0:	8e bd       	out	0x2e, r24	; 46
     3f2:	8f b7       	in	r24, 0x3f	; 63
     3f4:	80 68       	ori	r24, 0x80	; 128
     3f6:	8f bf       	out	0x3f, r24	; 63
     3f8:	81 e0       	ldi	r24, 0x01	; 1
     3fa:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <timer1_state>
     3fe:	08 95       	ret

00000400 <TIMER_COUNTER1_compoutmodeA>:
     400:	9f b5       	in	r25, 0x2f	; 47
     402:	9f 73       	andi	r25, 0x3F	; 63
     404:	9f bd       	out	0x2f, r25	; 47
     406:	82 30       	cpi	r24, 0x02	; 2
     408:	49 f0       	breq	.+18     	; 0x41c <TIMER_COUNTER1_compoutmodeA+0x1c>
     40a:	83 30       	cpi	r24, 0x03	; 3
     40c:	61 f0       	breq	.+24     	; 0x426 <TIMER_COUNTER1_compoutmodeA+0x26>
     40e:	81 30       	cpi	r24, 0x01	; 1
     410:	71 f4       	brne	.+28     	; 0x42e <TIMER_COUNTER1_compoutmodeA+0x2e>
     412:	bd 9a       	sbi	0x17, 5	; 23
     414:	8f b5       	in	r24, 0x2f	; 47
     416:	80 64       	ori	r24, 0x40	; 64
     418:	8f bd       	out	0x2f, r24	; 47
     41a:	08 95       	ret
     41c:	bd 9a       	sbi	0x17, 5	; 23
     41e:	8f b5       	in	r24, 0x2f	; 47
     420:	80 68       	ori	r24, 0x80	; 128
     422:	8f bd       	out	0x2f, r24	; 47
     424:	08 95       	ret
     426:	bd 9a       	sbi	0x17, 5	; 23
     428:	8f b5       	in	r24, 0x2f	; 47
     42a:	80 6c       	ori	r24, 0xC0	; 192
     42c:	8f bd       	out	0x2f, r24	; 47
     42e:	08 95       	ret

00000430 <TIMER_COUNTER1_compoutmodeB>:
     430:	9f b5       	in	r25, 0x2f	; 47
     432:	9f 7c       	andi	r25, 0xCF	; 207
     434:	9f bd       	out	0x2f, r25	; 47
     436:	82 30       	cpi	r24, 0x02	; 2
     438:	49 f0       	breq	.+18     	; 0x44c <TIMER_COUNTER1_compoutmodeB+0x1c>
     43a:	83 30       	cpi	r24, 0x03	; 3
     43c:	61 f0       	breq	.+24     	; 0x456 <TIMER_COUNTER1_compoutmodeB+0x26>
     43e:	81 30       	cpi	r24, 0x01	; 1
     440:	71 f4       	brne	.+28     	; 0x45e <TIMER_COUNTER1_compoutmodeB+0x2e>
     442:	be 9a       	sbi	0x17, 6	; 23
     444:	8f b5       	in	r24, 0x2f	; 47
     446:	80 61       	ori	r24, 0x10	; 16
     448:	8f bd       	out	0x2f, r24	; 47
     44a:	08 95       	ret
     44c:	be 9a       	sbi	0x17, 6	; 23
     44e:	8f b5       	in	r24, 0x2f	; 47
     450:	80 62       	ori	r24, 0x20	; 32
     452:	8f bd       	out	0x2f, r24	; 47
     454:	08 95       	ret
     456:	be 9a       	sbi	0x17, 6	; 23
     458:	8f b5       	in	r24, 0x2f	; 47
     45a:	80 63       	ori	r24, 0x30	; 48
     45c:	8f bd       	out	0x2f, r24	; 47
     45e:	08 95       	ret

00000460 <TIMER_COUNTER1_compoutmodeC>:
     460:	9f b5       	in	r25, 0x2f	; 47
     462:	93 7f       	andi	r25, 0xF3	; 243
     464:	9f bd       	out	0x2f, r25	; 47
     466:	82 30       	cpi	r24, 0x02	; 2
     468:	49 f0       	breq	.+18     	; 0x47c <TIMER_COUNTER1_compoutmodeC+0x1c>
     46a:	83 30       	cpi	r24, 0x03	; 3
     46c:	61 f0       	breq	.+24     	; 0x486 <TIMER_COUNTER1_compoutmodeC+0x26>
     46e:	81 30       	cpi	r24, 0x01	; 1
     470:	71 f4       	brne	.+28     	; 0x48e <TIMER_COUNTER1_compoutmodeC+0x2e>
     472:	bf 9a       	sbi	0x17, 7	; 23
     474:	8f b5       	in	r24, 0x2f	; 47
     476:	84 60       	ori	r24, 0x04	; 4
     478:	8f bd       	out	0x2f, r24	; 47
     47a:	08 95       	ret
     47c:	bf 9a       	sbi	0x17, 7	; 23
     47e:	8f b5       	in	r24, 0x2f	; 47
     480:	88 60       	ori	r24, 0x08	; 8
     482:	8f bd       	out	0x2f, r24	; 47
     484:	08 95       	ret
     486:	bf 9a       	sbi	0x17, 7	; 23
     488:	8f b5       	in	r24, 0x2f	; 47
     48a:	8c 60       	ori	r24, 0x0C	; 12
     48c:	8f bd       	out	0x2f, r24	; 47
     48e:	08 95       	ret

00000490 <TIMER_COUNTER1_compareA>:
     490:	9b bd       	out	0x2b, r25	; 43
     492:	8a bd       	out	0x2a, r24	; 42
     494:	08 95       	ret

00000496 <TIMER_COUNTER1_compareB>:
     496:	99 bd       	out	0x29, r25	; 41
     498:	88 bd       	out	0x28, r24	; 40
     49a:	08 95       	ret

0000049c <TIMER_COUNTER1_compareC>:
     49c:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     4a0:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     4a4:	08 95       	ret

000004a6 <TIMER_COUNTER1_stop>:
     4a6:	8e b5       	in	r24, 0x2e	; 46
     4a8:	88 7f       	andi	r24, 0xF8	; 248
     4aa:	8e bd       	out	0x2e, r24	; 46
     4ac:	1d bc       	out	0x2d, r1	; 45
     4ae:	1c bc       	out	0x2c, r1	; 44
     4b0:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <timer1_state>
     4b4:	08 95       	ret

000004b6 <TIMER_COUNTER0enable>:
     4b6:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <timer0_state>
     4ba:	2f ef       	ldi	r18, 0xFF	; 255
     4bc:	21 bf       	out	0x31, r18	; 49
     4be:	23 b7       	in	r18, 0x33	; 51
     4c0:	27 7b       	andi	r18, 0xB7	; 183
     4c2:	23 bf       	out	0x33, r18	; 51
     4c4:	62 30       	cpi	r22, 0x02	; 2
     4c6:	41 f0       	breq	.+16     	; 0x4d8 <TIMER_COUNTER0enable+0x22>
     4c8:	63 30       	cpi	r22, 0x03	; 3
     4ca:	51 f0       	breq	.+20     	; 0x4e0 <TIMER_COUNTER0enable+0x2a>
     4cc:	61 30       	cpi	r22, 0x01	; 1
     4ce:	59 f4       	brne	.+22     	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4d0:	23 b7       	in	r18, 0x33	; 51
     4d2:	20 64       	ori	r18, 0x40	; 64
     4d4:	23 bf       	out	0x33, r18	; 51
     4d6:	07 c0       	rjmp	.+14     	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4d8:	23 b7       	in	r18, 0x33	; 51
     4da:	28 60       	ori	r18, 0x08	; 8
     4dc:	23 bf       	out	0x33, r18	; 51
     4de:	03 c0       	rjmp	.+6      	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4e0:	23 b7       	in	r18, 0x33	; 51
     4e2:	28 64       	ori	r18, 0x48	; 72
     4e4:	23 bf       	out	0x33, r18	; 51
     4e6:	27 b7       	in	r18, 0x37	; 55
     4e8:	2e 7f       	andi	r18, 0xFE	; 254
     4ea:	27 bf       	out	0x37, r18	; 55
     4ec:	27 b7       	in	r18, 0x37	; 55
     4ee:	2d 7f       	andi	r18, 0xFD	; 253
     4f0:	27 bf       	out	0x37, r18	; 55
     4f2:	42 30       	cpi	r20, 0x02	; 2
     4f4:	41 f0       	breq	.+16     	; 0x506 <TIMER_COUNTER0enable+0x50>
     4f6:	43 30       	cpi	r20, 0x03	; 3
     4f8:	51 f0       	breq	.+20     	; 0x50e <TIMER_COUNTER0enable+0x58>
     4fa:	41 30       	cpi	r20, 0x01	; 1
     4fc:	71 f4       	brne	.+28     	; 0x51a <TIMER_COUNTER0enable+0x64>
     4fe:	27 b7       	in	r18, 0x37	; 55
     500:	21 60       	ori	r18, 0x01	; 1
     502:	27 bf       	out	0x37, r18	; 55
     504:	0a c0       	rjmp	.+20     	; 0x51a <TIMER_COUNTER0enable+0x64>
     506:	27 b7       	in	r18, 0x37	; 55
     508:	22 60       	ori	r18, 0x02	; 2
     50a:	27 bf       	out	0x37, r18	; 55
     50c:	06 c0       	rjmp	.+12     	; 0x51a <TIMER_COUNTER0enable+0x64>
     50e:	27 b7       	in	r18, 0x37	; 55
     510:	21 60       	ori	r18, 0x01	; 1
     512:	27 bf       	out	0x37, r18	; 55
     514:	27 b7       	in	r18, 0x37	; 55
     516:	22 60       	ori	r18, 0x02	; 2
     518:	27 bf       	out	0x37, r18	; 55
     51a:	26 e9       	ldi	r18, 0x96	; 150
     51c:	31 e0       	ldi	r19, 0x01	; 1
     51e:	fc 01       	movw	r30, r24
     520:	31 83       	std	Z+1, r19	; 0x01
     522:	20 83       	st	Z, r18
     524:	21 eb       	ldi	r18, 0xB1	; 177
     526:	31 e0       	ldi	r19, 0x01	; 1
     528:	37 83       	std	Z+7, r19	; 0x07
     52a:	26 83       	std	Z+6, r18	; 0x06
     52c:	20 e5       	ldi	r18, 0x50	; 80
     52e:	31 e0       	ldi	r19, 0x01	; 1
     530:	35 87       	std	Z+13, r19	; 0x0d
     532:	24 87       	std	Z+12, r18	; 0x0c
     534:	23 eb       	ldi	r18, 0xB3	; 179
     536:	31 e0       	ldi	r19, 0x01	; 1
     538:	37 87       	std	Z+15, r19	; 0x0f
     53a:	26 87       	std	Z+14, r18	; 0x0e
     53c:	08 95       	ret

0000053e <TIMER_COUNTER1enable>:
     53e:	0f 93       	push	r16
     540:	1f 93       	push	r17
     542:	dc 01       	movw	r26, r24
     544:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <timer1_state>
     548:	8f ef       	ldi	r24, 0xFF	; 255
     54a:	9f ef       	ldi	r25, 0xFF	; 255
     54c:	9b bd       	out	0x2b, r25	; 43
     54e:	8a bd       	out	0x2a, r24	; 42
     550:	8f b5       	in	r24, 0x2f	; 47
     552:	8c 7f       	andi	r24, 0xFC	; 252
     554:	8f bd       	out	0x2f, r24	; 47
     556:	8e b5       	in	r24, 0x2e	; 46
     558:	87 7e       	andi	r24, 0xE7	; 231
     55a:	8e bd       	out	0x2e, r24	; 46
     55c:	06 2f       	mov	r16, r22
     55e:	10 e0       	ldi	r17, 0x00	; 0
     560:	f8 01       	movw	r30, r16
     562:	31 97       	sbiw	r30, 0x01	; 1
     564:	ef 30       	cpi	r30, 0x0F	; 15
     566:	f1 05       	cpc	r31, r1
     568:	08 f0       	brcs	.+2      	; 0x56c <TIMER_COUNTER1enable+0x2e>
     56a:	5a c0       	rjmp	.+180    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     56c:	ea 5b       	subi	r30, 0xBA	; 186
     56e:	ff 4f       	sbci	r31, 0xFF	; 255
     570:	0c 94 d3 13 	jmp	0x27a6	; 0x27a6 <__tablejump2__>
     574:	8f b5       	in	r24, 0x2f	; 47
     576:	81 60       	ori	r24, 0x01	; 1
     578:	8f bd       	out	0x2f, r24	; 47
     57a:	52 c0       	rjmp	.+164    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     57c:	8f b5       	in	r24, 0x2f	; 47
     57e:	82 60       	ori	r24, 0x02	; 2
     580:	8f bd       	out	0x2f, r24	; 47
     582:	4e c0       	rjmp	.+156    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     584:	8f b5       	in	r24, 0x2f	; 47
     586:	83 60       	ori	r24, 0x03	; 3
     588:	8f bd       	out	0x2f, r24	; 47
     58a:	4a c0       	rjmp	.+148    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     58c:	8e b5       	in	r24, 0x2e	; 46
     58e:	88 60       	ori	r24, 0x08	; 8
     590:	8e bd       	out	0x2e, r24	; 46
     592:	46 c0       	rjmp	.+140    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     594:	8f b5       	in	r24, 0x2f	; 47
     596:	81 60       	ori	r24, 0x01	; 1
     598:	8f bd       	out	0x2f, r24	; 47
     59a:	8e b5       	in	r24, 0x2e	; 46
     59c:	88 60       	ori	r24, 0x08	; 8
     59e:	8e bd       	out	0x2e, r24	; 46
     5a0:	3f c0       	rjmp	.+126    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5a2:	8f b5       	in	r24, 0x2f	; 47
     5a4:	82 60       	ori	r24, 0x02	; 2
     5a6:	8f bd       	out	0x2f, r24	; 47
     5a8:	8e b5       	in	r24, 0x2e	; 46
     5aa:	88 60       	ori	r24, 0x08	; 8
     5ac:	8e bd       	out	0x2e, r24	; 46
     5ae:	38 c0       	rjmp	.+112    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5b0:	8f b5       	in	r24, 0x2f	; 47
     5b2:	83 60       	ori	r24, 0x03	; 3
     5b4:	8f bd       	out	0x2f, r24	; 47
     5b6:	8e b5       	in	r24, 0x2e	; 46
     5b8:	88 60       	ori	r24, 0x08	; 8
     5ba:	8e bd       	out	0x2e, r24	; 46
     5bc:	31 c0       	rjmp	.+98     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5be:	8e b5       	in	r24, 0x2e	; 46
     5c0:	80 61       	ori	r24, 0x10	; 16
     5c2:	8e bd       	out	0x2e, r24	; 46
     5c4:	2d c0       	rjmp	.+90     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5c6:	8f b5       	in	r24, 0x2f	; 47
     5c8:	81 60       	ori	r24, 0x01	; 1
     5ca:	8f bd       	out	0x2f, r24	; 47
     5cc:	8e b5       	in	r24, 0x2e	; 46
     5ce:	80 61       	ori	r24, 0x10	; 16
     5d0:	8e bd       	out	0x2e, r24	; 46
     5d2:	26 c0       	rjmp	.+76     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5d4:	8f b5       	in	r24, 0x2f	; 47
     5d6:	82 60       	ori	r24, 0x02	; 2
     5d8:	8f bd       	out	0x2f, r24	; 47
     5da:	8e b5       	in	r24, 0x2e	; 46
     5dc:	80 61       	ori	r24, 0x10	; 16
     5de:	8e bd       	out	0x2e, r24	; 46
     5e0:	1f c0       	rjmp	.+62     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5e2:	8f b5       	in	r24, 0x2f	; 47
     5e4:	83 60       	ori	r24, 0x03	; 3
     5e6:	8f bd       	out	0x2f, r24	; 47
     5e8:	8e b5       	in	r24, 0x2e	; 46
     5ea:	80 61       	ori	r24, 0x10	; 16
     5ec:	8e bd       	out	0x2e, r24	; 46
     5ee:	18 c0       	rjmp	.+48     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5f0:	8e b5       	in	r24, 0x2e	; 46
     5f2:	88 61       	ori	r24, 0x18	; 24
     5f4:	8e bd       	out	0x2e, r24	; 46
     5f6:	14 c0       	rjmp	.+40     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5f8:	8f b5       	in	r24, 0x2f	; 47
     5fa:	81 60       	ori	r24, 0x01	; 1
     5fc:	8f bd       	out	0x2f, r24	; 47
     5fe:	8e b5       	in	r24, 0x2e	; 46
     600:	88 61       	ori	r24, 0x18	; 24
     602:	8e bd       	out	0x2e, r24	; 46
     604:	0d c0       	rjmp	.+26     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     606:	8f b5       	in	r24, 0x2f	; 47
     608:	82 60       	ori	r24, 0x02	; 2
     60a:	8f bd       	out	0x2f, r24	; 47
     60c:	8e b5       	in	r24, 0x2e	; 46
     60e:	88 61       	ori	r24, 0x18	; 24
     610:	8e bd       	out	0x2e, r24	; 46
     612:	06 c0       	rjmp	.+12     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     614:	8f b5       	in	r24, 0x2f	; 47
     616:	83 60       	ori	r24, 0x03	; 3
     618:	8f bd       	out	0x2f, r24	; 47
     61a:	8e b5       	in	r24, 0x2e	; 46
     61c:	88 61       	ori	r24, 0x18	; 24
     61e:	8e bd       	out	0x2e, r24	; 46
     620:	8f b5       	in	r24, 0x2f	; 47
     622:	83 70       	andi	r24, 0x03	; 3
     624:	8f bd       	out	0x2f, r24	; 47
     626:	87 b7       	in	r24, 0x37	; 55
     628:	83 7c       	andi	r24, 0xC3	; 195
     62a:	87 bf       	out	0x37, r24	; 55
     62c:	ed e7       	ldi	r30, 0x7D	; 125
     62e:	f0 e0       	ldi	r31, 0x00	; 0
     630:	80 81       	ld	r24, Z
     632:	8e 7f       	andi	r24, 0xFE	; 254
     634:	80 83       	st	Z, r24
     636:	50 e0       	ldi	r21, 0x00	; 0
     638:	fa 01       	movw	r30, r20
     63a:	31 97       	sbiw	r30, 0x01	; 1
     63c:	ec 30       	cpi	r30, 0x0C	; 12
     63e:	f1 05       	cpc	r31, r1
     640:	08 f0       	brcs	.+2      	; 0x644 <TIMER_COUNTER1enable+0x106>
     642:	44 c0       	rjmp	.+136    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     644:	eb 5a       	subi	r30, 0xAB	; 171
     646:	ff 4f       	sbci	r31, 0xFF	; 255
     648:	0c 94 d3 13 	jmp	0x27a6	; 0x27a6 <__tablejump2__>
     64c:	87 b7       	in	r24, 0x37	; 55
     64e:	84 60       	ori	r24, 0x04	; 4
     650:	87 bf       	out	0x37, r24	; 55
     652:	3c c0       	rjmp	.+120    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     654:	87 b7       	in	r24, 0x37	; 55
     656:	80 61       	ori	r24, 0x10	; 16
     658:	87 bf       	out	0x37, r24	; 55
     65a:	38 c0       	rjmp	.+112    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     65c:	87 b7       	in	r24, 0x37	; 55
     65e:	88 60       	ori	r24, 0x08	; 8
     660:	87 bf       	out	0x37, r24	; 55
     662:	34 c0       	rjmp	.+104    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     664:	ed e7       	ldi	r30, 0x7D	; 125
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	81 60       	ori	r24, 0x01	; 1
     66c:	80 83       	st	Z, r24
     66e:	2e c0       	rjmp	.+92     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     670:	87 b7       	in	r24, 0x37	; 55
     672:	80 62       	ori	r24, 0x20	; 32
     674:	87 bf       	out	0x37, r24	; 55
     676:	2a c0       	rjmp	.+84     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     678:	87 b7       	in	r24, 0x37	; 55
     67a:	84 61       	ori	r24, 0x14	; 20
     67c:	87 bf       	out	0x37, r24	; 55
     67e:	26 c0       	rjmp	.+76     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     680:	87 b7       	in	r24, 0x37	; 55
     682:	8c 60       	ori	r24, 0x0C	; 12
     684:	87 bf       	out	0x37, r24	; 55
     686:	22 c0       	rjmp	.+68     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     688:	87 b7       	in	r24, 0x37	; 55
     68a:	84 60       	ori	r24, 0x04	; 4
     68c:	87 bf       	out	0x37, r24	; 55
     68e:	ed e7       	ldi	r30, 0x7D	; 125
     690:	f0 e0       	ldi	r31, 0x00	; 0
     692:	80 81       	ld	r24, Z
     694:	81 60       	ori	r24, 0x01	; 1
     696:	80 83       	st	Z, r24
     698:	19 c0       	rjmp	.+50     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     69a:	87 b7       	in	r24, 0x37	; 55
     69c:	84 62       	ori	r24, 0x24	; 36
     69e:	87 bf       	out	0x37, r24	; 55
     6a0:	15 c0       	rjmp	.+42     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6a2:	87 b7       	in	r24, 0x37	; 55
     6a4:	8c 61       	ori	r24, 0x1C	; 28
     6a6:	87 bf       	out	0x37, r24	; 55
     6a8:	11 c0       	rjmp	.+34     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6aa:	87 b7       	in	r24, 0x37	; 55
     6ac:	8c 61       	ori	r24, 0x1C	; 28
     6ae:	87 bf       	out	0x37, r24	; 55
     6b0:	ed e7       	ldi	r30, 0x7D	; 125
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	80 81       	ld	r24, Z
     6b6:	81 60       	ori	r24, 0x01	; 1
     6b8:	80 83       	st	Z, r24
     6ba:	08 c0       	rjmp	.+16     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6bc:	87 b7       	in	r24, 0x37	; 55
     6be:	88 61       	ori	r24, 0x18	; 24
     6c0:	87 bf       	out	0x37, r24	; 55
     6c2:	ed e7       	ldi	r30, 0x7D	; 125
     6c4:	f0 e0       	ldi	r31, 0x00	; 0
     6c6:	80 81       	ld	r24, Z
     6c8:	81 60       	ori	r24, 0x01	; 1
     6ca:	80 83       	st	Z, r24
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	92 e0       	ldi	r25, 0x02	; 2
     6d0:	11 96       	adiw	r26, 0x01	; 1
     6d2:	9c 93       	st	X, r25
     6d4:	8e 93       	st	-X, r24
     6d6:	88 e1       	ldi	r24, 0x18	; 24
     6d8:	92 e0       	ldi	r25, 0x02	; 2
     6da:	13 96       	adiw	r26, 0x03	; 3
     6dc:	9c 93       	st	X, r25
     6de:	8e 93       	st	-X, r24
     6e0:	12 97       	sbiw	r26, 0x02	; 2
     6e2:	80 e3       	ldi	r24, 0x30	; 48
     6e4:	92 e0       	ldi	r25, 0x02	; 2
     6e6:	15 96       	adiw	r26, 0x05	; 5
     6e8:	9c 93       	st	X, r25
     6ea:	8e 93       	st	-X, r24
     6ec:	14 97       	sbiw	r26, 0x04	; 4
     6ee:	88 e4       	ldi	r24, 0x48	; 72
     6f0:	92 e0       	ldi	r25, 0x02	; 2
     6f2:	17 96       	adiw	r26, 0x07	; 7
     6f4:	9c 93       	st	X, r25
     6f6:	8e 93       	st	-X, r24
     6f8:	16 97       	sbiw	r26, 0x06	; 6
     6fa:	8b e4       	ldi	r24, 0x4B	; 75
     6fc:	92 e0       	ldi	r25, 0x02	; 2
     6fe:	19 96       	adiw	r26, 0x09	; 9
     700:	9c 93       	st	X, r25
     702:	8e 93       	st	-X, r24
     704:	18 97       	sbiw	r26, 0x08	; 8
     706:	8e e4       	ldi	r24, 0x4E	; 78
     708:	92 e0       	ldi	r25, 0x02	; 2
     70a:	1b 96       	adiw	r26, 0x0b	; 11
     70c:	9c 93       	st	X, r25
     70e:	8e 93       	st	-X, r24
     710:	1a 97       	sbiw	r26, 0x0a	; 10
     712:	8a eb       	ldi	r24, 0xBA	; 186
     714:	91 e0       	ldi	r25, 0x01	; 1
     716:	1d 96       	adiw	r26, 0x0d	; 13
     718:	9c 93       	st	X, r25
     71a:	8e 93       	st	-X, r24
     71c:	1c 97       	sbiw	r26, 0x0c	; 12
     71e:	83 e5       	ldi	r24, 0x53	; 83
     720:	92 e0       	ldi	r25, 0x02	; 2
     722:	1f 96       	adiw	r26, 0x0f	; 15
     724:	9c 93       	st	X, r25
     726:	8e 93       	st	-X, r24
     728:	1e 97       	sbiw	r26, 0x0e	; 14
     72a:	cd 01       	movw	r24, r26
     72c:	1f 91       	pop	r17
     72e:	0f 91       	pop	r16
     730:	08 95       	ret

00000732 <__vector_16>:
	timer3_state=0;
}
/***Interrupt***/
// So that main will not freeze when not defined, therefore exclude here! before use.
//ISR(TIMER0_COMP_vect){ }
ISR(TIMER0_OVF_vect){ }
     732:	1f 92       	push	r1
     734:	0f 92       	push	r0
     736:	0f b6       	in	r0, 0x3f	; 63
     738:	0f 92       	push	r0
     73a:	11 24       	eor	r1, r1
     73c:	0f 90       	pop	r0
     73e:	0f be       	out	0x3f, r0	; 63
     740:	0f 90       	pop	r0
     742:	1f 90       	pop	r1
     744:	18 95       	reti

00000746 <__vector_11>:
ISR(TIMER1_CAPT_vect){ }
     746:	1f 92       	push	r1
     748:	0f 92       	push	r0
     74a:	0f b6       	in	r0, 0x3f	; 63
     74c:	0f 92       	push	r0
     74e:	11 24       	eor	r1, r1
     750:	0f 90       	pop	r0
     752:	0f be       	out	0x3f, r0	; 63
     754:	0f 90       	pop	r0
     756:	1f 90       	pop	r1
     758:	18 95       	reti

0000075a <__vector_12>:
ISR(TIMER1_COMPA_vect){ }
     75a:	1f 92       	push	r1
     75c:	0f 92       	push	r0
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	0f 92       	push	r0
     762:	11 24       	eor	r1, r1
     764:	0f 90       	pop	r0
     766:	0f be       	out	0x3f, r0	; 63
     768:	0f 90       	pop	r0
     76a:	1f 90       	pop	r1
     76c:	18 95       	reti

0000076e <__vector_13>:
ISR(TIMER1_COMPB_vect){ }
     76e:	1f 92       	push	r1
     770:	0f 92       	push	r0
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	0f 92       	push	r0
     776:	11 24       	eor	r1, r1
     778:	0f 90       	pop	r0
     77a:	0f be       	out	0x3f, r0	; 63
     77c:	0f 90       	pop	r0
     77e:	1f 90       	pop	r1
     780:	18 95       	reti

00000782 <__vector_24>:
ISR(TIMER1_COMPC_vect){ }
     782:	1f 92       	push	r1
     784:	0f 92       	push	r0
     786:	0f b6       	in	r0, 0x3f	; 63
     788:	0f 92       	push	r0
     78a:	11 24       	eor	r1, r1
     78c:	0f 90       	pop	r0
     78e:	0f be       	out	0x3f, r0	; 63
     790:	0f 90       	pop	r0
     792:	1f 90       	pop	r1
     794:	18 95       	reti

00000796 <__vector_14>:
ISR(TIMER1_OVF_vect){ }
     796:	1f 92       	push	r1
     798:	0f 92       	push	r0
     79a:	0f b6       	in	r0, 0x3f	; 63
     79c:	0f 92       	push	r0
     79e:	11 24       	eor	r1, r1
     7a0:	0f 90       	pop	r0
     7a2:	0f be       	out	0x3f, r0	; 63
     7a4:	0f 90       	pop	r0
     7a6:	1f 90       	pop	r1
     7a8:	18 95       	reti

000007aa <__vector_10>:
ISR(TIMER2_OVF_vect){ }
     7aa:	1f 92       	push	r1
     7ac:	0f 92       	push	r0
     7ae:	0f b6       	in	r0, 0x3f	; 63
     7b0:	0f 92       	push	r0
     7b2:	11 24       	eor	r1, r1
     7b4:	0f 90       	pop	r0
     7b6:	0f be       	out	0x3f, r0	; 63
     7b8:	0f 90       	pop	r0
     7ba:	1f 90       	pop	r1
     7bc:	18 95       	reti

000007be <__vector_25>:
ISR(TIMER3_CAPT_vect){ }
     7be:	1f 92       	push	r1
     7c0:	0f 92       	push	r0
     7c2:	0f b6       	in	r0, 0x3f	; 63
     7c4:	0f 92       	push	r0
     7c6:	11 24       	eor	r1, r1
     7c8:	0f 90       	pop	r0
     7ca:	0f be       	out	0x3f, r0	; 63
     7cc:	0f 90       	pop	r0
     7ce:	1f 90       	pop	r1
     7d0:	18 95       	reti

000007d2 <__vector_26>:
ISR(TIMER3_COMPA_vect){ }
     7d2:	1f 92       	push	r1
     7d4:	0f 92       	push	r0
     7d6:	0f b6       	in	r0, 0x3f	; 63
     7d8:	0f 92       	push	r0
     7da:	11 24       	eor	r1, r1
     7dc:	0f 90       	pop	r0
     7de:	0f be       	out	0x3f, r0	; 63
     7e0:	0f 90       	pop	r0
     7e2:	1f 90       	pop	r1
     7e4:	18 95       	reti

000007e6 <__vector_27>:
ISR(TIMER3_COMPB_vect){ }
     7e6:	1f 92       	push	r1
     7e8:	0f 92       	push	r0
     7ea:	0f b6       	in	r0, 0x3f	; 63
     7ec:	0f 92       	push	r0
     7ee:	11 24       	eor	r1, r1
     7f0:	0f 90       	pop	r0
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	0f 90       	pop	r0
     7f6:	1f 90       	pop	r1
     7f8:	18 95       	reti

000007fa <__vector_28>:
ISR(TIMER3_COMPC_vect){ }
     7fa:	1f 92       	push	r1
     7fc:	0f 92       	push	r0
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	0f 92       	push	r0
     802:	11 24       	eor	r1, r1
     804:	0f 90       	pop	r0
     806:	0f be       	out	0x3f, r0	; 63
     808:	0f 90       	pop	r0
     80a:	1f 90       	pop	r1
     80c:	18 95       	reti

0000080e <__vector_29>:
ISR(TIMER3_OVF_vect){ }
     80e:	1f 92       	push	r1
     810:	0f 92       	push	r0
     812:	0f b6       	in	r0, 0x3f	; 63
     814:	0f 92       	push	r0
     816:	11 24       	eor	r1, r1
     818:	0f 90       	pop	r0
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	0f 90       	pop	r0
     81e:	1f 90       	pop	r1
     820:	18 95       	reti

00000822 <__vector_18>:
	}else{
		uart1_index=0;
		ret=uart1_msg;
	}
	return ret;
}
     822:	1f 92       	push	r1
     824:	0f 92       	push	r0
     826:	0f b6       	in	r0, 0x3f	; 63
     828:	0f 92       	push	r0
     82a:	11 24       	eor	r1, r1
     82c:	0b b6       	in	r0, 0x3b	; 59
     82e:	0f 92       	push	r0
     830:	8f 93       	push	r24
     832:	9f 93       	push	r25
     834:	ef 93       	push	r30
     836:	ff 93       	push	r31
     838:	8b b1       	in	r24, 0x0b	; 11
     83a:	9a b1       	in	r25, 0x0a	; 10
     83c:	88 71       	andi	r24, 0x18	; 24
     83e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <UART_LastRxError>
     842:	e0 91 83 02 	lds	r30, 0x0283	; 0x800283 <UART_RxHead>
     846:	ef 5f       	subi	r30, 0xFF	; 255
     848:	ef 73       	andi	r30, 0x3F	; 63
     84a:	90 91 84 02 	lds	r25, 0x0284	; 0x800284 <UART_RxTail>
     84e:	e9 13       	cpse	r30, r25
     850:	04 c0       	rjmp	.+8      	; 0x85a <__vector_18+0x38>
     852:	82 e0       	ldi	r24, 0x02	; 2
     854:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <UART_LastRxError>
     858:	0f c0       	rjmp	.+30     	; 0x878 <__vector_18+0x56>
     85a:	9c b1       	in	r25, 0x0c	; 12
     85c:	e0 93 83 02 	sts	0x0283, r30	; 0x800283 <UART_RxHead>
     860:	88 23       	and	r24, r24
     862:	31 f0       	breq	.+12     	; 0x870 <__vector_18+0x4e>
     864:	f0 e0       	ldi	r31, 0x00	; 0
     866:	ea 57       	subi	r30, 0x7A	; 122
     868:	fd 4f       	sbci	r31, 0xFD	; 253
     86a:	88 e5       	ldi	r24, 0x58	; 88
     86c:	80 83       	st	Z, r24
     86e:	04 c0       	rjmp	.+8      	; 0x878 <__vector_18+0x56>
     870:	f0 e0       	ldi	r31, 0x00	; 0
     872:	ea 57       	subi	r30, 0x7A	; 122
     874:	fd 4f       	sbci	r31, 0xFD	; 253
     876:	90 83       	st	Z, r25
     878:	ff 91       	pop	r31
     87a:	ef 91       	pop	r30
     87c:	9f 91       	pop	r25
     87e:	8f 91       	pop	r24
     880:	0f 90       	pop	r0
     882:	0b be       	out	0x3b, r0	; 59
     884:	0f 90       	pop	r0
     886:	0f be       	out	0x3f, r0	; 63
     888:	0f 90       	pop	r0
     88a:	1f 90       	pop	r1
     88c:	18 95       	reti

0000088e <__vector_19>:
     88e:	1f 92       	push	r1
     890:	0f 92       	push	r0
     892:	0f b6       	in	r0, 0x3f	; 63
     894:	0f 92       	push	r0
     896:	11 24       	eor	r1, r1
     898:	0b b6       	in	r0, 0x3b	; 59
     89a:	0f 92       	push	r0
     89c:	8f 93       	push	r24
     89e:	9f 93       	push	r25
     8a0:	ef 93       	push	r30
     8a2:	ff 93       	push	r31
     8a4:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <UART_TxTail>
     8a8:	f0 e0       	ldi	r31, 0x00	; 0
     8aa:	ed 5b       	subi	r30, 0xBD	; 189
     8ac:	fd 4f       	sbci	r31, 0xFD	; 253
     8ae:	80 81       	ld	r24, Z
     8b0:	8c b9       	out	0x0c, r24	; 12
     8b2:	10 82       	st	Z, r1
     8b4:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <UART_TxTail>
     8b8:	8f 5f       	subi	r24, 0xFF	; 255
     8ba:	8f 73       	andi	r24, 0x3F	; 63
     8bc:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <UART_TxTail>
     8c0:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <UART_TxHead>
     8c4:	89 13       	cpse	r24, r25
     8c6:	01 c0       	rjmp	.+2      	; 0x8ca <__vector_19+0x3c>
     8c8:	55 98       	cbi	0x0a, 5	; 10
     8ca:	ff 91       	pop	r31
     8cc:	ef 91       	pop	r30
     8ce:	9f 91       	pop	r25
     8d0:	8f 91       	pop	r24
     8d2:	0f 90       	pop	r0
     8d4:	0b be       	out	0x3b, r0	; 59
     8d6:	0f 90       	pop	r0
     8d8:	0f be       	out	0x3f, r0	; 63
     8da:	0f 90       	pop	r0
     8dc:	1f 90       	pop	r1
     8de:	18 95       	reti

000008e0 <__vector_30>:
	UART1_TxHead = UART1_TxTail;
}
/***Interrupt***/
/***SIGNAL(UART1_RECEIVE_INTERRUPT)***/
SIGNAL(UART1_RECEIVE_INTERRUPT)
{
     8e0:	1f 92       	push	r1
     8e2:	0f 92       	push	r0
     8e4:	0f b6       	in	r0, 0x3f	; 63
     8e6:	0f 92       	push	r0
     8e8:	11 24       	eor	r1, r1
     8ea:	0b b6       	in	r0, 0x3b	; 59
     8ec:	0f 92       	push	r0
     8ee:	8f 93       	push	r24
     8f0:	9f 93       	push	r25
     8f2:	ef 93       	push	r30
     8f4:	ff 93       	push	r31
    unsigned char tmphead;
	unsigned char data;
	unsigned char bit9;
    unsigned char usr;
    /***read UART status register and UART data register***/
	usr  = UART1_STATUS;
     8f6:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    bit9 = UART1_CONTROL;
     8fa:	90 91 9a 00 	lds	r25, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    bit9 = 0x01 & (bit9>>1);
    /***/
    UART1_LastRxError = (usr & (_BV(FE1)|_BV(DOR1)));
     8fe:	88 71       	andi	r24, 0x18	; 24
     900:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <UART1_LastRxError>
	/***calculate buffer index***/
    tmphead = ( UART1_RxHead + 1) & UART_RX_BUFFER_MASK;
     904:	e0 91 bf 01 	lds	r30, 0x01BF	; 0x8001bf <UART1_RxHead>
     908:	ef 5f       	subi	r30, 0xFF	; 255
     90a:	ef 73       	andi	r30, 0x3F	; 63
    if ( tmphead == UART1_RxTail ) {	
     90c:	90 91 85 02 	lds	r25, 0x0285	; 0x800285 <UART1_RxTail>
     910:	e9 13       	cpse	r30, r25
     912:	04 c0       	rjmp	.+8      	; 0x91c <__vector_30+0x3c>
        /***error: receive buffer overflow, caracter is lost***/
        UART1_LastRxError = UART_BUFFER_OVERFLOW >> 8; 
     914:	82 e0       	ldi	r24, 0x02	; 2
     916:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <UART1_LastRxError>
     91a:	10 c0       	rjmp	.+32     	; 0x93c <__vector_30+0x5c>
	}else{
		data = UART1_DATA;
     91c:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
        /***store new index***/
        UART1_RxHead = tmphead;
     920:	e0 93 bf 01 	sts	0x01BF, r30	; 0x8001bf <UART1_RxHead>
		if(UART1_LastRxError){
     924:	88 23       	and	r24, r24
     926:	31 f0       	breq	.+12     	; 0x934 <__vector_30+0x54>
			/***store indication data error in buffer***/
			UART1_RxBuf[tmphead] = 'X';
     928:	f0 e0       	ldi	r31, 0x00	; 0
     92a:	e4 58       	subi	r30, 0x84	; 132
     92c:	fe 4f       	sbci	r31, 0xFE	; 254
     92e:	88 e5       	ldi	r24, 0x58	; 88
     930:	80 83       	st	Z, r24
     932:	04 c0       	rjmp	.+8      	; 0x93c <__vector_30+0x5c>
		}else{
			/***store received data in buffer***/
			UART1_RxBuf[tmphead] = data;
     934:	f0 e0       	ldi	r31, 0x00	; 0
     936:	e4 58       	subi	r30, 0x84	; 132
     938:	fe 4f       	sbci	r31, 0xFE	; 254
     93a:	90 83       	st	Z, r25
		}
    }
}
     93c:	ff 91       	pop	r31
     93e:	ef 91       	pop	r30
     940:	9f 91       	pop	r25
     942:	8f 91       	pop	r24
     944:	0f 90       	pop	r0
     946:	0b be       	out	0x3b, r0	; 59
     948:	0f 90       	pop	r0
     94a:	0f be       	out	0x3f, r0	; 63
     94c:	0f 90       	pop	r0
     94e:	1f 90       	pop	r1
     950:	18 95       	reti

00000952 <__vector_31>:
/***SIGNAL(UART1_TRANSMIT_INTERRUPT)***/
SIGNAL(UART1_TRANSMIT_INTERRUPT)
{
     952:	1f 92       	push	r1
     954:	0f 92       	push	r0
     956:	0f b6       	in	r0, 0x3f	; 63
     958:	0f 92       	push	r0
     95a:	11 24       	eor	r1, r1
     95c:	0b b6       	in	r0, 0x3b	; 59
     95e:	0f 92       	push	r0
     960:	8f 93       	push	r24
     962:	9f 93       	push	r25
     964:	ef 93       	push	r30
     966:	ff 93       	push	r31
	uint8_t tail = UART1_TxTail;
	UART1_DATA = UART1_TxBuf[tail];
     968:	e0 91 7b 01 	lds	r30, 0x017B	; 0x80017b <UART1_TxTail>
     96c:	f0 e0       	ldi	r31, 0x00	; 0
     96e:	ed 5f       	subi	r30, 0xFD	; 253
     970:	fd 4f       	sbci	r31, 0xFD	; 253
     972:	80 81       	ld	r24, Z
     974:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
	UART1_TxBuf[tail]='\0';
     978:	10 82       	st	Z, r1
	UART1_TxTail = (UART1_TxTail + 1) & UART_TX_BUFFER_MASK;
     97a:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <UART1_TxTail>
     97e:	8f 5f       	subi	r24, 0xFF	; 255
     980:	8f 73       	andi	r24, 0x3F	; 63
     982:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <UART1_TxTail>
	if ( UART1_TxTail != UART1_TxHead )
     986:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <UART1_TxHead>
     98a:	89 13       	cpse	r24, r25
     98c:	05 c0       	rjmp	.+10     	; 0x998 <__vector_31+0x46>
        ;
    else
		UART1_CONTROL &= ~_BV(UART1_UDRIE);
     98e:	ea e9       	ldi	r30, 0x9A	; 154
     990:	f0 e0       	ldi	r31, 0x00	; 0
     992:	80 81       	ld	r24, Z
     994:	8f 7d       	andi	r24, 0xDF	; 223
     996:	80 83       	st	Z, r24
}
     998:	ff 91       	pop	r31
     99a:	ef 91       	pop	r30
     99c:	9f 91       	pop	r25
     99e:	8f 91       	pop	r24
     9a0:	0f 90       	pop	r0
     9a2:	0b be       	out	0x3b, r0	; 59
     9a4:	0f 90       	pop	r0
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	0f 90       	pop	r0
     9aa:	1f 90       	pop	r1
     9ac:	18 95       	reti

000009ae <FUNCpinmatch>:
	return i;
}
uint8_t  bintobcd(uint8_t bin)
{
	return (((bin) / 10) << 4) + ((bin) % 10);
}
     9ae:	68 23       	and	r22, r24
     9b0:	44 23       	and	r20, r20
     9b2:	21 f0       	breq	.+8      	; 0x9bc <FUNCpinmatch+0xe>
     9b4:	86 17       	cp	r24, r22
     9b6:	21 f0       	breq	.+8      	; 0x9c0 <FUNCpinmatch+0x12>
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	08 95       	ret
     9bc:	61 11       	cpse	r22, r1
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	08 95       	ret

000009c2 <FUNChmerge>:
     9c2:	86 2b       	or	r24, r22
     9c4:	08 95       	ret

000009c6 <FUNClmerge>:
     9c6:	86 23       	and	r24, r22
     9c8:	08 95       	ret

000009ca <FUNChh>:
     9ca:	86 23       	and	r24, r22
     9cc:	08 95       	ret

000009ce <FUNCll>:
     9ce:	86 2b       	or	r24, r22
     9d0:	80 95       	com	r24
     9d2:	08 95       	ret

000009d4 <FUNClh>:
     9d4:	86 27       	eor	r24, r22
     9d6:	86 23       	and	r24, r22
     9d8:	08 95       	ret

000009da <FUNChl>:
     9da:	60 95       	com	r22
     9dc:	86 23       	and	r24, r22
     9de:	08 95       	ret

000009e0 <FUNCdiff>:
     9e0:	86 27       	eor	r24, r22
     9e2:	08 95       	ret

000009e4 <FUNCswap>:
     9e4:	cf 92       	push	r12
     9e6:	df 92       	push	r13
     9e8:	ef 92       	push	r14
     9ea:	ff 92       	push	r15
     9ec:	0f 93       	push	r16
     9ee:	1f 93       	push	r17
     9f0:	fc 01       	movw	r30, r24
     9f2:	00 81       	ld	r16, Z
     9f4:	11 81       	ldd	r17, Z+1	; 0x01
     9f6:	22 81       	ldd	r18, Z+2	; 0x02
     9f8:	33 81       	ldd	r19, Z+3	; 0x03
     9fa:	fb 01       	movw	r30, r22
     9fc:	c0 80       	ld	r12, Z
     9fe:	d1 80       	ldd	r13, Z+1	; 0x01
     a00:	e2 80       	ldd	r14, Z+2	; 0x02
     a02:	f3 80       	ldd	r15, Z+3	; 0x03
     a04:	fc 01       	movw	r30, r24
     a06:	c0 82       	st	Z, r12
     a08:	d1 82       	std	Z+1, r13	; 0x01
     a0a:	e2 82       	std	Z+2, r14	; 0x02
     a0c:	f3 82       	std	Z+3, r15	; 0x03
     a0e:	fb 01       	movw	r30, r22
     a10:	00 83       	st	Z, r16
     a12:	11 83       	std	Z+1, r17	; 0x01
     a14:	22 83       	std	Z+2, r18	; 0x02
     a16:	33 83       	std	Z+3, r19	; 0x03
     a18:	1f 91       	pop	r17
     a1a:	0f 91       	pop	r16
     a1c:	ff 90       	pop	r15
     a1e:	ef 90       	pop	r14
     a20:	df 90       	pop	r13
     a22:	cf 90       	pop	r12
     a24:	08 95       	ret

00000a26 <FUNCcopy>:
     a26:	fb 01       	movw	r30, r22
     a28:	20 81       	ld	r18, Z
     a2a:	fc 01       	movw	r30, r24
     a2c:	20 83       	st	Z, r18
     a2e:	22 23       	and	r18, r18
     a30:	39 f0       	breq	.+14     	; 0xa40 <FUNCcopy+0x1a>
     a32:	db 01       	movw	r26, r22
     a34:	11 96       	adiw	r26, 0x01	; 1
     a36:	31 96       	adiw	r30, 0x01	; 1
     a38:	9d 91       	ld	r25, X+
     a3a:	91 93       	st	Z+, r25
     a3c:	91 11       	cpse	r25, r1
     a3e:	fc cf       	rjmp	.-8      	; 0xa38 <FUNCcopy+0x12>
     a40:	08 95       	ret

00000a42 <FUNCsqueeze>:
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	ec 01       	movw	r28, r24
     a48:	98 81       	ld	r25, Y
     a4a:	99 23       	and	r25, r25
     a4c:	99 f0       	breq	.+38     	; 0xa74 <FUNCsqueeze+0x32>
     a4e:	fe 01       	movw	r30, r28
     a50:	31 96       	adiw	r30, 0x01	; 1
     a52:	20 e0       	ldi	r18, 0x00	; 0
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	49 2f       	mov	r20, r25
     a58:	50 e0       	ldi	r21, 0x00	; 0
     a5a:	46 17       	cp	r20, r22
     a5c:	57 07       	cpc	r21, r23
     a5e:	31 f0       	breq	.+12     	; 0xa6c <FUNCsqueeze+0x2a>
     a60:	de 01       	movw	r26, r28
     a62:	a2 0f       	add	r26, r18
     a64:	b3 1f       	adc	r27, r19
     a66:	9c 93       	st	X, r25
     a68:	2f 5f       	subi	r18, 0xFF	; 255
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	91 91       	ld	r25, Z+
     a6e:	91 11       	cpse	r25, r1
     a70:	f2 cf       	rjmp	.-28     	; 0xa56 <FUNCsqueeze+0x14>
     a72:	02 c0       	rjmp	.+4      	; 0xa78 <FUNCsqueeze+0x36>
     a74:	20 e0       	ldi	r18, 0x00	; 0
     a76:	30 e0       	ldi	r19, 0x00	; 0
     a78:	fe 01       	movw	r30, r28
     a7a:	e2 0f       	add	r30, r18
     a7c:	f3 1f       	adc	r31, r19
     a7e:	10 82       	st	Z, r1
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	08 95       	ret

00000a86 <FUNCshellsort>:
     a86:	2f 92       	push	r2
     a88:	3f 92       	push	r3
     a8a:	4f 92       	push	r4
     a8c:	5f 92       	push	r5
     a8e:	6f 92       	push	r6
     a90:	7f 92       	push	r7
     a92:	8f 92       	push	r8
     a94:	9f 92       	push	r9
     a96:	af 92       	push	r10
     a98:	bf 92       	push	r11
     a9a:	cf 92       	push	r12
     a9c:	df 92       	push	r13
     a9e:	ef 92       	push	r14
     aa0:	ff 92       	push	r15
     aa2:	0f 93       	push	r16
     aa4:	1f 93       	push	r17
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	00 d0       	rcall	.+0      	; 0xaac <FUNCshellsort+0x26>
     aac:	00 d0       	rcall	.+0      	; 0xaae <FUNCshellsort+0x28>
     aae:	cd b7       	in	r28, 0x3d	; 61
     ab0:	de b7       	in	r29, 0x3e	; 62
     ab2:	2c 01       	movw	r4, r24
     ab4:	1b 01       	movw	r2, r22
     ab6:	4b 01       	movw	r8, r22
     ab8:	77 23       	and	r23, r23
     aba:	1c f4       	brge	.+6      	; 0xac2 <FUNCshellsort+0x3c>
     abc:	2f ef       	ldi	r18, 0xFF	; 255
     abe:	82 1a       	sub	r8, r18
     ac0:	92 0a       	sbc	r9, r18
     ac2:	95 94       	asr	r9
     ac4:	87 94       	ror	r8
     ac6:	18 14       	cp	r1, r8
     ac8:	19 04       	cpc	r1, r9
     aca:	0c f4       	brge	.+2      	; 0xace <FUNCshellsort+0x48>
     acc:	51 c0       	rjmp	.+162    	; 0xb70 <FUNCshellsort+0xea>
     ace:	6a c0       	rjmp	.+212    	; 0xba4 <FUNCshellsort+0x11e>
     ad0:	96 01       	movw	r18, r12
     ad2:	dd 20       	and	r13, r13
     ad4:	9c f1       	brlt	.+102    	; 0xb3c <FUNCshellsort+0xb6>
     ad6:	f5 01       	movw	r30, r10
     ad8:	40 81       	ld	r20, Z
     ada:	51 81       	ldd	r21, Z+1	; 0x01
     adc:	f4 01       	movw	r30, r8
     ade:	60 81       	ld	r22, Z
     ae0:	71 81       	ldd	r23, Z+1	; 0x01
     ae2:	64 17       	cp	r22, r20
     ae4:	75 07       	cpc	r23, r21
     ae6:	54 f5       	brge	.+84     	; 0xb3c <FUNCshellsort+0xb6>
     ae8:	8c 01       	movw	r16, r24
     aea:	0a 0d       	add	r16, r10
     aec:	1b 1d       	adc	r17, r11
     aee:	d4 01       	movw	r26, r8
     af0:	bc 82       	std	Y+4, r11	; 0x04
     af2:	ab 82       	std	Y+3, r10	; 0x03
     af4:	ba 82       	std	Y+2, r11	; 0x02
     af6:	a9 82       	std	Y+1, r10	; 0x01
     af8:	eb 81       	ldd	r30, Y+3	; 0x03
     afa:	fc 81       	ldd	r31, Y+4	; 0x04
     afc:	71 83       	std	Z+1, r23	; 0x01
     afe:	60 83       	st	Z, r22
     b00:	11 96       	adiw	r26, 0x01	; 1
     b02:	5c 93       	st	X, r21
     b04:	4e 93       	st	-X, r20
     b06:	2e 19       	sub	r18, r14
     b08:	3f 09       	sbc	r19, r15
     b0a:	c2 f0       	brmi	.+48     	; 0xb3c <FUNCshellsort+0xb6>
     b0c:	f8 01       	movw	r30, r16
     b0e:	40 81       	ld	r20, Z
     b10:	51 81       	ldd	r21, Z+1	; 0x01
     b12:	e9 81       	ldd	r30, Y+1	; 0x01
     b14:	fa 81       	ldd	r31, Y+2	; 0x02
     b16:	60 81       	ld	r22, Z
     b18:	71 81       	ldd	r23, Z+1	; 0x01
     b1a:	08 0f       	add	r16, r24
     b1c:	19 1f       	adc	r17, r25
     b1e:	e8 0f       	add	r30, r24
     b20:	f9 1f       	adc	r31, r25
     b22:	fa 83       	std	Y+2, r31	; 0x02
     b24:	e9 83       	std	Y+1, r30	; 0x01
     b26:	eb 81       	ldd	r30, Y+3	; 0x03
     b28:	fc 81       	ldd	r31, Y+4	; 0x04
     b2a:	e8 0f       	add	r30, r24
     b2c:	f9 1f       	adc	r31, r25
     b2e:	fc 83       	std	Y+4, r31	; 0x04
     b30:	eb 83       	std	Y+3, r30	; 0x03
     b32:	a8 0f       	add	r26, r24
     b34:	b9 1f       	adc	r27, r25
     b36:	64 17       	cp	r22, r20
     b38:	75 07       	cpc	r23, r21
     b3a:	f4 f2       	brlt	.-68     	; 0xaf8 <FUNCshellsort+0x72>
     b3c:	ff ef       	ldi	r31, 0xFF	; 255
     b3e:	cf 1a       	sub	r12, r31
     b40:	df 0a       	sbc	r13, r31
     b42:	22 e0       	ldi	r18, 0x02	; 2
     b44:	a2 0e       	add	r10, r18
     b46:	b1 1c       	adc	r11, r1
     b48:	e2 e0       	ldi	r30, 0x02	; 2
     b4a:	8e 0e       	add	r8, r30
     b4c:	91 1c       	adc	r9, r1
     b4e:	c6 14       	cp	r12, r6
     b50:	d7 04       	cpc	r13, r7
     b52:	09 f0       	breq	.+2      	; 0xb56 <FUNCshellsort+0xd0>
     b54:	bd cf       	rjmp	.-134    	; 0xad0 <FUNCshellsort+0x4a>
     b56:	47 01       	movw	r8, r14
     b58:	ff 20       	and	r15, r15
     b5a:	1c f4       	brge	.+6      	; 0xb62 <FUNCshellsort+0xdc>
     b5c:	ff ef       	ldi	r31, 0xFF	; 255
     b5e:	8f 1a       	sub	r8, r31
     b60:	9f 0a       	sbc	r9, r31
     b62:	95 94       	asr	r9
     b64:	87 94       	ror	r8
     b66:	18 14       	cp	r1, r8
     b68:	19 04       	cpc	r1, r9
     b6a:	e4 f4       	brge	.+56     	; 0xba4 <FUNCshellsort+0x11e>
     b6c:	74 01       	movw	r14, r8
     b6e:	01 c0       	rjmp	.+2      	; 0xb72 <FUNCshellsort+0xec>
     b70:	74 01       	movw	r14, r8
     b72:	82 14       	cp	r8, r2
     b74:	93 04       	cpc	r9, r3
     b76:	7c f7       	brge	.-34     	; 0xb56 <FUNCshellsort+0xd0>
     b78:	64 01       	movw	r12, r8
     b7a:	ce 18       	sub	r12, r14
     b7c:	df 08       	sbc	r13, r15
     b7e:	56 01       	movw	r10, r12
     b80:	aa 0c       	add	r10, r10
     b82:	bb 1c       	adc	r11, r11
     b84:	a4 0c       	add	r10, r4
     b86:	b5 1c       	adc	r11, r5
     b88:	88 0c       	add	r8, r8
     b8a:	99 1c       	adc	r9, r9
     b8c:	84 0c       	add	r8, r4
     b8e:	95 1c       	adc	r9, r5
     b90:	31 01       	movw	r6, r2
     b92:	6e 18       	sub	r6, r14
     b94:	7f 08       	sbc	r7, r15
     b96:	c7 01       	movw	r24, r14
     b98:	88 0f       	add	r24, r24
     b9a:	99 1f       	adc	r25, r25
     b9c:	91 95       	neg	r25
     b9e:	81 95       	neg	r24
     ba0:	91 09       	sbc	r25, r1
     ba2:	96 cf       	rjmp	.-212    	; 0xad0 <FUNCshellsort+0x4a>
     ba4:	0f 90       	pop	r0
     ba6:	0f 90       	pop	r0
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	df 91       	pop	r29
     bae:	cf 91       	pop	r28
     bb0:	1f 91       	pop	r17
     bb2:	0f 91       	pop	r16
     bb4:	ff 90       	pop	r15
     bb6:	ef 90       	pop	r14
     bb8:	df 90       	pop	r13
     bba:	cf 90       	pop	r12
     bbc:	bf 90       	pop	r11
     bbe:	af 90       	pop	r10
     bc0:	9f 90       	pop	r9
     bc2:	8f 90       	pop	r8
     bc4:	7f 90       	pop	r7
     bc6:	6f 90       	pop	r6
     bc8:	5f 90       	pop	r5
     bca:	4f 90       	pop	r4
     bcc:	3f 90       	pop	r3
     bce:	2f 90       	pop	r2
     bd0:	08 95       	ret

00000bd2 <FUNCpmax>:
     bd2:	86 17       	cp	r24, r22
     bd4:	97 07       	cpc	r25, r23
     bd6:	0c f4       	brge	.+2      	; 0xbda <FUNCpmax+0x8>
     bd8:	cb 01       	movw	r24, r22
     bda:	08 95       	ret

00000bdc <FUNCgcd>:
     bdc:	9b 01       	movw	r18, r22
     bde:	67 2b       	or	r22, r23
     be0:	11 f4       	brne	.+4      	; 0xbe6 <FUNCgcd+0xa>
     be2:	08 95       	ret
     be4:	9a 01       	movw	r18, r20
     be6:	b9 01       	movw	r22, r18
     be8:	0e 94 82 13 	call	0x2704	; 0x2704 <__divmodhi4>
     bec:	ac 01       	movw	r20, r24
     bee:	82 2f       	mov	r24, r18
     bf0:	93 2f       	mov	r25, r19
     bf2:	41 15       	cp	r20, r1
     bf4:	51 05       	cpc	r21, r1
     bf6:	b1 f7       	brne	.-20     	; 0xbe4 <FUNCgcd+0x8>
     bf8:	08 95       	ret

00000bfa <FUNCstrToInt>:
     bfa:	fc 01       	movw	r30, r24
     bfc:	90 81       	ld	r25, Z
     bfe:	80 ed       	ldi	r24, 0xD0	; 208
     c00:	89 0f       	add	r24, r25
     c02:	8a 30       	cpi	r24, 0x0A	; 10
     c04:	d0 f4       	brcc	.+52     	; 0xc3a <FUNCstrToInt+0x40>
     c06:	31 96       	adiw	r30, 0x01	; 1
     c08:	20 e0       	ldi	r18, 0x00	; 0
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	a9 01       	movw	r20, r18
     c0e:	44 0f       	add	r20, r20
     c10:	55 1f       	adc	r21, r21
     c12:	22 0f       	add	r18, r18
     c14:	33 1f       	adc	r19, r19
     c16:	22 0f       	add	r18, r18
     c18:	33 1f       	adc	r19, r19
     c1a:	22 0f       	add	r18, r18
     c1c:	33 1f       	adc	r19, r19
     c1e:	42 0f       	add	r20, r18
     c20:	53 1f       	adc	r21, r19
     c22:	29 2f       	mov	r18, r25
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	20 53       	subi	r18, 0x30	; 48
     c28:	31 09       	sbc	r19, r1
     c2a:	24 0f       	add	r18, r20
     c2c:	35 1f       	adc	r19, r21
     c2e:	91 91       	ld	r25, Z+
     c30:	80 ed       	ldi	r24, 0xD0	; 208
     c32:	89 0f       	add	r24, r25
     c34:	8a 30       	cpi	r24, 0x0A	; 10
     c36:	50 f3       	brcs	.-44     	; 0xc0c <FUNCstrToInt+0x12>
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <FUNCstrToInt+0x44>
     c3a:	20 e0       	ldi	r18, 0x00	; 0
     c3c:	30 e0       	ldi	r19, 0x00	; 0
     c3e:	c9 01       	movw	r24, r18
     c40:	08 95       	ret

00000c42 <FUNCfilter>:
     c42:	86 23       	and	r24, r22
     c44:	08 95       	ret

00000c46 <FUNCticks>:
     c46:	00 97       	sbiw	r24, 0x00	; 0
     c48:	39 f0       	breq	.+14     	; 0xc58 <FUNCticks+0x12>
     c4a:	20 e0       	ldi	r18, 0x00	; 0
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	2f 5f       	subi	r18, 0xFF	; 255
     c50:	3f 4f       	sbci	r19, 0xFF	; 255
     c52:	82 17       	cp	r24, r18
     c54:	93 07       	cpc	r25, r19
     c56:	d9 f7       	brne	.-10     	; 0xc4e <FUNCticks+0x8>
     c58:	08 95       	ret

00000c5a <FUNCtwocomptoint8bit>:
     c5a:	87 ff       	sbrs	r24, 7
     c5c:	08 c0       	rjmp	.+16     	; 0xc6e <FUNCtwocomptoint8bit+0x14>
     c5e:	91 95       	neg	r25
     c60:	81 95       	neg	r24
     c62:	91 09       	sbc	r25, r1
     c64:	99 27       	eor	r25, r25
     c66:	91 95       	neg	r25
     c68:	81 95       	neg	r24
     c6a:	91 09       	sbc	r25, r1
     c6c:	08 95       	ret
     c6e:	8f 77       	andi	r24, 0x7F	; 127
     c70:	99 27       	eor	r25, r25
     c72:	08 95       	ret

00000c74 <FUNCtwocomptoint10bit>:
     c74:	91 ff       	sbrs	r25, 1
     c76:	08 c0       	rjmp	.+16     	; 0xc88 <FUNCtwocomptoint10bit+0x14>
     c78:	91 95       	neg	r25
     c7a:	81 95       	neg	r24
     c7c:	91 09       	sbc	r25, r1
     c7e:	93 70       	andi	r25, 0x03	; 3
     c80:	91 95       	neg	r25
     c82:	81 95       	neg	r24
     c84:	91 09       	sbc	r25, r1
     c86:	08 95       	ret
     c88:	91 70       	andi	r25, 0x01	; 1
     c8a:	08 95       	ret

00000c8c <FUNCtwocomptointnbit>:
     c8c:	61 50       	subi	r22, 0x01	; 1
     c8e:	21 e0       	ldi	r18, 0x01	; 1
     c90:	30 e0       	ldi	r19, 0x00	; 0
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <FUNCtwocomptointnbit+0xc>
     c94:	22 0f       	add	r18, r18
     c96:	33 1f       	adc	r19, r19
     c98:	6a 95       	dec	r22
     c9a:	e2 f7       	brpl	.-8      	; 0xc94 <FUNCtwocomptointnbit+0x8>
     c9c:	a9 01       	movw	r20, r18
     c9e:	41 50       	subi	r20, 0x01	; 1
     ca0:	51 09       	sbc	r21, r1
     ca2:	b9 01       	movw	r22, r18
     ca4:	68 23       	and	r22, r24
     ca6:	79 23       	and	r23, r25
     ca8:	67 2b       	or	r22, r23
     caa:	29 f0       	breq	.+10     	; 0xcb6 <FUNCtwocomptointnbit+0x2a>
     cac:	84 23       	and	r24, r20
     cae:	95 23       	and	r25, r21
     cb0:	82 1b       	sub	r24, r18
     cb2:	93 0b       	sbc	r25, r19
     cb4:	08 95       	ret
     cb6:	84 23       	and	r24, r20
     cb8:	95 23       	and	r25, r21
     cba:	08 95       	ret

00000cbc <FUNCdec2bcd>:
     cbc:	9d ec       	ldi	r25, 0xCD	; 205
     cbe:	89 9f       	mul	r24, r25
     cc0:	91 2d       	mov	r25, r1
     cc2:	11 24       	eor	r1, r1
     cc4:	96 95       	lsr	r25
     cc6:	96 95       	lsr	r25
     cc8:	96 95       	lsr	r25
     cca:	39 2f       	mov	r19, r25
     ccc:	33 0f       	add	r19, r19
     cce:	23 2f       	mov	r18, r19
     cd0:	22 0f       	add	r18, r18
     cd2:	22 0f       	add	r18, r18
     cd4:	23 0f       	add	r18, r19
     cd6:	82 1b       	sub	r24, r18
     cd8:	20 e1       	ldi	r18, 0x10	; 16
     cda:	92 9f       	mul	r25, r18
     cdc:	80 0d       	add	r24, r0
     cde:	11 24       	eor	r1, r1
     ce0:	08 95       	ret

00000ce2 <FUNCbcd2dec>:
     ce2:	98 2f       	mov	r25, r24
     ce4:	92 95       	swap	r25
     ce6:	9f 70       	andi	r25, 0x0F	; 15
     ce8:	99 0f       	add	r25, r25
     cea:	29 2f       	mov	r18, r25
     cec:	22 0f       	add	r18, r18
     cee:	22 0f       	add	r18, r18
     cf0:	92 0f       	add	r25, r18
     cf2:	8f 70       	andi	r24, 0x0F	; 15
     cf4:	89 0f       	add	r24, r25
     cf6:	08 95       	ret

00000cf8 <FUNCresizestr>:
     cf8:	fc 01       	movw	r30, r24
     cfa:	db 01       	movw	r26, r22
     cfc:	aa 53       	subi	r26, 0x3A	; 58
     cfe:	bd 4f       	sbci	r27, 0xFD	; 253
     d00:	1c 92       	st	X, r1
     d02:	16 16       	cp	r1, r22
     d04:	17 06       	cpc	r1, r23
     d06:	14 f5       	brge	.+68     	; 0xd4c <FUNCresizestr+0x54>
     d08:	90 81       	ld	r25, Z
     d0a:	91 11       	cpse	r25, r1
     d0c:	0c c0       	rjmp	.+24     	; 0xd26 <FUNCresizestr+0x2e>
     d0e:	17 c0       	rjmp	.+46     	; 0xd3e <FUNCresizestr+0x46>
     d10:	91 91       	ld	r25, Z+
     d12:	91 11       	cpse	r25, r1
     d14:	0d c0       	rjmp	.+26     	; 0xd30 <FUNCresizestr+0x38>
     d16:	15 c0       	rjmp	.+42     	; 0xd42 <FUNCresizestr+0x4a>
     d18:	81 93       	st	Z+, r24
     d1a:	2f 5f       	subi	r18, 0xFF	; 255
     d1c:	3f 4f       	sbci	r19, 0xFF	; 255
     d1e:	26 17       	cp	r18, r22
     d20:	37 07       	cpc	r19, r23
     d22:	d4 f3       	brlt	.-12     	; 0xd18 <FUNCresizestr+0x20>
     d24:	13 c0       	rjmp	.+38     	; 0xd4c <FUNCresizestr+0x54>
     d26:	a6 ec       	ldi	r26, 0xC6	; 198
     d28:	b2 e0       	ldi	r27, 0x02	; 2
     d2a:	31 96       	adiw	r30, 0x01	; 1
     d2c:	20 e0       	ldi	r18, 0x00	; 0
     d2e:	30 e0       	ldi	r19, 0x00	; 0
     d30:	9d 93       	st	X+, r25
     d32:	2f 5f       	subi	r18, 0xFF	; 255
     d34:	3f 4f       	sbci	r19, 0xFF	; 255
     d36:	62 17       	cp	r22, r18
     d38:	73 07       	cpc	r23, r19
     d3a:	51 f7       	brne	.-44     	; 0xd10 <FUNCresizestr+0x18>
     d3c:	07 c0       	rjmp	.+14     	; 0xd4c <FUNCresizestr+0x54>
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	f9 01       	movw	r30, r18
     d44:	ea 53       	subi	r30, 0x3A	; 58
     d46:	fd 4f       	sbci	r31, 0xFD	; 253
     d48:	80 e2       	ldi	r24, 0x20	; 32
     d4a:	e6 cf       	rjmp	.-52     	; 0xd18 <FUNCresizestr+0x20>
     d4c:	86 ec       	ldi	r24, 0xC6	; 198
     d4e:	92 e0       	ldi	r25, 0x02	; 2
     d50:	08 95       	ret

00000d52 <FUNCtrimmer>:
     d52:	4f 92       	push	r4
     d54:	5f 92       	push	r5
     d56:	6f 92       	push	r6
     d58:	7f 92       	push	r7
     d5a:	af 92       	push	r10
     d5c:	bf 92       	push	r11
     d5e:	cf 92       	push	r12
     d60:	df 92       	push	r13
     d62:	ef 92       	push	r14
     d64:	ff 92       	push	r15
     d66:	0f 93       	push	r16
     d68:	1f 93       	push	r17
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	29 01       	movw	r4, r18
     d74:	3a 01       	movw	r6, r20
     d76:	9b 01       	movw	r18, r22
     d78:	ac 01       	movw	r20, r24
     d7a:	24 19       	sub	r18, r4
     d7c:	35 09       	sbc	r19, r5
     d7e:	46 09       	sbc	r20, r6
     d80:	57 09       	sbc	r21, r7
     d82:	89 89       	ldd	r24, Y+17	; 0x11
     d84:	9a 89       	ldd	r25, Y+18	; 0x12
     d86:	ab 89       	ldd	r26, Y+19	; 0x13
     d88:	bc 89       	ldd	r27, Y+20	; 0x14
     d8a:	bc 01       	movw	r22, r24
     d8c:	cd 01       	movw	r24, r26
     d8e:	6a 19       	sub	r22, r10
     d90:	7b 09       	sbc	r23, r11
     d92:	8c 09       	sbc	r24, r12
     d94:	9d 09       	sbc	r25, r13
     d96:	0e 94 5f 13 	call	0x26be	; 0x26be <__mulsi3>
     d9a:	a8 01       	movw	r20, r16
     d9c:	97 01       	movw	r18, r14
     d9e:	24 19       	sub	r18, r4
     da0:	35 09       	sbc	r19, r5
     da2:	46 09       	sbc	r20, r6
     da4:	57 09       	sbc	r21, r7
     da6:	0e 94 b7 13 	call	0x276e	; 0x276e <__divmodsi4>
     daa:	ca 01       	movw	r24, r20
     dac:	b9 01       	movw	r22, r18
     dae:	6a 0d       	add	r22, r10
     db0:	7b 1d       	adc	r23, r11
     db2:	8c 1d       	adc	r24, r12
     db4:	9d 1d       	adc	r25, r13
     db6:	df 91       	pop	r29
     db8:	cf 91       	pop	r28
     dba:	1f 91       	pop	r17
     dbc:	0f 91       	pop	r16
     dbe:	ff 90       	pop	r15
     dc0:	ef 90       	pop	r14
     dc2:	df 90       	pop	r13
     dc4:	cf 90       	pop	r12
     dc6:	bf 90       	pop	r11
     dc8:	af 90       	pop	r10
     dca:	7f 90       	pop	r7
     dcc:	6f 90       	pop	r6
     dce:	5f 90       	pop	r5
     dd0:	4f 90       	pop	r4
     dd2:	08 95       	ret

00000dd4 <Pwr>:
     dd4:	70 e0       	ldi	r23, 0x00	; 0
     dd6:	61 15       	cp	r22, r1
     dd8:	71 05       	cpc	r23, r1
     dda:	99 f0       	breq	.+38     	; 0xe02 <Pwr+0x2e>
     ddc:	41 e0       	ldi	r20, 0x01	; 1
     dde:	50 e0       	ldi	r21, 0x00	; 0
     de0:	21 e0       	ldi	r18, 0x01	; 1
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	fa 01       	movw	r30, r20
     de8:	e8 9f       	mul	r30, r24
     dea:	a0 01       	movw	r20, r0
     dec:	e9 9f       	mul	r30, r25
     dee:	50 0d       	add	r21, r0
     df0:	f8 9f       	mul	r31, r24
     df2:	50 0d       	add	r21, r0
     df4:	11 24       	eor	r1, r1
     df6:	2f 5f       	subi	r18, 0xFF	; 255
     df8:	3f 4f       	sbci	r19, 0xFF	; 255
     dfa:	62 17       	cp	r22, r18
     dfc:	73 07       	cpc	r23, r19
     dfe:	98 f7       	brcc	.-26     	; 0xde6 <Pwr+0x12>
     e00:	02 c0       	rjmp	.+4      	; 0xe06 <Pwr+0x32>
     e02:	41 e0       	ldi	r20, 0x01	; 1
     e04:	50 e0       	ldi	r21, 0x00	; 0
     e06:	ca 01       	movw	r24, r20
     e08:	08 95       	ret

00000e0a <StringLength>:
     e0a:	fc 01       	movw	r30, r24
     e0c:	20 81       	ld	r18, Z
     e0e:	22 23       	and	r18, r18
     e10:	41 f0       	breq	.+16     	; 0xe22 <StringLength+0x18>
     e12:	31 96       	adiw	r30, 0x01	; 1
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	01 96       	adiw	r24, 0x01	; 1
     e1a:	21 91       	ld	r18, Z+
     e1c:	21 11       	cpse	r18, r1
     e1e:	fc cf       	rjmp	.-8      	; 0xe18 <StringLength+0xe>
     e20:	08 95       	ret
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	08 95       	ret

00000e28 <FUNCtrim>:
     e28:	cf 93       	push	r28
     e2a:	df 93       	push	r29
     e2c:	ec 01       	movw	r28, r24
     e2e:	ed df       	rcall	.-38     	; 0xe0a <StringLength>
     e30:	9c 01       	movw	r18, r24
     e32:	21 50       	subi	r18, 0x01	; 1
     e34:	31 09       	sbc	r19, r1
     e36:	62 f0       	brmi	.+24     	; 0xe50 <FUNCtrim+0x28>
     e38:	fe 01       	movw	r30, r28
     e3a:	e8 0f       	add	r30, r24
     e3c:	f9 1f       	adc	r31, r25
     e3e:	92 91       	ld	r25, -Z
     e40:	90 32       	cpi	r25, 0x20	; 32
     e42:	19 f0       	breq	.+6      	; 0xe4a <FUNCtrim+0x22>
     e44:	99 50       	subi	r25, 0x09	; 9
     e46:	92 30       	cpi	r25, 0x02	; 2
     e48:	18 f4       	brcc	.+6      	; 0xe50 <FUNCtrim+0x28>
     e4a:	21 50       	subi	r18, 0x01	; 1
     e4c:	31 09       	sbc	r19, r1
     e4e:	b8 f7       	brcc	.-18     	; 0xe3e <FUNCtrim+0x16>
     e50:	c2 0f       	add	r28, r18
     e52:	d3 1f       	adc	r29, r19
     e54:	19 82       	std	Y+1, r1	; 0x01
     e56:	c9 01       	movw	r24, r18
     e58:	df 91       	pop	r29
     e5a:	cf 91       	pop	r28
     e5c:	08 95       	ret

00000e5e <Reverse>:
     e5e:	cf 93       	push	r28
     e60:	df 93       	push	r29
     e62:	ec 01       	movw	r28, r24
     e64:	d2 df       	rcall	.-92     	; 0xe0a <StringLength>
     e66:	9c 01       	movw	r18, r24
     e68:	21 50       	subi	r18, 0x01	; 1
     e6a:	31 09       	sbc	r19, r1
     e6c:	12 16       	cp	r1, r18
     e6e:	13 06       	cpc	r1, r19
     e70:	84 f4       	brge	.+32     	; 0xe92 <Reverse+0x34>
     e72:	de 01       	movw	r26, r28
     e74:	a8 0f       	add	r26, r24
     e76:	b9 1f       	adc	r27, r25
     e78:	fe 01       	movw	r30, r28
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	40 81       	ld	r20, Z
     e80:	5e 91       	ld	r21, -X
     e82:	51 93       	st	Z+, r21
     e84:	4c 93       	st	X, r20
     e86:	01 96       	adiw	r24, 0x01	; 1
     e88:	21 50       	subi	r18, 0x01	; 1
     e8a:	31 09       	sbc	r19, r1
     e8c:	82 17       	cp	r24, r18
     e8e:	93 07       	cpc	r25, r19
     e90:	b4 f3       	brlt	.-20     	; 0xe7e <Reverse+0x20>
     e92:	df 91       	pop	r29
     e94:	cf 91       	pop	r28
     e96:	08 95       	ret

00000e98 <FUNCi32toa>:
     e98:	8f 92       	push	r8
     e9a:	9f 92       	push	r9
     e9c:	af 92       	push	r10
     e9e:	bf 92       	push	r11
     ea0:	cf 92       	push	r12
     ea2:	df 92       	push	r13
     ea4:	ef 92       	push	r14
     ea6:	ff 92       	push	r15
     ea8:	0f 93       	push	r16
     eaa:	1f 93       	push	r17
     eac:	cf 93       	push	r28
     eae:	df 93       	push	r29
     eb0:	6b 01       	movw	r12, r22
     eb2:	7c 01       	movw	r14, r24
     eb4:	dc 01       	movw	r26, r24
     eb6:	cb 01       	movw	r24, r22
     eb8:	ff 20       	and	r15, r15
     eba:	3c f4       	brge	.+14     	; 0xeca <FUNCi32toa+0x32>
     ebc:	88 27       	eor	r24, r24
     ebe:	99 27       	eor	r25, r25
     ec0:	dc 01       	movw	r26, r24
     ec2:	8c 19       	sub	r24, r12
     ec4:	9d 09       	sbc	r25, r13
     ec6:	ae 09       	sbc	r26, r14
     ec8:	bf 09       	sbc	r27, r15
     eca:	bc 01       	movw	r22, r24
     ecc:	cd 01       	movw	r24, r26
     ece:	10 e0       	ldi	r17, 0x00	; 0
     ed0:	0f 2e       	mov	r0, r31
     ed2:	fa e0       	ldi	r31, 0x0A	; 10
     ed4:	8f 2e       	mov	r8, r31
     ed6:	91 2c       	mov	r9, r1
     ed8:	a1 2c       	mov	r10, r1
     eda:	b1 2c       	mov	r11, r1
     edc:	f0 2d       	mov	r31, r0
     ede:	01 c0       	rjmp	.+2      	; 0xee2 <FUNCi32toa+0x4a>
     ee0:	10 2f       	mov	r17, r16
     ee2:	01 e0       	ldi	r16, 0x01	; 1
     ee4:	01 0f       	add	r16, r17
     ee6:	c1 2f       	mov	r28, r17
     ee8:	d0 e0       	ldi	r29, 0x00	; 0
     eea:	ca 53       	subi	r28, 0x3A	; 58
     eec:	dd 4f       	sbci	r29, 0xFD	; 253
     eee:	a5 01       	movw	r20, r10
     ef0:	94 01       	movw	r18, r8
     ef2:	0e 94 b7 13 	call	0x276e	; 0x276e <__divmodsi4>
     ef6:	60 5d       	subi	r22, 0xD0	; 208
     ef8:	68 83       	st	Y, r22
     efa:	62 2f       	mov	r22, r18
     efc:	73 2f       	mov	r23, r19
     efe:	84 2f       	mov	r24, r20
     f00:	95 2f       	mov	r25, r21
     f02:	16 16       	cp	r1, r22
     f04:	17 06       	cpc	r1, r23
     f06:	18 06       	cpc	r1, r24
     f08:	19 06       	cpc	r1, r25
     f0a:	54 f3       	brlt	.-44     	; 0xee0 <FUNCi32toa+0x48>
     f0c:	ff 20       	and	r15, r15
     f0e:	44 f4       	brge	.+16     	; 0xf20 <FUNCi32toa+0x88>
     f10:	e0 2f       	mov	r30, r16
     f12:	f0 e0       	ldi	r31, 0x00	; 0
     f14:	ea 53       	subi	r30, 0x3A	; 58
     f16:	fd 4f       	sbci	r31, 0xFD	; 253
     f18:	8d e2       	ldi	r24, 0x2D	; 45
     f1a:	80 83       	st	Z, r24
     f1c:	02 e0       	ldi	r16, 0x02	; 2
     f1e:	01 0f       	add	r16, r17
     f20:	e0 2f       	mov	r30, r16
     f22:	f0 e0       	ldi	r31, 0x00	; 0
     f24:	ea 53       	subi	r30, 0x3A	; 58
     f26:	fd 4f       	sbci	r31, 0xFD	; 253
     f28:	10 82       	st	Z, r1
     f2a:	86 ec       	ldi	r24, 0xC6	; 198
     f2c:	92 e0       	ldi	r25, 0x02	; 2
     f2e:	97 df       	rcall	.-210    	; 0xe5e <Reverse>
     f30:	86 ec       	ldi	r24, 0xC6	; 198
     f32:	92 e0       	ldi	r25, 0x02	; 2
     f34:	df 91       	pop	r29
     f36:	cf 91       	pop	r28
     f38:	1f 91       	pop	r17
     f3a:	0f 91       	pop	r16
     f3c:	ff 90       	pop	r15
     f3e:	ef 90       	pop	r14
     f40:	df 90       	pop	r13
     f42:	cf 90       	pop	r12
     f44:	bf 90       	pop	r11
     f46:	af 90       	pop	r10
     f48:	9f 90       	pop	r9
     f4a:	8f 90       	pop	r8
     f4c:	08 95       	ret

00000f4e <FUNCi16toa>:
     f4e:	0f 93       	push	r16
     f50:	1f 93       	push	r17
     f52:	cf 93       	push	r28
     f54:	df 93       	push	r29
     f56:	ec 01       	movw	r28, r24
     f58:	99 23       	and	r25, r25
     f5a:	24 f4       	brge	.+8      	; 0xf64 <FUNCi16toa+0x16>
     f5c:	88 27       	eor	r24, r24
     f5e:	99 27       	eor	r25, r25
     f60:	8c 1b       	sub	r24, r28
     f62:	9d 0b       	sbc	r25, r29
     f64:	20 e0       	ldi	r18, 0x00	; 0
     f66:	0a e0       	ldi	r16, 0x0A	; 10
     f68:	10 e0       	ldi	r17, 0x00	; 0
     f6a:	01 c0       	rjmp	.+2      	; 0xf6e <FUNCi16toa+0x20>
     f6c:	23 2f       	mov	r18, r19
     f6e:	31 e0       	ldi	r19, 0x01	; 1
     f70:	32 0f       	add	r19, r18
     f72:	e2 2f       	mov	r30, r18
     f74:	f0 e0       	ldi	r31, 0x00	; 0
     f76:	ea 53       	subi	r30, 0x3A	; 58
     f78:	fd 4f       	sbci	r31, 0xFD	; 253
     f7a:	b8 01       	movw	r22, r16
     f7c:	0e 94 82 13 	call	0x2704	; 0x2704 <__divmodhi4>
     f80:	80 5d       	subi	r24, 0xD0	; 208
     f82:	80 83       	st	Z, r24
     f84:	86 2f       	mov	r24, r22
     f86:	97 2f       	mov	r25, r23
     f88:	18 16       	cp	r1, r24
     f8a:	19 06       	cpc	r1, r25
     f8c:	7c f3       	brlt	.-34     	; 0xf6c <FUNCi16toa+0x1e>
     f8e:	dd 23       	and	r29, r29
     f90:	44 f4       	brge	.+16     	; 0xfa2 <FUNCi16toa+0x54>
     f92:	e3 2f       	mov	r30, r19
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	ea 53       	subi	r30, 0x3A	; 58
     f98:	fd 4f       	sbci	r31, 0xFD	; 253
     f9a:	8d e2       	ldi	r24, 0x2D	; 45
     f9c:	80 83       	st	Z, r24
     f9e:	32 e0       	ldi	r19, 0x02	; 2
     fa0:	32 0f       	add	r19, r18
     fa2:	e3 2f       	mov	r30, r19
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	ea 53       	subi	r30, 0x3A	; 58
     fa8:	fd 4f       	sbci	r31, 0xFD	; 253
     faa:	10 82       	st	Z, r1
     fac:	86 ec       	ldi	r24, 0xC6	; 198
     fae:	92 e0       	ldi	r25, 0x02	; 2
     fb0:	56 df       	rcall	.-340    	; 0xe5e <Reverse>
     fb2:	86 ec       	ldi	r24, 0xC6	; 198
     fb4:	92 e0       	ldi	r25, 0x02	; 2
     fb6:	df 91       	pop	r29
     fb8:	cf 91       	pop	r28
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	08 95       	ret

00000fc0 <FUNCui16toa>:
     fc0:	cf 93       	push	r28
     fc2:	ac 01       	movw	r20, r24
     fc4:	e0 e0       	ldi	r30, 0x00	; 0
     fc6:	c1 e0       	ldi	r28, 0x01	; 1
     fc8:	ce 0f       	add	r28, r30
     fca:	f0 e0       	ldi	r31, 0x00	; 0
     fcc:	ea 53       	subi	r30, 0x3A	; 58
     fce:	fd 4f       	sbci	r31, 0xFD	; 253
     fd0:	9a 01       	movw	r18, r20
     fd2:	ad ec       	ldi	r26, 0xCD	; 205
     fd4:	bc ec       	ldi	r27, 0xCC	; 204
     fd6:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__umulhisi3>
     fda:	96 95       	lsr	r25
     fdc:	87 95       	ror	r24
     fde:	96 95       	lsr	r25
     fe0:	87 95       	ror	r24
     fe2:	96 95       	lsr	r25
     fe4:	87 95       	ror	r24
     fe6:	9c 01       	movw	r18, r24
     fe8:	22 0f       	add	r18, r18
     fea:	33 1f       	adc	r19, r19
     fec:	88 0f       	add	r24, r24
     fee:	99 1f       	adc	r25, r25
     ff0:	88 0f       	add	r24, r24
     ff2:	99 1f       	adc	r25, r25
     ff4:	88 0f       	add	r24, r24
     ff6:	99 1f       	adc	r25, r25
     ff8:	82 0f       	add	r24, r18
     ffa:	93 1f       	adc	r25, r19
     ffc:	9a 01       	movw	r18, r20
     ffe:	28 1b       	sub	r18, r24
    1000:	39 0b       	sbc	r19, r25
    1002:	c9 01       	movw	r24, r18
    1004:	80 5d       	subi	r24, 0xD0	; 208
    1006:	80 83       	st	Z, r24
    1008:	9a 01       	movw	r18, r20
    100a:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__umulhisi3>
    100e:	ac 01       	movw	r20, r24
    1010:	56 95       	lsr	r21
    1012:	47 95       	ror	r20
    1014:	56 95       	lsr	r21
    1016:	47 95       	ror	r20
    1018:	56 95       	lsr	r21
    101a:	47 95       	ror	r20
    101c:	ec 2f       	mov	r30, r28
    101e:	41 15       	cp	r20, r1
    1020:	51 05       	cpc	r21, r1
    1022:	89 f6       	brne	.-94     	; 0xfc6 <FUNCui16toa+0x6>
    1024:	ec 2f       	mov	r30, r28
    1026:	f0 e0       	ldi	r31, 0x00	; 0
    1028:	ea 53       	subi	r30, 0x3A	; 58
    102a:	fd 4f       	sbci	r31, 0xFD	; 253
    102c:	10 82       	st	Z, r1
    102e:	86 ec       	ldi	r24, 0xC6	; 198
    1030:	92 e0       	ldi	r25, 0x02	; 2
    1032:	15 df       	rcall	.-470    	; 0xe5e <Reverse>
    1034:	86 ec       	ldi	r24, 0xC6	; 198
    1036:	92 e0       	ldi	r25, 0x02	; 2
    1038:	cf 91       	pop	r28
    103a:	08 95       	ret

0000103c <FUNCbcd2bin>:
    103c:	98 2f       	mov	r25, r24
    103e:	92 95       	swap	r25
    1040:	9f 70       	andi	r25, 0x0F	; 15
    1042:	99 0f       	add	r25, r25
    1044:	29 2f       	mov	r18, r25
    1046:	22 0f       	add	r18, r18
    1048:	22 0f       	add	r18, r18
    104a:	92 0f       	add	r25, r18
    104c:	8f 70       	andi	r24, 0x0F	; 15
    104e:	89 0f       	add	r24, r25
    1050:	08 95       	ret

00001052 <FUNCbin2bcd>:
    1052:	ac 01       	movw	r20, r24
    1054:	9c 01       	movw	r18, r24
    1056:	ad ec       	ldi	r26, 0xCD	; 205
    1058:	bc ec       	ldi	r27, 0xCC	; 204
    105a:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__umulhisi3>
    105e:	96 95       	lsr	r25
    1060:	87 95       	ror	r24
    1062:	96 95       	lsr	r25
    1064:	87 95       	ror	r24
    1066:	96 95       	lsr	r25
    1068:	87 95       	ror	r24
    106a:	bc 01       	movw	r22, r24
    106c:	66 0f       	add	r22, r22
    106e:	77 1f       	adc	r23, r23
    1070:	9c 01       	movw	r18, r24
    1072:	22 0f       	add	r18, r18
    1074:	33 1f       	adc	r19, r19
    1076:	22 0f       	add	r18, r18
    1078:	33 1f       	adc	r19, r19
    107a:	22 0f       	add	r18, r18
    107c:	33 1f       	adc	r19, r19
    107e:	26 0f       	add	r18, r22
    1080:	37 1f       	adc	r19, r23
    1082:	42 1b       	sub	r20, r18
    1084:	53 0b       	sbc	r21, r19
    1086:	34 2f       	mov	r19, r20
    1088:	20 e1       	ldi	r18, 0x10	; 16
    108a:	82 9f       	mul	r24, r18
    108c:	30 0d       	add	r19, r0
    108e:	11 24       	eor	r1, r1
    1090:	83 2f       	mov	r24, r19
    1092:	08 95       	ret

00001094 <FUNCgcd1>:
    1094:	cf 92       	push	r12
    1096:	df 92       	push	r13
    1098:	ef 92       	push	r14
    109a:	ff 92       	push	r15
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	cd b7       	in	r28, 0x3d	; 61
    10a2:	de b7       	in	r29, 0x3e	; 62
    10a4:	28 97       	sbiw	r28, 0x08	; 8
    10a6:	0f b6       	in	r0, 0x3f	; 63
    10a8:	f8 94       	cli
    10aa:	de bf       	out	0x3e, r29	; 62
    10ac:	0f be       	out	0x3f, r0	; 63
    10ae:	cd bf       	out	0x3d, r28	; 61
    10b0:	6b 01       	movw	r12, r22
    10b2:	7c 01       	movw	r14, r24
    10b4:	69 83       	std	Y+1, r22	; 0x01
    10b6:	7a 83       	std	Y+2, r23	; 0x02
    10b8:	8b 83       	std	Y+3, r24	; 0x03
    10ba:	9c 83       	std	Y+4, r25	; 0x04
    10bc:	2d 83       	std	Y+5, r18	; 0x05
    10be:	3e 83       	std	Y+6, r19	; 0x06
    10c0:	4f 83       	std	Y+7, r20	; 0x07
    10c2:	58 87       	std	Y+8, r21	; 0x08
    10c4:	c2 16       	cp	r12, r18
    10c6:	d3 06       	cpc	r13, r19
    10c8:	e4 06       	cpc	r14, r20
    10ca:	f5 06       	cpc	r15, r21
    10cc:	34 f4       	brge	.+12     	; 0x10da <FUNCgcd1+0x46>
    10ce:	be 01       	movw	r22, r28
    10d0:	6b 5f       	subi	r22, 0xFB	; 251
    10d2:	7f 4f       	sbci	r23, 0xFF	; 255
    10d4:	ce 01       	movw	r24, r28
    10d6:	01 96       	adiw	r24, 0x01	; 1
    10d8:	85 dc       	rcall	.-1782   	; 0x9e4 <FUNCswap>
    10da:	8d 81       	ldd	r24, Y+5	; 0x05
    10dc:	9e 81       	ldd	r25, Y+6	; 0x06
    10de:	af 81       	ldd	r26, Y+7	; 0x07
    10e0:	b8 85       	ldd	r27, Y+8	; 0x08
    10e2:	89 2b       	or	r24, r25
    10e4:	8a 2b       	or	r24, r26
    10e6:	8b 2b       	or	r24, r27
    10e8:	71 f4       	brne	.+28     	; 0x1106 <__stack+0x7>
    10ea:	69 81       	ldd	r22, Y+1	; 0x01
    10ec:	7a 81       	ldd	r23, Y+2	; 0x02
    10ee:	8b 81       	ldd	r24, Y+3	; 0x03
    10f0:	9c 81       	ldd	r25, Y+4	; 0x04
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	a9 01       	movw	r20, r18
    10f8:	0e 94 b7 13 	call	0x276e	; 0x276e <__divmodsi4>
    10fc:	61 15       	cp	r22, r1
    10fe:	71 05       	cpc	r23, r1
    1100:	81 05       	cpc	r24, r1
    1102:	91 05       	cpc	r25, r1
    1104:	29 f4       	brne	.+10     	; 0x1110 <__stack+0x11>
    1106:	6d 81       	ldd	r22, Y+5	; 0x05
    1108:	7e 81       	ldd	r23, Y+6	; 0x06
    110a:	8f 81       	ldd	r24, Y+7	; 0x07
    110c:	98 85       	ldd	r25, Y+8	; 0x08
    110e:	05 c0       	rjmp	.+10     	; 0x111a <__stack+0x1b>
    1110:	6d 83       	std	Y+5, r22	; 0x05
    1112:	7e 83       	std	Y+6, r23	; 0x06
    1114:	8f 83       	std	Y+7, r24	; 0x07
    1116:	98 87       	std	Y+8, r25	; 0x08
    1118:	f6 cf       	rjmp	.-20     	; 0x1106 <__stack+0x7>
    111a:	28 96       	adiw	r28, 0x08	; 8
    111c:	0f b6       	in	r0, 0x3f	; 63
    111e:	f8 94       	cli
    1120:	de bf       	out	0x3e, r29	; 62
    1122:	0f be       	out	0x3f, r0	; 63
    1124:	cd bf       	out	0x3d, r28	; 61
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	ff 90       	pop	r15
    112c:	ef 90       	pop	r14
    112e:	df 90       	pop	r13
    1130:	cf 90       	pop	r12
    1132:	08 95       	ret

00001134 <FUNCpincheck>:
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	02 c0       	rjmp	.+4      	; 0x113c <FUNCpincheck+0x8>
    1138:	95 95       	asr	r25
    113a:	87 95       	ror	r24
    113c:	6a 95       	dec	r22
    113e:	e2 f7       	brpl	.-8      	; 0x1138 <FUNCpincheck+0x4>
    1140:	81 70       	andi	r24, 0x01	; 1
    1142:	08 95       	ret

00001144 <FUNCprint_binary>:
    1144:	e6 ec       	ldi	r30, 0xC6	; 198
    1146:	f2 e0       	ldi	r31, 0x02	; 2
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	20 e8       	ldi	r18, 0x80	; 128
    114c:	50 e3       	ldi	r21, 0x30	; 48
    114e:	41 e3       	ldi	r20, 0x31	; 49
    1150:	38 2f       	mov	r19, r24
    1152:	32 23       	and	r19, r18
    1154:	11 f0       	breq	.+4      	; 0x115a <FUNCprint_binary+0x16>
    1156:	40 83       	st	Z, r20
    1158:	01 c0       	rjmp	.+2      	; 0x115c <FUNCprint_binary+0x18>
    115a:	50 83       	st	Z, r21
    115c:	26 95       	lsr	r18
    115e:	9f 5f       	subi	r25, 0xFF	; 255
    1160:	31 96       	adiw	r30, 0x01	; 1
    1162:	98 30       	cpi	r25, 0x08	; 8
    1164:	a9 f7       	brne	.-22     	; 0x1150 <FUNCprint_binary+0xc>
    1166:	10 92 ce 02 	sts	0x02CE, r1	; 0x8002ce <FUNCstr+0x8>
    116a:	86 ec       	ldi	r24, 0xC6	; 198
    116c:	92 e0       	ldi	r25, 0x02	; 2
    116e:	08 95       	ret

00001170 <FUNCmayia>:
    1170:	a4 2f       	mov	r26, r20
    1172:	b0 e0       	ldi	r27, 0x00	; 0
    1174:	10 97       	sbiw	r26, 0x00	; 0
    1176:	61 f0       	breq	.+24     	; 0x1190 <FUNCmayia+0x20>
    1178:	21 e0       	ldi	r18, 0x01	; 1
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	e1 e0       	ldi	r30, 0x01	; 1
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	ee 0f       	add	r30, r30
    1182:	ff 1f       	adc	r31, r31
    1184:	2f 5f       	subi	r18, 0xFF	; 255
    1186:	3f 4f       	sbci	r19, 0xFF	; 255
    1188:	a2 17       	cp	r26, r18
    118a:	b3 07       	cpc	r27, r19
    118c:	c8 f7       	brcc	.-14     	; 0x1180 <FUNCmayia+0x10>
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <FUNCmayia+0x24>
    1190:	e1 e0       	ldi	r30, 0x01	; 1
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	31 97       	sbiw	r30, 0x01	; 1
    1196:	6e 23       	and	r22, r30
    1198:	7f 23       	and	r23, r31
    119a:	8e 23       	and	r24, r30
    119c:	9f 23       	and	r25, r31
    119e:	86 27       	eor	r24, r22
    11a0:	97 27       	eor	r25, r23
    11a2:	68 23       	and	r22, r24
    11a4:	79 23       	and	r23, r25
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <FUNCmayia+0x3c>
    11a8:	66 0f       	add	r22, r22
    11aa:	77 1f       	adc	r23, r23
    11ac:	4a 95       	dec	r20
    11ae:	e2 f7       	brpl	.-8      	; 0x11a8 <FUNCmayia+0x38>
    11b0:	86 2b       	or	r24, r22
    11b2:	97 2b       	or	r25, r23
    11b4:	08 95       	ret

000011b6 <FUNCenable>:
    11b6:	fc 01       	movw	r30, r24
    11b8:	9f b7       	in	r25, 0x3f	; 63
    11ba:	8f b7       	in	r24, 0x3f	; 63
    11bc:	8f 77       	andi	r24, 0x7F	; 127
    11be:	8f bf       	out	0x3f, r24	; 63
    11c0:	9f bf       	out	0x3f, r25	; 63
    11c2:	8a ee       	ldi	r24, 0xEA	; 234
    11c4:	96 e0       	ldi	r25, 0x06	; 6
    11c6:	91 83       	std	Z+1, r25	; 0x01
    11c8:	80 83       	st	Z, r24
    11ca:	85 e0       	ldi	r24, 0x05	; 5
    11cc:	97 e0       	ldi	r25, 0x07	; 7
    11ce:	93 83       	std	Z+3, r25	; 0x03
    11d0:	82 83       	std	Z+2, r24	; 0x02
    11d2:	8f e2       	ldi	r24, 0x2F	; 47
    11d4:	97 e0       	ldi	r25, 0x07	; 7
    11d6:	95 83       	std	Z+5, r25	; 0x05
    11d8:	84 83       	std	Z+4, r24	; 0x04
    11da:	88 eb       	ldi	r24, 0xB8	; 184
    11dc:	98 e0       	ldi	r25, 0x08	; 8
    11de:	97 83       	std	Z+7, r25	; 0x07
    11e0:	86 83       	std	Z+6, r24	; 0x06
    11e2:	87 ed       	ldi	r24, 0xD7	; 215
    11e4:	94 e0       	ldi	r25, 0x04	; 4
    11e6:	91 87       	std	Z+9, r25	; 0x09
    11e8:	80 87       	std	Z+8, r24	; 0x08
    11ea:	85 ee       	ldi	r24, 0xE5	; 229
    11ec:	94 e0       	ldi	r25, 0x04	; 4
    11ee:	93 87       	std	Z+11, r25	; 0x0b
    11f0:	82 87       	std	Z+10, r24	; 0x0a
    11f2:	87 ee       	ldi	r24, 0xE7	; 231
    11f4:	94 e0       	ldi	r25, 0x04	; 4
    11f6:	95 87       	std	Z+13, r25	; 0x0d
    11f8:	84 87       	std	Z+12, r24	; 0x0c
    11fa:	8a ee       	ldi	r24, 0xEA	; 234
    11fc:	94 e0       	ldi	r25, 0x04	; 4
    11fe:	97 87       	std	Z+15, r25	; 0x0f
    1200:	86 87       	std	Z+14, r24	; 0x0e
    1202:	8d ee       	ldi	r24, 0xED	; 237
    1204:	94 e0       	ldi	r25, 0x04	; 4
    1206:	91 8b       	std	Z+17, r25	; 0x11
    1208:	80 8b       	std	Z+16, r24	; 0x10
    120a:	80 ef       	ldi	r24, 0xF0	; 240
    120c:	94 e0       	ldi	r25, 0x04	; 4
    120e:	93 8b       	std	Z+19, r25	; 0x13
    1210:	82 8b       	std	Z+18, r24	; 0x12
    1212:	81 ee       	ldi	r24, 0xE1	; 225
    1214:	94 e0       	ldi	r25, 0x04	; 4
    1216:	95 8b       	std	Z+21, r25	; 0x15
    1218:	84 8b       	std	Z+20, r24	; 0x14
    121a:	83 ee       	ldi	r24, 0xE3	; 227
    121c:	94 e0       	ldi	r25, 0x04	; 4
    121e:	97 8b       	std	Z+23, r25	; 0x17
    1220:	86 8b       	std	Z+22, r24	; 0x16
    1222:	82 ef       	ldi	r24, 0xF2	; 242
    1224:	94 e0       	ldi	r25, 0x04	; 4
    1226:	91 8f       	std	Z+25, r25	; 0x19
    1228:	80 8f       	std	Z+24, r24	; 0x18
    122a:	83 e1       	ldi	r24, 0x13	; 19
    122c:	95 e0       	ldi	r25, 0x05	; 5
    122e:	93 8f       	std	Z+27, r25	; 0x1b
    1230:	82 8f       	std	Z+26, r24	; 0x1a
    1232:	81 e2       	ldi	r24, 0x21	; 33
    1234:	95 e0       	ldi	r25, 0x05	; 5
    1236:	95 8f       	std	Z+29, r25	; 0x1d
    1238:	84 8f       	std	Z+28, r24	; 0x1c
    123a:	83 e4       	ldi	r24, 0x43	; 67
    123c:	95 e0       	ldi	r25, 0x05	; 5
    123e:	97 8f       	std	Z+31, r25	; 0x1f
    1240:	86 8f       	std	Z+30, r24	; 0x1e
    1242:	87 ea       	ldi	r24, 0xA7	; 167
    1244:	97 e0       	ldi	r25, 0x07	; 7
    1246:	91 a3       	std	Z+33, r25	; 0x21
    1248:	80 a3       	std	Z+32, r24	; 0x20
    124a:	80 ee       	ldi	r24, 0xE0	; 224
    124c:	97 e0       	ldi	r25, 0x07	; 7
    124e:	93 a3       	std	Z+35, r25	; 0x23
    1250:	82 a3       	std	Z+34, r24	; 0x22
    1252:	8c e4       	ldi	r24, 0x4C	; 76
    1254:	97 e0       	ldi	r25, 0x07	; 7
    1256:	95 a3       	std	Z+37, r25	; 0x25
    1258:	84 a3       	std	Z+36, r24	; 0x24
    125a:	84 e1       	ldi	r24, 0x14	; 20
    125c:	97 e0       	ldi	r25, 0x07	; 7
    125e:	97 a3       	std	Z+39, r25	; 0x27
    1260:	86 a3       	std	Z+38, r24	; 0x26
    1262:	89 ee       	ldi	r24, 0xE9	; 233
    1264:	95 e0       	ldi	r25, 0x05	; 5
    1266:	91 a7       	std	Z+41, r25	; 0x29
    1268:	80 a7       	std	Z+40, r24	; 0x28
    126a:	8e ee       	ldi	r24, 0xEE	; 238
    126c:	95 e0       	ldi	r25, 0x05	; 5
    126e:	93 a7       	std	Z+43, r25	; 0x2b
    1270:	82 a7       	std	Z+42, r24	; 0x2a
    1272:	8d ef       	ldi	r24, 0xFD	; 253
    1274:	95 e0       	ldi	r25, 0x05	; 5
    1276:	95 a7       	std	Z+45, r25	; 0x2d
    1278:	84 a7       	std	Z+44, r24	; 0x2c
    127a:	81 e2       	ldi	r24, 0x21	; 33
    127c:	96 e0       	ldi	r25, 0x06	; 6
    127e:	97 a7       	std	Z+47, r25	; 0x2f
    1280:	86 a7       	std	Z+46, r24	; 0x2e
    1282:	83 e2       	ldi	r24, 0x23	; 35
    1284:	96 e0       	ldi	r25, 0x06	; 6
    1286:	91 ab       	std	Z+49, r25	; 0x31
    1288:	80 ab       	std	Z+48, r24	; 0x30
    128a:	8d e2       	ldi	r24, 0x2D	; 45
    128c:	96 e0       	ldi	r25, 0x06	; 6
    128e:	93 ab       	std	Z+51, r25	; 0x33
    1290:	82 ab       	std	Z+50, r24	; 0x32
    1292:	8a e3       	ldi	r24, 0x3A	; 58
    1294:	96 e0       	ldi	r25, 0x06	; 6
    1296:	95 ab       	std	Z+53, r25	; 0x35
    1298:	84 ab       	std	Z+52, r24	; 0x34
    129a:	86 e4       	ldi	r24, 0x46	; 70
    129c:	96 e0       	ldi	r25, 0x06	; 6
    129e:	97 ab       	std	Z+55, r25	; 0x37
    12a0:	86 ab       	std	Z+54, r24	; 0x36
    12a2:	8e e5       	ldi	r24, 0x5E	; 94
    12a4:	96 e0       	ldi	r25, 0x06	; 6
    12a6:	91 af       	std	Z+57, r25	; 0x39
    12a8:	80 af       	std	Z+56, r24	; 0x38
    12aa:	81 e7       	ldi	r24, 0x71	; 113
    12ac:	96 e0       	ldi	r25, 0x06	; 6
    12ae:	93 af       	std	Z+59, r25	; 0x3b
    12b0:	82 af       	std	Z+58, r24	; 0x3a
    12b2:	8c e7       	ldi	r24, 0x7C	; 124
    12b4:	96 e0       	ldi	r25, 0x06	; 6
    12b6:	95 af       	std	Z+61, r25	; 0x3d
    12b8:	84 af       	std	Z+60, r24	; 0x3c
    12ba:	89 ea       	ldi	r24, 0xA9	; 169
    12bc:	96 e0       	ldi	r25, 0x06	; 6
    12be:	97 af       	std	Z+63, r25	; 0x3f
    12c0:	86 af       	std	Z+62, r24	; 0x3e
    12c2:	df 01       	movw	r26, r30
    12c4:	a0 5c       	subi	r26, 0xC0	; 192
    12c6:	bf 4f       	sbci	r27, 0xFF	; 255
    12c8:	8e e1       	ldi	r24, 0x1E	; 30
    12ca:	98 e0       	ldi	r25, 0x08	; 8
    12cc:	11 96       	adiw	r26, 0x01	; 1
    12ce:	9c 93       	st	X, r25
    12d0:	8e 93       	st	-X, r24
    12d2:	12 96       	adiw	r26, 0x02	; 2
    12d4:	89 e2       	ldi	r24, 0x29	; 41
    12d6:	98 e0       	ldi	r25, 0x08	; 8
    12d8:	11 96       	adiw	r26, 0x01	; 1
    12da:	9c 93       	st	X, r25
    12dc:	8e 93       	st	-X, r24
    12de:	12 96       	adiw	r26, 0x02	; 2
    12e0:	8a e4       	ldi	r24, 0x4A	; 74
    12e2:	98 e0       	ldi	r25, 0x08	; 8
    12e4:	11 96       	adiw	r26, 0x01	; 1
    12e6:	9c 93       	st	X, r25
    12e8:	8e 93       	st	-X, r24
    12ea:	12 96       	adiw	r26, 0x02	; 2
    12ec:	8a e9       	ldi	r24, 0x9A	; 154
    12ee:	98 e0       	ldi	r25, 0x08	; 8
    12f0:	11 96       	adiw	r26, 0x01	; 1
    12f2:	9c 93       	st	X, r25
    12f4:	8e 93       	st	-X, r24
    12f6:	12 96       	adiw	r26, 0x02	; 2
    12f8:	82 ea       	ldi	r24, 0xA2	; 162
    12fa:	98 e0       	ldi	r25, 0x08	; 8
    12fc:	11 96       	adiw	r26, 0x01	; 1
    12fe:	9c 93       	st	X, r25
    1300:	8e 93       	st	-X, r24
    1302:	12 96       	adiw	r26, 0x02	; 2
    1304:	89 e0       	ldi	r24, 0x09	; 9
    1306:	9a e0       	ldi	r25, 0x0A	; 10
    1308:	8d 93       	st	X+, r24
    130a:	9c 93       	st	X, r25
    130c:	cf 01       	movw	r24, r30
    130e:	08 95       	ret

00001310 <FUNCreverse>:
/************/
void FUNCreverse(char* str, int len)
{
	int i = 0, j = len - 1, temp;
    1310:	9b 01       	movw	r18, r22
    1312:	21 50       	subi	r18, 0x01	; 1
    1314:	31 09       	sbc	r19, r1
	while (i < j) {
    1316:	12 16       	cp	r1, r18
    1318:	13 06       	cpc	r1, r19
    131a:	84 f4       	brge	.+32     	; 0x133c <FUNCreverse+0x2c>
    131c:	fc 01       	movw	r30, r24
    131e:	e6 0f       	add	r30, r22
    1320:	f7 1f       	adc	r31, r23
    1322:	dc 01       	movw	r26, r24
    1324:	80 e0       	ldi	r24, 0x00	; 0
    1326:	90 e0       	ldi	r25, 0x00	; 0
		temp = str[i];
    1328:	4c 91       	ld	r20, X
		str[i] = str[j];
    132a:	52 91       	ld	r21, -Z
    132c:	5d 93       	st	X+, r21
		str[j] = temp;
    132e:	40 83       	st	Z, r20
		i++;
    1330:	01 96       	adiw	r24, 0x01	; 1
		j--;
    1332:	21 50       	subi	r18, 0x01	; 1
    1334:	31 09       	sbc	r19, r1
}
/************/
void FUNCreverse(char* str, int len)
{
	int i = 0, j = len - 1, temp;
	while (i < j) {
    1336:	82 17       	cp	r24, r18
    1338:	93 07       	cpc	r25, r19
    133a:	b4 f3       	brlt	.-20     	; 0x1328 <FUNCreverse+0x18>
    133c:	08 95       	ret

0000133e <FUNCintToStr>:
		i++;
		j--;
	}
}
int FUNCintToStr(int32_t n, char str[], uint8_t n_digit)
{
    133e:	4f 92       	push	r4
    1340:	5f 92       	push	r5
    1342:	6f 92       	push	r6
    1344:	7f 92       	push	r7
    1346:	9f 92       	push	r9
    1348:	af 92       	push	r10
    134a:	bf 92       	push	r11
    134c:	cf 92       	push	r12
    134e:	df 92       	push	r13
    1350:	ef 92       	push	r14
    1352:	ff 92       	push	r15
    1354:	0f 93       	push	r16
    1356:	1f 93       	push	r17
    1358:	cf 93       	push	r28
    135a:	df 93       	push	r29
    135c:	5a 01       	movw	r10, r20
	int k = 0;
	int8_t sign=0;
	if (n < 0){
    135e:	99 23       	and	r25, r25
    1360:	54 f4       	brge	.+20     	; 0x1376 <FUNCintToStr+0x38>
		n = -n;
    1362:	90 95       	com	r25
    1364:	80 95       	com	r24
    1366:	70 95       	com	r23
    1368:	61 95       	neg	r22
    136a:	7f 4f       	sbci	r23, 0xFF	; 255
    136c:	8f 4f       	sbci	r24, 0xFF	; 255
    136e:	9f 4f       	sbci	r25, 0xFF	; 255
		sign=-ONE;
    1370:	99 24       	eor	r9, r9
    1372:	9a 94       	dec	r9
    1374:	01 c0       	rjmp	.+2      	; 0x1378 <FUNCintToStr+0x3a>
	}
}
int FUNCintToStr(int32_t n, char str[], uint8_t n_digit)
{
	int k = 0;
	int8_t sign=0;
    1376:	91 2c       	mov	r9, r1
    1378:	75 01       	movw	r14, r10
    137a:	00 e0       	ldi	r16, 0x00	; 0
    137c:	10 e0       	ldi	r17, 0x00	; 0
	if (n < 0){
		n = -n;
		sign=-ONE;
	}
    do{ 
        str[k++] = (n % 10) + '0'; 
    137e:	0f 2e       	mov	r0, r31
    1380:	fa e0       	ldi	r31, 0x0A	; 10
    1382:	4f 2e       	mov	r4, r31
    1384:	51 2c       	mov	r5, r1
    1386:	61 2c       	mov	r6, r1
    1388:	71 2c       	mov	r7, r1
    138a:	f0 2d       	mov	r31, r0
    }while((n/=10)>0 || k < n_digit);
    138c:	c2 2e       	mov	r12, r18
    138e:	d1 2c       	mov	r13, r1
    1390:	03 c0       	rjmp	.+6      	; 0x1398 <FUNCintToStr+0x5a>
    1392:	8e 01       	movw	r16, r28
    1394:	01 c0       	rjmp	.+2      	; 0x1398 <FUNCintToStr+0x5a>
    1396:	8e 01       	movw	r16, r28
	if (n < 0){
		n = -n;
		sign=-ONE;
	}
    do{ 
        str[k++] = (n % 10) + '0'; 
    1398:	e8 01       	movw	r28, r16
    139a:	21 96       	adiw	r28, 0x01	; 1
    139c:	a3 01       	movw	r20, r6
    139e:	92 01       	movw	r18, r4
    13a0:	0e 94 b7 13 	call	0x276e	; 0x276e <__divmodsi4>
    13a4:	60 5d       	subi	r22, 0xD0	; 208
    13a6:	f7 01       	movw	r30, r14
    13a8:	61 93       	st	Z+, r22
    13aa:	7f 01       	movw	r14, r30
    }while((n/=10)>0 || k < n_digit);
    13ac:	62 2f       	mov	r22, r18
    13ae:	73 2f       	mov	r23, r19
    13b0:	84 2f       	mov	r24, r20
    13b2:	95 2f       	mov	r25, r21
    13b4:	16 16       	cp	r1, r22
    13b6:	17 06       	cpc	r1, r23
    13b8:	18 06       	cpc	r1, r24
    13ba:	19 06       	cpc	r1, r25
    13bc:	54 f3       	brlt	.-44     	; 0x1392 <FUNCintToStr+0x54>
    13be:	cc 15       	cp	r28, r12
    13c0:	dd 05       	cpc	r29, r13
    13c2:	4c f3       	brlt	.-46     	; 0x1396 <FUNCintToStr+0x58>
		
	if (sign < 0)
    13c4:	99 20       	and	r9, r9
    13c6:	3c f4       	brge	.+14     	; 0x13d6 <FUNCintToStr+0x98>
		str[k++] = '-';
    13c8:	0e 5f       	subi	r16, 0xFE	; 254
    13ca:	1f 4f       	sbci	r17, 0xFF	; 255
    13cc:	ca 0d       	add	r28, r10
    13ce:	db 1d       	adc	r29, r11
    13d0:	8d e2       	ldi	r24, 0x2D	; 45
    13d2:	88 83       	st	Y, r24
    13d4:	06 c0       	rjmp	.+12     	; 0x13e2 <FUNCintToStr+0xa4>
	else
		str[k++] = ' ';
    13d6:	0e 5f       	subi	r16, 0xFE	; 254
    13d8:	1f 4f       	sbci	r17, 0xFF	; 255
    13da:	ca 0d       	add	r28, r10
    13dc:	db 1d       	adc	r29, r11
    13de:	80 e2       	ldi	r24, 0x20	; 32
    13e0:	88 83       	st	Y, r24
    FUNCreverse(str, k); 
    13e2:	b8 01       	movw	r22, r16
    13e4:	c5 01       	movw	r24, r10
    13e6:	94 df       	rcall	.-216    	; 0x1310 <FUNCreverse>
    str[k] = '\0';
    13e8:	f5 01       	movw	r30, r10
    13ea:	e0 0f       	add	r30, r16
    13ec:	f1 1f       	adc	r31, r17
    13ee:	10 82       	st	Z, r1
    return k;
}
    13f0:	c8 01       	movw	r24, r16
    13f2:	df 91       	pop	r29
    13f4:	cf 91       	pop	r28
    13f6:	1f 91       	pop	r17
    13f8:	0f 91       	pop	r16
    13fa:	ff 90       	pop	r15
    13fc:	ef 90       	pop	r14
    13fe:	df 90       	pop	r13
    1400:	cf 90       	pop	r12
    1402:	bf 90       	pop	r11
    1404:	af 90       	pop	r10
    1406:	9f 90       	pop	r9
    1408:	7f 90       	pop	r7
    140a:	6f 90       	pop	r6
    140c:	5f 90       	pop	r5
    140e:	4f 90       	pop	r4
    1410:	08 95       	ret

00001412 <FUNCftoa>:
char* FUNCftoa(float n, char* res, uint8_t afterpoint)
{
    1412:	3f 92       	push	r3
    1414:	4f 92       	push	r4
    1416:	5f 92       	push	r5
    1418:	6f 92       	push	r6
    141a:	7f 92       	push	r7
    141c:	8f 92       	push	r8
    141e:	9f 92       	push	r9
    1420:	af 92       	push	r10
    1422:	bf 92       	push	r11
    1424:	cf 92       	push	r12
    1426:	df 92       	push	r13
    1428:	ef 92       	push	r14
    142a:	ff 92       	push	r15
    142c:	0f 93       	push	r16
    142e:	1f 93       	push	r17
    1430:	cf 93       	push	r28
    1432:	df 93       	push	r29
    1434:	6b 01       	movw	r12, r22
    1436:	7c 01       	movw	r14, r24
    1438:	ea 01       	movw	r28, r20
    143a:	32 2e       	mov	r3, r18
	int l;
	int32_t ipart = (int32_t)n;
    143c:	91 d6       	rcall	.+3362   	; 0x2160 <__fixsfsi>
    143e:	4b 01       	movw	r8, r22
    1440:	5c 01       	movw	r10, r24
	float fpart;
	
	fpart = n - (float)ipart;
	
	// string part decimal
	l =	FUNCintToStr(ipart, res, 0);
    1442:	20 e0       	ldi	r18, 0x00	; 0
    1444:	ae 01       	movw	r20, r28
    1446:	7b df       	rcall	.-266    	; 0x133e <FUNCintToStr>
    1448:	8c 01       	movw	r16, r24
	
	// part fraccional
	if (afterpoint != 0) {
    144a:	33 20       	and	r3, r3
    144c:	89 f1       	breq	.+98     	; 0x14b0 <FUNCftoa+0x9e>
		res[l] = '.';
    144e:	fe 01       	movw	r30, r28
    1450:	e8 0f       	add	r30, r24
    1452:	f9 1f       	adc	r31, r25
    1454:	8e e2       	ldi	r24, 0x2E	; 46
    1456:	80 83       	st	Z, r24
		
		ipart = fpart * pow(10, afterpoint);
    1458:	63 2d       	mov	r22, r3
    145a:	70 e0       	ldi	r23, 0x00	; 0
    145c:	80 e0       	ldi	r24, 0x00	; 0
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	b0 d6       	rcall	.+3424   	; 0x21c2 <__floatunsisf>
    1462:	9b 01       	movw	r18, r22
    1464:	ac 01       	movw	r20, r24
    1466:	60 e0       	ldi	r22, 0x00	; 0
    1468:	70 e0       	ldi	r23, 0x00	; 0
    146a:	80 e2       	ldi	r24, 0x20	; 32
    146c:	91 e4       	ldi	r25, 0x41	; 65
    146e:	c2 d7       	rcall	.+3972   	; 0x23f4 <pow>
    1470:	2b 01       	movw	r4, r22
    1472:	3c 01       	movw	r6, r24
    1474:	c5 01       	movw	r24, r10
    1476:	b4 01       	movw	r22, r8
    1478:	a6 d6       	rcall	.+3404   	; 0x21c6 <__floatsisf>
    147a:	9b 01       	movw	r18, r22
    147c:	ac 01       	movw	r20, r24
    147e:	c7 01       	movw	r24, r14
    1480:	b6 01       	movw	r22, r12
    1482:	9d d5       	rcall	.+2874   	; 0x1fbe <__subsf3>
    1484:	a3 01       	movw	r20, r6
    1486:	92 01       	movw	r18, r4
    1488:	52 d7       	rcall	.+3748   	; 0x232e <__mulsf3>
    148a:	6a d6       	rcall	.+3284   	; 0x2160 <__fixsfsi>
    148c:	6b 01       	movw	r12, r22
    148e:	7c 01       	movw	r14, r24
		if(ipart < 0)
			ipart = -ipart;
		
		FUNCintToStr(ipart, res + l + 1, afterpoint);
    1490:	a8 01       	movw	r20, r16
    1492:	4f 5f       	subi	r20, 0xFF	; 255
    1494:	5f 4f       	sbci	r21, 0xFF	; 255
    1496:	4c 0f       	add	r20, r28
    1498:	5d 1f       	adc	r21, r29
    149a:	99 23       	and	r25, r25
    149c:	3c f4       	brge	.+14     	; 0x14ac <FUNCftoa+0x9a>
    149e:	66 27       	eor	r22, r22
    14a0:	77 27       	eor	r23, r23
    14a2:	cb 01       	movw	r24, r22
    14a4:	6c 19       	sub	r22, r12
    14a6:	7d 09       	sbc	r23, r13
    14a8:	8e 09       	sbc	r24, r14
    14aa:	9f 09       	sbc	r25, r15
    14ac:	23 2d       	mov	r18, r3
    14ae:	47 df       	rcall	.-370    	; 0x133e <FUNCintToStr>
	}
	return res;
}
    14b0:	ce 01       	movw	r24, r28
    14b2:	df 91       	pop	r29
    14b4:	cf 91       	pop	r28
    14b6:	1f 91       	pop	r17
    14b8:	0f 91       	pop	r16
    14ba:	ff 90       	pop	r15
    14bc:	ef 90       	pop	r14
    14be:	df 90       	pop	r13
    14c0:	cf 90       	pop	r12
    14c2:	bf 90       	pop	r11
    14c4:	af 90       	pop	r10
    14c6:	9f 90       	pop	r9
    14c8:	8f 90       	pop	r8
    14ca:	7f 90       	pop	r7
    14cc:	6f 90       	pop	r6
    14ce:	5f 90       	pop	r5
    14d0:	4f 90       	pop	r4
    14d2:	3f 90       	pop	r3
    14d4:	08 95       	ret

000014d6 <LCD0_write>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    14d6:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    14da:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    14de:	90 81       	ld	r25, Z
    14e0:	9d 7f       	andi	r25, 0xFD	; 253
    14e2:	90 83       	st	Z, r25
    14e4:	67 2b       	or	r22, r23
    14e6:	41 f0       	breq	.+16     	; 0x14f8 <LCD0_write+0x22>
    14e8:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    14ec:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    14f0:	90 81       	ld	r25, Z
    14f2:	91 60       	ori	r25, 0x01	; 1
    14f4:	90 83       	st	Z, r25
    14f6:	07 c0       	rjmp	.+14     	; 0x1506 <LCD0_write+0x30>
    14f8:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    14fc:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1500:	90 81       	ld	r25, Z
    1502:	9e 7f       	andi	r25, 0xFE	; 254
    1504:	90 83       	st	Z, r25
    1506:	e0 91 e2 02 	lds	r30, 0x02E2	; 0x8002e2 <lcd0_DDR>
    150a:	f0 91 e3 02 	lds	r31, 0x02E3	; 0x8002e3 <lcd0_DDR+0x1>
    150e:	90 81       	ld	r25, Z
    1510:	90 6f       	ori	r25, 0xF0	; 240
    1512:	90 83       	st	Z, r25
    1514:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1518:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    151c:	90 81       	ld	r25, Z
    151e:	94 60       	ori	r25, 0x04	; 4
    1520:	90 83       	st	Z, r25
    1522:	88 23       	and	r24, r24
    1524:	44 f4       	brge	.+16     	; 0x1536 <LCD0_write+0x60>
    1526:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    152a:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    152e:	90 81       	ld	r25, Z
    1530:	90 68       	ori	r25, 0x80	; 128
    1532:	90 83       	st	Z, r25
    1534:	07 c0       	rjmp	.+14     	; 0x1544 <LCD0_write+0x6e>
    1536:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    153a:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    153e:	90 81       	ld	r25, Z
    1540:	9f 77       	andi	r25, 0x7F	; 127
    1542:	90 83       	st	Z, r25
    1544:	86 ff       	sbrs	r24, 6
    1546:	08 c0       	rjmp	.+16     	; 0x1558 <LCD0_write+0x82>
    1548:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    154c:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1550:	90 81       	ld	r25, Z
    1552:	90 64       	ori	r25, 0x40	; 64
    1554:	90 83       	st	Z, r25
    1556:	07 c0       	rjmp	.+14     	; 0x1566 <LCD0_write+0x90>
    1558:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    155c:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1560:	90 81       	ld	r25, Z
    1562:	9f 7b       	andi	r25, 0xBF	; 191
    1564:	90 83       	st	Z, r25
    1566:	85 ff       	sbrs	r24, 5
    1568:	08 c0       	rjmp	.+16     	; 0x157a <LCD0_write+0xa4>
    156a:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    156e:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1572:	90 81       	ld	r25, Z
    1574:	90 62       	ori	r25, 0x20	; 32
    1576:	90 83       	st	Z, r25
    1578:	07 c0       	rjmp	.+14     	; 0x1588 <LCD0_write+0xb2>
    157a:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    157e:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1582:	90 81       	ld	r25, Z
    1584:	9f 7d       	andi	r25, 0xDF	; 223
    1586:	90 83       	st	Z, r25
    1588:	84 ff       	sbrs	r24, 4
    158a:	08 c0       	rjmp	.+16     	; 0x159c <LCD0_write+0xc6>
    158c:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1590:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1594:	90 81       	ld	r25, Z
    1596:	90 61       	ori	r25, 0x10	; 16
    1598:	90 83       	st	Z, r25
    159a:	07 c0       	rjmp	.+14     	; 0x15aa <LCD0_write+0xd4>
    159c:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    15a0:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    15a4:	90 81       	ld	r25, Z
    15a6:	9f 7e       	andi	r25, 0xEF	; 239
    15a8:	90 83       	st	Z, r25
    15aa:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    15ae:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    15b2:	90 81       	ld	r25, Z
    15b4:	9b 7f       	andi	r25, 0xFB	; 251
    15b6:	90 83       	st	Z, r25
    15b8:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    15bc:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    15c0:	90 81       	ld	r25, Z
    15c2:	94 60       	ori	r25, 0x04	; 4
    15c4:	90 83       	st	Z, r25
    15c6:	83 ff       	sbrs	r24, 3
    15c8:	08 c0       	rjmp	.+16     	; 0x15da <LCD0_write+0x104>
    15ca:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    15ce:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    15d2:	90 81       	ld	r25, Z
    15d4:	90 68       	ori	r25, 0x80	; 128
    15d6:	90 83       	st	Z, r25
    15d8:	07 c0       	rjmp	.+14     	; 0x15e8 <LCD0_write+0x112>
    15da:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    15de:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    15e2:	90 81       	ld	r25, Z
    15e4:	9f 77       	andi	r25, 0x7F	; 127
    15e6:	90 83       	st	Z, r25
    15e8:	82 ff       	sbrs	r24, 2
    15ea:	08 c0       	rjmp	.+16     	; 0x15fc <LCD0_write+0x126>
    15ec:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    15f0:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    15f4:	90 81       	ld	r25, Z
    15f6:	90 64       	ori	r25, 0x40	; 64
    15f8:	90 83       	st	Z, r25
    15fa:	07 c0       	rjmp	.+14     	; 0x160a <LCD0_write+0x134>
    15fc:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1600:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1604:	90 81       	ld	r25, Z
    1606:	9f 7b       	andi	r25, 0xBF	; 191
    1608:	90 83       	st	Z, r25
    160a:	81 ff       	sbrs	r24, 1
    160c:	08 c0       	rjmp	.+16     	; 0x161e <LCD0_write+0x148>
    160e:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1612:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1616:	90 81       	ld	r25, Z
    1618:	90 62       	ori	r25, 0x20	; 32
    161a:	90 83       	st	Z, r25
    161c:	07 c0       	rjmp	.+14     	; 0x162c <LCD0_write+0x156>
    161e:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1622:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1626:	90 81       	ld	r25, Z
    1628:	9f 7d       	andi	r25, 0xDF	; 223
    162a:	90 83       	st	Z, r25
    162c:	80 ff       	sbrs	r24, 0
    162e:	08 c0       	rjmp	.+16     	; 0x1640 <LCD0_write+0x16a>
    1630:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1634:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1638:	80 81       	ld	r24, Z
    163a:	80 61       	ori	r24, 0x10	; 16
    163c:	80 83       	st	Z, r24
    163e:	07 c0       	rjmp	.+14     	; 0x164e <LCD0_write+0x178>
    1640:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1644:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1648:	80 81       	ld	r24, Z
    164a:	8f 7e       	andi	r24, 0xEF	; 239
    164c:	80 83       	st	Z, r24
    164e:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1652:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1656:	80 81       	ld	r24, Z
    1658:	8b 7f       	andi	r24, 0xFB	; 251
    165a:	80 83       	st	Z, r24
    165c:	08 95       	ret

0000165e <LCD0_read>:
    165e:	e0 91 e2 02 	lds	r30, 0x02E2	; 0x8002e2 <lcd0_DDR>
    1662:	f0 91 e3 02 	lds	r31, 0x02E3	; 0x8002e3 <lcd0_DDR+0x1>
    1666:	20 81       	ld	r18, Z
    1668:	2f 70       	andi	r18, 0x0F	; 15
    166a:	20 83       	st	Z, r18
    166c:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1670:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1674:	20 81       	ld	r18, Z
    1676:	20 6f       	ori	r18, 0xF0	; 240
    1678:	20 83       	st	Z, r18
    167a:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    167e:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1682:	20 81       	ld	r18, Z
    1684:	22 60       	ori	r18, 0x02	; 2
    1686:	20 83       	st	Z, r18
    1688:	89 2b       	or	r24, r25
    168a:	41 f0       	breq	.+16     	; 0x169c <LCD0_read+0x3e>
    168c:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1690:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1694:	80 81       	ld	r24, Z
    1696:	81 60       	ori	r24, 0x01	; 1
    1698:	80 83       	st	Z, r24
    169a:	07 c0       	rjmp	.+14     	; 0x16aa <LCD0_read+0x4c>
    169c:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    16a0:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    16a4:	80 81       	ld	r24, Z
    16a6:	8e 7f       	andi	r24, 0xFE	; 254
    16a8:	80 83       	st	Z, r24
    16aa:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    16ae:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    16b2:	80 81       	ld	r24, Z
    16b4:	84 60       	ori	r24, 0x04	; 4
    16b6:	80 83       	st	Z, r24
    16b8:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PIN>
    16bc:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PIN+0x1>
    16c0:	80 81       	ld	r24, Z
    16c2:	88 23       	and	r24, r24
    16c4:	14 f0       	brlt	.+4      	; 0x16ca <LCD0_read+0x6c>
    16c6:	80 e0       	ldi	r24, 0x00	; 0
    16c8:	01 c0       	rjmp	.+2      	; 0x16cc <LCD0_read+0x6e>
    16ca:	80 e8       	ldi	r24, 0x80	; 128
    16cc:	90 81       	ld	r25, Z
    16ce:	96 ff       	sbrs	r25, 6
    16d0:	02 c0       	rjmp	.+4      	; 0x16d6 <LCD0_read+0x78>
    16d2:	80 64       	ori	r24, 0x40	; 64
    16d4:	01 c0       	rjmp	.+2      	; 0x16d8 <LCD0_read+0x7a>
    16d6:	8f 7b       	andi	r24, 0xBF	; 191
    16d8:	90 81       	ld	r25, Z
    16da:	95 ff       	sbrs	r25, 5
    16dc:	02 c0       	rjmp	.+4      	; 0x16e2 <LCD0_read+0x84>
    16de:	80 62       	ori	r24, 0x20	; 32
    16e0:	01 c0       	rjmp	.+2      	; 0x16e4 <LCD0_read+0x86>
    16e2:	8f 7d       	andi	r24, 0xDF	; 223
    16e4:	90 81       	ld	r25, Z
    16e6:	94 ff       	sbrs	r25, 4
    16e8:	02 c0       	rjmp	.+4      	; 0x16ee <LCD0_read+0x90>
    16ea:	80 61       	ori	r24, 0x10	; 16
    16ec:	01 c0       	rjmp	.+2      	; 0x16f0 <LCD0_read+0x92>
    16ee:	8f 7e       	andi	r24, 0xEF	; 239
    16f0:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    16f4:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    16f8:	90 81       	ld	r25, Z
    16fa:	9b 7f       	andi	r25, 0xFB	; 251
    16fc:	90 83       	st	Z, r25
    16fe:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1702:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1706:	90 81       	ld	r25, Z
    1708:	94 60       	ori	r25, 0x04	; 4
    170a:	90 83       	st	Z, r25
    170c:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PIN>
    1710:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PIN+0x1>
    1714:	90 81       	ld	r25, Z
    1716:	99 23       	and	r25, r25
    1718:	14 f4       	brge	.+4      	; 0x171e <LCD0_read+0xc0>
    171a:	88 60       	ori	r24, 0x08	; 8
    171c:	01 c0       	rjmp	.+2      	; 0x1720 <LCD0_read+0xc2>
    171e:	87 7f       	andi	r24, 0xF7	; 247
    1720:	90 81       	ld	r25, Z
    1722:	96 ff       	sbrs	r25, 6
    1724:	02 c0       	rjmp	.+4      	; 0x172a <LCD0_read+0xcc>
    1726:	84 60       	ori	r24, 0x04	; 4
    1728:	01 c0       	rjmp	.+2      	; 0x172c <LCD0_read+0xce>
    172a:	8b 7f       	andi	r24, 0xFB	; 251
    172c:	90 81       	ld	r25, Z
    172e:	95 ff       	sbrs	r25, 5
    1730:	02 c0       	rjmp	.+4      	; 0x1736 <LCD0_read+0xd8>
    1732:	82 60       	ori	r24, 0x02	; 2
    1734:	01 c0       	rjmp	.+2      	; 0x1738 <LCD0_read+0xda>
    1736:	8d 7f       	andi	r24, 0xFD	; 253
    1738:	90 81       	ld	r25, Z
    173a:	94 ff       	sbrs	r25, 4
    173c:	02 c0       	rjmp	.+4      	; 0x1742 <LCD0_read+0xe4>
    173e:	81 60       	ori	r24, 0x01	; 1
    1740:	01 c0       	rjmp	.+2      	; 0x1744 <LCD0_read+0xe6>
    1742:	8e 7f       	andi	r24, 0xFE	; 254
    1744:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    1748:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    174c:	90 81       	ld	r25, Z
    174e:	9b 7f       	andi	r25, 0xFB	; 251
    1750:	90 83       	st	Z, r25
    1752:	08 95       	ret

00001754 <LCD0_BF>:
    1754:	cf 93       	push	r28
    1756:	df 93       	push	r29
    1758:	80 e0       	ldi	r24, 0x00	; 0
    175a:	90 e0       	ldi	r25, 0x00	; 0
    175c:	80 df       	rcall	.-256    	; 0x165e <LCD0_read>
    175e:	cb e0       	ldi	r28, 0x0B	; 11
    1760:	d0 e0       	ldi	r29, 0x00	; 0
    1762:	05 c0       	rjmp	.+10     	; 0x176e <LCD0_BF+0x1a>
    1764:	80 e0       	ldi	r24, 0x00	; 0
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	7a df       	rcall	.-268    	; 0x165e <LCD0_read>
    176a:	21 97       	sbiw	r28, 0x01	; 1
    176c:	11 f0       	breq	.+4      	; 0x1772 <LCD0_BF+0x1e>
    176e:	88 23       	and	r24, r24
    1770:	cc f3       	brlt	.-14     	; 0x1764 <LCD0_BF+0x10>
    1772:	df 91       	pop	r29
    1774:	cf 91       	pop	r28
    1776:	08 95       	ret

00001778 <LCD0_putch>:
    1778:	61 e0       	ldi	r22, 0x01	; 1
    177a:	70 e0       	ldi	r23, 0x00	; 0
    177c:	ac de       	rcall	.-680    	; 0x14d6 <LCD0_write>
    177e:	ea cf       	rjmp	.-44     	; 0x1754 <LCD0_BF>
    1780:	08 95       	ret

00001782 <LCD0_getch>:
    1782:	cf 93       	push	r28
    1784:	81 e0       	ldi	r24, 0x01	; 1
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	6a df       	rcall	.-300    	; 0x165e <LCD0_read>
    178a:	c8 2f       	mov	r28, r24
    178c:	e3 df       	rcall	.-58     	; 0x1754 <LCD0_BF>
    178e:	8c 2f       	mov	r24, r28
    1790:	cf 91       	pop	r28
    1792:	08 95       	ret

00001794 <LCD0_string>:
    1794:	cf 93       	push	r28
    1796:	df 93       	push	r29
    1798:	ec 01       	movw	r28, r24
    179a:	88 81       	ld	r24, Y
    179c:	88 23       	and	r24, r24
    179e:	41 f0       	breq	.+16     	; 0x17b0 <LCD0_string+0x1c>
    17a0:	21 96       	adiw	r28, 0x01	; 1
    17a2:	61 e0       	ldi	r22, 0x01	; 1
    17a4:	70 e0       	ldi	r23, 0x00	; 0
    17a6:	97 de       	rcall	.-722    	; 0x14d6 <LCD0_write>
    17a8:	d5 df       	rcall	.-86     	; 0x1754 <LCD0_BF>
    17aa:	89 91       	ld	r24, Y+
    17ac:	81 11       	cpse	r24, r1
    17ae:	f9 cf       	rjmp	.-14     	; 0x17a2 <LCD0_string+0xe>
    17b0:	df 91       	pop	r29
    17b2:	cf 91       	pop	r28
    17b4:	08 95       	ret

000017b6 <LCD0_string_size>:
    17b6:	0f 93       	push	r16
    17b8:	1f 93       	push	r17
    17ba:	cf 93       	push	r28
    17bc:	df 93       	push	r29
    17be:	fc 01       	movw	r30, r24
    17c0:	d6 2f       	mov	r29, r22
    17c2:	80 81       	ld	r24, Z
    17c4:	88 23       	and	r24, r24
    17c6:	51 f0       	breq	.+20     	; 0x17dc <LCD0_string_size+0x26>
    17c8:	8f 01       	movw	r16, r30
    17ca:	0f 5f       	subi	r16, 0xFF	; 255
    17cc:	1f 4f       	sbci	r17, 0xFF	; 255
    17ce:	61 11       	cpse	r22, r1
    17d0:	09 c0       	rjmp	.+18     	; 0x17e4 <LCD0_string_size+0x2e>
    17d2:	1b c0       	rjmp	.+54     	; 0x180a <LCD0_string_size+0x54>
    17d4:	cf 5f       	subi	r28, 0xFF	; 255
    17d6:	dc 17       	cp	r29, r28
    17d8:	30 f4       	brcc	.+12     	; 0x17e6 <LCD0_string_size+0x30>
    17da:	01 c0       	rjmp	.+2      	; 0x17de <LCD0_string_size+0x28>
    17dc:	c0 e0       	ldi	r28, 0x00	; 0
    17de:	cd 17       	cp	r28, r29
    17e0:	60 f0       	brcs	.+24     	; 0x17fa <LCD0_string_size+0x44>
    17e2:	13 c0       	rjmp	.+38     	; 0x180a <LCD0_string_size+0x54>
    17e4:	c1 e0       	ldi	r28, 0x01	; 1
    17e6:	61 e0       	ldi	r22, 0x01	; 1
    17e8:	70 e0       	ldi	r23, 0x00	; 0
    17ea:	75 de       	rcall	.-790    	; 0x14d6 <LCD0_write>
    17ec:	b3 df       	rcall	.-154    	; 0x1754 <LCD0_BF>
    17ee:	f8 01       	movw	r30, r16
    17f0:	81 91       	ld	r24, Z+
    17f2:	8f 01       	movw	r16, r30
    17f4:	81 11       	cpse	r24, r1
    17f6:	ee cf       	rjmp	.-36     	; 0x17d4 <LCD0_string_size+0x1e>
    17f8:	f2 cf       	rjmp	.-28     	; 0x17de <LCD0_string_size+0x28>
    17fa:	cf 5f       	subi	r28, 0xFF	; 255
    17fc:	61 e0       	ldi	r22, 0x01	; 1
    17fe:	70 e0       	ldi	r23, 0x00	; 0
    1800:	80 e2       	ldi	r24, 0x20	; 32
    1802:	69 de       	rcall	.-814    	; 0x14d6 <LCD0_write>
    1804:	a7 df       	rcall	.-178    	; 0x1754 <LCD0_BF>
    1806:	cd 17       	cp	r28, r29
    1808:	c0 f3       	brcs	.-16     	; 0x17fa <LCD0_string_size+0x44>
    180a:	df 91       	pop	r29
    180c:	cf 91       	pop	r28
    180e:	1f 91       	pop	r17
    1810:	0f 91       	pop	r16
    1812:	08 95       	ret

00001814 <LCD0_hspace>:
    1814:	cf 93       	push	r28
    1816:	c8 2f       	mov	r28, r24
    1818:	88 23       	and	r24, r24
    181a:	39 f0       	breq	.+14     	; 0x182a <LCD0_hspace+0x16>
    181c:	61 e0       	ldi	r22, 0x01	; 1
    181e:	70 e0       	ldi	r23, 0x00	; 0
    1820:	80 e2       	ldi	r24, 0x20	; 32
    1822:	59 de       	rcall	.-846    	; 0x14d6 <LCD0_write>
    1824:	97 df       	rcall	.-210    	; 0x1754 <LCD0_BF>
    1826:	c1 50       	subi	r28, 0x01	; 1
    1828:	c9 f7       	brne	.-14     	; 0x181c <LCD0_hspace+0x8>
    182a:	cf 91       	pop	r28
    182c:	08 95       	ret

0000182e <LCD0_gotoxy>:
    182e:	26 2f       	mov	r18, r22
    1830:	81 30       	cpi	r24, 0x01	; 1
    1832:	91 05       	cpc	r25, r1
    1834:	71 f0       	breq	.+28     	; 0x1852 <LCD0_gotoxy+0x24>
    1836:	30 f0       	brcs	.+12     	; 0x1844 <LCD0_gotoxy+0x16>
    1838:	82 30       	cpi	r24, 0x02	; 2
    183a:	91 05       	cpc	r25, r1
    183c:	89 f0       	breq	.+34     	; 0x1860 <LCD0_gotoxy+0x32>
    183e:	03 97       	sbiw	r24, 0x03	; 3
    1840:	b1 f0       	breq	.+44     	; 0x186e <LCD0_gotoxy+0x40>
    1842:	08 95       	ret
    1844:	60 e0       	ldi	r22, 0x00	; 0
    1846:	70 e0       	ldi	r23, 0x00	; 0
    1848:	80 e8       	ldi	r24, 0x80	; 128
    184a:	82 0f       	add	r24, r18
    184c:	44 de       	rcall	.-888    	; 0x14d6 <LCD0_write>
    184e:	82 cf       	rjmp	.-252    	; 0x1754 <LCD0_BF>
    1850:	08 95       	ret
    1852:	60 e0       	ldi	r22, 0x00	; 0
    1854:	70 e0       	ldi	r23, 0x00	; 0
    1856:	80 ec       	ldi	r24, 0xC0	; 192
    1858:	82 0f       	add	r24, r18
    185a:	3d de       	rcall	.-902    	; 0x14d6 <LCD0_write>
    185c:	7b cf       	rjmp	.-266    	; 0x1754 <LCD0_BF>
    185e:	08 95       	ret
    1860:	60 e0       	ldi	r22, 0x00	; 0
    1862:	70 e0       	ldi	r23, 0x00	; 0
    1864:	84 e9       	ldi	r24, 0x94	; 148
    1866:	82 0f       	add	r24, r18
    1868:	36 de       	rcall	.-916    	; 0x14d6 <LCD0_write>
    186a:	74 cf       	rjmp	.-280    	; 0x1754 <LCD0_BF>
    186c:	08 95       	ret
    186e:	60 e0       	ldi	r22, 0x00	; 0
    1870:	70 e0       	ldi	r23, 0x00	; 0
    1872:	84 ed       	ldi	r24, 0xD4	; 212
    1874:	82 0f       	add	r24, r18
    1876:	2f de       	rcall	.-930    	; 0x14d6 <LCD0_write>
    1878:	6d cf       	rjmp	.-294    	; 0x1754 <LCD0_BF>
    187a:	08 95       	ret

0000187c <LCD0_clear>:
    187c:	60 e0       	ldi	r22, 0x00	; 0
    187e:	70 e0       	ldi	r23, 0x00	; 0
    1880:	81 e0       	ldi	r24, 0x01	; 1
    1882:	29 de       	rcall	.-942    	; 0x14d6 <LCD0_write>
    1884:	87 ee       	ldi	r24, 0xE7	; 231
    1886:	97 e1       	ldi	r25, 0x17	; 23
    1888:	01 97       	sbiw	r24, 0x01	; 1
    188a:	f1 f7       	brne	.-4      	; 0x1888 <LCD0_clear+0xc>
    188c:	00 c0       	rjmp	.+0      	; 0x188e <LCD0_clear+0x12>
    188e:	00 00       	nop
    1890:	08 95       	ret

00001892 <LCD0_inic>:
	return lcd0;
}
void LCD0_inic(void)
{
	//LCD INIC
	*lcd0_DDR=(1<<RS)|(1<<RW)|(1<<EN)|(0<<NC);
    1892:	e0 91 e2 02 	lds	r30, 0x02E2	; 0x8002e2 <lcd0_DDR>
    1896:	f0 91 e3 02 	lds	r31, 0x02E3	; 0x8002e3 <lcd0_DDR+0x1>
    189a:	87 e0       	ldi	r24, 0x07	; 7
    189c:	80 83       	st	Z, r24
	*lcd0_PORT=(1<<NC);
    189e:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    18a2:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    18a6:	88 e0       	ldi	r24, 0x08	; 8
    18a8:	80 83       	st	Z, r24
    18aa:	2f ef       	ldi	r18, 0xFF	; 255
    18ac:	83 ef       	ldi	r24, 0xF3	; 243
    18ae:	91 e0       	ldi	r25, 0x01	; 1
    18b0:	21 50       	subi	r18, 0x01	; 1
    18b2:	80 40       	sbci	r24, 0x00	; 0
    18b4:	90 40       	sbci	r25, 0x00	; 0
    18b6:	e1 f7       	brne	.-8      	; 0x18b0 <LCD0_inic+0x1e>
    18b8:	00 c0       	rjmp	.+0      	; 0x18ba <LCD0_inic+0x28>
    18ba:	00 00       	nop
	/***INICIALIZACAO LCD**datasheet*/
	_delay_ms(40);
	LCD0_write(0x33,INST); //function set
    18bc:	60 e0       	ldi	r22, 0x00	; 0
    18be:	70 e0       	ldi	r23, 0x00	; 0
    18c0:	83 e3       	ldi	r24, 0x33	; 51
    18c2:	09 de       	rcall	.-1006   	; 0x14d6 <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    18c4:	20 ed       	ldi	r18, 0xD0	; 208
    18c6:	2a 95       	dec	r18
    18c8:	f1 f7       	brne	.-4      	; 0x18c6 <LCD0_inic+0x34>
	_delay_us(39);
	LCD0_write(0x33,INST); //function set
    18ca:	60 e0       	ldi	r22, 0x00	; 0
    18cc:	70 e0       	ldi	r23, 0x00	; 0
    18ce:	83 e3       	ldi	r24, 0x33	; 51
    18d0:	02 de       	rcall	.-1020   	; 0x14d6 <LCD0_write>
    18d2:	80 ed       	ldi	r24, 0xD0	; 208
    18d4:	8a 95       	dec	r24
    18d6:	f1 f7       	brne	.-4      	; 0x18d4 <LCD0_inic+0x42>
	_delay_us(39);
	LCD0_write(0x2B,INST); //function set
    18d8:	60 e0       	ldi	r22, 0x00	; 0
    18da:	70 e0       	ldi	r23, 0x00	; 0
    18dc:	8b e2       	ldi	r24, 0x2B	; 43
    18de:	fb dd       	rcall	.-1034   	; 0x14d6 <LCD0_write>
    18e0:	95 ec       	ldi	r25, 0xC5	; 197
    18e2:	9a 95       	dec	r25
    18e4:	f1 f7       	brne	.-4      	; 0x18e2 <LCD0_inic+0x50>
    18e6:	00 00       	nop
	_delay_us(37);
	LCD0_write(0x0C,INST);// display on/off control
    18e8:	60 e0       	ldi	r22, 0x00	; 0
    18ea:	70 e0       	ldi	r23, 0x00	; 0
    18ec:	8c e0       	ldi	r24, 0x0C	; 12
    18ee:	f3 dd       	rcall	.-1050   	; 0x14d6 <LCD0_write>
    18f0:	25 ec       	ldi	r18, 0xC5	; 197
    18f2:	2a 95       	dec	r18
    18f4:	f1 f7       	brne	.-4      	; 0x18f2 <LCD0_inic+0x60>
	_delay_us(37);
	LCD0_write(0x01,INST);// clear display
    18f6:	00 00       	nop
    18f8:	60 e0       	ldi	r22, 0x00	; 0
    18fa:	70 e0       	ldi	r23, 0x00	; 0
    18fc:	81 e0       	ldi	r24, 0x01	; 1
    18fe:	eb dd       	rcall	.-1066   	; 0x14d6 <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1900:	87 ee       	ldi	r24, 0xE7	; 231
    1902:	97 e1       	ldi	r25, 0x17	; 23
    1904:	01 97       	sbiw	r24, 0x01	; 1
    1906:	f1 f7       	brne	.-4      	; 0x1904 <LCD0_inic+0x72>
    1908:	00 c0       	rjmp	.+0      	; 0x190a <LCD0_inic+0x78>
	_delay_ms(1.53);
	LCD0_write(0x06,INST);// entry mode set (crazy settings)
    190a:	00 00       	nop
    190c:	60 e0       	ldi	r22, 0x00	; 0
    190e:	70 e0       	ldi	r23, 0x00	; 0
    1910:	86 e0       	ldi	r24, 0x06	; 6
    1912:	e1 dd       	rcall	.-1086   	; 0x14d6 <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1914:	95 ec       	ldi	r25, 0xC5	; 197
    1916:	9a 95       	dec	r25
    1918:	f1 f7       	brne	.-4      	; 0x1916 <LCD0_inic+0x84>
    191a:	00 00       	nop
    191c:	08 95       	ret

0000191e <LCD0enable>:
void LCD1_strobe(unsigned int num);
void LCD1_reboot(void);
unsigned int LCD_ticks(unsigned int num);
/***Procedure & Function***/
LCD0 LCD0enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port)
{
    191e:	1f 93       	push	r17
    1920:	cf 93       	push	r28
    1922:	df 93       	push	r29
    1924:	ec 01       	movw	r28, r24
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    1926:	1f b7       	in	r17, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1928:	8f b7       	in	r24, 0x3f	; 63
    192a:	8f 77       	andi	r24, 0x7F	; 127
    192c:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	LCD0 lcd0;
	//import parametros
	lcd0_DDR=ddr;
    192e:	70 93 e3 02 	sts	0x02E3, r23	; 0x8002e3 <lcd0_DDR+0x1>
    1932:	60 93 e2 02 	sts	0x02E2, r22	; 0x8002e2 <lcd0_DDR>
	lcd0_PIN=pin;
    1936:	50 93 dc 02 	sts	0x02DC, r21	; 0x8002dc <lcd0_PIN+0x1>
    193a:	40 93 db 02 	sts	0x02DB, r20	; 0x8002db <lcd0_PIN>
	lcd0_PORT=port;
    193e:	30 93 e6 02 	sts	0x02E6, r19	; 0x8002e6 <lcd0_PORT+0x1>
    1942:	20 93 e5 02 	sts	0x02E5, r18	; 0x8002e5 <lcd0_PORT>
	//inic variables
	*lcd0_DDR=0x00;
    1946:	fb 01       	movw	r30, r22
    1948:	10 82       	st	Z, r1
	*lcd0_PORT=0xFF;
    194a:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <lcd0_PORT>
    194e:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <lcd0_PORT+0x1>
    1952:	8f ef       	ldi	r24, 0xFF	; 255
    1954:	80 83       	st	Z, r24
	lcd0_detect=*lcd0_PIN & (1<<NC);
    1956:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PIN>
    195a:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PIN+0x1>
    195e:	80 81       	ld	r24, Z
    1960:	88 70       	andi	r24, 0x08	; 8
    1962:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <lcd0_detect>
	lcd0.hspace=LCD0_hspace;
	lcd0.clear=LCD0_clear;
	lcd0.gotoxy=LCD0_gotoxy;
	lcd0.reboot=LCD0_reboot;
	//LCD INIC
	LCD0_inic();
    1966:	95 df       	rcall	.-214    	; 0x1892 <LCD0_inic>
	SREG=tSREG;
    1968:	1f bf       	out	0x3f, r17	; 63
	//
	return lcd0;
    196a:	8b e6       	ldi	r24, 0x6B	; 107
    196c:	9a e0       	ldi	r25, 0x0A	; 10
    196e:	99 83       	std	Y+1, r25	; 0x01
    1970:	88 83       	st	Y, r24
    1972:	8f e2       	ldi	r24, 0x2F	; 47
    1974:	9b e0       	ldi	r25, 0x0B	; 11
    1976:	9b 83       	std	Y+3, r25	; 0x03
    1978:	8a 83       	std	Y+2, r24	; 0x02
    197a:	8a ea       	ldi	r24, 0xAA	; 170
    197c:	9b e0       	ldi	r25, 0x0B	; 11
    197e:	9d 83       	std	Y+5, r25	; 0x05
    1980:	8c 83       	std	Y+4, r24	; 0x04
    1982:	8c eb       	ldi	r24, 0xBC	; 188
    1984:	9b e0       	ldi	r25, 0x0B	; 11
    1986:	9f 83       	std	Y+7, r25	; 0x07
    1988:	8e 83       	std	Y+6, r24	; 0x06
    198a:	81 ec       	ldi	r24, 0xC1	; 193
    198c:	9b e0       	ldi	r25, 0x0B	; 11
    198e:	99 87       	std	Y+9, r25	; 0x09
    1990:	88 87       	std	Y+8, r24	; 0x08
    1992:	8a ec       	ldi	r24, 0xCA	; 202
    1994:	9b e0       	ldi	r25, 0x0B	; 11
    1996:	9b 87       	std	Y+11, r25	; 0x0b
    1998:	8a 87       	std	Y+10, r24	; 0x0a
    199a:	8b ed       	ldi	r24, 0xDB	; 219
    199c:	9b e0       	ldi	r25, 0x0B	; 11
    199e:	9d 87       	std	Y+13, r25	; 0x0d
    19a0:	8c 87       	std	Y+12, r24	; 0x0c
    19a2:	8a e0       	ldi	r24, 0x0A	; 10
    19a4:	9c e0       	ldi	r25, 0x0C	; 12
    19a6:	9f 87       	std	Y+15, r25	; 0x0f
    19a8:	8e 87       	std	Y+14, r24	; 0x0e
    19aa:	8e e3       	ldi	r24, 0x3E	; 62
    19ac:	9c e0       	ldi	r25, 0x0C	; 12
    19ae:	99 8b       	std	Y+17, r25	; 0x11
    19b0:	88 8b       	std	Y+16, r24	; 0x10
    19b2:	87 e1       	ldi	r24, 0x17	; 23
    19b4:	9c e0       	ldi	r25, 0x0C	; 12
    19b6:	9b 8b       	std	Y+19, r25	; 0x13
    19b8:	8a 8b       	std	Y+18, r24	; 0x12
    19ba:	86 ee       	ldi	r24, 0xE6	; 230
    19bc:	9c e0       	ldi	r25, 0x0C	; 12
    19be:	9d 8b       	std	Y+21, r25	; 0x15
    19c0:	8c 8b       	std	Y+20, r24	; 0x14
}
    19c2:	ce 01       	movw	r24, r28
    19c4:	df 91       	pop	r29
    19c6:	cf 91       	pop	r28
    19c8:	1f 91       	pop	r17
    19ca:	08 95       	ret

000019cc <LCD0_reboot>:
	*lcd0_PORT|=(1<<EN);
	LCD_ticks(num);
	*lcd0_PORT&=~(1<<EN);
}
void LCD0_reboot(void)
{
    19cc:	cf 93       	push	r28
    19ce:	df 93       	push	r29
	uint8_t tSREG;
	tSREG=SREG;
    19d0:	df b7       	in	r29, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    19d2:	8f b7       	in	r24, 0x3f	; 63
    19d4:	8f 77       	andi	r24, 0x7F	; 127
    19d6:	8f bf       	out	0x3f, r24	; 63
	//low high detect pin NC
	uint8_t i;
	uint8_t tmp;
	tmp=*lcd0_PIN & (1<<NC);
    19d8:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <lcd0_PIN>
    19dc:	f0 91 dc 02 	lds	r31, 0x02DC	; 0x8002dc <lcd0_PIN+0x1>
    19e0:	c0 81       	ld	r28, Z
    19e2:	c8 70       	andi	r28, 0x08	; 8
	i=tmp^lcd0_detect;
    19e4:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <lcd0_detect>
    19e8:	8c 27       	eor	r24, r28
	i&=tmp;
	if(i)
    19ea:	8c 23       	and	r24, r28
    19ec:	09 f0       	breq	.+2      	; 0x19f0 <LCD0_reboot+0x24>
		LCD0_inic();
    19ee:	51 df       	rcall	.-350    	; 0x1892 <LCD0_inic>
	lcd0_detect=tmp;
    19f0:	c0 93 e4 02 	sts	0x02E4, r28	; 0x8002e4 <lcd0_detect>
	SREG=tSREG;
    19f4:	df bf       	out	0x3f, r29	; 63
}
    19f6:	df 91       	pop	r29
    19f8:	cf 91       	pop	r28
    19fa:	08 95       	ret

000019fc <HX711_set_readflag>:
	// returns a copy
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=ONE;
    19fc:	21 e0       	ldi	r18, 0x01	; 1
    19fe:	fc 01       	movw	r30, r24
    1a00:	20 83       	st	Z, r18
    1a02:	08 95       	ret

00001a04 <HX711_check_readflag>:
	self->readflag=ZERO;
}
uint8_t HX711_check_readflag(HX711* self)
{
	return self->readflag;	
}
    1a04:	fc 01       	movw	r30, r24
    1a06:	80 81       	ld	r24, Z
    1a08:	08 95       	ret

00001a0a <HX711_read_bit>:
uint8_t HX711_read_bit(void)
{	
	uint16_t bool;
	*hx711_PORT|=(ONE<<hx711_clkpin);
    1a0a:	e0 91 ec 02 	lds	r30, 0x02EC	; 0x8002ec <hx711_PORT>
    1a0e:	f0 91 ed 02 	lds	r31, 0x02ED	; 0x8002ed <hx711_PORT+0x1>
    1a12:	20 81       	ld	r18, Z
    1a14:	81 e0       	ldi	r24, 0x01	; 1
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	00 90 f0 02 	lds	r0, 0x02F0	; 0x8002f0 <hx711_clkpin>
    1a1c:	02 c0       	rjmp	.+4      	; 0x1a22 <HX711_read_bit+0x18>
    1a1e:	88 0f       	add	r24, r24
    1a20:	99 1f       	adc	r25, r25
    1a22:	0a 94       	dec	r0
    1a24:	e2 f7       	brpl	.-8      	; 0x1a1e <HX711_read_bit+0x14>
    1a26:	82 2b       	or	r24, r18
    1a28:	80 83       	st	Z, r24
    1a2a:	8e e6       	ldi	r24, 0x6E	; 110
    1a2c:	90 e0       	ldi	r25, 0x00	; 0
    1a2e:	01 97       	sbiw	r24, 0x01	; 1
	/**0.1us minimum**/
	for(bool=0;bool<HX711_ticks;bool++);
    1a30:	f1 f7       	brne	.-4      	; 0x1a2e <HX711_read_bit+0x24>
	bool=*hx711_PIN & (ONE<<hx711_datapin);
    1a32:	e0 91 ea 02 	lds	r30, 0x02EA	; 0x8002ea <hx711_PIN>
    1a36:	f0 91 eb 02 	lds	r31, 0x02EB	; 0x8002eb <hx711_PIN+0x1>
    1a3a:	40 81       	ld	r20, Z
    1a3c:	21 e0       	ldi	r18, 0x01	; 1
    1a3e:	30 e0       	ldi	r19, 0x00	; 0
    1a40:	c9 01       	movw	r24, r18
    1a42:	00 90 e9 02 	lds	r0, 0x02E9	; 0x8002e9 <hx711_datapin>
    1a46:	02 c0       	rjmp	.+4      	; 0x1a4c <HX711_read_bit+0x42>
    1a48:	88 0f       	add	r24, r24
    1a4a:	99 1f       	adc	r25, r25
    1a4c:	0a 94       	dec	r0
    1a4e:	e2 f7       	brpl	.-8      	; 0x1a48 <HX711_read_bit+0x3e>
	*hx711_PORT&=~(ONE<<hx711_clkpin);
    1a50:	e0 91 ec 02 	lds	r30, 0x02EC	; 0x8002ec <hx711_PORT>
    1a54:	f0 91 ed 02 	lds	r31, 0x02ED	; 0x8002ed <hx711_PORT+0x1>
    1a58:	90 81       	ld	r25, Z
    1a5a:	00 90 f0 02 	lds	r0, 0x02F0	; 0x8002f0 <hx711_clkpin>
    1a5e:	02 c0       	rjmp	.+4      	; 0x1a64 <HX711_read_bit+0x5a>
    1a60:	22 0f       	add	r18, r18
    1a62:	33 1f       	adc	r19, r19
    1a64:	0a 94       	dec	r0
    1a66:	e2 f7       	brpl	.-8      	; 0x1a60 <HX711_read_bit+0x56>
    1a68:	20 95       	com	r18
    1a6a:	29 23       	and	r18, r25
    1a6c:	20 83       	st	Z, r18
	return bool;
}
    1a6e:	84 23       	and	r24, r20
    1a70:	08 95       	ret

00001a72 <HX711_set_amplify>:
// Gain selector
// AVDD connected to 5V, channel B gain=32
void HX711_set_amplify(HX711* self, uint8_t amplify)
{
	switch(amplify){
    1a72:	60 34       	cpi	r22, 0x40	; 64
    1a74:	79 f0       	breq	.+30     	; 0x1a94 <HX711_set_amplify+0x22>
    1a76:	60 38       	cpi	r22, 0x80	; 128
    1a78:	19 f0       	breq	.+6      	; 0x1a80 <HX711_set_amplify+0xe>
    1a7a:	60 32       	cpi	r22, 0x20	; 32
    1a7c:	81 f4       	brne	.+32     	; 0x1a9e <HX711_set_amplify+0x2c>
    1a7e:	05 c0       	rjmp	.+10     	; 0x1a8a <HX711_set_amplify+0x18>
		case 128:
			self->amplify=ONE; //channel A
    1a80:	21 e0       	ldi	r18, 0x01	; 1
    1a82:	fc 01       	movw	r30, r24
    1a84:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=ONE;
    1a86:	23 83       	std	Z+3, r18	; 0x03
			break;
    1a88:	08 95       	ret
		case 32:
			self->amplify=2; //channel B
    1a8a:	22 e0       	ldi	r18, 0x02	; 2
    1a8c:	fc 01       	movw	r30, r24
    1a8e:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=2; 
    1a90:	23 83       	std	Z+3, r18	; 0x03
			break;
    1a92:	08 95       	ret
		case 64:
			self->amplify=3; //channel A
    1a94:	23 e0       	ldi	r18, 0x03	; 3
    1a96:	fc 01       	movw	r30, r24
    1a98:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=3;
    1a9a:	23 83       	std	Z+3, r18	; 0x03
			break;
    1a9c:	08 95       	ret
		default:
			self->amplify=ONE;
    1a9e:	21 e0       	ldi	r18, 0x01	; 1
    1aa0:	fc 01       	movw	r30, r24
    1aa2:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=ONE;
    1aa4:	23 83       	std	Z+3, r18	; 0x03
    1aa6:	08 95       	ret

00001aa8 <HX711_average>:
		}
	}
	return self->raw_reading;
}
float HX711_average(HX711* self, int32_t raw_reading ,uint8_t n)
{
    1aa8:	cf 92       	push	r12
    1aaa:	df 92       	push	r13
    1aac:	ef 92       	push	r14
    1aae:	ff 92       	push	r15
    1ab0:	cf 93       	push	r28
    1ab2:	df 93       	push	r29
    1ab4:	ec 01       	movw	r28, r24
    1ab6:	6a 01       	movw	r12, r20
    1ab8:	7b 01       	movw	r14, r22
	if(self->trigger){
    1aba:	89 81       	ldd	r24, Y+1	; 0x01
    1abc:	88 23       	and	r24, r24
    1abe:	41 f1       	breq	.+80     	; 0x1b10 <HX711_average+0x68>
		if(self->av_n < n){
    1ac0:	8a 89       	ldd	r24, Y+18	; 0x12
    1ac2:	82 17       	cp	r24, r18
    1ac4:	78 f4       	brcc	.+30     	; 0x1ae4 <HX711_average+0x3c>
			self->sum+=raw_reading;
    1ac6:	4e 85       	ldd	r20, Y+14	; 0x0e
    1ac8:	5f 85       	ldd	r21, Y+15	; 0x0f
    1aca:	68 89       	ldd	r22, Y+16	; 0x10
    1acc:	79 89       	ldd	r23, Y+17	; 0x11
    1ace:	c4 0e       	add	r12, r20
    1ad0:	d5 1e       	adc	r13, r21
    1ad2:	e6 1e       	adc	r14, r22
    1ad4:	f7 1e       	adc	r15, r23
    1ad6:	ce 86       	std	Y+14, r12	; 0x0e
    1ad8:	df 86       	std	Y+15, r13	; 0x0f
    1ada:	e8 8a       	std	Y+16, r14	; 0x10
    1adc:	f9 8a       	std	Y+17, r15	; 0x11
			self->av_n++;
    1ade:	8f 5f       	subi	r24, 0xFF	; 255
    1ae0:	8a 8b       	std	Y+18, r24	; 0x12
    1ae2:	15 c0       	rjmp	.+42     	; 0x1b0e <HX711_average+0x66>
			}else{
			self->av_n=0;
			self->mean=self->sum/n;
    1ae4:	30 e0       	ldi	r19, 0x00	; 0
    1ae6:	40 e0       	ldi	r20, 0x00	; 0
    1ae8:	50 e0       	ldi	r21, 0x00	; 0
    1aea:	6e 85       	ldd	r22, Y+14	; 0x0e
    1aec:	7f 85       	ldd	r23, Y+15	; 0x0f
    1aee:	88 89       	ldd	r24, Y+16	; 0x10
    1af0:	99 89       	ldd	r25, Y+17	; 0x11
    1af2:	3d d6       	rcall	.+3194   	; 0x276e <__divmodsi4>
    1af4:	ca 01       	movw	r24, r20
    1af6:	b9 01       	movw	r22, r18
    1af8:	66 d3       	rcall	.+1740   	; 0x21c6 <__floatsisf>
    1afa:	6b 8b       	std	Y+19, r22	; 0x13
    1afc:	7c 8b       	std	Y+20, r23	; 0x14
    1afe:	8d 8b       	std	Y+21, r24	; 0x15
    1b00:	9e 8b       	std	Y+22, r25	; 0x16
			self->sum=0;
			self->sum+=raw_reading;
    1b02:	ce 86       	std	Y+14, r12	; 0x0e
    1b04:	df 86       	std	Y+15, r13	; 0x0f
    1b06:	e8 8a       	std	Y+16, r14	; 0x10
    1b08:	f9 8a       	std	Y+17, r15	; 0x11
			self->av_n++;
    1b0a:	81 e0       	ldi	r24, 0x01	; 1
    1b0c:	8a 8b       	std	Y+18, r24	; 0x12
		}
		self->trigger=ZERO;
    1b0e:	19 82       	std	Y+1, r1	; 0x01
	}
	return self->mean;
    1b10:	6b 89       	ldd	r22, Y+19	; 0x13
    1b12:	7c 89       	ldd	r23, Y+20	; 0x14
    1b14:	8d 89       	ldd	r24, Y+21	; 0x15
    1b16:	9e 89       	ldd	r25, Y+22	; 0x16
}
    1b18:	df 91       	pop	r29
    1b1a:	cf 91       	pop	r28
    1b1c:	ff 90       	pop	r15
    1b1e:	ef 90       	pop	r14
    1b20:	df 90       	pop	r13
    1b22:	cf 90       	pop	r12
    1b24:	08 95       	ret

00001b26 <HX711_readraw>:
}
/***
Function to be used in the interrupt routine with appropriate cycle period.
***/
int32_t HX711_readraw(HX711* self)
{
    1b26:	0f 93       	push	r16
    1b28:	1f 93       	push	r17
    1b2a:	cf 93       	push	r28
    1b2c:	df 93       	push	r29
    1b2e:	ec 01       	movw	r28, r24
	uint8_t aindex, bindex;
	int32_t value;
	aindex = self->bufferindex-ONE;
    1b30:	19 85       	ldd	r17, Y+9	; 0x09
	bindex = self->bitcount-ONE;
    1b32:	0c 81       	ldd	r16, Y+4	; 0x04
	ptr=(int32_t*)self->buffer;
    1b34:	05 96       	adiw	r24, 0x05	; 5
    1b36:	90 93 ef 02 	sts	0x02EF, r25	; 0x8002ef <ptr+0x1>
    1b3a:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <ptr>
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
    1b3e:	e0 91 ea 02 	lds	r30, 0x02EA	; 0x8002ea <hx711_PIN>
    1b42:	f0 91 eb 02 	lds	r31, 0x02EB	; 0x8002eb <hx711_PIN+0x1>
    1b46:	80 81       	ld	r24, Z
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	00 90 e9 02 	lds	r0, 0x02E9	; 0x8002e9 <hx711_datapin>
    1b4e:	02 c0       	rjmp	.+4      	; 0x1b54 <HX711_readraw+0x2e>
    1b50:	95 95       	asr	r25
    1b52:	87 95       	ror	r24
    1b54:	0a 94       	dec	r0
    1b56:	e2 f7       	brpl	.-8      	; 0x1b50 <HX711_readraw+0x2a>
    1b58:	80 fd       	sbrc	r24, 0
    1b5a:	06 c0       	rjmp	.+12     	; 0x1b68 <HX711_readraw+0x42>
    1b5c:	88 81       	ld	r24, Y
    1b5e:	81 11       	cpse	r24, r1
    1b60:	07 c0       	rjmp	.+14     	; 0x1b70 <HX711_readraw+0x4a>
	// returns a copy
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=ONE;
    1b62:	81 e0       	ldi	r24, 0x01	; 1
    1b64:	88 83       	st	Y, r24
	bindex = self->bitcount-ONE;
	ptr=(int32_t*)self->buffer;
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
		HX711_set_readflag(self);
		PORTC&=~(1<<0); // indicator remove when finished
    1b66:	a8 98       	cbi	0x15, 0	; 21
	}
	/***Interrupt 24 times sequence***/
	if(self->readflag){
    1b68:	88 81       	ld	r24, Y
    1b6a:	88 23       	and	r24, r24
    1b6c:	09 f4       	brne	.+2      	; 0x1b70 <HX711_readraw+0x4a>
    1b6e:	49 c0       	rjmp	.+146    	; 0x1c02 <HX711_readraw+0xdc>
		if(self->bitcount){
    1b70:	8c 81       	ldd	r24, Y+4	; 0x04
    1b72:	88 23       	and	r24, r24
    1b74:	29 f1       	breq	.+74     	; 0x1bc0 <HX711_readraw+0x9a>
			if (HX711_read_bit())
    1b76:	49 df       	rcall	.-366    	; 0x1a0a <HX711_read_bit>
    1b78:	88 23       	and	r24, r24
    1b7a:	a9 f0       	breq	.+42     	; 0x1ba6 <HX711_readraw+0x80>
				self->buffer[aindex] |= ONE<<(bindex-(aindex*8));
    1b7c:	11 50       	subi	r17, 0x01	; 1
    1b7e:	81 2f       	mov	r24, r17
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	fe 01       	movw	r30, r28
    1b84:	e8 0f       	add	r30, r24
    1b86:	f9 1f       	adc	r31, r25
    1b88:	01 50       	subi	r16, 0x01	; 1
    1b8a:	28 e0       	ldi	r18, 0x08	; 8
    1b8c:	12 9f       	mul	r17, r18
    1b8e:	00 19       	sub	r16, r0
    1b90:	11 24       	eor	r1, r1
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	02 c0       	rjmp	.+4      	; 0x1b9c <HX711_readraw+0x76>
    1b98:	88 0f       	add	r24, r24
    1b9a:	99 1f       	adc	r25, r25
    1b9c:	0a 95       	dec	r16
    1b9e:	e2 f7       	brpl	.-8      	; 0x1b98 <HX711_readraw+0x72>
    1ba0:	95 81       	ldd	r25, Z+5	; 0x05
    1ba2:	89 2b       	or	r24, r25
    1ba4:	85 83       	std	Z+5, r24	; 0x05
			self->bitcount--;
    1ba6:	8c 81       	ldd	r24, Y+4	; 0x04
    1ba8:	81 50       	subi	r24, 0x01	; 1
    1baa:	8c 83       	std	Y+4, r24	; 0x04
			if(self->bitcount==16)
    1bac:	80 31       	cpi	r24, 0x10	; 16
    1bae:	19 f4       	brne	.+6      	; 0x1bb6 <HX711_readraw+0x90>
				self->bufferindex=2;
    1bb0:	82 e0       	ldi	r24, 0x02	; 2
    1bb2:	89 87       	std	Y+9, r24	; 0x09
    1bb4:	26 c0       	rjmp	.+76     	; 0x1c02 <HX711_readraw+0xdc>
			if(self->bitcount==8)
    1bb6:	88 30       	cpi	r24, 0x08	; 8
    1bb8:	21 f5       	brne	.+72     	; 0x1c02 <HX711_readraw+0xdc>
				self->bufferindex=ONE;
    1bba:	81 e0       	ldi	r24, 0x01	; 1
    1bbc:	89 87       	std	Y+9, r24	; 0x09
    1bbe:	21 c0       	rjmp	.+66     	; 0x1c02 <HX711_readraw+0xdc>
		}else{
			if(self->ampcount){
    1bc0:	8b 81       	ldd	r24, Y+3	; 0x03
    1bc2:	88 23       	and	r24, r24
				HX711_read_bit();
    1bc4:	29 f0       	breq	.+10     	; 0x1bd0 <HX711_readraw+0xaa>
    1bc6:	21 df       	rcall	.-446    	; 0x1a0a <HX711_read_bit>
				self->ampcount--;
    1bc8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bca:	81 50       	subi	r24, 0x01	; 1
    1bcc:	8b 83       	std	Y+3, r24	; 0x03
    1bce:	19 c0       	rjmp	.+50     	; 0x1c02 <HX711_readraw+0xdc>
			}else{
				value=*(ptr);
    1bd0:	e0 91 ee 02 	lds	r30, 0x02EE	; 0x8002ee <ptr>
    1bd4:	f0 91 ef 02 	lds	r31, 0x02EF	; 0x8002ef <ptr+0x1>
    1bd8:	80 81       	ld	r24, Z
    1bda:	91 81       	ldd	r25, Z+1	; 0x01
    1bdc:	a2 81       	ldd	r26, Z+2	; 0x02
    1bde:	b3 81       	ldd	r27, Z+3	; 0x03
				self->raw_reading=value;
    1be0:	8a 87       	std	Y+10, r24	; 0x0a
    1be2:	9b 87       	std	Y+11, r25	; 0x0b
    1be4:	ac 87       	std	Y+12, r26	; 0x0c
    1be6:	bd 87       	std	Y+13, r27	; 0x0d
				self->bitcount=HX711_ADC_bits;
    1be8:	88 e1       	ldi	r24, 0x18	; 24
    1bea:	8c 83       	std	Y+4, r24	; 0x04
				self->bufferindex=HX711_VECT_SIZE-ONE;
    1bec:	83 e0       	ldi	r24, 0x03	; 3
    1bee:	89 87       	std	Y+9, r24	; 0x09
				self->ampcount=self->amplify;
    1bf0:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf2:	8b 83       	std	Y+3, r24	; 0x03
				self->buffer[0]=ZERO;
    1bf4:	1d 82       	std	Y+5, r1	; 0x05
				self->buffer[1]=ZERO;
    1bf6:	1e 82       	std	Y+6, r1	; 0x06
				self->buffer[2]=ZERO;
    1bf8:	1f 82       	std	Y+7, r1	; 0x07
				self->buffer[3]=ZERO;
    1bfa:	18 86       	std	Y+8, r1	; 0x08
				self->trigger=ONE;
    1bfc:	81 e0       	ldi	r24, 0x01	; 1
    1bfe:	89 83       	std	Y+1, r24	; 0x01
{
	self->readflag=ONE;
}
void HX711_reset_readflag(HX711* self)
{
	self->readflag=ZERO;
    1c00:	18 82       	st	Y, r1
				/***Reset ready for next query***/
				HX711_reset_readflag(self);
			}
		}
	}
	return self->raw_reading;
    1c02:	6a 85       	ldd	r22, Y+10	; 0x0a
    1c04:	7b 85       	ldd	r23, Y+11	; 0x0b
    1c06:	8c 85       	ldd	r24, Y+12	; 0x0c
    1c08:	9d 85       	ldd	r25, Y+13	; 0x0d
}
    1c0a:	df 91       	pop	r29
    1c0c:	cf 91       	pop	r28
    1c0e:	1f 91       	pop	r17
    1c10:	0f 91       	pop	r16
    1c12:	08 95       	ret

00001c14 <HX711enable>:
int32_t HX711_readraw(HX711* self);
float HX711_average(HX711* self, int32_t raw_reading,  uint8_t n);
uint8_t HX711_hl(uint8_t xi, uint8_t xf);
/***Procedure & Function***/
HX711 HX711enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port, uint8_t datapin, uint8_t clkpin)
{
    1c14:	ef 92       	push	r14
    1c16:	0f 93       	push	r16
    1c18:	fc 01       	movw	r30, r24
    1c1a:	da 01       	movw	r26, r20
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    1c1c:	5f b7       	in	r21, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1c1e:	8f b7       	in	r24, 0x3f	; 63
    1c20:	8f 77       	andi	r24, 0x7F	; 127
    1c22:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	HX711 hx711;
	//import parametros
	hx711_DDR=ddr;
    1c24:	70 93 f2 02 	sts	0x02F2, r23	; 0x8002f2 <hx711_DDR+0x1>
    1c28:	60 93 f1 02 	sts	0x02F1, r22	; 0x8002f1 <hx711_DDR>
	hx711_PIN=pin;
    1c2c:	b0 93 eb 02 	sts	0x02EB, r27	; 0x8002eb <hx711_PIN+0x1>
    1c30:	a0 93 ea 02 	sts	0x02EA, r26	; 0x8002ea <hx711_PIN>
	hx711_PORT=port;
    1c34:	30 93 ed 02 	sts	0x02ED, r19	; 0x8002ed <hx711_PORT+0x1>
    1c38:	20 93 ec 02 	sts	0x02EC, r18	; 0x8002ec <hx711_PORT>
	hx711_datapin=datapin;
    1c3c:	00 93 e9 02 	sts	0x02E9, r16	; 0x8002e9 <hx711_datapin>
	hx711_clkpin=clkpin;
    1c40:	e0 92 f0 02 	sts	0x02F0, r14	; 0x8002f0 <hx711_clkpin>
	//inic variables
	*hx711_DDR |= (ONE<<clkpin);
    1c44:	db 01       	movw	r26, r22
    1c46:	4c 91       	ld	r20, X
    1c48:	81 e0       	ldi	r24, 0x01	; 1
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	9c 01       	movw	r18, r24
    1c4e:	02 c0       	rjmp	.+4      	; 0x1c54 <HX711enable+0x40>
    1c50:	22 0f       	add	r18, r18
    1c52:	33 1f       	adc	r19, r19
    1c54:	ea 94       	dec	r14
    1c56:	e2 f7       	brpl	.-8      	; 0x1c50 <HX711enable+0x3c>
    1c58:	24 2b       	or	r18, r20
    1c5a:	2c 93       	st	X, r18
	*hx711_PORT |= (ONE<<datapin);
    1c5c:	a0 91 ec 02 	lds	r26, 0x02EC	; 0x8002ec <hx711_PORT>
    1c60:	b0 91 ed 02 	lds	r27, 0x02ED	; 0x8002ed <hx711_PORT+0x1>
    1c64:	2c 91       	ld	r18, X
    1c66:	02 c0       	rjmp	.+4      	; 0x1c6c <HX711enable+0x58>
    1c68:	88 0f       	add	r24, r24
    1c6a:	99 1f       	adc	r25, r25
    1c6c:	0a 95       	dec	r16
    1c6e:	e2 f7       	brpl	.-8      	; 0x1c68 <HX711enable+0x54>
    1c70:	82 2b       	or	r24, r18
    1c72:	8c 93       	st	X, r24
	hx711.check_readflag=HX711_check_readflag;
	hx711.read_bit=HX711_read_bit;
	hx711.set_amplify=HX711_set_amplify;
	hx711.readraw=HX711_readraw;
	hx711.average=HX711_average;
	SREG=tSREG;
    1c74:	5f bf       	out	0x3f, r21	; 63
	// returns a copy
	return hx711;
    1c76:	10 82       	st	Z, r1
    1c78:	11 82       	std	Z+1, r1	; 0x01
    1c7a:	81 e0       	ldi	r24, 0x01	; 1
    1c7c:	82 83       	std	Z+2, r24	; 0x02
    1c7e:	83 83       	std	Z+3, r24	; 0x03
    1c80:	88 e1       	ldi	r24, 0x18	; 24
    1c82:	84 83       	std	Z+4, r24	; 0x04
    1c84:	15 82       	std	Z+5, r1	; 0x05
    1c86:	16 82       	std	Z+6, r1	; 0x06
    1c88:	17 82       	std	Z+7, r1	; 0x07
    1c8a:	10 86       	std	Z+8, r1	; 0x08
    1c8c:	83 e0       	ldi	r24, 0x03	; 3
    1c8e:	81 87       	std	Z+9, r24	; 0x09
    1c90:	12 86       	std	Z+10, r1	; 0x0a
    1c92:	13 86       	std	Z+11, r1	; 0x0b
    1c94:	14 86       	std	Z+12, r1	; 0x0c
    1c96:	15 86       	std	Z+13, r1	; 0x0d
    1c98:	82 e0       	ldi	r24, 0x02	; 2
    1c9a:	91 e9       	ldi	r25, 0x91	; 145
    1c9c:	a0 e0       	ldi	r26, 0x00	; 0
    1c9e:	b0 e0       	ldi	r27, 0x00	; 0
    1ca0:	87 8b       	std	Z+23, r24	; 0x17
    1ca2:	90 8f       	std	Z+24, r25	; 0x18
    1ca4:	a1 8f       	std	Z+25, r26	; 0x19
    1ca6:	b2 8f       	std	Z+26, r27	; 0x1a
    1ca8:	80 e5       	ldi	r24, 0x50	; 80
    1caa:	92 e2       	ldi	r25, 0x22	; 34
    1cac:	a1 e0       	ldi	r26, 0x01	; 1
    1cae:	b0 e0       	ldi	r27, 0x00	; 0
    1cb0:	83 8f       	std	Z+27, r24	; 0x1b
    1cb2:	94 8f       	std	Z+28, r25	; 0x1c
    1cb4:	a5 8f       	std	Z+29, r26	; 0x1d
    1cb6:	b6 8f       	std	Z+30, r27	; 0x1e
    1cb8:	8c e2       	ldi	r24, 0x2C	; 44
    1cba:	90 e4       	ldi	r25, 0x40	; 64
    1cbc:	a2 e0       	ldi	r26, 0x02	; 2
    1cbe:	b0 e0       	ldi	r27, 0x00	; 0
    1cc0:	87 8f       	std	Z+31, r24	; 0x1f
    1cc2:	90 a3       	std	Z+32, r25	; 0x20
    1cc4:	a1 a3       	std	Z+33, r26	; 0x21
    1cc6:	b2 a3       	std	Z+34, r27	; 0x22
    1cc8:	87 e1       	ldi	r24, 0x17	; 23
    1cca:	83 a3       	std	Z+35, r24	; 0x23
    1ccc:	8e e2       	ldi	r24, 0x2E	; 46
    1cce:	86 a3       	std	Z+38, r24	; 0x26
    1cd0:	8c e5       	ldi	r24, 0x5C	; 92
    1cd2:	81 a7       	std	Z+41, r24	; 0x29
    1cd4:	8e ef       	ldi	r24, 0xFE	; 254
    1cd6:	9c e0       	ldi	r25, 0x0C	; 12
    1cd8:	95 a7       	std	Z+45, r25	; 0x2d
    1cda:	84 a7       	std	Z+44, r24	; 0x2c
    1cdc:	82 e0       	ldi	r24, 0x02	; 2
    1cde:	9d e0       	ldi	r25, 0x0D	; 13
    1ce0:	97 a7       	std	Z+47, r25	; 0x2f
    1ce2:	86 a7       	std	Z+46, r24	; 0x2e
    1ce4:	85 e0       	ldi	r24, 0x05	; 5
    1ce6:	9d e0       	ldi	r25, 0x0D	; 13
    1ce8:	91 ab       	std	Z+49, r25	; 0x31
    1cea:	80 ab       	std	Z+48, r24	; 0x30
    1cec:	89 e3       	ldi	r24, 0x39	; 57
    1cee:	9d e0       	ldi	r25, 0x0D	; 13
    1cf0:	93 ab       	std	Z+51, r25	; 0x33
    1cf2:	82 ab       	std	Z+50, r24	; 0x32
    1cf4:	83 e9       	ldi	r24, 0x93	; 147
    1cf6:	9d e0       	ldi	r25, 0x0D	; 13
    1cf8:	95 ab       	std	Z+53, r25	; 0x35
    1cfa:	84 ab       	std	Z+52, r24	; 0x34
    1cfc:	84 e5       	ldi	r24, 0x54	; 84
    1cfe:	9d e0       	ldi	r25, 0x0D	; 13
    1d00:	97 ab       	std	Z+55, r25	; 0x37
    1d02:	86 ab       	std	Z+54, r24	; 0x36
}
    1d04:	cf 01       	movw	r24, r30
    1d06:	0f 91       	pop	r16
    1d08:	ef 90       	pop	r14
    1d0a:	08 95       	ret

00001d0c <PORTINIT>:
/*
** procedure and function
*/
void PORTINIT(void)
{
	DDRC=0xFF;
    1d0c:	8f ef       	ldi	r24, 0xFF	; 255
    1d0e:	84 bb       	out	0x14, r24	; 20
	PORTC=0xFF;
    1d10:	85 bb       	out	0x15, r24	; 21
    1d12:	08 95       	ret

00001d14 <main>:
** Header
*/
void PORTINIT();
/****MAIN****/
int main(void)
{
    1d14:	cf 93       	push	r28
    1d16:	df 93       	push	r29
    1d18:	cd b7       	in	r28, 0x3d	; 61
    1d1a:	de b7       	in	r29, 0x3e	; 62
    1d1c:	ca 5b       	subi	r28, 0xBA	; 186
    1d1e:	d1 09       	sbc	r29, r1
    1d20:	0f b6       	in	r0, 0x3f	; 63
    1d22:	f8 94       	cli
    1d24:	de bf       	out	0x3e, r29	; 62
    1d26:	0f be       	out	0x3f, r0	; 63
    1d28:	cd bf       	out	0x3d, r28	; 61
	//SREG|=1<<7;
	PORTINIT();
    1d2a:	f0 df       	rcall	.-32     	; 0x1d0c <PORTINIT>
	/***INICIALIZE OBJECTS***/
	FUNC function = FUNCenable();
    1d2c:	ce 01       	movw	r24, r28
    1d2e:	01 96       	adiw	r24, 0x01	; 1
    1d30:	42 da       	rcall	.-2940   	; 0x11b6 <FUNCenable>
    1d32:	2d 96       	adiw	r28, 0x0d	; 13
    1d34:	8e ac       	ldd	r8, Y+62	; 0x3e
    1d36:	9f ac       	ldd	r9, Y+63	; 0x3f
    1d38:	2d 97       	sbiw	r28, 0x0d	; 13
	LCD0 lcd0 = LCD0enable(&DDRA,&PINA,&PORTA);
    1d3a:	2b e3       	ldi	r18, 0x3B	; 59
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	49 e3       	ldi	r20, 0x39	; 57
    1d40:	50 e0       	ldi	r21, 0x00	; 0
    1d42:	6a e3       	ldi	r22, 0x3A	; 58
    1d44:	70 e0       	ldi	r23, 0x00	; 0
    1d46:	ce 01       	movw	r24, r28
    1d48:	83 5b       	subi	r24, 0xB3	; 179
    1d4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d4c:	e8 dd       	rcall	.-1072   	; 0x191e <LCD0enable>
    1d4e:	6b 96       	adiw	r28, 0x1b	; 27
    1d50:	ce ac       	ldd	r12, Y+62	; 0x3e
    1d52:	df ac       	ldd	r13, Y+63	; 0x3f
    1d54:	6b 97       	sbiw	r28, 0x1b	; 27
    1d56:	a1 96       	adiw	r28, 0x21	; 33
    1d58:	ae ac       	ldd	r10, Y+62	; 0x3e
    1d5a:	bf ac       	ldd	r11, Y+63	; 0x3f
    1d5c:	a1 97       	sbiw	r28, 0x21	; 33
	TIMER_COUNTER0 timer0 = TIMER_COUNTER0enable(2,2); //2,2
    1d5e:	42 e0       	ldi	r20, 0x02	; 2
    1d60:	62 e0       	ldi	r22, 0x02	; 2
    1d62:	ce 01       	movw	r24, r28
    1d64:	8d 59       	subi	r24, 0x9D	; 157
    1d66:	9f 4f       	sbci	r25, 0xFF	; 255
    1d68:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <TIMER_COUNTER0enable>
	TIMER_COUNTER1 timer1 = TIMER_COUNTER1enable(4,0);
    1d6c:	40 e0       	ldi	r20, 0x00	; 0
    1d6e:	64 e0       	ldi	r22, 0x04	; 4
    1d70:	ce 01       	movw	r24, r28
    1d72:	8d 58       	subi	r24, 0x8D	; 141
    1d74:	9f 4f       	sbci	r25, 0xFF	; 255
    1d76:	0e 94 9f 02 	call	0x53e	; 0x53e <TIMER_COUNTER1enable>
	hx = HX711enable(&DDRF, &PINF, &PORTF, 6, 7);
    1d7a:	0f 2e       	mov	r0, r31
    1d7c:	f7 e0       	ldi	r31, 0x07	; 7
    1d7e:	ef 2e       	mov	r14, r31
    1d80:	f0 2d       	mov	r31, r0
    1d82:	06 e0       	ldi	r16, 0x06	; 6
    1d84:	22 e6       	ldi	r18, 0x62	; 98
    1d86:	30 e0       	ldi	r19, 0x00	; 0
    1d88:	40 e2       	ldi	r20, 0x20	; 32
    1d8a:	50 e0       	ldi	r21, 0x00	; 0
    1d8c:	61 e6       	ldi	r22, 0x61	; 97
    1d8e:	70 e0       	ldi	r23, 0x00	; 0
    1d90:	ce 01       	movw	r24, r28
    1d92:	8d 57       	subi	r24, 0x7D	; 125
    1d94:	9f 4f       	sbci	r25, 0xFF	; 255
    1d96:	3e df       	rcall	.-388    	; 0x1c14 <HX711enable>
    1d98:	88 e3       	ldi	r24, 0x38	; 56
    1d9a:	fe 01       	movw	r30, r28
    1d9c:	ed 57       	subi	r30, 0x7D	; 125
    1d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1da0:	ab e0       	ldi	r26, 0x0B	; 11
    1da2:	b3 e0       	ldi	r27, 0x03	; 3
    1da4:	01 90       	ld	r0, Z+
    1da6:	0d 92       	st	X+, r0
    1da8:	8a 95       	dec	r24
    1daa:	e1 f7       	brne	.-8      	; 0x1da4 <main+0x90>
	/******/
	char Menu='1'; // Main menu selector
	float value=0;
	tmp=0;
    1dac:	10 92 f3 02 	sts	0x02F3, r1	; 0x8002f3 <tmp>
    1db0:	10 92 f4 02 	sts	0x02F4, r1	; 0x8002f4 <tmp+0x1>
    1db4:	10 92 f5 02 	sts	0x02F5, r1	; 0x8002f5 <tmp+0x2>
    1db8:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <tmp+0x3>
	/***Parameters timers***/
	//vector[0]=255;
	//vector[1]=255;
	//vector[2]=255;
	//uint8_t* ptr=vector;
	timer0.compoutmode(1);
    1dbc:	a5 96       	adiw	r28, 0x25	; 37
    1dbe:	ee ad       	ldd	r30, Y+62	; 0x3e
    1dc0:	ff ad       	ldd	r31, Y+63	; 0x3f
    1dc2:	a5 97       	sbiw	r28, 0x25	; 37
    1dc4:	81 e0       	ldi	r24, 0x01	; 1
    1dc6:	09 95       	icall
	timer0.compare(79); // 1 -> 159 -> 20us, 1 -> 79 -> 10 us, 8 -> 99 -> 100 us
    1dc8:	ab 96       	adiw	r28, 0x2b	; 43
    1dca:	ee ad       	ldd	r30, Y+62	; 0x3e
    1dcc:	ff ad       	ldd	r31, Y+63	; 0x3f
    1dce:	ab 97       	sbiw	r28, 0x2b	; 43
    1dd0:	8f e4       	ldi	r24, 0x4F	; 79
    1dd2:	09 95       	icall
	timer0.start(1); // 1 -> 32 us , 8 -> 256 us , 32 64 128 256 1024
    1dd4:	e1 96       	adiw	r28, 0x31	; 49
    1dd6:	ee ad       	ldd	r30, Y+62	; 0x3e
    1dd8:	ff ad       	ldd	r31, Y+63	; 0x3f
    1dda:	e1 97       	sbiw	r28, 0x31	; 49
    1ddc:	81 e0       	ldi	r24, 0x01	; 1
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	09 95       	icall
	
	// to be used to jump menu for calibration in progress
	timer1.compareA(50);
    1de2:	eb 96       	adiw	r28, 0x3b	; 59
    1de4:	ee ad       	ldd	r30, Y+62	; 0x3e
    1de6:	ff ad       	ldd	r31, Y+63	; 0x3f
    1de8:	eb 97       	sbiw	r28, 0x3b	; 59
    1dea:	82 e3       	ldi	r24, 0x32	; 50
    1dec:	90 e0       	ldi	r25, 0x00	; 0
    1dee:	09 95       	icall
	timer1.compoutmodeA(1);
    1df0:	e5 96       	adiw	r28, 0x35	; 53
    1df2:	ee ad       	ldd	r30, Y+62	; 0x3e
    1df4:	ff ad       	ldd	r31, Y+63	; 0x3f
    1df6:	e5 97       	sbiw	r28, 0x35	; 53
    1df8:	81 e0       	ldi	r24, 0x01	; 1
    1dfa:	09 95       	icall
	timer1.start(256);
    1dfc:	c1 58       	subi	r28, 0x81	; 129
    1dfe:	df 4f       	sbci	r29, 0xFF	; 255
    1e00:	e8 81       	ld	r30, Y
    1e02:	f9 81       	ldd	r31, Y+1	; 0x01
    1e04:	cf 57       	subi	r28, 0x7F	; 127
    1e06:	d0 40       	sbci	r29, 0x00	; 0
    1e08:	80 e0       	ldi	r24, 0x00	; 0
    1e0a:	91 e0       	ldi	r25, 0x01	; 1
    1e0c:	09 95       	icall
	hx.set_amplify(&hx,64); // 32 64 128
    1e0e:	e0 91 3d 03 	lds	r30, 0x033D	; 0x80033d <hx+0x32>
    1e12:	f0 91 3e 03 	lds	r31, 0x033E	; 0x80033e <hx+0x33>
    1e16:	60 e4       	ldi	r22, 0x40	; 64
    1e18:	8b e0       	ldi	r24, 0x0B	; 11
    1e1a:	93 e0       	ldi	r25, 0x03	; 3
    1e1c:	09 95       	icall
			/***MENU 1***/
			case '1': // Main Program Menu
				//if(!strcmp(keypad.get().string,"A")){Menu='2';keypad.flush();lcd0.clear();break;}
				//if(!strcmp(keypad.get().string,"B")){Menu='3';keypad.flush();lcd0.clear();break;}					
		
				value=hx.average(&hx,tmp,4);
    1e1e:	0b e0       	ldi	r16, 0x0B	; 11
    1e20:	13 e0       	ldi	r17, 0x03	; 3
	hx.set_amplify(&hx,64); // 32 64 128
	/**********/
	//TODO:: Please write your application code
	while(TRUE){
		/***PREAMBLE***/
		lcd0.reboot();
    1e22:	a3 96       	adiw	r28, 0x23	; 35
    1e24:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e26:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e28:	a3 97       	sbiw	r28, 0x23	; 35
    1e2a:	09 95       	icall
			/***MENU 1***/
			case '1': // Main Program Menu
				//if(!strcmp(keypad.get().string,"A")){Menu='2';keypad.flush();lcd0.clear();break;}
				//if(!strcmp(keypad.get().string,"B")){Menu='3';keypad.flush();lcd0.clear();break;}					
		
				value=hx.average(&hx,tmp,4);
    1e2c:	40 91 f3 02 	lds	r20, 0x02F3	; 0x8002f3 <tmp>
    1e30:	50 91 f4 02 	lds	r21, 0x02F4	; 0x8002f4 <tmp+0x1>
    1e34:	60 91 f5 02 	lds	r22, 0x02F5	; 0x8002f5 <tmp+0x2>
    1e38:	70 91 f6 02 	lds	r23, 0x02F6	; 0x8002f6 <tmp+0x3>
    1e3c:	d8 01       	movw	r26, r16
    1e3e:	d6 96       	adiw	r26, 0x36	; 54
    1e40:	ed 91       	ld	r30, X+
    1e42:	fc 91       	ld	r31, X
    1e44:	d7 97       	sbiw	r26, 0x37	; 55
    1e46:	24 e0       	ldi	r18, 0x04	; 4
    1e48:	c8 01       	movw	r24, r16
    1e4a:	09 95       	icall
    1e4c:	2b 01       	movw	r4, r22
    1e4e:	3c 01       	movw	r6, r24
				value=(value-hx.cal.offset_64)/hx.cal.divfactor_64;
    1e50:	f8 01       	movw	r30, r16
    1e52:	63 8d       	ldd	r22, Z+27	; 0x1b
    1e54:	74 8d       	ldd	r23, Z+28	; 0x1c
    1e56:	85 8d       	ldd	r24, Z+29	; 0x1d
    1e58:	96 8d       	ldd	r25, Z+30	; 0x1e
    1e5a:	b5 d1       	rcall	.+874    	; 0x21c6 <__floatsisf>
    1e5c:	9b 01       	movw	r18, r22
    1e5e:	ac 01       	movw	r20, r24
    1e60:	c3 01       	movw	r24, r6
    1e62:	b2 01       	movw	r22, r4
    1e64:	ac d0       	rcall	.+344    	; 0x1fbe <__subsf3>
    1e66:	2b 01       	movw	r4, r22
    1e68:	3c 01       	movw	r6, r24
    1e6a:	d8 01       	movw	r26, r16
    1e6c:	96 96       	adiw	r26, 0x26	; 38
    1e6e:	6c 91       	ld	r22, X
    1e70:	70 e0       	ldi	r23, 0x00	; 0
    1e72:	80 e0       	ldi	r24, 0x00	; 0
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	a7 d1       	rcall	.+846    	; 0x21c6 <__floatsisf>
    1e78:	9b 01       	movw	r18, r22
    1e7a:	ac 01       	movw	r20, r24
    1e7c:	c3 01       	movw	r24, r6
    1e7e:	b2 01       	movw	r22, r4
    1e80:	07 d1       	rcall	.+526    	; 0x2090 <__divsf3>
    1e82:	2b 01       	movw	r4, r22
    1e84:	3c 01       	movw	r6, r24
				
				//Just to keep track
				lcd0.gotoxy(0,0);
    1e86:	60 e0       	ldi	r22, 0x00	; 0
    1e88:	70 e0       	ldi	r23, 0x00	; 0
    1e8a:	80 e0       	ldi	r24, 0x00	; 0
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	f5 01       	movw	r30, r10
    1e90:	09 95       	icall
				lcd0.string_size(function.i32toa(tmp), 8); lcd0.string_size("raw", 3); // RAW_READING
    1e92:	60 91 f3 02 	lds	r22, 0x02F3	; 0x8002f3 <tmp>
    1e96:	70 91 f4 02 	lds	r23, 0x02F4	; 0x8002f4 <tmp+0x1>
    1e9a:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <tmp+0x2>
    1e9e:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <tmp+0x3>
    1ea2:	ed a1       	ldd	r30, Y+37	; 0x25
    1ea4:	fe a1       	ldd	r31, Y+38	; 0x26
    1ea6:	09 95       	icall
    1ea8:	68 e0       	ldi	r22, 0x08	; 8
    1eaa:	f6 01       	movw	r30, r12
    1eac:	09 95       	icall
    1eae:	63 e0       	ldi	r22, 0x03	; 3
    1eb0:	80 e0       	ldi	r24, 0x00	; 0
    1eb2:	91 e0       	ldi	r25, 0x01	; 1
    1eb4:	f6 01       	movw	r30, r12
				
				
				//lcd0.gotoxy(2,0);
				//lcd0.string_size(function.ftoa(value,result,0), 12); lcd0.string_size("Kg", 4);
				//Display
				if (value > 999 || value < -999){
    1eb6:	09 95       	icall
    1eb8:	20 e0       	ldi	r18, 0x00	; 0
    1eba:	30 ec       	ldi	r19, 0xC0	; 192
    1ebc:	49 e7       	ldi	r20, 0x79	; 121
    1ebe:	54 e4       	ldi	r21, 0x44	; 68
    1ec0:	c3 01       	movw	r24, r6
    1ec2:	b2 01       	movw	r22, r4
    1ec4:	30 d2       	rcall	.+1120   	; 0x2326 <__gesf2>
    1ec6:	18 16       	cp	r1, r24
    1ec8:	4c f0       	brlt	.+18     	; 0x1edc <main+0x1c8>
    1eca:	20 e0       	ldi	r18, 0x00	; 0
    1ecc:	30 ec       	ldi	r19, 0xC0	; 192
    1ece:	49 e7       	ldi	r20, 0x79	; 121
    1ed0:	54 ec       	ldi	r21, 0xC4	; 196
    1ed2:	c3 01       	movw	r24, r6
    1ed4:	b2 01       	movw	r22, r4
    1ed6:	d8 d0       	rcall	.+432    	; 0x2088 <__cmpsf2>
    1ed8:	88 23       	and	r24, r24
    1eda:	dc f4       	brge	.+54     	; 0x1f12 <main+0x1fe>
					value = value/1000;
					lcd0.gotoxy(3,0);
    1edc:	60 e0       	ldi	r22, 0x00	; 0
    1ede:	70 e0       	ldi	r23, 0x00	; 0
    1ee0:	83 e0       	ldi	r24, 0x03	; 3
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	f5 01       	movw	r30, r10
					lcd0.string_size(function.ftoa(value,result,3), 12); lcd0.string_size("Kg", 4);
    1ee6:	09 95       	icall
    1ee8:	20 e0       	ldi	r18, 0x00	; 0
    1eea:	30 e0       	ldi	r19, 0x00	; 0
    1eec:	4a e7       	ldi	r20, 0x7A	; 122
    1eee:	54 e4       	ldi	r21, 0x44	; 68
    1ef0:	c3 01       	movw	r24, r6
    1ef2:	b2 01       	movw	r22, r4
    1ef4:	cd d0       	rcall	.+410    	; 0x2090 <__divsf3>
    1ef6:	23 e0       	ldi	r18, 0x03	; 3
    1ef8:	47 ef       	ldi	r20, 0xF7	; 247
    1efa:	52 e0       	ldi	r21, 0x02	; 2
    1efc:	f4 01       	movw	r30, r8
    1efe:	09 95       	icall
    1f00:	6c e0       	ldi	r22, 0x0C	; 12
    1f02:	f6 01       	movw	r30, r12
    1f04:	09 95       	icall
    1f06:	64 e0       	ldi	r22, 0x04	; 4
    1f08:	84 e0       	ldi	r24, 0x04	; 4
    1f0a:	91 e0       	ldi	r25, 0x01	; 1
    1f0c:	f6 01       	movw	r30, r12
    1f0e:	09 95       	icall
    1f10:	88 cf       	rjmp	.-240    	; 0x1e22 <main+0x10e>
				}else{
					lcd0.gotoxy(3,0);
    1f12:	60 e0       	ldi	r22, 0x00	; 0
    1f14:	70 e0       	ldi	r23, 0x00	; 0
    1f16:	83 e0       	ldi	r24, 0x03	; 3
    1f18:	90 e0       	ldi	r25, 0x00	; 0
    1f1a:	f5 01       	movw	r30, r10
    1f1c:	09 95       	icall
					lcd0.string_size(function.ftoa(value,result,0), 12); lcd0.string_size("gram", 4);
    1f1e:	20 e0       	ldi	r18, 0x00	; 0
    1f20:	47 ef       	ldi	r20, 0xF7	; 247
    1f22:	52 e0       	ldi	r21, 0x02	; 2
    1f24:	c3 01       	movw	r24, r6
    1f26:	b2 01       	movw	r22, r4
    1f28:	f4 01       	movw	r30, r8
    1f2a:	09 95       	icall
    1f2c:	6c e0       	ldi	r22, 0x0C	; 12
    1f2e:	f6 01       	movw	r30, r12
    1f30:	09 95       	icall
    1f32:	64 e0       	ldi	r22, 0x04	; 4
    1f34:	87 e0       	ldi	r24, 0x07	; 7
    1f36:	91 e0       	ldi	r25, 0x01	; 1
    1f38:	f6 01       	movw	r30, r12
    1f3a:	09 95       	icall
    1f3c:	72 cf       	rjmp	.-284    	; 0x1e22 <main+0x10e>

00001f3e <__vector_15>:
}
/*
** interrupt
*/
ISR(TIMER0_COMP_vect)
{
    1f3e:	1f 92       	push	r1
    1f40:	0f 92       	push	r0
    1f42:	0f b6       	in	r0, 0x3f	; 63
    1f44:	0f 92       	push	r0
    1f46:	11 24       	eor	r1, r1
    1f48:	0b b6       	in	r0, 0x3b	; 59
    1f4a:	0f 92       	push	r0
    1f4c:	2f 93       	push	r18
    1f4e:	3f 93       	push	r19
    1f50:	4f 93       	push	r20
    1f52:	5f 93       	push	r21
    1f54:	6f 93       	push	r22
    1f56:	7f 93       	push	r23
    1f58:	8f 93       	push	r24
    1f5a:	9f 93       	push	r25
    1f5c:	af 93       	push	r26
    1f5e:	bf 93       	push	r27
    1f60:	cf 93       	push	r28
    1f62:	ef 93       	push	r30
    1f64:	ff 93       	push	r31
	/***Block other interrupts during this procedure***/
	uint8_t Sreg;
	Sreg=SREG;
    1f66:	cf b7       	in	r28, 0x3f	; 63
	SREG&=~(1<<7);
    1f68:	8f b7       	in	r24, 0x3f	; 63
    1f6a:	8f 77       	andi	r24, 0x7F	; 127
    1f6c:	8f bf       	out	0x3f, r24	; 63
	/***Block other interrupts during this procedure***/	
	tmp=hx.readraw(&hx);
    1f6e:	e0 91 3f 03 	lds	r30, 0x033F	; 0x80033f <hx+0x34>
    1f72:	f0 91 40 03 	lds	r31, 0x0340	; 0x800340 <hx+0x35>
    1f76:	8b e0       	ldi	r24, 0x0B	; 11
    1f78:	93 e0       	ldi	r25, 0x03	; 3
    1f7a:	09 95       	icall
    1f7c:	60 93 f3 02 	sts	0x02F3, r22	; 0x8002f3 <tmp>
    1f80:	70 93 f4 02 	sts	0x02F4, r23	; 0x8002f4 <tmp+0x1>
    1f84:	80 93 f5 02 	sts	0x02F5, r24	; 0x8002f5 <tmp+0x2>
    1f88:	90 93 f6 02 	sts	0x02F6, r25	; 0x8002f6 <tmp+0x3>

	PORTC^=(1<<0);
    1f8c:	95 b3       	in	r25, 0x15	; 21
    1f8e:	81 e0       	ldi	r24, 0x01	; 1
    1f90:	89 27       	eor	r24, r25
    1f92:	85 bb       	out	0x15, r24	; 21
	
	/***enable interrupts again***/
	SREG=Sreg;
    1f94:	cf bf       	out	0x3f, r28	; 63
}
    1f96:	ff 91       	pop	r31
    1f98:	ef 91       	pop	r30
    1f9a:	cf 91       	pop	r28
    1f9c:	bf 91       	pop	r27
    1f9e:	af 91       	pop	r26
    1fa0:	9f 91       	pop	r25
    1fa2:	8f 91       	pop	r24
    1fa4:	7f 91       	pop	r23
    1fa6:	6f 91       	pop	r22
    1fa8:	5f 91       	pop	r21
    1faa:	4f 91       	pop	r20
    1fac:	3f 91       	pop	r19
    1fae:	2f 91       	pop	r18
    1fb0:	0f 90       	pop	r0
    1fb2:	0b be       	out	0x3b, r0	; 59
    1fb4:	0f 90       	pop	r0
    1fb6:	0f be       	out	0x3f, r0	; 63
    1fb8:	0f 90       	pop	r0
    1fba:	1f 90       	pop	r1
    1fbc:	18 95       	reti

00001fbe <__subsf3>:
    1fbe:	50 58       	subi	r21, 0x80	; 128

00001fc0 <__addsf3>:
    1fc0:	bb 27       	eor	r27, r27
    1fc2:	aa 27       	eor	r26, r26
    1fc4:	0e d0       	rcall	.+28     	; 0x1fe2 <__addsf3x>
    1fc6:	75 c1       	rjmp	.+746    	; 0x22b2 <__fp_round>
    1fc8:	66 d1       	rcall	.+716    	; 0x2296 <__fp_pscA>
    1fca:	30 f0       	brcs	.+12     	; 0x1fd8 <__addsf3+0x18>
    1fcc:	6b d1       	rcall	.+726    	; 0x22a4 <__fp_pscB>
    1fce:	20 f0       	brcs	.+8      	; 0x1fd8 <__addsf3+0x18>
    1fd0:	31 f4       	brne	.+12     	; 0x1fde <__addsf3+0x1e>
    1fd2:	9f 3f       	cpi	r25, 0xFF	; 255
    1fd4:	11 f4       	brne	.+4      	; 0x1fda <__addsf3+0x1a>
    1fd6:	1e f4       	brtc	.+6      	; 0x1fde <__addsf3+0x1e>
    1fd8:	5b c1       	rjmp	.+694    	; 0x2290 <__fp_nan>
    1fda:	0e f4       	brtc	.+2      	; 0x1fde <__addsf3+0x1e>
    1fdc:	e0 95       	com	r30
    1fde:	e7 fb       	bst	r30, 7
    1fe0:	51 c1       	rjmp	.+674    	; 0x2284 <__fp_inf>

00001fe2 <__addsf3x>:
    1fe2:	e9 2f       	mov	r30, r25
    1fe4:	77 d1       	rcall	.+750    	; 0x22d4 <__fp_split3>
    1fe6:	80 f3       	brcs	.-32     	; 0x1fc8 <__addsf3+0x8>
    1fe8:	ba 17       	cp	r27, r26
    1fea:	62 07       	cpc	r22, r18
    1fec:	73 07       	cpc	r23, r19
    1fee:	84 07       	cpc	r24, r20
    1ff0:	95 07       	cpc	r25, r21
    1ff2:	18 f0       	brcs	.+6      	; 0x1ffa <__addsf3x+0x18>
    1ff4:	71 f4       	brne	.+28     	; 0x2012 <__addsf3x+0x30>
    1ff6:	9e f5       	brtc	.+102    	; 0x205e <__addsf3x+0x7c>
    1ff8:	8f c1       	rjmp	.+798    	; 0x2318 <__fp_zero>
    1ffa:	0e f4       	brtc	.+2      	; 0x1ffe <__addsf3x+0x1c>
    1ffc:	e0 95       	com	r30
    1ffe:	0b 2e       	mov	r0, r27
    2000:	ba 2f       	mov	r27, r26
    2002:	a0 2d       	mov	r26, r0
    2004:	0b 01       	movw	r0, r22
    2006:	b9 01       	movw	r22, r18
    2008:	90 01       	movw	r18, r0
    200a:	0c 01       	movw	r0, r24
    200c:	ca 01       	movw	r24, r20
    200e:	a0 01       	movw	r20, r0
    2010:	11 24       	eor	r1, r1
    2012:	ff 27       	eor	r31, r31
    2014:	59 1b       	sub	r21, r25
    2016:	99 f0       	breq	.+38     	; 0x203e <__addsf3x+0x5c>
    2018:	59 3f       	cpi	r21, 0xF9	; 249
    201a:	50 f4       	brcc	.+20     	; 0x2030 <__addsf3x+0x4e>
    201c:	50 3e       	cpi	r21, 0xE0	; 224
    201e:	68 f1       	brcs	.+90     	; 0x207a <__addsf3x+0x98>
    2020:	1a 16       	cp	r1, r26
    2022:	f0 40       	sbci	r31, 0x00	; 0
    2024:	a2 2f       	mov	r26, r18
    2026:	23 2f       	mov	r18, r19
    2028:	34 2f       	mov	r19, r20
    202a:	44 27       	eor	r20, r20
    202c:	58 5f       	subi	r21, 0xF8	; 248
    202e:	f3 cf       	rjmp	.-26     	; 0x2016 <__addsf3x+0x34>
    2030:	46 95       	lsr	r20
    2032:	37 95       	ror	r19
    2034:	27 95       	ror	r18
    2036:	a7 95       	ror	r26
    2038:	f0 40       	sbci	r31, 0x00	; 0
    203a:	53 95       	inc	r21
    203c:	c9 f7       	brne	.-14     	; 0x2030 <__addsf3x+0x4e>
    203e:	7e f4       	brtc	.+30     	; 0x205e <__addsf3x+0x7c>
    2040:	1f 16       	cp	r1, r31
    2042:	ba 0b       	sbc	r27, r26
    2044:	62 0b       	sbc	r22, r18
    2046:	73 0b       	sbc	r23, r19
    2048:	84 0b       	sbc	r24, r20
    204a:	ba f0       	brmi	.+46     	; 0x207a <__addsf3x+0x98>
    204c:	91 50       	subi	r25, 0x01	; 1
    204e:	a1 f0       	breq	.+40     	; 0x2078 <__addsf3x+0x96>
    2050:	ff 0f       	add	r31, r31
    2052:	bb 1f       	adc	r27, r27
    2054:	66 1f       	adc	r22, r22
    2056:	77 1f       	adc	r23, r23
    2058:	88 1f       	adc	r24, r24
    205a:	c2 f7       	brpl	.-16     	; 0x204c <__addsf3x+0x6a>
    205c:	0e c0       	rjmp	.+28     	; 0x207a <__addsf3x+0x98>
    205e:	ba 0f       	add	r27, r26
    2060:	62 1f       	adc	r22, r18
    2062:	73 1f       	adc	r23, r19
    2064:	84 1f       	adc	r24, r20
    2066:	48 f4       	brcc	.+18     	; 0x207a <__addsf3x+0x98>
    2068:	87 95       	ror	r24
    206a:	77 95       	ror	r23
    206c:	67 95       	ror	r22
    206e:	b7 95       	ror	r27
    2070:	f7 95       	ror	r31
    2072:	9e 3f       	cpi	r25, 0xFE	; 254
    2074:	08 f0       	brcs	.+2      	; 0x2078 <__addsf3x+0x96>
    2076:	b3 cf       	rjmp	.-154    	; 0x1fde <__addsf3+0x1e>
    2078:	93 95       	inc	r25
    207a:	88 0f       	add	r24, r24
    207c:	08 f0       	brcs	.+2      	; 0x2080 <__addsf3x+0x9e>
    207e:	99 27       	eor	r25, r25
    2080:	ee 0f       	add	r30, r30
    2082:	97 95       	ror	r25
    2084:	87 95       	ror	r24
    2086:	08 95       	ret

00002088 <__cmpsf2>:
    2088:	d9 d0       	rcall	.+434    	; 0x223c <__fp_cmp>
    208a:	08 f4       	brcc	.+2      	; 0x208e <__cmpsf2+0x6>
    208c:	81 e0       	ldi	r24, 0x01	; 1
    208e:	08 95       	ret

00002090 <__divsf3>:
    2090:	0c d0       	rcall	.+24     	; 0x20aa <__divsf3x>
    2092:	0f c1       	rjmp	.+542    	; 0x22b2 <__fp_round>
    2094:	07 d1       	rcall	.+526    	; 0x22a4 <__fp_pscB>
    2096:	40 f0       	brcs	.+16     	; 0x20a8 <__divsf3+0x18>
    2098:	fe d0       	rcall	.+508    	; 0x2296 <__fp_pscA>
    209a:	30 f0       	brcs	.+12     	; 0x20a8 <__divsf3+0x18>
    209c:	21 f4       	brne	.+8      	; 0x20a6 <__divsf3+0x16>
    209e:	5f 3f       	cpi	r21, 0xFF	; 255
    20a0:	19 f0       	breq	.+6      	; 0x20a8 <__divsf3+0x18>
    20a2:	f0 c0       	rjmp	.+480    	; 0x2284 <__fp_inf>
    20a4:	51 11       	cpse	r21, r1
    20a6:	39 c1       	rjmp	.+626    	; 0x231a <__fp_szero>
    20a8:	f3 c0       	rjmp	.+486    	; 0x2290 <__fp_nan>

000020aa <__divsf3x>:
    20aa:	14 d1       	rcall	.+552    	; 0x22d4 <__fp_split3>
    20ac:	98 f3       	brcs	.-26     	; 0x2094 <__divsf3+0x4>

000020ae <__divsf3_pse>:
    20ae:	99 23       	and	r25, r25
    20b0:	c9 f3       	breq	.-14     	; 0x20a4 <__divsf3+0x14>
    20b2:	55 23       	and	r21, r21
    20b4:	b1 f3       	breq	.-20     	; 0x20a2 <__divsf3+0x12>
    20b6:	95 1b       	sub	r25, r21
    20b8:	55 0b       	sbc	r21, r21
    20ba:	bb 27       	eor	r27, r27
    20bc:	aa 27       	eor	r26, r26
    20be:	62 17       	cp	r22, r18
    20c0:	73 07       	cpc	r23, r19
    20c2:	84 07       	cpc	r24, r20
    20c4:	38 f0       	brcs	.+14     	; 0x20d4 <__divsf3_pse+0x26>
    20c6:	9f 5f       	subi	r25, 0xFF	; 255
    20c8:	5f 4f       	sbci	r21, 0xFF	; 255
    20ca:	22 0f       	add	r18, r18
    20cc:	33 1f       	adc	r19, r19
    20ce:	44 1f       	adc	r20, r20
    20d0:	aa 1f       	adc	r26, r26
    20d2:	a9 f3       	breq	.-22     	; 0x20be <__divsf3_pse+0x10>
    20d4:	33 d0       	rcall	.+102    	; 0x213c <__divsf3_pse+0x8e>
    20d6:	0e 2e       	mov	r0, r30
    20d8:	3a f0       	brmi	.+14     	; 0x20e8 <__divsf3_pse+0x3a>
    20da:	e0 e8       	ldi	r30, 0x80	; 128
    20dc:	30 d0       	rcall	.+96     	; 0x213e <__divsf3_pse+0x90>
    20de:	91 50       	subi	r25, 0x01	; 1
    20e0:	50 40       	sbci	r21, 0x00	; 0
    20e2:	e6 95       	lsr	r30
    20e4:	00 1c       	adc	r0, r0
    20e6:	ca f7       	brpl	.-14     	; 0x20da <__divsf3_pse+0x2c>
    20e8:	29 d0       	rcall	.+82     	; 0x213c <__divsf3_pse+0x8e>
    20ea:	fe 2f       	mov	r31, r30
    20ec:	27 d0       	rcall	.+78     	; 0x213c <__divsf3_pse+0x8e>
    20ee:	66 0f       	add	r22, r22
    20f0:	77 1f       	adc	r23, r23
    20f2:	88 1f       	adc	r24, r24
    20f4:	bb 1f       	adc	r27, r27
    20f6:	26 17       	cp	r18, r22
    20f8:	37 07       	cpc	r19, r23
    20fa:	48 07       	cpc	r20, r24
    20fc:	ab 07       	cpc	r26, r27
    20fe:	b0 e8       	ldi	r27, 0x80	; 128
    2100:	09 f0       	breq	.+2      	; 0x2104 <__divsf3_pse+0x56>
    2102:	bb 0b       	sbc	r27, r27
    2104:	80 2d       	mov	r24, r0
    2106:	bf 01       	movw	r22, r30
    2108:	ff 27       	eor	r31, r31
    210a:	93 58       	subi	r25, 0x83	; 131
    210c:	5f 4f       	sbci	r21, 0xFF	; 255
    210e:	2a f0       	brmi	.+10     	; 0x211a <__divsf3_pse+0x6c>
    2110:	9e 3f       	cpi	r25, 0xFE	; 254
    2112:	51 05       	cpc	r21, r1
    2114:	68 f0       	brcs	.+26     	; 0x2130 <__divsf3_pse+0x82>
    2116:	b6 c0       	rjmp	.+364    	; 0x2284 <__fp_inf>
    2118:	00 c1       	rjmp	.+512    	; 0x231a <__fp_szero>
    211a:	5f 3f       	cpi	r21, 0xFF	; 255
    211c:	ec f3       	brlt	.-6      	; 0x2118 <__divsf3_pse+0x6a>
    211e:	98 3e       	cpi	r25, 0xE8	; 232
    2120:	dc f3       	brlt	.-10     	; 0x2118 <__divsf3_pse+0x6a>
    2122:	86 95       	lsr	r24
    2124:	77 95       	ror	r23
    2126:	67 95       	ror	r22
    2128:	b7 95       	ror	r27
    212a:	f7 95       	ror	r31
    212c:	9f 5f       	subi	r25, 0xFF	; 255
    212e:	c9 f7       	brne	.-14     	; 0x2122 <__divsf3_pse+0x74>
    2130:	88 0f       	add	r24, r24
    2132:	91 1d       	adc	r25, r1
    2134:	96 95       	lsr	r25
    2136:	87 95       	ror	r24
    2138:	97 f9       	bld	r25, 7
    213a:	08 95       	ret
    213c:	e1 e0       	ldi	r30, 0x01	; 1
    213e:	66 0f       	add	r22, r22
    2140:	77 1f       	adc	r23, r23
    2142:	88 1f       	adc	r24, r24
    2144:	bb 1f       	adc	r27, r27
    2146:	62 17       	cp	r22, r18
    2148:	73 07       	cpc	r23, r19
    214a:	84 07       	cpc	r24, r20
    214c:	ba 07       	cpc	r27, r26
    214e:	20 f0       	brcs	.+8      	; 0x2158 <__divsf3_pse+0xaa>
    2150:	62 1b       	sub	r22, r18
    2152:	73 0b       	sbc	r23, r19
    2154:	84 0b       	sbc	r24, r20
    2156:	ba 0b       	sbc	r27, r26
    2158:	ee 1f       	adc	r30, r30
    215a:	88 f7       	brcc	.-30     	; 0x213e <__divsf3_pse+0x90>
    215c:	e0 95       	com	r30
    215e:	08 95       	ret

00002160 <__fixsfsi>:
    2160:	04 d0       	rcall	.+8      	; 0x216a <__fixunssfsi>
    2162:	68 94       	set
    2164:	b1 11       	cpse	r27, r1
    2166:	d9 c0       	rjmp	.+434    	; 0x231a <__fp_szero>
    2168:	08 95       	ret

0000216a <__fixunssfsi>:
    216a:	bc d0       	rcall	.+376    	; 0x22e4 <__fp_splitA>
    216c:	88 f0       	brcs	.+34     	; 0x2190 <__fixunssfsi+0x26>
    216e:	9f 57       	subi	r25, 0x7F	; 127
    2170:	90 f0       	brcs	.+36     	; 0x2196 <__fixunssfsi+0x2c>
    2172:	b9 2f       	mov	r27, r25
    2174:	99 27       	eor	r25, r25
    2176:	b7 51       	subi	r27, 0x17	; 23
    2178:	a0 f0       	brcs	.+40     	; 0x21a2 <__fixunssfsi+0x38>
    217a:	d1 f0       	breq	.+52     	; 0x21b0 <__fixunssfsi+0x46>
    217c:	66 0f       	add	r22, r22
    217e:	77 1f       	adc	r23, r23
    2180:	88 1f       	adc	r24, r24
    2182:	99 1f       	adc	r25, r25
    2184:	1a f0       	brmi	.+6      	; 0x218c <__fixunssfsi+0x22>
    2186:	ba 95       	dec	r27
    2188:	c9 f7       	brne	.-14     	; 0x217c <__fixunssfsi+0x12>
    218a:	12 c0       	rjmp	.+36     	; 0x21b0 <__fixunssfsi+0x46>
    218c:	b1 30       	cpi	r27, 0x01	; 1
    218e:	81 f0       	breq	.+32     	; 0x21b0 <__fixunssfsi+0x46>
    2190:	c3 d0       	rcall	.+390    	; 0x2318 <__fp_zero>
    2192:	b1 e0       	ldi	r27, 0x01	; 1
    2194:	08 95       	ret
    2196:	c0 c0       	rjmp	.+384    	; 0x2318 <__fp_zero>
    2198:	67 2f       	mov	r22, r23
    219a:	78 2f       	mov	r23, r24
    219c:	88 27       	eor	r24, r24
    219e:	b8 5f       	subi	r27, 0xF8	; 248
    21a0:	39 f0       	breq	.+14     	; 0x21b0 <__fixunssfsi+0x46>
    21a2:	b9 3f       	cpi	r27, 0xF9	; 249
    21a4:	cc f3       	brlt	.-14     	; 0x2198 <__fixunssfsi+0x2e>
    21a6:	86 95       	lsr	r24
    21a8:	77 95       	ror	r23
    21aa:	67 95       	ror	r22
    21ac:	b3 95       	inc	r27
    21ae:	d9 f7       	brne	.-10     	; 0x21a6 <__fixunssfsi+0x3c>
    21b0:	3e f4       	brtc	.+14     	; 0x21c0 <__fixunssfsi+0x56>
    21b2:	90 95       	com	r25
    21b4:	80 95       	com	r24
    21b6:	70 95       	com	r23
    21b8:	61 95       	neg	r22
    21ba:	7f 4f       	sbci	r23, 0xFF	; 255
    21bc:	8f 4f       	sbci	r24, 0xFF	; 255
    21be:	9f 4f       	sbci	r25, 0xFF	; 255
    21c0:	08 95       	ret

000021c2 <__floatunsisf>:
    21c2:	e8 94       	clt
    21c4:	09 c0       	rjmp	.+18     	; 0x21d8 <__floatsisf+0x12>

000021c6 <__floatsisf>:
    21c6:	97 fb       	bst	r25, 7
    21c8:	3e f4       	brtc	.+14     	; 0x21d8 <__floatsisf+0x12>
    21ca:	90 95       	com	r25
    21cc:	80 95       	com	r24
    21ce:	70 95       	com	r23
    21d0:	61 95       	neg	r22
    21d2:	7f 4f       	sbci	r23, 0xFF	; 255
    21d4:	8f 4f       	sbci	r24, 0xFF	; 255
    21d6:	9f 4f       	sbci	r25, 0xFF	; 255
    21d8:	99 23       	and	r25, r25
    21da:	a9 f0       	breq	.+42     	; 0x2206 <__floatsisf+0x40>
    21dc:	f9 2f       	mov	r31, r25
    21de:	96 e9       	ldi	r25, 0x96	; 150
    21e0:	bb 27       	eor	r27, r27
    21e2:	93 95       	inc	r25
    21e4:	f6 95       	lsr	r31
    21e6:	87 95       	ror	r24
    21e8:	77 95       	ror	r23
    21ea:	67 95       	ror	r22
    21ec:	b7 95       	ror	r27
    21ee:	f1 11       	cpse	r31, r1
    21f0:	f8 cf       	rjmp	.-16     	; 0x21e2 <__floatsisf+0x1c>
    21f2:	fa f4       	brpl	.+62     	; 0x2232 <__floatsisf+0x6c>
    21f4:	bb 0f       	add	r27, r27
    21f6:	11 f4       	brne	.+4      	; 0x21fc <__floatsisf+0x36>
    21f8:	60 ff       	sbrs	r22, 0
    21fa:	1b c0       	rjmp	.+54     	; 0x2232 <__floatsisf+0x6c>
    21fc:	6f 5f       	subi	r22, 0xFF	; 255
    21fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2200:	8f 4f       	sbci	r24, 0xFF	; 255
    2202:	9f 4f       	sbci	r25, 0xFF	; 255
    2204:	16 c0       	rjmp	.+44     	; 0x2232 <__floatsisf+0x6c>
    2206:	88 23       	and	r24, r24
    2208:	11 f0       	breq	.+4      	; 0x220e <__floatsisf+0x48>
    220a:	96 e9       	ldi	r25, 0x96	; 150
    220c:	11 c0       	rjmp	.+34     	; 0x2230 <__floatsisf+0x6a>
    220e:	77 23       	and	r23, r23
    2210:	21 f0       	breq	.+8      	; 0x221a <__floatsisf+0x54>
    2212:	9e e8       	ldi	r25, 0x8E	; 142
    2214:	87 2f       	mov	r24, r23
    2216:	76 2f       	mov	r23, r22
    2218:	05 c0       	rjmp	.+10     	; 0x2224 <__floatsisf+0x5e>
    221a:	66 23       	and	r22, r22
    221c:	71 f0       	breq	.+28     	; 0x223a <__floatsisf+0x74>
    221e:	96 e8       	ldi	r25, 0x86	; 134
    2220:	86 2f       	mov	r24, r22
    2222:	70 e0       	ldi	r23, 0x00	; 0
    2224:	60 e0       	ldi	r22, 0x00	; 0
    2226:	2a f0       	brmi	.+10     	; 0x2232 <__floatsisf+0x6c>
    2228:	9a 95       	dec	r25
    222a:	66 0f       	add	r22, r22
    222c:	77 1f       	adc	r23, r23
    222e:	88 1f       	adc	r24, r24
    2230:	da f7       	brpl	.-10     	; 0x2228 <__floatsisf+0x62>
    2232:	88 0f       	add	r24, r24
    2234:	96 95       	lsr	r25
    2236:	87 95       	ror	r24
    2238:	97 f9       	bld	r25, 7
    223a:	08 95       	ret

0000223c <__fp_cmp>:
    223c:	99 0f       	add	r25, r25
    223e:	00 08       	sbc	r0, r0
    2240:	55 0f       	add	r21, r21
    2242:	aa 0b       	sbc	r26, r26
    2244:	e0 e8       	ldi	r30, 0x80	; 128
    2246:	fe ef       	ldi	r31, 0xFE	; 254
    2248:	16 16       	cp	r1, r22
    224a:	17 06       	cpc	r1, r23
    224c:	e8 07       	cpc	r30, r24
    224e:	f9 07       	cpc	r31, r25
    2250:	c0 f0       	brcs	.+48     	; 0x2282 <__fp_cmp+0x46>
    2252:	12 16       	cp	r1, r18
    2254:	13 06       	cpc	r1, r19
    2256:	e4 07       	cpc	r30, r20
    2258:	f5 07       	cpc	r31, r21
    225a:	98 f0       	brcs	.+38     	; 0x2282 <__fp_cmp+0x46>
    225c:	62 1b       	sub	r22, r18
    225e:	73 0b       	sbc	r23, r19
    2260:	84 0b       	sbc	r24, r20
    2262:	95 0b       	sbc	r25, r21
    2264:	39 f4       	brne	.+14     	; 0x2274 <__fp_cmp+0x38>
    2266:	0a 26       	eor	r0, r26
    2268:	61 f0       	breq	.+24     	; 0x2282 <__fp_cmp+0x46>
    226a:	23 2b       	or	r18, r19
    226c:	24 2b       	or	r18, r20
    226e:	25 2b       	or	r18, r21
    2270:	21 f4       	brne	.+8      	; 0x227a <__fp_cmp+0x3e>
    2272:	08 95       	ret
    2274:	0a 26       	eor	r0, r26
    2276:	09 f4       	brne	.+2      	; 0x227a <__fp_cmp+0x3e>
    2278:	a1 40       	sbci	r26, 0x01	; 1
    227a:	a6 95       	lsr	r26
    227c:	8f ef       	ldi	r24, 0xFF	; 255
    227e:	81 1d       	adc	r24, r1
    2280:	81 1d       	adc	r24, r1
    2282:	08 95       	ret

00002284 <__fp_inf>:
    2284:	97 f9       	bld	r25, 7
    2286:	9f 67       	ori	r25, 0x7F	; 127
    2288:	80 e8       	ldi	r24, 0x80	; 128
    228a:	70 e0       	ldi	r23, 0x00	; 0
    228c:	60 e0       	ldi	r22, 0x00	; 0
    228e:	08 95       	ret

00002290 <__fp_nan>:
    2290:	9f ef       	ldi	r25, 0xFF	; 255
    2292:	80 ec       	ldi	r24, 0xC0	; 192
    2294:	08 95       	ret

00002296 <__fp_pscA>:
    2296:	00 24       	eor	r0, r0
    2298:	0a 94       	dec	r0
    229a:	16 16       	cp	r1, r22
    229c:	17 06       	cpc	r1, r23
    229e:	18 06       	cpc	r1, r24
    22a0:	09 06       	cpc	r0, r25
    22a2:	08 95       	ret

000022a4 <__fp_pscB>:
    22a4:	00 24       	eor	r0, r0
    22a6:	0a 94       	dec	r0
    22a8:	12 16       	cp	r1, r18
    22aa:	13 06       	cpc	r1, r19
    22ac:	14 06       	cpc	r1, r20
    22ae:	05 06       	cpc	r0, r21
    22b0:	08 95       	ret

000022b2 <__fp_round>:
    22b2:	09 2e       	mov	r0, r25
    22b4:	03 94       	inc	r0
    22b6:	00 0c       	add	r0, r0
    22b8:	11 f4       	brne	.+4      	; 0x22be <__fp_round+0xc>
    22ba:	88 23       	and	r24, r24
    22bc:	52 f0       	brmi	.+20     	; 0x22d2 <__fp_round+0x20>
    22be:	bb 0f       	add	r27, r27
    22c0:	40 f4       	brcc	.+16     	; 0x22d2 <__fp_round+0x20>
    22c2:	bf 2b       	or	r27, r31
    22c4:	11 f4       	brne	.+4      	; 0x22ca <__fp_round+0x18>
    22c6:	60 ff       	sbrs	r22, 0
    22c8:	04 c0       	rjmp	.+8      	; 0x22d2 <__fp_round+0x20>
    22ca:	6f 5f       	subi	r22, 0xFF	; 255
    22cc:	7f 4f       	sbci	r23, 0xFF	; 255
    22ce:	8f 4f       	sbci	r24, 0xFF	; 255
    22d0:	9f 4f       	sbci	r25, 0xFF	; 255
    22d2:	08 95       	ret

000022d4 <__fp_split3>:
    22d4:	57 fd       	sbrc	r21, 7
    22d6:	90 58       	subi	r25, 0x80	; 128
    22d8:	44 0f       	add	r20, r20
    22da:	55 1f       	adc	r21, r21
    22dc:	59 f0       	breq	.+22     	; 0x22f4 <__fp_splitA+0x10>
    22de:	5f 3f       	cpi	r21, 0xFF	; 255
    22e0:	71 f0       	breq	.+28     	; 0x22fe <__fp_splitA+0x1a>
    22e2:	47 95       	ror	r20

000022e4 <__fp_splitA>:
    22e4:	88 0f       	add	r24, r24
    22e6:	97 fb       	bst	r25, 7
    22e8:	99 1f       	adc	r25, r25
    22ea:	61 f0       	breq	.+24     	; 0x2304 <__fp_splitA+0x20>
    22ec:	9f 3f       	cpi	r25, 0xFF	; 255
    22ee:	79 f0       	breq	.+30     	; 0x230e <__fp_splitA+0x2a>
    22f0:	87 95       	ror	r24
    22f2:	08 95       	ret
    22f4:	12 16       	cp	r1, r18
    22f6:	13 06       	cpc	r1, r19
    22f8:	14 06       	cpc	r1, r20
    22fa:	55 1f       	adc	r21, r21
    22fc:	f2 cf       	rjmp	.-28     	; 0x22e2 <__fp_split3+0xe>
    22fe:	46 95       	lsr	r20
    2300:	f1 df       	rcall	.-30     	; 0x22e4 <__fp_splitA>
    2302:	08 c0       	rjmp	.+16     	; 0x2314 <__fp_splitA+0x30>
    2304:	16 16       	cp	r1, r22
    2306:	17 06       	cpc	r1, r23
    2308:	18 06       	cpc	r1, r24
    230a:	99 1f       	adc	r25, r25
    230c:	f1 cf       	rjmp	.-30     	; 0x22f0 <__fp_splitA+0xc>
    230e:	86 95       	lsr	r24
    2310:	71 05       	cpc	r23, r1
    2312:	61 05       	cpc	r22, r1
    2314:	08 94       	sec
    2316:	08 95       	ret

00002318 <__fp_zero>:
    2318:	e8 94       	clt

0000231a <__fp_szero>:
    231a:	bb 27       	eor	r27, r27
    231c:	66 27       	eor	r22, r22
    231e:	77 27       	eor	r23, r23
    2320:	cb 01       	movw	r24, r22
    2322:	97 f9       	bld	r25, 7
    2324:	08 95       	ret

00002326 <__gesf2>:
    2326:	8a df       	rcall	.-236    	; 0x223c <__fp_cmp>
    2328:	08 f4       	brcc	.+2      	; 0x232c <__gesf2+0x6>
    232a:	8f ef       	ldi	r24, 0xFF	; 255
    232c:	08 95       	ret

0000232e <__mulsf3>:
    232e:	0b d0       	rcall	.+22     	; 0x2346 <__mulsf3x>
    2330:	c0 cf       	rjmp	.-128    	; 0x22b2 <__fp_round>
    2332:	b1 df       	rcall	.-158    	; 0x2296 <__fp_pscA>
    2334:	28 f0       	brcs	.+10     	; 0x2340 <__mulsf3+0x12>
    2336:	b6 df       	rcall	.-148    	; 0x22a4 <__fp_pscB>
    2338:	18 f0       	brcs	.+6      	; 0x2340 <__mulsf3+0x12>
    233a:	95 23       	and	r25, r21
    233c:	09 f0       	breq	.+2      	; 0x2340 <__mulsf3+0x12>
    233e:	a2 cf       	rjmp	.-188    	; 0x2284 <__fp_inf>
    2340:	a7 cf       	rjmp	.-178    	; 0x2290 <__fp_nan>
    2342:	11 24       	eor	r1, r1
    2344:	ea cf       	rjmp	.-44     	; 0x231a <__fp_szero>

00002346 <__mulsf3x>:
    2346:	c6 df       	rcall	.-116    	; 0x22d4 <__fp_split3>
    2348:	a0 f3       	brcs	.-24     	; 0x2332 <__mulsf3+0x4>

0000234a <__mulsf3_pse>:
    234a:	95 9f       	mul	r25, r21
    234c:	d1 f3       	breq	.-12     	; 0x2342 <__mulsf3+0x14>
    234e:	95 0f       	add	r25, r21
    2350:	50 e0       	ldi	r21, 0x00	; 0
    2352:	55 1f       	adc	r21, r21
    2354:	62 9f       	mul	r22, r18
    2356:	f0 01       	movw	r30, r0
    2358:	72 9f       	mul	r23, r18
    235a:	bb 27       	eor	r27, r27
    235c:	f0 0d       	add	r31, r0
    235e:	b1 1d       	adc	r27, r1
    2360:	63 9f       	mul	r22, r19
    2362:	aa 27       	eor	r26, r26
    2364:	f0 0d       	add	r31, r0
    2366:	b1 1d       	adc	r27, r1
    2368:	aa 1f       	adc	r26, r26
    236a:	64 9f       	mul	r22, r20
    236c:	66 27       	eor	r22, r22
    236e:	b0 0d       	add	r27, r0
    2370:	a1 1d       	adc	r26, r1
    2372:	66 1f       	adc	r22, r22
    2374:	82 9f       	mul	r24, r18
    2376:	22 27       	eor	r18, r18
    2378:	b0 0d       	add	r27, r0
    237a:	a1 1d       	adc	r26, r1
    237c:	62 1f       	adc	r22, r18
    237e:	73 9f       	mul	r23, r19
    2380:	b0 0d       	add	r27, r0
    2382:	a1 1d       	adc	r26, r1
    2384:	62 1f       	adc	r22, r18
    2386:	83 9f       	mul	r24, r19
    2388:	a0 0d       	add	r26, r0
    238a:	61 1d       	adc	r22, r1
    238c:	22 1f       	adc	r18, r18
    238e:	74 9f       	mul	r23, r20
    2390:	33 27       	eor	r19, r19
    2392:	a0 0d       	add	r26, r0
    2394:	61 1d       	adc	r22, r1
    2396:	23 1f       	adc	r18, r19
    2398:	84 9f       	mul	r24, r20
    239a:	60 0d       	add	r22, r0
    239c:	21 1d       	adc	r18, r1
    239e:	82 2f       	mov	r24, r18
    23a0:	76 2f       	mov	r23, r22
    23a2:	6a 2f       	mov	r22, r26
    23a4:	11 24       	eor	r1, r1
    23a6:	9f 57       	subi	r25, 0x7F	; 127
    23a8:	50 40       	sbci	r21, 0x00	; 0
    23aa:	8a f0       	brmi	.+34     	; 0x23ce <__mulsf3_pse+0x84>
    23ac:	e1 f0       	breq	.+56     	; 0x23e6 <__mulsf3_pse+0x9c>
    23ae:	88 23       	and	r24, r24
    23b0:	4a f0       	brmi	.+18     	; 0x23c4 <__mulsf3_pse+0x7a>
    23b2:	ee 0f       	add	r30, r30
    23b4:	ff 1f       	adc	r31, r31
    23b6:	bb 1f       	adc	r27, r27
    23b8:	66 1f       	adc	r22, r22
    23ba:	77 1f       	adc	r23, r23
    23bc:	88 1f       	adc	r24, r24
    23be:	91 50       	subi	r25, 0x01	; 1
    23c0:	50 40       	sbci	r21, 0x00	; 0
    23c2:	a9 f7       	brne	.-22     	; 0x23ae <__mulsf3_pse+0x64>
    23c4:	9e 3f       	cpi	r25, 0xFE	; 254
    23c6:	51 05       	cpc	r21, r1
    23c8:	70 f0       	brcs	.+28     	; 0x23e6 <__mulsf3_pse+0x9c>
    23ca:	5c cf       	rjmp	.-328    	; 0x2284 <__fp_inf>
    23cc:	a6 cf       	rjmp	.-180    	; 0x231a <__fp_szero>
    23ce:	5f 3f       	cpi	r21, 0xFF	; 255
    23d0:	ec f3       	brlt	.-6      	; 0x23cc <__mulsf3_pse+0x82>
    23d2:	98 3e       	cpi	r25, 0xE8	; 232
    23d4:	dc f3       	brlt	.-10     	; 0x23cc <__mulsf3_pse+0x82>
    23d6:	86 95       	lsr	r24
    23d8:	77 95       	ror	r23
    23da:	67 95       	ror	r22
    23dc:	b7 95       	ror	r27
    23de:	f7 95       	ror	r31
    23e0:	e7 95       	ror	r30
    23e2:	9f 5f       	subi	r25, 0xFF	; 255
    23e4:	c1 f7       	brne	.-16     	; 0x23d6 <__mulsf3_pse+0x8c>
    23e6:	fe 2b       	or	r31, r30
    23e8:	88 0f       	add	r24, r24
    23ea:	91 1d       	adc	r25, r1
    23ec:	96 95       	lsr	r25
    23ee:	87 95       	ror	r24
    23f0:	97 f9       	bld	r25, 7
    23f2:	08 95       	ret

000023f4 <pow>:
    23f4:	fa 01       	movw	r30, r20
    23f6:	ee 0f       	add	r30, r30
    23f8:	ff 1f       	adc	r31, r31
    23fa:	30 96       	adiw	r30, 0x00	; 0
    23fc:	21 05       	cpc	r18, r1
    23fe:	31 05       	cpc	r19, r1
    2400:	99 f1       	breq	.+102    	; 0x2468 <pow+0x74>
    2402:	61 15       	cp	r22, r1
    2404:	71 05       	cpc	r23, r1
    2406:	61 f4       	brne	.+24     	; 0x2420 <pow+0x2c>
    2408:	80 38       	cpi	r24, 0x80	; 128
    240a:	bf e3       	ldi	r27, 0x3F	; 63
    240c:	9b 07       	cpc	r25, r27
    240e:	49 f1       	breq	.+82     	; 0x2462 <pow+0x6e>
    2410:	68 94       	set
    2412:	90 38       	cpi	r25, 0x80	; 128
    2414:	81 05       	cpc	r24, r1
    2416:	61 f0       	breq	.+24     	; 0x2430 <pow+0x3c>
    2418:	80 38       	cpi	r24, 0x80	; 128
    241a:	bf ef       	ldi	r27, 0xFF	; 255
    241c:	9b 07       	cpc	r25, r27
    241e:	41 f0       	breq	.+16     	; 0x2430 <pow+0x3c>
    2420:	99 23       	and	r25, r25
    2422:	42 f5       	brpl	.+80     	; 0x2474 <pow+0x80>
    2424:	ff 3f       	cpi	r31, 0xFF	; 255
    2426:	e1 05       	cpc	r30, r1
    2428:	31 05       	cpc	r19, r1
    242a:	21 05       	cpc	r18, r1
    242c:	11 f1       	breq	.+68     	; 0x2472 <pow+0x7e>
    242e:	e8 94       	clt
    2430:	08 94       	sec
    2432:	e7 95       	ror	r30
    2434:	d9 01       	movw	r26, r18
    2436:	aa 23       	and	r26, r26
    2438:	29 f4       	brne	.+10     	; 0x2444 <pow+0x50>
    243a:	ab 2f       	mov	r26, r27
    243c:	be 2f       	mov	r27, r30
    243e:	f8 5f       	subi	r31, 0xF8	; 248
    2440:	d0 f3       	brcs	.-12     	; 0x2436 <pow+0x42>
    2442:	10 c0       	rjmp	.+32     	; 0x2464 <pow+0x70>
    2444:	ff 5f       	subi	r31, 0xFF	; 255
    2446:	70 f4       	brcc	.+28     	; 0x2464 <pow+0x70>
    2448:	a6 95       	lsr	r26
    244a:	e0 f7       	brcc	.-8      	; 0x2444 <pow+0x50>
    244c:	f7 39       	cpi	r31, 0x97	; 151
    244e:	50 f0       	brcs	.+20     	; 0x2464 <pow+0x70>
    2450:	19 f0       	breq	.+6      	; 0x2458 <pow+0x64>
    2452:	ff 3a       	cpi	r31, 0xAF	; 175
    2454:	38 f4       	brcc	.+14     	; 0x2464 <pow+0x70>
    2456:	9f 77       	andi	r25, 0x7F	; 127
    2458:	9f 93       	push	r25
    245a:	0c d0       	rcall	.+24     	; 0x2474 <pow+0x80>
    245c:	0f 90       	pop	r0
    245e:	07 fc       	sbrc	r0, 7
    2460:	90 58       	subi	r25, 0x80	; 128
    2462:	08 95       	ret
    2464:	3e f0       	brts	.+14     	; 0x2474 <pow+0x80>
    2466:	14 cf       	rjmp	.-472    	; 0x2290 <__fp_nan>
    2468:	60 e0       	ldi	r22, 0x00	; 0
    246a:	70 e0       	ldi	r23, 0x00	; 0
    246c:	80 e8       	ldi	r24, 0x80	; 128
    246e:	9f e3       	ldi	r25, 0x3F	; 63
    2470:	08 95       	ret
    2472:	4f e7       	ldi	r20, 0x7F	; 127
    2474:	9f 77       	andi	r25, 0x7F	; 127
    2476:	5f 93       	push	r21
    2478:	4f 93       	push	r20
    247a:	3f 93       	push	r19
    247c:	2f 93       	push	r18
    247e:	9e d0       	rcall	.+316    	; 0x25bc <log>
    2480:	2f 91       	pop	r18
    2482:	3f 91       	pop	r19
    2484:	4f 91       	pop	r20
    2486:	5f 91       	pop	r21
    2488:	52 df       	rcall	.-348    	; 0x232e <__mulsf3>
    248a:	05 c0       	rjmp	.+10     	; 0x2496 <exp>
    248c:	19 f4       	brne	.+6      	; 0x2494 <pow+0xa0>
    248e:	0e f0       	brts	.+2      	; 0x2492 <pow+0x9e>
    2490:	f9 ce       	rjmp	.-526    	; 0x2284 <__fp_inf>
    2492:	42 cf       	rjmp	.-380    	; 0x2318 <__fp_zero>
    2494:	fd ce       	rjmp	.-518    	; 0x2290 <__fp_nan>

00002496 <exp>:
    2496:	26 df       	rcall	.-436    	; 0x22e4 <__fp_splitA>
    2498:	c8 f3       	brcs	.-14     	; 0x248c <pow+0x98>
    249a:	96 38       	cpi	r25, 0x86	; 134
    249c:	c0 f7       	brcc	.-16     	; 0x248e <pow+0x9a>
    249e:	07 f8       	bld	r0, 7
    24a0:	0f 92       	push	r0
    24a2:	e8 94       	clt
    24a4:	2b e3       	ldi	r18, 0x3B	; 59
    24a6:	3a ea       	ldi	r19, 0xAA	; 170
    24a8:	48 eb       	ldi	r20, 0xB8	; 184
    24aa:	5f e7       	ldi	r21, 0x7F	; 127
    24ac:	4e df       	rcall	.-356    	; 0x234a <__mulsf3_pse>
    24ae:	0f 92       	push	r0
    24b0:	0f 92       	push	r0
    24b2:	0f 92       	push	r0
    24b4:	4d b7       	in	r20, 0x3d	; 61
    24b6:	5e b7       	in	r21, 0x3e	; 62
    24b8:	0f 92       	push	r0
    24ba:	c0 d0       	rcall	.+384    	; 0x263c <modf>
    24bc:	e2 ec       	ldi	r30, 0xC2	; 194
    24be:	f0 e0       	ldi	r31, 0x00	; 0
    24c0:	16 d0       	rcall	.+44     	; 0x24ee <__fp_powser>
    24c2:	4f 91       	pop	r20
    24c4:	5f 91       	pop	r21
    24c6:	ef 91       	pop	r30
    24c8:	ff 91       	pop	r31
    24ca:	e5 95       	asr	r30
    24cc:	ee 1f       	adc	r30, r30
    24ce:	ff 1f       	adc	r31, r31
    24d0:	49 f0       	breq	.+18     	; 0x24e4 <exp+0x4e>
    24d2:	fe 57       	subi	r31, 0x7E	; 126
    24d4:	e0 68       	ori	r30, 0x80	; 128
    24d6:	44 27       	eor	r20, r20
    24d8:	ee 0f       	add	r30, r30
    24da:	44 1f       	adc	r20, r20
    24dc:	fa 95       	dec	r31
    24de:	e1 f7       	brne	.-8      	; 0x24d8 <exp+0x42>
    24e0:	41 95       	neg	r20
    24e2:	55 0b       	sbc	r21, r21
    24e4:	32 d0       	rcall	.+100    	; 0x254a <ldexp>
    24e6:	0f 90       	pop	r0
    24e8:	07 fe       	sbrs	r0, 7
    24ea:	26 c0       	rjmp	.+76     	; 0x2538 <inverse>
    24ec:	08 95       	ret

000024ee <__fp_powser>:
    24ee:	df 93       	push	r29
    24f0:	cf 93       	push	r28
    24f2:	1f 93       	push	r17
    24f4:	0f 93       	push	r16
    24f6:	ff 92       	push	r15
    24f8:	ef 92       	push	r14
    24fa:	df 92       	push	r13
    24fc:	7b 01       	movw	r14, r22
    24fe:	8c 01       	movw	r16, r24
    2500:	68 94       	set
    2502:	05 c0       	rjmp	.+10     	; 0x250e <__fp_powser+0x20>
    2504:	da 2e       	mov	r13, r26
    2506:	ef 01       	movw	r28, r30
    2508:	1e df       	rcall	.-452    	; 0x2346 <__mulsf3x>
    250a:	fe 01       	movw	r30, r28
    250c:	e8 94       	clt
    250e:	a5 91       	lpm	r26, Z+
    2510:	25 91       	lpm	r18, Z+
    2512:	35 91       	lpm	r19, Z+
    2514:	45 91       	lpm	r20, Z+
    2516:	55 91       	lpm	r21, Z+
    2518:	ae f3       	brts	.-22     	; 0x2504 <__fp_powser+0x16>
    251a:	ef 01       	movw	r28, r30
    251c:	62 dd       	rcall	.-1340   	; 0x1fe2 <__addsf3x>
    251e:	fe 01       	movw	r30, r28
    2520:	97 01       	movw	r18, r14
    2522:	a8 01       	movw	r20, r16
    2524:	da 94       	dec	r13
    2526:	79 f7       	brne	.-34     	; 0x2506 <__fp_powser+0x18>
    2528:	df 90       	pop	r13
    252a:	ef 90       	pop	r14
    252c:	ff 90       	pop	r15
    252e:	0f 91       	pop	r16
    2530:	1f 91       	pop	r17
    2532:	cf 91       	pop	r28
    2534:	df 91       	pop	r29
    2536:	08 95       	ret

00002538 <inverse>:
    2538:	9b 01       	movw	r18, r22
    253a:	ac 01       	movw	r20, r24
    253c:	60 e0       	ldi	r22, 0x00	; 0
    253e:	70 e0       	ldi	r23, 0x00	; 0
    2540:	80 e8       	ldi	r24, 0x80	; 128
    2542:	9f e3       	ldi	r25, 0x3F	; 63
    2544:	a5 cd       	rjmp	.-1206   	; 0x2090 <__divsf3>
    2546:	9e ce       	rjmp	.-708    	; 0x2284 <__fp_inf>
    2548:	ac c0       	rjmp	.+344    	; 0x26a2 <__fp_mpack>

0000254a <ldexp>:
    254a:	cc de       	rcall	.-616    	; 0x22e4 <__fp_splitA>
    254c:	e8 f3       	brcs	.-6      	; 0x2548 <inverse+0x10>
    254e:	99 23       	and	r25, r25
    2550:	d9 f3       	breq	.-10     	; 0x2548 <inverse+0x10>
    2552:	94 0f       	add	r25, r20
    2554:	51 1d       	adc	r21, r1
    2556:	bb f3       	brvs	.-18     	; 0x2546 <inverse+0xe>
    2558:	91 50       	subi	r25, 0x01	; 1
    255a:	50 40       	sbci	r21, 0x00	; 0
    255c:	94 f0       	brlt	.+36     	; 0x2582 <ldexp+0x38>
    255e:	59 f0       	breq	.+22     	; 0x2576 <ldexp+0x2c>
    2560:	88 23       	and	r24, r24
    2562:	32 f0       	brmi	.+12     	; 0x2570 <ldexp+0x26>
    2564:	66 0f       	add	r22, r22
    2566:	77 1f       	adc	r23, r23
    2568:	88 1f       	adc	r24, r24
    256a:	91 50       	subi	r25, 0x01	; 1
    256c:	50 40       	sbci	r21, 0x00	; 0
    256e:	c1 f7       	brne	.-16     	; 0x2560 <ldexp+0x16>
    2570:	9e 3f       	cpi	r25, 0xFE	; 254
    2572:	51 05       	cpc	r21, r1
    2574:	44 f7       	brge	.-48     	; 0x2546 <inverse+0xe>
    2576:	88 0f       	add	r24, r24
    2578:	91 1d       	adc	r25, r1
    257a:	96 95       	lsr	r25
    257c:	87 95       	ror	r24
    257e:	97 f9       	bld	r25, 7
    2580:	08 95       	ret
    2582:	5f 3f       	cpi	r21, 0xFF	; 255
    2584:	ac f0       	brlt	.+42     	; 0x25b0 <ldexp+0x66>
    2586:	98 3e       	cpi	r25, 0xE8	; 232
    2588:	9c f0       	brlt	.+38     	; 0x25b0 <ldexp+0x66>
    258a:	bb 27       	eor	r27, r27
    258c:	86 95       	lsr	r24
    258e:	77 95       	ror	r23
    2590:	67 95       	ror	r22
    2592:	b7 95       	ror	r27
    2594:	08 f4       	brcc	.+2      	; 0x2598 <ldexp+0x4e>
    2596:	b1 60       	ori	r27, 0x01	; 1
    2598:	93 95       	inc	r25
    259a:	c1 f7       	brne	.-16     	; 0x258c <ldexp+0x42>
    259c:	bb 0f       	add	r27, r27
    259e:	58 f7       	brcc	.-42     	; 0x2576 <ldexp+0x2c>
    25a0:	11 f4       	brne	.+4      	; 0x25a6 <ldexp+0x5c>
    25a2:	60 ff       	sbrs	r22, 0
    25a4:	e8 cf       	rjmp	.-48     	; 0x2576 <ldexp+0x2c>
    25a6:	6f 5f       	subi	r22, 0xFF	; 255
    25a8:	7f 4f       	sbci	r23, 0xFF	; 255
    25aa:	8f 4f       	sbci	r24, 0xFF	; 255
    25ac:	9f 4f       	sbci	r25, 0xFF	; 255
    25ae:	e3 cf       	rjmp	.-58     	; 0x2576 <ldexp+0x2c>
    25b0:	b4 ce       	rjmp	.-664    	; 0x231a <__fp_szero>
    25b2:	0e f0       	brts	.+2      	; 0x25b6 <ldexp+0x6c>
    25b4:	76 c0       	rjmp	.+236    	; 0x26a2 <__fp_mpack>
    25b6:	6c ce       	rjmp	.-808    	; 0x2290 <__fp_nan>
    25b8:	68 94       	set
    25ba:	64 ce       	rjmp	.-824    	; 0x2284 <__fp_inf>

000025bc <log>:
    25bc:	93 de       	rcall	.-730    	; 0x22e4 <__fp_splitA>
    25be:	c8 f3       	brcs	.-14     	; 0x25b2 <ldexp+0x68>
    25c0:	99 23       	and	r25, r25
    25c2:	d1 f3       	breq	.-12     	; 0x25b8 <ldexp+0x6e>
    25c4:	c6 f3       	brts	.-16     	; 0x25b6 <ldexp+0x6c>
    25c6:	df 93       	push	r29
    25c8:	cf 93       	push	r28
    25ca:	1f 93       	push	r17
    25cc:	0f 93       	push	r16
    25ce:	ff 92       	push	r15
    25d0:	c9 2f       	mov	r28, r25
    25d2:	dd 27       	eor	r29, r29
    25d4:	88 23       	and	r24, r24
    25d6:	2a f0       	brmi	.+10     	; 0x25e2 <log+0x26>
    25d8:	21 97       	sbiw	r28, 0x01	; 1
    25da:	66 0f       	add	r22, r22
    25dc:	77 1f       	adc	r23, r23
    25de:	88 1f       	adc	r24, r24
    25e0:	da f7       	brpl	.-10     	; 0x25d8 <log+0x1c>
    25e2:	20 e0       	ldi	r18, 0x00	; 0
    25e4:	30 e0       	ldi	r19, 0x00	; 0
    25e6:	40 e8       	ldi	r20, 0x80	; 128
    25e8:	5f eb       	ldi	r21, 0xBF	; 191
    25ea:	9f e3       	ldi	r25, 0x3F	; 63
    25ec:	88 39       	cpi	r24, 0x98	; 152
    25ee:	20 f0       	brcs	.+8      	; 0x25f8 <log+0x3c>
    25f0:	80 3e       	cpi	r24, 0xE0	; 224
    25f2:	30 f0       	brcs	.+12     	; 0x2600 <log+0x44>
    25f4:	21 96       	adiw	r28, 0x01	; 1
    25f6:	8f 77       	andi	r24, 0x7F	; 127
    25f8:	e3 dc       	rcall	.-1594   	; 0x1fc0 <__addsf3>
    25fa:	ea ee       	ldi	r30, 0xEA	; 234
    25fc:	f0 e0       	ldi	r31, 0x00	; 0
    25fe:	03 c0       	rjmp	.+6      	; 0x2606 <log+0x4a>
    2600:	df dc       	rcall	.-1602   	; 0x1fc0 <__addsf3>
    2602:	e7 e1       	ldi	r30, 0x17	; 23
    2604:	f1 e0       	ldi	r31, 0x01	; 1
    2606:	73 df       	rcall	.-282    	; 0x24ee <__fp_powser>
    2608:	8b 01       	movw	r16, r22
    260a:	be 01       	movw	r22, r28
    260c:	ec 01       	movw	r28, r24
    260e:	fb 2e       	mov	r15, r27
    2610:	6f 57       	subi	r22, 0x7F	; 127
    2612:	71 09       	sbc	r23, r1
    2614:	75 95       	asr	r23
    2616:	77 1f       	adc	r23, r23
    2618:	88 0b       	sbc	r24, r24
    261a:	99 0b       	sbc	r25, r25
    261c:	d4 dd       	rcall	.-1112   	; 0x21c6 <__floatsisf>
    261e:	28 e1       	ldi	r18, 0x18	; 24
    2620:	32 e7       	ldi	r19, 0x72	; 114
    2622:	41 e3       	ldi	r20, 0x31	; 49
    2624:	5f e3       	ldi	r21, 0x3F	; 63
    2626:	8f de       	rcall	.-738    	; 0x2346 <__mulsf3x>
    2628:	af 2d       	mov	r26, r15
    262a:	98 01       	movw	r18, r16
    262c:	ae 01       	movw	r20, r28
    262e:	ff 90       	pop	r15
    2630:	0f 91       	pop	r16
    2632:	1f 91       	pop	r17
    2634:	cf 91       	pop	r28
    2636:	df 91       	pop	r29
    2638:	d4 dc       	rcall	.-1624   	; 0x1fe2 <__addsf3x>
    263a:	3b ce       	rjmp	.-906    	; 0x22b2 <__fp_round>

0000263c <modf>:
    263c:	fa 01       	movw	r30, r20
    263e:	dc 01       	movw	r26, r24
    2640:	aa 0f       	add	r26, r26
    2642:	bb 1f       	adc	r27, r27
    2644:	9b 01       	movw	r18, r22
    2646:	ac 01       	movw	r20, r24
    2648:	bf 57       	subi	r27, 0x7F	; 127
    264a:	28 f4       	brcc	.+10     	; 0x2656 <modf+0x1a>
    264c:	22 27       	eor	r18, r18
    264e:	33 27       	eor	r19, r19
    2650:	44 27       	eor	r20, r20
    2652:	50 78       	andi	r21, 0x80	; 128
    2654:	1f c0       	rjmp	.+62     	; 0x2694 <modf+0x58>
    2656:	b7 51       	subi	r27, 0x17	; 23
    2658:	88 f4       	brcc	.+34     	; 0x267c <modf+0x40>
    265a:	ab 2f       	mov	r26, r27
    265c:	00 24       	eor	r0, r0
    265e:	46 95       	lsr	r20
    2660:	37 95       	ror	r19
    2662:	27 95       	ror	r18
    2664:	01 1c       	adc	r0, r1
    2666:	a3 95       	inc	r26
    2668:	d2 f3       	brmi	.-12     	; 0x265e <modf+0x22>
    266a:	00 20       	and	r0, r0
    266c:	69 f0       	breq	.+26     	; 0x2688 <modf+0x4c>
    266e:	22 0f       	add	r18, r18
    2670:	33 1f       	adc	r19, r19
    2672:	44 1f       	adc	r20, r20
    2674:	b3 95       	inc	r27
    2676:	da f3       	brmi	.-10     	; 0x266e <modf+0x32>
    2678:	0d d0       	rcall	.+26     	; 0x2694 <modf+0x58>
    267a:	a1 cc       	rjmp	.-1726   	; 0x1fbe <__subsf3>
    267c:	61 30       	cpi	r22, 0x01	; 1
    267e:	71 05       	cpc	r23, r1
    2680:	a0 e8       	ldi	r26, 0x80	; 128
    2682:	8a 07       	cpc	r24, r26
    2684:	b9 46       	sbci	r27, 0x69	; 105
    2686:	30 f4       	brcc	.+12     	; 0x2694 <modf+0x58>
    2688:	9b 01       	movw	r18, r22
    268a:	ac 01       	movw	r20, r24
    268c:	66 27       	eor	r22, r22
    268e:	77 27       	eor	r23, r23
    2690:	88 27       	eor	r24, r24
    2692:	90 78       	andi	r25, 0x80	; 128
    2694:	30 96       	adiw	r30, 0x00	; 0
    2696:	21 f0       	breq	.+8      	; 0x26a0 <modf+0x64>
    2698:	20 83       	st	Z, r18
    269a:	31 83       	std	Z+1, r19	; 0x01
    269c:	42 83       	std	Z+2, r20	; 0x02
    269e:	53 83       	std	Z+3, r21	; 0x03
    26a0:	08 95       	ret

000026a2 <__fp_mpack>:
    26a2:	9f 3f       	cpi	r25, 0xFF	; 255
    26a4:	31 f0       	breq	.+12     	; 0x26b2 <__fp_mpack_finite+0xc>

000026a6 <__fp_mpack_finite>:
    26a6:	91 50       	subi	r25, 0x01	; 1
    26a8:	20 f4       	brcc	.+8      	; 0x26b2 <__fp_mpack_finite+0xc>
    26aa:	87 95       	ror	r24
    26ac:	77 95       	ror	r23
    26ae:	67 95       	ror	r22
    26b0:	b7 95       	ror	r27
    26b2:	88 0f       	add	r24, r24
    26b4:	91 1d       	adc	r25, r1
    26b6:	96 95       	lsr	r25
    26b8:	87 95       	ror	r24
    26ba:	97 f9       	bld	r25, 7
    26bc:	08 95       	ret

000026be <__mulsi3>:
    26be:	db 01       	movw	r26, r22
    26c0:	8f 93       	push	r24
    26c2:	9f 93       	push	r25
    26c4:	88 d0       	rcall	.+272    	; 0x27d6 <__muluhisi3>
    26c6:	bf 91       	pop	r27
    26c8:	af 91       	pop	r26
    26ca:	a2 9f       	mul	r26, r18
    26cc:	80 0d       	add	r24, r0
    26ce:	91 1d       	adc	r25, r1
    26d0:	a3 9f       	mul	r26, r19
    26d2:	90 0d       	add	r25, r0
    26d4:	b2 9f       	mul	r27, r18
    26d6:	90 0d       	add	r25, r0
    26d8:	11 24       	eor	r1, r1
    26da:	08 95       	ret

000026dc <__udivmodhi4>:
    26dc:	aa 1b       	sub	r26, r26
    26de:	bb 1b       	sub	r27, r27
    26e0:	51 e1       	ldi	r21, 0x11	; 17
    26e2:	07 c0       	rjmp	.+14     	; 0x26f2 <__udivmodhi4_ep>

000026e4 <__udivmodhi4_loop>:
    26e4:	aa 1f       	adc	r26, r26
    26e6:	bb 1f       	adc	r27, r27
    26e8:	a6 17       	cp	r26, r22
    26ea:	b7 07       	cpc	r27, r23
    26ec:	10 f0       	brcs	.+4      	; 0x26f2 <__udivmodhi4_ep>
    26ee:	a6 1b       	sub	r26, r22
    26f0:	b7 0b       	sbc	r27, r23

000026f2 <__udivmodhi4_ep>:
    26f2:	88 1f       	adc	r24, r24
    26f4:	99 1f       	adc	r25, r25
    26f6:	5a 95       	dec	r21
    26f8:	a9 f7       	brne	.-22     	; 0x26e4 <__udivmodhi4_loop>
    26fa:	80 95       	com	r24
    26fc:	90 95       	com	r25
    26fe:	bc 01       	movw	r22, r24
    2700:	cd 01       	movw	r24, r26
    2702:	08 95       	ret

00002704 <__divmodhi4>:
    2704:	97 fb       	bst	r25, 7
    2706:	07 2e       	mov	r0, r23
    2708:	16 f4       	brtc	.+4      	; 0x270e <__divmodhi4+0xa>
    270a:	00 94       	com	r0
    270c:	06 d0       	rcall	.+12     	; 0x271a <__divmodhi4_neg1>
    270e:	77 fd       	sbrc	r23, 7
    2710:	08 d0       	rcall	.+16     	; 0x2722 <__divmodhi4_neg2>
    2712:	e4 df       	rcall	.-56     	; 0x26dc <__udivmodhi4>
    2714:	07 fc       	sbrc	r0, 7
    2716:	05 d0       	rcall	.+10     	; 0x2722 <__divmodhi4_neg2>
    2718:	3e f4       	brtc	.+14     	; 0x2728 <__divmodhi4_exit>

0000271a <__divmodhi4_neg1>:
    271a:	90 95       	com	r25
    271c:	81 95       	neg	r24
    271e:	9f 4f       	sbci	r25, 0xFF	; 255
    2720:	08 95       	ret

00002722 <__divmodhi4_neg2>:
    2722:	70 95       	com	r23
    2724:	61 95       	neg	r22
    2726:	7f 4f       	sbci	r23, 0xFF	; 255

00002728 <__divmodhi4_exit>:
    2728:	08 95       	ret

0000272a <__udivmodsi4>:
    272a:	a1 e2       	ldi	r26, 0x21	; 33
    272c:	1a 2e       	mov	r1, r26
    272e:	aa 1b       	sub	r26, r26
    2730:	bb 1b       	sub	r27, r27
    2732:	fd 01       	movw	r30, r26
    2734:	0d c0       	rjmp	.+26     	; 0x2750 <__udivmodsi4_ep>

00002736 <__udivmodsi4_loop>:
    2736:	aa 1f       	adc	r26, r26
    2738:	bb 1f       	adc	r27, r27
    273a:	ee 1f       	adc	r30, r30
    273c:	ff 1f       	adc	r31, r31
    273e:	a2 17       	cp	r26, r18
    2740:	b3 07       	cpc	r27, r19
    2742:	e4 07       	cpc	r30, r20
    2744:	f5 07       	cpc	r31, r21
    2746:	20 f0       	brcs	.+8      	; 0x2750 <__udivmodsi4_ep>
    2748:	a2 1b       	sub	r26, r18
    274a:	b3 0b       	sbc	r27, r19
    274c:	e4 0b       	sbc	r30, r20
    274e:	f5 0b       	sbc	r31, r21

00002750 <__udivmodsi4_ep>:
    2750:	66 1f       	adc	r22, r22
    2752:	77 1f       	adc	r23, r23
    2754:	88 1f       	adc	r24, r24
    2756:	99 1f       	adc	r25, r25
    2758:	1a 94       	dec	r1
    275a:	69 f7       	brne	.-38     	; 0x2736 <__udivmodsi4_loop>
    275c:	60 95       	com	r22
    275e:	70 95       	com	r23
    2760:	80 95       	com	r24
    2762:	90 95       	com	r25
    2764:	9b 01       	movw	r18, r22
    2766:	ac 01       	movw	r20, r24
    2768:	bd 01       	movw	r22, r26
    276a:	cf 01       	movw	r24, r30
    276c:	08 95       	ret

0000276e <__divmodsi4>:
    276e:	05 2e       	mov	r0, r21
    2770:	97 fb       	bst	r25, 7
    2772:	16 f4       	brtc	.+4      	; 0x2778 <__divmodsi4+0xa>
    2774:	00 94       	com	r0
    2776:	0f d0       	rcall	.+30     	; 0x2796 <__negsi2>
    2778:	57 fd       	sbrc	r21, 7
    277a:	05 d0       	rcall	.+10     	; 0x2786 <__divmodsi4_neg2>
    277c:	d6 df       	rcall	.-84     	; 0x272a <__udivmodsi4>
    277e:	07 fc       	sbrc	r0, 7
    2780:	02 d0       	rcall	.+4      	; 0x2786 <__divmodsi4_neg2>
    2782:	46 f4       	brtc	.+16     	; 0x2794 <__divmodsi4_exit>
    2784:	08 c0       	rjmp	.+16     	; 0x2796 <__negsi2>

00002786 <__divmodsi4_neg2>:
    2786:	50 95       	com	r21
    2788:	40 95       	com	r20
    278a:	30 95       	com	r19
    278c:	21 95       	neg	r18
    278e:	3f 4f       	sbci	r19, 0xFF	; 255
    2790:	4f 4f       	sbci	r20, 0xFF	; 255
    2792:	5f 4f       	sbci	r21, 0xFF	; 255

00002794 <__divmodsi4_exit>:
    2794:	08 95       	ret

00002796 <__negsi2>:
    2796:	90 95       	com	r25
    2798:	80 95       	com	r24
    279a:	70 95       	com	r23
    279c:	61 95       	neg	r22
    279e:	7f 4f       	sbci	r23, 0xFF	; 255
    27a0:	8f 4f       	sbci	r24, 0xFF	; 255
    27a2:	9f 4f       	sbci	r25, 0xFF	; 255
    27a4:	08 95       	ret

000027a6 <__tablejump2__>:
    27a6:	ee 0f       	add	r30, r30
    27a8:	ff 1f       	adc	r31, r31
    27aa:	00 24       	eor	r0, r0
    27ac:	00 1c       	adc	r0, r0
    27ae:	0b be       	out	0x3b, r0	; 59
    27b0:	07 90       	elpm	r0, Z+
    27b2:	f6 91       	elpm	r31, Z
    27b4:	e0 2d       	mov	r30, r0
    27b6:	09 94       	ijmp

000027b8 <__umulhisi3>:
    27b8:	a2 9f       	mul	r26, r18
    27ba:	b0 01       	movw	r22, r0
    27bc:	b3 9f       	mul	r27, r19
    27be:	c0 01       	movw	r24, r0
    27c0:	a3 9f       	mul	r26, r19
    27c2:	70 0d       	add	r23, r0
    27c4:	81 1d       	adc	r24, r1
    27c6:	11 24       	eor	r1, r1
    27c8:	91 1d       	adc	r25, r1
    27ca:	b2 9f       	mul	r27, r18
    27cc:	70 0d       	add	r23, r0
    27ce:	81 1d       	adc	r24, r1
    27d0:	11 24       	eor	r1, r1
    27d2:	91 1d       	adc	r25, r1
    27d4:	08 95       	ret

000027d6 <__muluhisi3>:
    27d6:	f0 df       	rcall	.-32     	; 0x27b8 <__umulhisi3>
    27d8:	a5 9f       	mul	r26, r21
    27da:	90 0d       	add	r25, r0
    27dc:	b4 9f       	mul	r27, r20
    27de:	90 0d       	add	r25, r0
    27e0:	a4 9f       	mul	r26, r20
    27e2:	80 0d       	add	r24, r0
    27e4:	91 1d       	adc	r25, r1
    27e6:	11 24       	eor	r1, r1
    27e8:	08 95       	ret

000027ea <_exit>:
    27ea:	f8 94       	cli

000027ec <__stop_program>:
    27ec:	ff cf       	rjmp	.-2      	; 0x27ec <__stop_program>
