
Atmega128.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000290a  0000299e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000290a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000022c  0080010a  0080010a  000029a8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000029a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000029d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000005b8  00000000  00000000  00002a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005c32  00000000  00000000  00002fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000018b2  00000000  00000000  00008bfe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000351b  00000000  00000000  0000a4b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001048  00000000  00000000  0000d9cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000134d  00000000  00000000  0000ea14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000052be  00000000  00000000  0000fd61  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000538  00000000  00000000  0001501f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a1 c0       	rjmp	.+322    	; 0x144 <__ctors_end>
       2:	00 00       	nop
       4:	be c0       	rjmp	.+380    	; 0x182 <__bad_interrupt>
       6:	00 00       	nop
       8:	bc c0       	rjmp	.+376    	; 0x182 <__bad_interrupt>
       a:	00 00       	nop
       c:	ba c0       	rjmp	.+372    	; 0x182 <__bad_interrupt>
       e:	00 00       	nop
      10:	b8 c0       	rjmp	.+368    	; 0x182 <__bad_interrupt>
      12:	00 00       	nop
      14:	b6 c0       	rjmp	.+364    	; 0x182 <__bad_interrupt>
      16:	00 00       	nop
      18:	b4 c0       	rjmp	.+360    	; 0x182 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b2 c0       	rjmp	.+356    	; 0x182 <__bad_interrupt>
      1e:	00 00       	nop
      20:	b0 c0       	rjmp	.+352    	; 0x182 <__bad_interrupt>
      22:	00 00       	nop
      24:	ae c0       	rjmp	.+348    	; 0x182 <__bad_interrupt>
      26:	00 00       	nop
      28:	c0 c3       	rjmp	.+1920   	; 0x7aa <__vector_10>
      2a:	00 00       	nop
      2c:	8c c3       	rjmp	.+1816   	; 0x746 <__vector_11>
      2e:	00 00       	nop
      30:	94 c3       	rjmp	.+1832   	; 0x75a <__vector_12>
      32:	00 00       	nop
      34:	9c c3       	rjmp	.+1848   	; 0x76e <__vector_13>
      36:	00 00       	nop
      38:	ae c3       	rjmp	.+1884   	; 0x796 <__vector_14>
      3a:	00 00       	nop
      3c:	0c 94 e4 0f 	jmp	0x1fc8	; 0x1fc8 <__vector_15>
      40:	78 c3       	rjmp	.+1776   	; 0x732 <__vector_16>
      42:	00 00       	nop
      44:	9e c0       	rjmp	.+316    	; 0x182 <__bad_interrupt>
      46:	00 00       	nop
      48:	ec c3       	rjmp	.+2008   	; 0x822 <__vector_18>
      4a:	00 00       	nop
      4c:	20 c4       	rjmp	.+2112   	; 0x88e <__vector_19>
      4e:	00 00       	nop
      50:	98 c0       	rjmp	.+304    	; 0x182 <__bad_interrupt>
      52:	00 00       	nop
      54:	97 c0       	rjmp	.+302    	; 0x184 <__vector_21>
      56:	00 00       	nop
      58:	94 c0       	rjmp	.+296    	; 0x182 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	92 c0       	rjmp	.+292    	; 0x182 <__bad_interrupt>
      5e:	00 00       	nop
      60:	90 c3       	rjmp	.+1824   	; 0x782 <__vector_24>
      62:	00 00       	nop
      64:	ac c3       	rjmp	.+1880   	; 0x7be <__vector_25>
      66:	00 00       	nop
      68:	b4 c3       	rjmp	.+1896   	; 0x7d2 <__vector_26>
      6a:	00 00       	nop
      6c:	bc c3       	rjmp	.+1912   	; 0x7e6 <__vector_27>
      6e:	00 00       	nop
      70:	c4 c3       	rjmp	.+1928   	; 0x7fa <__vector_28>
      72:	00 00       	nop
      74:	cc c3       	rjmp	.+1944   	; 0x80e <__vector_29>
      76:	00 00       	nop
      78:	33 c4       	rjmp	.+2150   	; 0x8e0 <__vector_30>
      7a:	00 00       	nop
      7c:	6a c4       	rjmp	.+2260   	; 0x952 <__vector_31>
      7e:	00 00       	nop
      80:	80 c0       	rjmp	.+256    	; 0x182 <__bad_interrupt>
      82:	00 00       	nop
      84:	7e c0       	rjmp	.+252    	; 0x182 <__bad_interrupt>
      86:	00 00       	nop
      88:	7c c0       	rjmp	.+248    	; 0x182 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ba 02       	muls	r27, r26
      8e:	be 02       	muls	r27, r30
      90:	c2 02       	muls	r28, r18
      92:	c6 02       	muls	r28, r22
      94:	ca 02       	muls	r28, r26
      96:	d1 02       	muls	r29, r17
      98:	d8 02       	muls	r29, r24
      9a:	df 02       	muls	r29, r31
      9c:	e3 02       	muls	r30, r19
      9e:	ea 02       	muls	r30, r26
      a0:	f1 02       	muls	r31, r17
      a2:	f8 02       	muls	r31, r24
      a4:	fc 02       	muls	r31, r28
      a6:	03 03       	mulsu	r16, r19
      a8:	0a 03       	fmul	r16, r18
      aa:	26 03       	mulsu	r18, r22
      ac:	2a 03       	fmul	r18, r18
      ae:	2e 03       	fmul	r18, r22
      b0:	32 03       	mulsu	r19, r18
      b2:	38 03       	fmul	r19, r16
      b4:	3c 03       	fmul	r19, r20
      b6:	40 03       	mulsu	r20, r16
      b8:	44 03       	mulsu	r20, r20
      ba:	4d 03       	fmul	r20, r21
      bc:	51 03       	mulsu	r21, r17
      be:	55 03       	mulsu	r21, r21
      c0:	5e 03       	fmul	r21, r22
      c2:	07 63       	ori	r16, 0x37	; 55
      c4:	42 36       	cpi	r20, 0x62	; 98
      c6:	b7 9b       	sbis	0x16, 7	; 22
      c8:	d8 a7       	std	Y+40, r29	; 0x28
      ca:	1a 39       	cpi	r17, 0x9A	; 154
      cc:	68 56       	subi	r22, 0x68	; 104
      ce:	18 ae       	std	Y+56, r1	; 0x38
      d0:	ba ab       	std	Y+50, r27	; 0x32
      d2:	55 8c       	ldd	r5, Z+29	; 0x1d
      d4:	1d 3c       	cpi	r17, 0xCD	; 205
      d6:	b7 cc       	rjmp	.-1682   	; 0xfffffa46 <__eeprom_end+0xff7efa46>
      d8:	57 63       	ori	r21, 0x37	; 55
      da:	bd 6d       	ori	r27, 0xDD	; 221
      dc:	ed fd       	.word	0xfded	; ????
      de:	75 3e       	cpi	r23, 0xE5	; 229
      e0:	f6 17       	cp	r31, r22
      e2:	72 31       	cpi	r23, 0x12	; 18
      e4:	bf 00       	.word	0x00bf	; ????
      e6:	00 00       	nop
      e8:	80 3f       	cpi	r24, 0xF0	; 240
      ea:	08 00       	.word	0x0008	; ????
      ec:	00 00       	nop
      ee:	be 92       	st	-X, r11
      f0:	24 49       	sbci	r18, 0x94	; 148
      f2:	12 3e       	cpi	r17, 0xE2	; 226
      f4:	ab aa       	std	Y+51, r10	; 0x33
      f6:	aa 2a       	or	r10, r26
      f8:	be cd       	rjmp	.-1156   	; 0xfffffc76 <__eeprom_end+0xff7efc76>
      fa:	cc cc       	rjmp	.-1640   	; 0xfffffa94 <__eeprom_end+0xff7efa94>
      fc:	4c 3e       	cpi	r20, 0xEC	; 236
      fe:	00 00       	nop
     100:	00 80       	ld	r0, Z
     102:	be ab       	std	Y+54, r27	; 0x36
     104:	aa aa       	std	Y+50, r10	; 0x32
     106:	aa 3e       	cpi	r26, 0xEA	; 234
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	bf 00       	.word	0x00bf	; ????
     10e:	00 00       	nop
     110:	80 3f       	cpi	r24, 0xF0	; 240
     112:	00 00       	nop
     114:	00 00       	nop
     116:	00 08       	sbc	r0, r0
     118:	41 78       	andi	r20, 0x81	; 129
     11a:	d3 bb       	out	0x13, r29	; 19
     11c:	43 87       	std	Z+11, r20	; 0x0b
     11e:	d1 13       	cpse	r29, r17
     120:	3d 19       	sub	r19, r13
     122:	0e 3c       	cpi	r16, 0xCE	; 206
     124:	c3 bd       	out	0x23, r28	; 35
     126:	42 82       	std	Z+2, r4	; 0x02
     128:	ad 2b       	or	r26, r29
     12a:	3e 68       	ori	r19, 0x8E	; 142
     12c:	ec 82       	std	Y+4, r14	; 0x04
     12e:	76 be       	out	0x36, r7	; 54
     130:	d9 8f       	std	Y+25, r29	; 0x19
     132:	e1 a9       	ldd	r30, Z+49	; 0x31
     134:	3e 4c       	sbci	r19, 0xCE	; 206
     136:	80 ef       	ldi	r24, 0xF0	; 240
     138:	ff be       	out	0x3f, r15	; 63
     13a:	01 c4       	rjmp	.+2050   	; 0x93e <__vector_30+0x5e>
     13c:	ff 7f       	andi	r31, 0xFF	; 255
     13e:	3f 00       	.word	0x003f	; ????
     140:	00 00       	nop
	...

00000144 <__ctors_end>:
     144:	11 24       	eor	r1, r1
     146:	1f be       	out	0x3f, r1	; 63
     148:	cf ef       	ldi	r28, 0xFF	; 255
     14a:	d0 e1       	ldi	r29, 0x10	; 16
     14c:	de bf       	out	0x3e, r29	; 62
     14e:	cd bf       	out	0x3d, r28	; 61

00000150 <__do_copy_data>:
     150:	11 e0       	ldi	r17, 0x01	; 1
     152:	a0 e0       	ldi	r26, 0x00	; 0
     154:	b1 e0       	ldi	r27, 0x01	; 1
     156:	ea e0       	ldi	r30, 0x0A	; 10
     158:	f9 e2       	ldi	r31, 0x29	; 41
     15a:	00 e0       	ldi	r16, 0x00	; 0
     15c:	0b bf       	out	0x3b, r16	; 59
     15e:	02 c0       	rjmp	.+4      	; 0x164 <__do_copy_data+0x14>
     160:	07 90       	elpm	r0, Z+
     162:	0d 92       	st	X+, r0
     164:	aa 30       	cpi	r26, 0x0A	; 10
     166:	b1 07       	cpc	r27, r17
     168:	d9 f7       	brne	.-10     	; 0x160 <__do_copy_data+0x10>

0000016a <__do_clear_bss>:
     16a:	23 e0       	ldi	r18, 0x03	; 3
     16c:	aa e0       	ldi	r26, 0x0A	; 10
     16e:	b1 e0       	ldi	r27, 0x01	; 1
     170:	01 c0       	rjmp	.+2      	; 0x174 <.do_clear_bss_start>

00000172 <.do_clear_bss_loop>:
     172:	1d 92       	st	X+, r1

00000174 <.do_clear_bss_start>:
     174:	a6 33       	cpi	r26, 0x36	; 54
     176:	b2 07       	cpc	r27, r18
     178:	e1 f7       	brne	.-8      	; 0x172 <.do_clear_bss_loop>
     17a:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <main>
     17e:	0c 94 83 14 	jmp	0x2906	; 0x2906 <_exit>

00000182 <__bad_interrupt>:
     182:	3e cf       	rjmp	.-388    	; 0x0 <__vectors>

00000184 <__vector_21>:
ISR(ANALOG_INTERRUPT)
/*************************************************************************
Function: ANALOG interrupt
Purpose:  Read Analog Input
**************************************************************************/
{
     184:	1f 92       	push	r1
     186:	0f 92       	push	r0
     188:	0f b6       	in	r0, 0x3f	; 63
     18a:	0f 92       	push	r0
     18c:	11 24       	eor	r1, r1
     18e:	0b b6       	in	r0, 0x3b	; 59
     190:	0f 92       	push	r0
     192:	2f 93       	push	r18
     194:	3f 93       	push	r19
     196:	4f 93       	push	r20
     198:	5f 93       	push	r21
     19a:	8f 93       	push	r24
     19c:	9f 93       	push	r25
     19e:	ef 93       	push	r30
     1a0:	ff 93       	push	r31
	uint8_t Sreg;
	Sreg=STATUS_REGISTER;
     1a2:	2f b7       	in	r18, 0x3f	; 63
	STATUS_REGISTER&=~(1<<GLOBAL_INTERRUPT_ENABLE);
     1a4:	8f b7       	in	r24, 0x3f	; 63
     1a6:	8f 77       	andi	r24, 0x7F	; 127
     1a8:	8f bf       	out	0x3f, r24	; 63
	adc_tmp=ADCL;
     1aa:	84 b1       	in	r24, 0x04	; 4
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <adc_tmp+0x1>
     1b2:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <adc_tmp>
	adc_tmp|=(ADCH<<8);
     1b6:	35 b1       	in	r19, 0x05	; 5
     1b8:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <adc_tmp>
     1bc:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <adc_tmp+0x1>
     1c0:	93 2b       	or	r25, r19
     1c2:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <adc_tmp+0x1>
     1c6:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <adc_tmp>
	if(adc_n_sample < (1<<ADC_NUMBER_SAMPLE)){
     1ca:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
     1ce:	84 30       	cpi	r24, 0x04	; 4
     1d0:	a0 f4       	brcc	.+40     	; 0x1fa <__vector_21+0x76>
		adc_n_sample++;
     1d2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
     1d6:	8f 5f       	subi	r24, 0xFF	; 255
     1d8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
		adc_sample+=adc_tmp;
     1dc:	40 91 0b 01 	lds	r20, 0x010B	; 0x80010b <adc_tmp>
     1e0:	50 91 0c 01 	lds	r21, 0x010C	; 0x80010c <adc_tmp+0x1>
     1e4:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <adc_sample>
     1e8:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <adc_sample+0x1>
     1ec:	84 0f       	add	r24, r20
     1ee:	95 1f       	adc	r25, r21
     1f0:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <adc_sample+0x1>
     1f4:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <adc_sample>
     1f8:	43 c0       	rjmp	.+134    	; 0x280 <__vector_21+0xfc>
	}else{
		ADC_VALUE[ADC_SELECTOR]=adc_sample>>ADC_NUMBER_SAMPLE;
     1fa:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <ADC_SELECTOR>
     1fe:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <ADC_SELECTOR+0x1>
     202:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <adc_sample>
     206:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <adc_sample+0x1>
     20a:	95 95       	asr	r25
     20c:	87 95       	ror	r24
     20e:	95 95       	asr	r25
     210:	87 95       	ror	r24
     212:	ee 0f       	add	r30, r30
     214:	ff 1f       	adc	r31, r31
     216:	ed 5d       	subi	r30, 0xDD	; 221
     218:	fe 4f       	sbci	r31, 0xFE	; 254
     21a:	91 83       	std	Z+1, r25	; 0x01
     21c:	80 83       	st	Z, r24
		adc_n_sample=adc_sample=0;
     21e:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <adc_sample+0x1>
     222:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <adc_sample>
     226:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
		/******/
		if(ADC_SELECTOR < ADC_N_CHANNEL)
     22a:	40 91 0f 01 	lds	r20, 0x010F	; 0x80010f <ADC_SELECTOR>
     22e:	50 91 10 01 	lds	r21, 0x0110	; 0x800110 <ADC_SELECTOR+0x1>
     232:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <ADC_N_CHANNEL>
     236:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <ADC_N_CHANNEL+0x1>
     23a:	48 17       	cp	r20, r24
     23c:	59 07       	cpc	r21, r25
     23e:	54 f4       	brge	.+20     	; 0x254 <__vector_21+0xd0>
			ADC_SELECTOR++;
     240:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <ADC_SELECTOR>
     244:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <ADC_SELECTOR+0x1>
     248:	01 96       	adiw	r24, 0x01	; 1
     24a:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <ADC_SELECTOR+0x1>
     24e:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <ADC_SELECTOR>
     252:	04 c0       	rjmp	.+8      	; 0x25c <__vector_21+0xd8>
		else
			ADC_SELECTOR=0;
     254:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <ADC_SELECTOR+0x1>
     258:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <ADC_SELECTOR>
		ADC_SELECT &= ~MUX_MASK;
     25c:	87 b1       	in	r24, 0x07	; 7
     25e:	80 7e       	andi	r24, 0xE0	; 224
     260:	87 b9       	out	0x07, r24	; 7
		ADC_SELECT |= (ADC_CHANNEL_GAIN[ADC_SELECTOR] & MUX_MASK);
     262:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <ADC_SELECTOR>
     266:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <ADC_SELECTOR+0x1>
     26a:	ee 0f       	add	r30, r30
     26c:	ff 1f       	adc	r31, r31
     26e:	ed 5e       	subi	r30, 0xED	; 237
     270:	fe 4f       	sbci	r31, 0xFE	; 254
     272:	80 81       	ld	r24, Z
     274:	91 81       	ldd	r25, Z+1	; 0x01
     276:	37 b1       	in	r19, 0x07	; 7
     278:	8f 71       	andi	r24, 0x1F	; 31
     27a:	99 27       	eor	r25, r25
     27c:	83 2b       	or	r24, r19
     27e:	87 b9       	out	0x07, r24	; 7
	}
	STATUS_REGISTER=Sreg;
     280:	2f bf       	out	0x3f, r18	; 63
}
     282:	ff 91       	pop	r31
     284:	ef 91       	pop	r30
     286:	9f 91       	pop	r25
     288:	8f 91       	pop	r24
     28a:	5f 91       	pop	r21
     28c:	4f 91       	pop	r20
     28e:	3f 91       	pop	r19
     290:	2f 91       	pop	r18
     292:	0f 90       	pop	r0
     294:	0b be       	out	0x3b, r0	; 59
     296:	0f 90       	pop	r0
     298:	0f be       	out	0x3f, r0	; 63
     29a:	0f 90       	pop	r0
     29c:	1f 90       	pop	r1
     29e:	18 95       	reti

000002a0 <TIMER_COUNTER0_start>:
	timer3.compareB=TIMER_COUNTER3_compareB;
	timer3.compareC=TIMER_COUNTER3_compareC;
	timer3.start=TIMER_COUNTER3_start;
	timer3.stop=TIMER_COUNTER3_stop;
	return timer3;
}
     2a0:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <timer0_state>
     2a4:	21 11       	cpse	r18, r1
     2a6:	41 c0       	rjmp	.+130    	; 0x32a <TIMER_COUNTER0_start+0x8a>
     2a8:	23 b7       	in	r18, 0x33	; 51
     2aa:	28 7f       	andi	r18, 0xF8	; 248
     2ac:	23 bf       	out	0x33, r18	; 51
     2ae:	80 34       	cpi	r24, 0x40	; 64
     2b0:	91 05       	cpc	r25, r1
     2b2:	11 f1       	breq	.+68     	; 0x2f8 <TIMER_COUNTER0_start+0x58>
     2b4:	48 f4       	brcc	.+18     	; 0x2c8 <TIMER_COUNTER0_start+0x28>
     2b6:	88 30       	cpi	r24, 0x08	; 8
     2b8:	91 05       	cpc	r25, r1
     2ba:	b1 f0       	breq	.+44     	; 0x2e8 <TIMER_COUNTER0_start+0x48>
     2bc:	80 32       	cpi	r24, 0x20	; 32
     2be:	91 05       	cpc	r25, r1
     2c0:	b9 f0       	breq	.+46     	; 0x2f0 <TIMER_COUNTER0_start+0x50>
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	49 f5       	brne	.+82     	; 0x318 <TIMER_COUNTER0_start+0x78>
     2c6:	0c c0       	rjmp	.+24     	; 0x2e0 <TIMER_COUNTER0_start+0x40>
     2c8:	81 15       	cp	r24, r1
     2ca:	21 e0       	ldi	r18, 0x01	; 1
     2cc:	92 07       	cpc	r25, r18
     2ce:	e1 f0       	breq	.+56     	; 0x308 <TIMER_COUNTER0_start+0x68>
     2d0:	81 15       	cp	r24, r1
     2d2:	24 e0       	ldi	r18, 0x04	; 4
     2d4:	92 07       	cpc	r25, r18
     2d6:	e1 f0       	breq	.+56     	; 0x310 <TIMER_COUNTER0_start+0x70>
     2d8:	80 38       	cpi	r24, 0x80	; 128
     2da:	91 05       	cpc	r25, r1
     2dc:	e9 f4       	brne	.+58     	; 0x318 <TIMER_COUNTER0_start+0x78>
     2de:	10 c0       	rjmp	.+32     	; 0x300 <TIMER_COUNTER0_start+0x60>
     2e0:	83 b7       	in	r24, 0x33	; 51
     2e2:	81 60       	ori	r24, 0x01	; 1
     2e4:	83 bf       	out	0x33, r24	; 51
     2e6:	1b c0       	rjmp	.+54     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2e8:	83 b7       	in	r24, 0x33	; 51
     2ea:	82 60       	ori	r24, 0x02	; 2
     2ec:	83 bf       	out	0x33, r24	; 51
     2ee:	17 c0       	rjmp	.+46     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2f0:	83 b7       	in	r24, 0x33	; 51
     2f2:	83 60       	ori	r24, 0x03	; 3
     2f4:	83 bf       	out	0x33, r24	; 51
     2f6:	13 c0       	rjmp	.+38     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2f8:	83 b7       	in	r24, 0x33	; 51
     2fa:	84 60       	ori	r24, 0x04	; 4
     2fc:	83 bf       	out	0x33, r24	; 51
     2fe:	0f c0       	rjmp	.+30     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     300:	83 b7       	in	r24, 0x33	; 51
     302:	85 60       	ori	r24, 0x05	; 5
     304:	83 bf       	out	0x33, r24	; 51
     306:	0b c0       	rjmp	.+22     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     308:	83 b7       	in	r24, 0x33	; 51
     30a:	86 60       	ori	r24, 0x06	; 6
     30c:	83 bf       	out	0x33, r24	; 51
     30e:	07 c0       	rjmp	.+14     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     310:	83 b7       	in	r24, 0x33	; 51
     312:	87 60       	ori	r24, 0x07	; 7
     314:	83 bf       	out	0x33, r24	; 51
     316:	03 c0       	rjmp	.+6      	; 0x31e <TIMER_COUNTER0_start+0x7e>
     318:	83 b7       	in	r24, 0x33	; 51
     31a:	87 60       	ori	r24, 0x07	; 7
     31c:	83 bf       	out	0x33, r24	; 51
     31e:	8f b7       	in	r24, 0x3f	; 63
     320:	80 68       	ori	r24, 0x80	; 128
     322:	8f bf       	out	0x3f, r24	; 63
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timer0_state>
     32a:	08 95       	ret

0000032c <TIMER_COUNTER0_compoutmode>:
     32c:	93 b7       	in	r25, 0x33	; 51
     32e:	9f 7c       	andi	r25, 0xCF	; 207
     330:	93 bf       	out	0x33, r25	; 51
     332:	82 30       	cpi	r24, 0x02	; 2
     334:	51 f0       	breq	.+20     	; 0x34a <TIMER_COUNTER0_compoutmode+0x1e>
     336:	83 30       	cpi	r24, 0x03	; 3
     338:	71 f0       	breq	.+28     	; 0x356 <TIMER_COUNTER0_compoutmode+0x2a>
     33a:	81 30       	cpi	r24, 0x01	; 1
     33c:	89 f4       	brne	.+34     	; 0x360 <TIMER_COUNTER0_compoutmode+0x34>
     33e:	80 e1       	ldi	r24, 0x10	; 16
     340:	87 bb       	out	0x17, r24	; 23
     342:	83 b7       	in	r24, 0x33	; 51
     344:	80 61       	ori	r24, 0x10	; 16
     346:	83 bf       	out	0x33, r24	; 51
     348:	08 95       	ret
     34a:	80 e1       	ldi	r24, 0x10	; 16
     34c:	87 bb       	out	0x17, r24	; 23
     34e:	83 b7       	in	r24, 0x33	; 51
     350:	80 62       	ori	r24, 0x20	; 32
     352:	83 bf       	out	0x33, r24	; 51
     354:	08 95       	ret
     356:	80 e1       	ldi	r24, 0x10	; 16
     358:	87 bb       	out	0x17, r24	; 23
     35a:	83 b7       	in	r24, 0x33	; 51
     35c:	80 63       	ori	r24, 0x30	; 48
     35e:	83 bf       	out	0x33, r24	; 51
     360:	08 95       	ret

00000362 <TIMER_COUNTER0_compare>:
     362:	81 bf       	out	0x31, r24	; 49
     364:	08 95       	ret

00000366 <TIMER_COUNTER0_stop>:
     366:	83 b7       	in	r24, 0x33	; 51
     368:	88 7f       	andi	r24, 0xF8	; 248
     36a:	83 bf       	out	0x33, r24	; 51
     36c:	12 be       	out	0x32, r1	; 50
     36e:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <timer0_state>
     372:	08 95       	ret

00000374 <TIMER_COUNTER1_start>:
     374:	20 91 33 01 	lds	r18, 0x0133	; 0x800133 <timer1_state>
     378:	21 11       	cpse	r18, r1
     37a:	41 c0       	rjmp	.+130    	; 0x3fe <TIMER_COUNTER1_start+0x8a>
     37c:	2e b5       	in	r18, 0x2e	; 46
     37e:	28 7f       	andi	r18, 0xF8	; 248
     380:	2e bd       	out	0x2e, r18	; 46
     382:	88 30       	cpi	r24, 0x08	; 8
     384:	91 05       	cpc	r25, r1
     386:	d1 f0       	breq	.+52     	; 0x3bc <TIMER_COUNTER1_start+0x48>
     388:	48 f4       	brcc	.+18     	; 0x39c <TIMER_COUNTER1_start+0x28>
     38a:	83 30       	cpi	r24, 0x03	; 3
     38c:	91 05       	cpc	r25, r1
     38e:	31 f1       	breq	.+76     	; 0x3dc <TIMER_COUNTER1_start+0x68>
     390:	85 30       	cpi	r24, 0x05	; 5
     392:	91 05       	cpc	r25, r1
     394:	39 f1       	breq	.+78     	; 0x3e4 <TIMER_COUNTER1_start+0x70>
     396:	01 97       	sbiw	r24, 0x01	; 1
     398:	49 f5       	brne	.+82     	; 0x3ec <TIMER_COUNTER1_start+0x78>
     39a:	0c c0       	rjmp	.+24     	; 0x3b4 <TIMER_COUNTER1_start+0x40>
     39c:	81 15       	cp	r24, r1
     39e:	21 e0       	ldi	r18, 0x01	; 1
     3a0:	92 07       	cpc	r25, r18
     3a2:	a1 f0       	breq	.+40     	; 0x3cc <TIMER_COUNTER1_start+0x58>
     3a4:	81 15       	cp	r24, r1
     3a6:	24 e0       	ldi	r18, 0x04	; 4
     3a8:	92 07       	cpc	r25, r18
     3aa:	a1 f0       	breq	.+40     	; 0x3d4 <TIMER_COUNTER1_start+0x60>
     3ac:	80 34       	cpi	r24, 0x40	; 64
     3ae:	91 05       	cpc	r25, r1
     3b0:	e9 f4       	brne	.+58     	; 0x3ec <TIMER_COUNTER1_start+0x78>
     3b2:	08 c0       	rjmp	.+16     	; 0x3c4 <TIMER_COUNTER1_start+0x50>
     3b4:	8e b5       	in	r24, 0x2e	; 46
     3b6:	81 60       	ori	r24, 0x01	; 1
     3b8:	8e bd       	out	0x2e, r24	; 46
     3ba:	1b c0       	rjmp	.+54     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3bc:	8e b5       	in	r24, 0x2e	; 46
     3be:	82 60       	ori	r24, 0x02	; 2
     3c0:	8e bd       	out	0x2e, r24	; 46
     3c2:	17 c0       	rjmp	.+46     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3c4:	8e b5       	in	r24, 0x2e	; 46
     3c6:	83 60       	ori	r24, 0x03	; 3
     3c8:	8e bd       	out	0x2e, r24	; 46
     3ca:	13 c0       	rjmp	.+38     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3cc:	8e b5       	in	r24, 0x2e	; 46
     3ce:	84 60       	ori	r24, 0x04	; 4
     3d0:	8e bd       	out	0x2e, r24	; 46
     3d2:	0f c0       	rjmp	.+30     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3d4:	8e b5       	in	r24, 0x2e	; 46
     3d6:	85 60       	ori	r24, 0x05	; 5
     3d8:	8e bd       	out	0x2e, r24	; 46
     3da:	0b c0       	rjmp	.+22     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3dc:	8e b5       	in	r24, 0x2e	; 46
     3de:	86 60       	ori	r24, 0x06	; 6
     3e0:	8e bd       	out	0x2e, r24	; 46
     3e2:	07 c0       	rjmp	.+14     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3e4:	8e b5       	in	r24, 0x2e	; 46
     3e6:	87 60       	ori	r24, 0x07	; 7
     3e8:	8e bd       	out	0x2e, r24	; 46
     3ea:	03 c0       	rjmp	.+6      	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3ec:	8e b5       	in	r24, 0x2e	; 46
     3ee:	85 60       	ori	r24, 0x05	; 5
     3f0:	8e bd       	out	0x2e, r24	; 46
     3f2:	8f b7       	in	r24, 0x3f	; 63
     3f4:	80 68       	ori	r24, 0x80	; 128
     3f6:	8f bf       	out	0x3f, r24	; 63
     3f8:	81 e0       	ldi	r24, 0x01	; 1
     3fa:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <timer1_state>
     3fe:	08 95       	ret

00000400 <TIMER_COUNTER1_compoutmodeA>:
     400:	9f b5       	in	r25, 0x2f	; 47
     402:	9f 73       	andi	r25, 0x3F	; 63
     404:	9f bd       	out	0x2f, r25	; 47
     406:	82 30       	cpi	r24, 0x02	; 2
     408:	49 f0       	breq	.+18     	; 0x41c <TIMER_COUNTER1_compoutmodeA+0x1c>
     40a:	83 30       	cpi	r24, 0x03	; 3
     40c:	61 f0       	breq	.+24     	; 0x426 <TIMER_COUNTER1_compoutmodeA+0x26>
     40e:	81 30       	cpi	r24, 0x01	; 1
     410:	71 f4       	brne	.+28     	; 0x42e <TIMER_COUNTER1_compoutmodeA+0x2e>
     412:	bd 9a       	sbi	0x17, 5	; 23
     414:	8f b5       	in	r24, 0x2f	; 47
     416:	80 64       	ori	r24, 0x40	; 64
     418:	8f bd       	out	0x2f, r24	; 47
     41a:	08 95       	ret
     41c:	bd 9a       	sbi	0x17, 5	; 23
     41e:	8f b5       	in	r24, 0x2f	; 47
     420:	80 68       	ori	r24, 0x80	; 128
     422:	8f bd       	out	0x2f, r24	; 47
     424:	08 95       	ret
     426:	bd 9a       	sbi	0x17, 5	; 23
     428:	8f b5       	in	r24, 0x2f	; 47
     42a:	80 6c       	ori	r24, 0xC0	; 192
     42c:	8f bd       	out	0x2f, r24	; 47
     42e:	08 95       	ret

00000430 <TIMER_COUNTER1_compoutmodeB>:
     430:	9f b5       	in	r25, 0x2f	; 47
     432:	9f 7c       	andi	r25, 0xCF	; 207
     434:	9f bd       	out	0x2f, r25	; 47
     436:	82 30       	cpi	r24, 0x02	; 2
     438:	49 f0       	breq	.+18     	; 0x44c <TIMER_COUNTER1_compoutmodeB+0x1c>
     43a:	83 30       	cpi	r24, 0x03	; 3
     43c:	61 f0       	breq	.+24     	; 0x456 <TIMER_COUNTER1_compoutmodeB+0x26>
     43e:	81 30       	cpi	r24, 0x01	; 1
     440:	71 f4       	brne	.+28     	; 0x45e <TIMER_COUNTER1_compoutmodeB+0x2e>
     442:	be 9a       	sbi	0x17, 6	; 23
     444:	8f b5       	in	r24, 0x2f	; 47
     446:	80 61       	ori	r24, 0x10	; 16
     448:	8f bd       	out	0x2f, r24	; 47
     44a:	08 95       	ret
     44c:	be 9a       	sbi	0x17, 6	; 23
     44e:	8f b5       	in	r24, 0x2f	; 47
     450:	80 62       	ori	r24, 0x20	; 32
     452:	8f bd       	out	0x2f, r24	; 47
     454:	08 95       	ret
     456:	be 9a       	sbi	0x17, 6	; 23
     458:	8f b5       	in	r24, 0x2f	; 47
     45a:	80 63       	ori	r24, 0x30	; 48
     45c:	8f bd       	out	0x2f, r24	; 47
     45e:	08 95       	ret

00000460 <TIMER_COUNTER1_compoutmodeC>:
     460:	9f b5       	in	r25, 0x2f	; 47
     462:	93 7f       	andi	r25, 0xF3	; 243
     464:	9f bd       	out	0x2f, r25	; 47
     466:	82 30       	cpi	r24, 0x02	; 2
     468:	49 f0       	breq	.+18     	; 0x47c <TIMER_COUNTER1_compoutmodeC+0x1c>
     46a:	83 30       	cpi	r24, 0x03	; 3
     46c:	61 f0       	breq	.+24     	; 0x486 <TIMER_COUNTER1_compoutmodeC+0x26>
     46e:	81 30       	cpi	r24, 0x01	; 1
     470:	71 f4       	brne	.+28     	; 0x48e <TIMER_COUNTER1_compoutmodeC+0x2e>
     472:	bf 9a       	sbi	0x17, 7	; 23
     474:	8f b5       	in	r24, 0x2f	; 47
     476:	84 60       	ori	r24, 0x04	; 4
     478:	8f bd       	out	0x2f, r24	; 47
     47a:	08 95       	ret
     47c:	bf 9a       	sbi	0x17, 7	; 23
     47e:	8f b5       	in	r24, 0x2f	; 47
     480:	88 60       	ori	r24, 0x08	; 8
     482:	8f bd       	out	0x2f, r24	; 47
     484:	08 95       	ret
     486:	bf 9a       	sbi	0x17, 7	; 23
     488:	8f b5       	in	r24, 0x2f	; 47
     48a:	8c 60       	ori	r24, 0x0C	; 12
     48c:	8f bd       	out	0x2f, r24	; 47
     48e:	08 95       	ret

00000490 <TIMER_COUNTER1_compareA>:
     490:	9b bd       	out	0x2b, r25	; 43
     492:	8a bd       	out	0x2a, r24	; 42
     494:	08 95       	ret

00000496 <TIMER_COUNTER1_compareB>:
     496:	99 bd       	out	0x29, r25	; 41
     498:	88 bd       	out	0x28, r24	; 40
     49a:	08 95       	ret

0000049c <TIMER_COUNTER1_compareC>:
     49c:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     4a0:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     4a4:	08 95       	ret

000004a6 <TIMER_COUNTER1_stop>:
     4a6:	8e b5       	in	r24, 0x2e	; 46
     4a8:	88 7f       	andi	r24, 0xF8	; 248
     4aa:	8e bd       	out	0x2e, r24	; 46
     4ac:	1d bc       	out	0x2d, r1	; 45
     4ae:	1c bc       	out	0x2c, r1	; 44
     4b0:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <timer1_state>
     4b4:	08 95       	ret

000004b6 <TIMER_COUNTER0enable>:
     4b6:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <timer0_state>
     4ba:	2f ef       	ldi	r18, 0xFF	; 255
     4bc:	21 bf       	out	0x31, r18	; 49
     4be:	23 b7       	in	r18, 0x33	; 51
     4c0:	27 7b       	andi	r18, 0xB7	; 183
     4c2:	23 bf       	out	0x33, r18	; 51
     4c4:	62 30       	cpi	r22, 0x02	; 2
     4c6:	41 f0       	breq	.+16     	; 0x4d8 <TIMER_COUNTER0enable+0x22>
     4c8:	63 30       	cpi	r22, 0x03	; 3
     4ca:	51 f0       	breq	.+20     	; 0x4e0 <TIMER_COUNTER0enable+0x2a>
     4cc:	61 30       	cpi	r22, 0x01	; 1
     4ce:	59 f4       	brne	.+22     	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4d0:	23 b7       	in	r18, 0x33	; 51
     4d2:	20 64       	ori	r18, 0x40	; 64
     4d4:	23 bf       	out	0x33, r18	; 51
     4d6:	07 c0       	rjmp	.+14     	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4d8:	23 b7       	in	r18, 0x33	; 51
     4da:	28 60       	ori	r18, 0x08	; 8
     4dc:	23 bf       	out	0x33, r18	; 51
     4de:	03 c0       	rjmp	.+6      	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4e0:	23 b7       	in	r18, 0x33	; 51
     4e2:	28 64       	ori	r18, 0x48	; 72
     4e4:	23 bf       	out	0x33, r18	; 51
     4e6:	27 b7       	in	r18, 0x37	; 55
     4e8:	2e 7f       	andi	r18, 0xFE	; 254
     4ea:	27 bf       	out	0x37, r18	; 55
     4ec:	27 b7       	in	r18, 0x37	; 55
     4ee:	2d 7f       	andi	r18, 0xFD	; 253
     4f0:	27 bf       	out	0x37, r18	; 55
     4f2:	42 30       	cpi	r20, 0x02	; 2
     4f4:	41 f0       	breq	.+16     	; 0x506 <TIMER_COUNTER0enable+0x50>
     4f6:	43 30       	cpi	r20, 0x03	; 3
     4f8:	51 f0       	breq	.+20     	; 0x50e <TIMER_COUNTER0enable+0x58>
     4fa:	41 30       	cpi	r20, 0x01	; 1
     4fc:	71 f4       	brne	.+28     	; 0x51a <TIMER_COUNTER0enable+0x64>
     4fe:	27 b7       	in	r18, 0x37	; 55
     500:	21 60       	ori	r18, 0x01	; 1
     502:	27 bf       	out	0x37, r18	; 55
     504:	0a c0       	rjmp	.+20     	; 0x51a <TIMER_COUNTER0enable+0x64>
     506:	27 b7       	in	r18, 0x37	; 55
     508:	22 60       	ori	r18, 0x02	; 2
     50a:	27 bf       	out	0x37, r18	; 55
     50c:	06 c0       	rjmp	.+12     	; 0x51a <TIMER_COUNTER0enable+0x64>
     50e:	27 b7       	in	r18, 0x37	; 55
     510:	21 60       	ori	r18, 0x01	; 1
     512:	27 bf       	out	0x37, r18	; 55
     514:	27 b7       	in	r18, 0x37	; 55
     516:	22 60       	ori	r18, 0x02	; 2
     518:	27 bf       	out	0x37, r18	; 55
     51a:	26 e9       	ldi	r18, 0x96	; 150
     51c:	31 e0       	ldi	r19, 0x01	; 1
     51e:	fc 01       	movw	r30, r24
     520:	31 83       	std	Z+1, r19	; 0x01
     522:	20 83       	st	Z, r18
     524:	21 eb       	ldi	r18, 0xB1	; 177
     526:	31 e0       	ldi	r19, 0x01	; 1
     528:	37 83       	std	Z+7, r19	; 0x07
     52a:	26 83       	std	Z+6, r18	; 0x06
     52c:	20 e5       	ldi	r18, 0x50	; 80
     52e:	31 e0       	ldi	r19, 0x01	; 1
     530:	35 87       	std	Z+13, r19	; 0x0d
     532:	24 87       	std	Z+12, r18	; 0x0c
     534:	23 eb       	ldi	r18, 0xB3	; 179
     536:	31 e0       	ldi	r19, 0x01	; 1
     538:	37 87       	std	Z+15, r19	; 0x0f
     53a:	26 87       	std	Z+14, r18	; 0x0e
     53c:	08 95       	ret

0000053e <TIMER_COUNTER1enable>:
     53e:	0f 93       	push	r16
     540:	1f 93       	push	r17
     542:	dc 01       	movw	r26, r24
     544:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <timer1_state>
     548:	8f ef       	ldi	r24, 0xFF	; 255
     54a:	9f ef       	ldi	r25, 0xFF	; 255
     54c:	9b bd       	out	0x2b, r25	; 43
     54e:	8a bd       	out	0x2a, r24	; 42
     550:	8f b5       	in	r24, 0x2f	; 47
     552:	8c 7f       	andi	r24, 0xFC	; 252
     554:	8f bd       	out	0x2f, r24	; 47
     556:	8e b5       	in	r24, 0x2e	; 46
     558:	87 7e       	andi	r24, 0xE7	; 231
     55a:	8e bd       	out	0x2e, r24	; 46
     55c:	06 2f       	mov	r16, r22
     55e:	10 e0       	ldi	r17, 0x00	; 0
     560:	f8 01       	movw	r30, r16
     562:	31 97       	sbiw	r30, 0x01	; 1
     564:	ef 30       	cpi	r30, 0x0F	; 15
     566:	f1 05       	cpc	r31, r1
     568:	08 f0       	brcs	.+2      	; 0x56c <TIMER_COUNTER1enable+0x2e>
     56a:	5a c0       	rjmp	.+180    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     56c:	ea 5b       	subi	r30, 0xBA	; 186
     56e:	ff 4f       	sbci	r31, 0xFF	; 255
     570:	0c 94 14 14 	jmp	0x2828	; 0x2828 <__tablejump2__>
     574:	8f b5       	in	r24, 0x2f	; 47
     576:	81 60       	ori	r24, 0x01	; 1
     578:	8f bd       	out	0x2f, r24	; 47
     57a:	52 c0       	rjmp	.+164    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     57c:	8f b5       	in	r24, 0x2f	; 47
     57e:	82 60       	ori	r24, 0x02	; 2
     580:	8f bd       	out	0x2f, r24	; 47
     582:	4e c0       	rjmp	.+156    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     584:	8f b5       	in	r24, 0x2f	; 47
     586:	83 60       	ori	r24, 0x03	; 3
     588:	8f bd       	out	0x2f, r24	; 47
     58a:	4a c0       	rjmp	.+148    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     58c:	8e b5       	in	r24, 0x2e	; 46
     58e:	88 60       	ori	r24, 0x08	; 8
     590:	8e bd       	out	0x2e, r24	; 46
     592:	46 c0       	rjmp	.+140    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     594:	8f b5       	in	r24, 0x2f	; 47
     596:	81 60       	ori	r24, 0x01	; 1
     598:	8f bd       	out	0x2f, r24	; 47
     59a:	8e b5       	in	r24, 0x2e	; 46
     59c:	88 60       	ori	r24, 0x08	; 8
     59e:	8e bd       	out	0x2e, r24	; 46
     5a0:	3f c0       	rjmp	.+126    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5a2:	8f b5       	in	r24, 0x2f	; 47
     5a4:	82 60       	ori	r24, 0x02	; 2
     5a6:	8f bd       	out	0x2f, r24	; 47
     5a8:	8e b5       	in	r24, 0x2e	; 46
     5aa:	88 60       	ori	r24, 0x08	; 8
     5ac:	8e bd       	out	0x2e, r24	; 46
     5ae:	38 c0       	rjmp	.+112    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5b0:	8f b5       	in	r24, 0x2f	; 47
     5b2:	83 60       	ori	r24, 0x03	; 3
     5b4:	8f bd       	out	0x2f, r24	; 47
     5b6:	8e b5       	in	r24, 0x2e	; 46
     5b8:	88 60       	ori	r24, 0x08	; 8
     5ba:	8e bd       	out	0x2e, r24	; 46
     5bc:	31 c0       	rjmp	.+98     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5be:	8e b5       	in	r24, 0x2e	; 46
     5c0:	80 61       	ori	r24, 0x10	; 16
     5c2:	8e bd       	out	0x2e, r24	; 46
     5c4:	2d c0       	rjmp	.+90     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5c6:	8f b5       	in	r24, 0x2f	; 47
     5c8:	81 60       	ori	r24, 0x01	; 1
     5ca:	8f bd       	out	0x2f, r24	; 47
     5cc:	8e b5       	in	r24, 0x2e	; 46
     5ce:	80 61       	ori	r24, 0x10	; 16
     5d0:	8e bd       	out	0x2e, r24	; 46
     5d2:	26 c0       	rjmp	.+76     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5d4:	8f b5       	in	r24, 0x2f	; 47
     5d6:	82 60       	ori	r24, 0x02	; 2
     5d8:	8f bd       	out	0x2f, r24	; 47
     5da:	8e b5       	in	r24, 0x2e	; 46
     5dc:	80 61       	ori	r24, 0x10	; 16
     5de:	8e bd       	out	0x2e, r24	; 46
     5e0:	1f c0       	rjmp	.+62     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5e2:	8f b5       	in	r24, 0x2f	; 47
     5e4:	83 60       	ori	r24, 0x03	; 3
     5e6:	8f bd       	out	0x2f, r24	; 47
     5e8:	8e b5       	in	r24, 0x2e	; 46
     5ea:	80 61       	ori	r24, 0x10	; 16
     5ec:	8e bd       	out	0x2e, r24	; 46
     5ee:	18 c0       	rjmp	.+48     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5f0:	8e b5       	in	r24, 0x2e	; 46
     5f2:	88 61       	ori	r24, 0x18	; 24
     5f4:	8e bd       	out	0x2e, r24	; 46
     5f6:	14 c0       	rjmp	.+40     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5f8:	8f b5       	in	r24, 0x2f	; 47
     5fa:	81 60       	ori	r24, 0x01	; 1
     5fc:	8f bd       	out	0x2f, r24	; 47
     5fe:	8e b5       	in	r24, 0x2e	; 46
     600:	88 61       	ori	r24, 0x18	; 24
     602:	8e bd       	out	0x2e, r24	; 46
     604:	0d c0       	rjmp	.+26     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     606:	8f b5       	in	r24, 0x2f	; 47
     608:	82 60       	ori	r24, 0x02	; 2
     60a:	8f bd       	out	0x2f, r24	; 47
     60c:	8e b5       	in	r24, 0x2e	; 46
     60e:	88 61       	ori	r24, 0x18	; 24
     610:	8e bd       	out	0x2e, r24	; 46
     612:	06 c0       	rjmp	.+12     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     614:	8f b5       	in	r24, 0x2f	; 47
     616:	83 60       	ori	r24, 0x03	; 3
     618:	8f bd       	out	0x2f, r24	; 47
     61a:	8e b5       	in	r24, 0x2e	; 46
     61c:	88 61       	ori	r24, 0x18	; 24
     61e:	8e bd       	out	0x2e, r24	; 46
     620:	8f b5       	in	r24, 0x2f	; 47
     622:	83 70       	andi	r24, 0x03	; 3
     624:	8f bd       	out	0x2f, r24	; 47
     626:	87 b7       	in	r24, 0x37	; 55
     628:	83 7c       	andi	r24, 0xC3	; 195
     62a:	87 bf       	out	0x37, r24	; 55
     62c:	ed e7       	ldi	r30, 0x7D	; 125
     62e:	f0 e0       	ldi	r31, 0x00	; 0
     630:	80 81       	ld	r24, Z
     632:	8e 7f       	andi	r24, 0xFE	; 254
     634:	80 83       	st	Z, r24
     636:	50 e0       	ldi	r21, 0x00	; 0
     638:	fa 01       	movw	r30, r20
     63a:	31 97       	sbiw	r30, 0x01	; 1
     63c:	ec 30       	cpi	r30, 0x0C	; 12
     63e:	f1 05       	cpc	r31, r1
     640:	08 f0       	brcs	.+2      	; 0x644 <TIMER_COUNTER1enable+0x106>
     642:	44 c0       	rjmp	.+136    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     644:	eb 5a       	subi	r30, 0xAB	; 171
     646:	ff 4f       	sbci	r31, 0xFF	; 255
     648:	0c 94 14 14 	jmp	0x2828	; 0x2828 <__tablejump2__>
     64c:	87 b7       	in	r24, 0x37	; 55
     64e:	84 60       	ori	r24, 0x04	; 4
     650:	87 bf       	out	0x37, r24	; 55
     652:	3c c0       	rjmp	.+120    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     654:	87 b7       	in	r24, 0x37	; 55
     656:	80 61       	ori	r24, 0x10	; 16
     658:	87 bf       	out	0x37, r24	; 55
     65a:	38 c0       	rjmp	.+112    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     65c:	87 b7       	in	r24, 0x37	; 55
     65e:	88 60       	ori	r24, 0x08	; 8
     660:	87 bf       	out	0x37, r24	; 55
     662:	34 c0       	rjmp	.+104    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     664:	ed e7       	ldi	r30, 0x7D	; 125
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	81 60       	ori	r24, 0x01	; 1
     66c:	80 83       	st	Z, r24
     66e:	2e c0       	rjmp	.+92     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     670:	87 b7       	in	r24, 0x37	; 55
     672:	80 62       	ori	r24, 0x20	; 32
     674:	87 bf       	out	0x37, r24	; 55
     676:	2a c0       	rjmp	.+84     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     678:	87 b7       	in	r24, 0x37	; 55
     67a:	84 61       	ori	r24, 0x14	; 20
     67c:	87 bf       	out	0x37, r24	; 55
     67e:	26 c0       	rjmp	.+76     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     680:	87 b7       	in	r24, 0x37	; 55
     682:	8c 60       	ori	r24, 0x0C	; 12
     684:	87 bf       	out	0x37, r24	; 55
     686:	22 c0       	rjmp	.+68     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     688:	87 b7       	in	r24, 0x37	; 55
     68a:	84 60       	ori	r24, 0x04	; 4
     68c:	87 bf       	out	0x37, r24	; 55
     68e:	ed e7       	ldi	r30, 0x7D	; 125
     690:	f0 e0       	ldi	r31, 0x00	; 0
     692:	80 81       	ld	r24, Z
     694:	81 60       	ori	r24, 0x01	; 1
     696:	80 83       	st	Z, r24
     698:	19 c0       	rjmp	.+50     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     69a:	87 b7       	in	r24, 0x37	; 55
     69c:	84 62       	ori	r24, 0x24	; 36
     69e:	87 bf       	out	0x37, r24	; 55
     6a0:	15 c0       	rjmp	.+42     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6a2:	87 b7       	in	r24, 0x37	; 55
     6a4:	8c 61       	ori	r24, 0x1C	; 28
     6a6:	87 bf       	out	0x37, r24	; 55
     6a8:	11 c0       	rjmp	.+34     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6aa:	87 b7       	in	r24, 0x37	; 55
     6ac:	8c 61       	ori	r24, 0x1C	; 28
     6ae:	87 bf       	out	0x37, r24	; 55
     6b0:	ed e7       	ldi	r30, 0x7D	; 125
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	80 81       	ld	r24, Z
     6b6:	81 60       	ori	r24, 0x01	; 1
     6b8:	80 83       	st	Z, r24
     6ba:	08 c0       	rjmp	.+16     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6bc:	87 b7       	in	r24, 0x37	; 55
     6be:	88 61       	ori	r24, 0x18	; 24
     6c0:	87 bf       	out	0x37, r24	; 55
     6c2:	ed e7       	ldi	r30, 0x7D	; 125
     6c4:	f0 e0       	ldi	r31, 0x00	; 0
     6c6:	80 81       	ld	r24, Z
     6c8:	81 60       	ori	r24, 0x01	; 1
     6ca:	80 83       	st	Z, r24
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	92 e0       	ldi	r25, 0x02	; 2
     6d0:	11 96       	adiw	r26, 0x01	; 1
     6d2:	9c 93       	st	X, r25
     6d4:	8e 93       	st	-X, r24
     6d6:	88 e1       	ldi	r24, 0x18	; 24
     6d8:	92 e0       	ldi	r25, 0x02	; 2
     6da:	13 96       	adiw	r26, 0x03	; 3
     6dc:	9c 93       	st	X, r25
     6de:	8e 93       	st	-X, r24
     6e0:	12 97       	sbiw	r26, 0x02	; 2
     6e2:	80 e3       	ldi	r24, 0x30	; 48
     6e4:	92 e0       	ldi	r25, 0x02	; 2
     6e6:	15 96       	adiw	r26, 0x05	; 5
     6e8:	9c 93       	st	X, r25
     6ea:	8e 93       	st	-X, r24
     6ec:	14 97       	sbiw	r26, 0x04	; 4
     6ee:	88 e4       	ldi	r24, 0x48	; 72
     6f0:	92 e0       	ldi	r25, 0x02	; 2
     6f2:	17 96       	adiw	r26, 0x07	; 7
     6f4:	9c 93       	st	X, r25
     6f6:	8e 93       	st	-X, r24
     6f8:	16 97       	sbiw	r26, 0x06	; 6
     6fa:	8b e4       	ldi	r24, 0x4B	; 75
     6fc:	92 e0       	ldi	r25, 0x02	; 2
     6fe:	19 96       	adiw	r26, 0x09	; 9
     700:	9c 93       	st	X, r25
     702:	8e 93       	st	-X, r24
     704:	18 97       	sbiw	r26, 0x08	; 8
     706:	8e e4       	ldi	r24, 0x4E	; 78
     708:	92 e0       	ldi	r25, 0x02	; 2
     70a:	1b 96       	adiw	r26, 0x0b	; 11
     70c:	9c 93       	st	X, r25
     70e:	8e 93       	st	-X, r24
     710:	1a 97       	sbiw	r26, 0x0a	; 10
     712:	8a eb       	ldi	r24, 0xBA	; 186
     714:	91 e0       	ldi	r25, 0x01	; 1
     716:	1d 96       	adiw	r26, 0x0d	; 13
     718:	9c 93       	st	X, r25
     71a:	8e 93       	st	-X, r24
     71c:	1c 97       	sbiw	r26, 0x0c	; 12
     71e:	83 e5       	ldi	r24, 0x53	; 83
     720:	92 e0       	ldi	r25, 0x02	; 2
     722:	1f 96       	adiw	r26, 0x0f	; 15
     724:	9c 93       	st	X, r25
     726:	8e 93       	st	-X, r24
     728:	1e 97       	sbiw	r26, 0x0e	; 14
     72a:	cd 01       	movw	r24, r26
     72c:	1f 91       	pop	r17
     72e:	0f 91       	pop	r16
     730:	08 95       	ret

00000732 <__vector_16>:
	timer3_state=0;
}
/***Interrupt***/
// So that main will not freeze when not defined, therefore exclude here! before use.
//ISR(TIMER0_COMP_vect){ }
ISR(TIMER0_OVF_vect){ }
     732:	1f 92       	push	r1
     734:	0f 92       	push	r0
     736:	0f b6       	in	r0, 0x3f	; 63
     738:	0f 92       	push	r0
     73a:	11 24       	eor	r1, r1
     73c:	0f 90       	pop	r0
     73e:	0f be       	out	0x3f, r0	; 63
     740:	0f 90       	pop	r0
     742:	1f 90       	pop	r1
     744:	18 95       	reti

00000746 <__vector_11>:
ISR(TIMER1_CAPT_vect){ }
     746:	1f 92       	push	r1
     748:	0f 92       	push	r0
     74a:	0f b6       	in	r0, 0x3f	; 63
     74c:	0f 92       	push	r0
     74e:	11 24       	eor	r1, r1
     750:	0f 90       	pop	r0
     752:	0f be       	out	0x3f, r0	; 63
     754:	0f 90       	pop	r0
     756:	1f 90       	pop	r1
     758:	18 95       	reti

0000075a <__vector_12>:
ISR(TIMER1_COMPA_vect){ }
     75a:	1f 92       	push	r1
     75c:	0f 92       	push	r0
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	0f 92       	push	r0
     762:	11 24       	eor	r1, r1
     764:	0f 90       	pop	r0
     766:	0f be       	out	0x3f, r0	; 63
     768:	0f 90       	pop	r0
     76a:	1f 90       	pop	r1
     76c:	18 95       	reti

0000076e <__vector_13>:
ISR(TIMER1_COMPB_vect){ }
     76e:	1f 92       	push	r1
     770:	0f 92       	push	r0
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	0f 92       	push	r0
     776:	11 24       	eor	r1, r1
     778:	0f 90       	pop	r0
     77a:	0f be       	out	0x3f, r0	; 63
     77c:	0f 90       	pop	r0
     77e:	1f 90       	pop	r1
     780:	18 95       	reti

00000782 <__vector_24>:
ISR(TIMER1_COMPC_vect){ }
     782:	1f 92       	push	r1
     784:	0f 92       	push	r0
     786:	0f b6       	in	r0, 0x3f	; 63
     788:	0f 92       	push	r0
     78a:	11 24       	eor	r1, r1
     78c:	0f 90       	pop	r0
     78e:	0f be       	out	0x3f, r0	; 63
     790:	0f 90       	pop	r0
     792:	1f 90       	pop	r1
     794:	18 95       	reti

00000796 <__vector_14>:
ISR(TIMER1_OVF_vect){ }
     796:	1f 92       	push	r1
     798:	0f 92       	push	r0
     79a:	0f b6       	in	r0, 0x3f	; 63
     79c:	0f 92       	push	r0
     79e:	11 24       	eor	r1, r1
     7a0:	0f 90       	pop	r0
     7a2:	0f be       	out	0x3f, r0	; 63
     7a4:	0f 90       	pop	r0
     7a6:	1f 90       	pop	r1
     7a8:	18 95       	reti

000007aa <__vector_10>:
ISR(TIMER2_OVF_vect){ }
     7aa:	1f 92       	push	r1
     7ac:	0f 92       	push	r0
     7ae:	0f b6       	in	r0, 0x3f	; 63
     7b0:	0f 92       	push	r0
     7b2:	11 24       	eor	r1, r1
     7b4:	0f 90       	pop	r0
     7b6:	0f be       	out	0x3f, r0	; 63
     7b8:	0f 90       	pop	r0
     7ba:	1f 90       	pop	r1
     7bc:	18 95       	reti

000007be <__vector_25>:
ISR(TIMER3_CAPT_vect){ }
     7be:	1f 92       	push	r1
     7c0:	0f 92       	push	r0
     7c2:	0f b6       	in	r0, 0x3f	; 63
     7c4:	0f 92       	push	r0
     7c6:	11 24       	eor	r1, r1
     7c8:	0f 90       	pop	r0
     7ca:	0f be       	out	0x3f, r0	; 63
     7cc:	0f 90       	pop	r0
     7ce:	1f 90       	pop	r1
     7d0:	18 95       	reti

000007d2 <__vector_26>:
ISR(TIMER3_COMPA_vect){ }
     7d2:	1f 92       	push	r1
     7d4:	0f 92       	push	r0
     7d6:	0f b6       	in	r0, 0x3f	; 63
     7d8:	0f 92       	push	r0
     7da:	11 24       	eor	r1, r1
     7dc:	0f 90       	pop	r0
     7de:	0f be       	out	0x3f, r0	; 63
     7e0:	0f 90       	pop	r0
     7e2:	1f 90       	pop	r1
     7e4:	18 95       	reti

000007e6 <__vector_27>:
ISR(TIMER3_COMPB_vect){ }
     7e6:	1f 92       	push	r1
     7e8:	0f 92       	push	r0
     7ea:	0f b6       	in	r0, 0x3f	; 63
     7ec:	0f 92       	push	r0
     7ee:	11 24       	eor	r1, r1
     7f0:	0f 90       	pop	r0
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	0f 90       	pop	r0
     7f6:	1f 90       	pop	r1
     7f8:	18 95       	reti

000007fa <__vector_28>:
ISR(TIMER3_COMPC_vect){ }
     7fa:	1f 92       	push	r1
     7fc:	0f 92       	push	r0
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	0f 92       	push	r0
     802:	11 24       	eor	r1, r1
     804:	0f 90       	pop	r0
     806:	0f be       	out	0x3f, r0	; 63
     808:	0f 90       	pop	r0
     80a:	1f 90       	pop	r1
     80c:	18 95       	reti

0000080e <__vector_29>:
ISR(TIMER3_OVF_vect){ }
     80e:	1f 92       	push	r1
     810:	0f 92       	push	r0
     812:	0f b6       	in	r0, 0x3f	; 63
     814:	0f 92       	push	r0
     816:	11 24       	eor	r1, r1
     818:	0f 90       	pop	r0
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	0f 90       	pop	r0
     81e:	1f 90       	pop	r1
     820:	18 95       	reti

00000822 <__vector_18>:
	}else{
		uart1_index=0;
		ret=uart1_msg;
	}
	return ret;
}
     822:	1f 92       	push	r1
     824:	0f 92       	push	r0
     826:	0f b6       	in	r0, 0x3f	; 63
     828:	0f 92       	push	r0
     82a:	11 24       	eor	r1, r1
     82c:	0b b6       	in	r0, 0x3b	; 59
     82e:	0f 92       	push	r0
     830:	8f 93       	push	r24
     832:	9f 93       	push	r25
     834:	ef 93       	push	r30
     836:	ff 93       	push	r31
     838:	8b b1       	in	r24, 0x0b	; 11
     83a:	9a b1       	in	r25, 0x0a	; 10
     83c:	88 71       	andi	r24, 0x18	; 24
     83e:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <UART_LastRxError>
     842:	e0 91 81 02 	lds	r30, 0x0281	; 0x800281 <UART_RxHead>
     846:	ef 5f       	subi	r30, 0xFF	; 255
     848:	ef 73       	andi	r30, 0x3F	; 63
     84a:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <UART_RxTail>
     84e:	e9 13       	cpse	r30, r25
     850:	04 c0       	rjmp	.+8      	; 0x85a <__vector_18+0x38>
     852:	82 e0       	ldi	r24, 0x02	; 2
     854:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <UART_LastRxError>
     858:	0f c0       	rjmp	.+30     	; 0x878 <__vector_18+0x56>
     85a:	9c b1       	in	r25, 0x0c	; 12
     85c:	e0 93 81 02 	sts	0x0281, r30	; 0x800281 <UART_RxHead>
     860:	88 23       	and	r24, r24
     862:	31 f0       	breq	.+12     	; 0x870 <__vector_18+0x4e>
     864:	f0 e0       	ldi	r31, 0x00	; 0
     866:	ec 57       	subi	r30, 0x7C	; 124
     868:	fd 4f       	sbci	r31, 0xFD	; 253
     86a:	88 e5       	ldi	r24, 0x58	; 88
     86c:	80 83       	st	Z, r24
     86e:	04 c0       	rjmp	.+8      	; 0x878 <__vector_18+0x56>
     870:	f0 e0       	ldi	r31, 0x00	; 0
     872:	ec 57       	subi	r30, 0x7C	; 124
     874:	fd 4f       	sbci	r31, 0xFD	; 253
     876:	90 83       	st	Z, r25
     878:	ff 91       	pop	r31
     87a:	ef 91       	pop	r30
     87c:	9f 91       	pop	r25
     87e:	8f 91       	pop	r24
     880:	0f 90       	pop	r0
     882:	0b be       	out	0x3b, r0	; 59
     884:	0f 90       	pop	r0
     886:	0f be       	out	0x3f, r0	; 63
     888:	0f 90       	pop	r0
     88a:	1f 90       	pop	r1
     88c:	18 95       	reti

0000088e <__vector_19>:
     88e:	1f 92       	push	r1
     890:	0f 92       	push	r0
     892:	0f b6       	in	r0, 0x3f	; 63
     894:	0f 92       	push	r0
     896:	11 24       	eor	r1, r1
     898:	0b b6       	in	r0, 0x3b	; 59
     89a:	0f 92       	push	r0
     89c:	8f 93       	push	r24
     89e:	9f 93       	push	r25
     8a0:	ef 93       	push	r30
     8a2:	ff 93       	push	r31
     8a4:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <UART_TxTail>
     8a8:	f0 e0       	ldi	r31, 0x00	; 0
     8aa:	ef 5b       	subi	r30, 0xBF	; 191
     8ac:	fd 4f       	sbci	r31, 0xFD	; 253
     8ae:	80 81       	ld	r24, Z
     8b0:	8c b9       	out	0x0c, r24	; 12
     8b2:	10 82       	st	Z, r1
     8b4:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <UART_TxTail>
     8b8:	8f 5f       	subi	r24, 0xFF	; 255
     8ba:	8f 73       	andi	r24, 0x3F	; 63
     8bc:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <UART_TxTail>
     8c0:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <UART_TxHead>
     8c4:	89 13       	cpse	r24, r25
     8c6:	01 c0       	rjmp	.+2      	; 0x8ca <__vector_19+0x3c>
     8c8:	55 98       	cbi	0x0a, 5	; 10
     8ca:	ff 91       	pop	r31
     8cc:	ef 91       	pop	r30
     8ce:	9f 91       	pop	r25
     8d0:	8f 91       	pop	r24
     8d2:	0f 90       	pop	r0
     8d4:	0b be       	out	0x3b, r0	; 59
     8d6:	0f 90       	pop	r0
     8d8:	0f be       	out	0x3f, r0	; 63
     8da:	0f 90       	pop	r0
     8dc:	1f 90       	pop	r1
     8de:	18 95       	reti

000008e0 <__vector_30>:
	UART1_TxHead = UART1_TxTail;
}
/***Interrupt***/
/***SIGNAL(UART1_RECEIVE_INTERRUPT)***/
SIGNAL(UART1_RECEIVE_INTERRUPT)
{
     8e0:	1f 92       	push	r1
     8e2:	0f 92       	push	r0
     8e4:	0f b6       	in	r0, 0x3f	; 63
     8e6:	0f 92       	push	r0
     8e8:	11 24       	eor	r1, r1
     8ea:	0b b6       	in	r0, 0x3b	; 59
     8ec:	0f 92       	push	r0
     8ee:	8f 93       	push	r24
     8f0:	9f 93       	push	r25
     8f2:	ef 93       	push	r30
     8f4:	ff 93       	push	r31
    unsigned char tmphead;
	unsigned char data;
	unsigned char bit9;
    unsigned char usr;
    /***read UART status register and UART data register***/
	usr  = UART1_STATUS;
     8f6:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    bit9 = UART1_CONTROL;
     8fa:	90 91 9a 00 	lds	r25, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    bit9 = 0x01 & (bit9>>1);
    /***/
    UART1_LastRxError = (usr & (_BV(FE1)|_BV(DOR1)));
     8fe:	88 71       	andi	r24, 0x18	; 24
     900:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <UART1_LastRxError>
	/***calculate buffer index***/
    tmphead = ( UART1_RxHead + 1) & UART_RX_BUFFER_MASK;
     904:	e0 91 bd 01 	lds	r30, 0x01BD	; 0x8001bd <UART1_RxHead>
     908:	ef 5f       	subi	r30, 0xFF	; 255
     90a:	ef 73       	andi	r30, 0x3F	; 63
    if ( tmphead == UART1_RxTail ) {	
     90c:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <UART1_RxTail>
     910:	e9 13       	cpse	r30, r25
     912:	04 c0       	rjmp	.+8      	; 0x91c <__vector_30+0x3c>
        /***error: receive buffer overflow, caracter is lost***/
        UART1_LastRxError = UART_BUFFER_OVERFLOW >> 8; 
     914:	82 e0       	ldi	r24, 0x02	; 2
     916:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <UART1_LastRxError>
     91a:	10 c0       	rjmp	.+32     	; 0x93c <__vector_30+0x5c>
	}else{
		data = UART1_DATA;
     91c:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
        /***store new index***/
        UART1_RxHead = tmphead;
     920:	e0 93 bd 01 	sts	0x01BD, r30	; 0x8001bd <UART1_RxHead>
		if(UART1_LastRxError){
     924:	88 23       	and	r24, r24
     926:	31 f0       	breq	.+12     	; 0x934 <__vector_30+0x54>
			/***store indication data error in buffer***/
			UART1_RxBuf[tmphead] = 'X';
     928:	f0 e0       	ldi	r31, 0x00	; 0
     92a:	e6 58       	subi	r30, 0x86	; 134
     92c:	fe 4f       	sbci	r31, 0xFE	; 254
     92e:	88 e5       	ldi	r24, 0x58	; 88
     930:	80 83       	st	Z, r24
     932:	04 c0       	rjmp	.+8      	; 0x93c <__vector_30+0x5c>
		}else{
			/***store received data in buffer***/
			UART1_RxBuf[tmphead] = data;
     934:	f0 e0       	ldi	r31, 0x00	; 0
     936:	e6 58       	subi	r30, 0x86	; 134
     938:	fe 4f       	sbci	r31, 0xFE	; 254
     93a:	90 83       	st	Z, r25
		}
    }
}
     93c:	ff 91       	pop	r31
     93e:	ef 91       	pop	r30
     940:	9f 91       	pop	r25
     942:	8f 91       	pop	r24
     944:	0f 90       	pop	r0
     946:	0b be       	out	0x3b, r0	; 59
     948:	0f 90       	pop	r0
     94a:	0f be       	out	0x3f, r0	; 63
     94c:	0f 90       	pop	r0
     94e:	1f 90       	pop	r1
     950:	18 95       	reti

00000952 <__vector_31>:
/***SIGNAL(UART1_TRANSMIT_INTERRUPT)***/
SIGNAL(UART1_TRANSMIT_INTERRUPT)
{
     952:	1f 92       	push	r1
     954:	0f 92       	push	r0
     956:	0f b6       	in	r0, 0x3f	; 63
     958:	0f 92       	push	r0
     95a:	11 24       	eor	r1, r1
     95c:	0b b6       	in	r0, 0x3b	; 59
     95e:	0f 92       	push	r0
     960:	8f 93       	push	r24
     962:	9f 93       	push	r25
     964:	ef 93       	push	r30
     966:	ff 93       	push	r31
	uint8_t tail = UART1_TxTail;
	UART1_DATA = UART1_TxBuf[tail];
     968:	e0 91 79 01 	lds	r30, 0x0179	; 0x800179 <UART1_TxTail>
     96c:	f0 e0       	ldi	r31, 0x00	; 0
     96e:	ef 5f       	subi	r30, 0xFF	; 255
     970:	fd 4f       	sbci	r31, 0xFD	; 253
     972:	80 81       	ld	r24, Z
     974:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
	UART1_TxBuf[tail]='\0';
     978:	10 82       	st	Z, r1
	UART1_TxTail = (UART1_TxTail + 1) & UART_TX_BUFFER_MASK;
     97a:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <UART1_TxTail>
     97e:	8f 5f       	subi	r24, 0xFF	; 255
     980:	8f 73       	andi	r24, 0x3F	; 63
     982:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <UART1_TxTail>
	if ( UART1_TxTail != UART1_TxHead )
     986:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <UART1_TxHead>
     98a:	89 13       	cpse	r24, r25
     98c:	05 c0       	rjmp	.+10     	; 0x998 <__vector_31+0x46>
        ;
    else
		UART1_CONTROL &= ~_BV(UART1_UDRIE);
     98e:	ea e9       	ldi	r30, 0x9A	; 154
     990:	f0 e0       	ldi	r31, 0x00	; 0
     992:	80 81       	ld	r24, Z
     994:	8f 7d       	andi	r24, 0xDF	; 223
     996:	80 83       	st	Z, r24
}
     998:	ff 91       	pop	r31
     99a:	ef 91       	pop	r30
     99c:	9f 91       	pop	r25
     99e:	8f 91       	pop	r24
     9a0:	0f 90       	pop	r0
     9a2:	0b be       	out	0x3b, r0	; 59
     9a4:	0f 90       	pop	r0
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	0f 90       	pop	r0
     9aa:	1f 90       	pop	r1
     9ac:	18 95       	reti

000009ae <FUNCpinmatch>:
	return i;
}
uint8_t  bintobcd(uint8_t bin)
{
	return (((bin) / 10) << 4) + ((bin) % 10);
}
     9ae:	68 23       	and	r22, r24
     9b0:	44 23       	and	r20, r20
     9b2:	21 f0       	breq	.+8      	; 0x9bc <FUNCpinmatch+0xe>
     9b4:	86 17       	cp	r24, r22
     9b6:	21 f0       	breq	.+8      	; 0x9c0 <FUNCpinmatch+0x12>
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	08 95       	ret
     9bc:	61 11       	cpse	r22, r1
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	08 95       	ret

000009c2 <FUNChmerge>:
     9c2:	86 2b       	or	r24, r22
     9c4:	08 95       	ret

000009c6 <FUNClmerge>:
     9c6:	86 23       	and	r24, r22
     9c8:	08 95       	ret

000009ca <FUNChh>:
     9ca:	86 23       	and	r24, r22
     9cc:	08 95       	ret

000009ce <FUNCll>:
     9ce:	86 2b       	or	r24, r22
     9d0:	80 95       	com	r24
     9d2:	08 95       	ret

000009d4 <FUNClh>:
     9d4:	86 27       	eor	r24, r22
     9d6:	86 23       	and	r24, r22
     9d8:	08 95       	ret

000009da <FUNChl>:
     9da:	60 95       	com	r22
     9dc:	86 23       	and	r24, r22
     9de:	08 95       	ret

000009e0 <FUNCdiff>:
     9e0:	86 27       	eor	r24, r22
     9e2:	08 95       	ret

000009e4 <FUNCswap>:
     9e4:	cf 92       	push	r12
     9e6:	df 92       	push	r13
     9e8:	ef 92       	push	r14
     9ea:	ff 92       	push	r15
     9ec:	0f 93       	push	r16
     9ee:	1f 93       	push	r17
     9f0:	fc 01       	movw	r30, r24
     9f2:	00 81       	ld	r16, Z
     9f4:	11 81       	ldd	r17, Z+1	; 0x01
     9f6:	22 81       	ldd	r18, Z+2	; 0x02
     9f8:	33 81       	ldd	r19, Z+3	; 0x03
     9fa:	fb 01       	movw	r30, r22
     9fc:	c0 80       	ld	r12, Z
     9fe:	d1 80       	ldd	r13, Z+1	; 0x01
     a00:	e2 80       	ldd	r14, Z+2	; 0x02
     a02:	f3 80       	ldd	r15, Z+3	; 0x03
     a04:	fc 01       	movw	r30, r24
     a06:	c0 82       	st	Z, r12
     a08:	d1 82       	std	Z+1, r13	; 0x01
     a0a:	e2 82       	std	Z+2, r14	; 0x02
     a0c:	f3 82       	std	Z+3, r15	; 0x03
     a0e:	fb 01       	movw	r30, r22
     a10:	00 83       	st	Z, r16
     a12:	11 83       	std	Z+1, r17	; 0x01
     a14:	22 83       	std	Z+2, r18	; 0x02
     a16:	33 83       	std	Z+3, r19	; 0x03
     a18:	1f 91       	pop	r17
     a1a:	0f 91       	pop	r16
     a1c:	ff 90       	pop	r15
     a1e:	ef 90       	pop	r14
     a20:	df 90       	pop	r13
     a22:	cf 90       	pop	r12
     a24:	08 95       	ret

00000a26 <FUNCcopy>:
     a26:	fb 01       	movw	r30, r22
     a28:	20 81       	ld	r18, Z
     a2a:	fc 01       	movw	r30, r24
     a2c:	20 83       	st	Z, r18
     a2e:	22 23       	and	r18, r18
     a30:	39 f0       	breq	.+14     	; 0xa40 <FUNCcopy+0x1a>
     a32:	db 01       	movw	r26, r22
     a34:	11 96       	adiw	r26, 0x01	; 1
     a36:	31 96       	adiw	r30, 0x01	; 1
     a38:	9d 91       	ld	r25, X+
     a3a:	91 93       	st	Z+, r25
     a3c:	91 11       	cpse	r25, r1
     a3e:	fc cf       	rjmp	.-8      	; 0xa38 <FUNCcopy+0x12>
     a40:	08 95       	ret

00000a42 <FUNCsqueeze>:
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	ec 01       	movw	r28, r24
     a48:	98 81       	ld	r25, Y
     a4a:	99 23       	and	r25, r25
     a4c:	99 f0       	breq	.+38     	; 0xa74 <FUNCsqueeze+0x32>
     a4e:	fe 01       	movw	r30, r28
     a50:	31 96       	adiw	r30, 0x01	; 1
     a52:	20 e0       	ldi	r18, 0x00	; 0
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	49 2f       	mov	r20, r25
     a58:	50 e0       	ldi	r21, 0x00	; 0
     a5a:	46 17       	cp	r20, r22
     a5c:	57 07       	cpc	r21, r23
     a5e:	31 f0       	breq	.+12     	; 0xa6c <FUNCsqueeze+0x2a>
     a60:	de 01       	movw	r26, r28
     a62:	a2 0f       	add	r26, r18
     a64:	b3 1f       	adc	r27, r19
     a66:	9c 93       	st	X, r25
     a68:	2f 5f       	subi	r18, 0xFF	; 255
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	91 91       	ld	r25, Z+
     a6e:	91 11       	cpse	r25, r1
     a70:	f2 cf       	rjmp	.-28     	; 0xa56 <FUNCsqueeze+0x14>
     a72:	02 c0       	rjmp	.+4      	; 0xa78 <FUNCsqueeze+0x36>
     a74:	20 e0       	ldi	r18, 0x00	; 0
     a76:	30 e0       	ldi	r19, 0x00	; 0
     a78:	fe 01       	movw	r30, r28
     a7a:	e2 0f       	add	r30, r18
     a7c:	f3 1f       	adc	r31, r19
     a7e:	10 82       	st	Z, r1
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	08 95       	ret

00000a86 <FUNCshellsort>:
     a86:	2f 92       	push	r2
     a88:	3f 92       	push	r3
     a8a:	4f 92       	push	r4
     a8c:	5f 92       	push	r5
     a8e:	6f 92       	push	r6
     a90:	7f 92       	push	r7
     a92:	8f 92       	push	r8
     a94:	9f 92       	push	r9
     a96:	af 92       	push	r10
     a98:	bf 92       	push	r11
     a9a:	cf 92       	push	r12
     a9c:	df 92       	push	r13
     a9e:	ef 92       	push	r14
     aa0:	ff 92       	push	r15
     aa2:	0f 93       	push	r16
     aa4:	1f 93       	push	r17
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	00 d0       	rcall	.+0      	; 0xaac <FUNCshellsort+0x26>
     aac:	00 d0       	rcall	.+0      	; 0xaae <FUNCshellsort+0x28>
     aae:	cd b7       	in	r28, 0x3d	; 61
     ab0:	de b7       	in	r29, 0x3e	; 62
     ab2:	2c 01       	movw	r4, r24
     ab4:	1b 01       	movw	r2, r22
     ab6:	4b 01       	movw	r8, r22
     ab8:	77 23       	and	r23, r23
     aba:	1c f4       	brge	.+6      	; 0xac2 <FUNCshellsort+0x3c>
     abc:	2f ef       	ldi	r18, 0xFF	; 255
     abe:	82 1a       	sub	r8, r18
     ac0:	92 0a       	sbc	r9, r18
     ac2:	95 94       	asr	r9
     ac4:	87 94       	ror	r8
     ac6:	18 14       	cp	r1, r8
     ac8:	19 04       	cpc	r1, r9
     aca:	0c f4       	brge	.+2      	; 0xace <FUNCshellsort+0x48>
     acc:	51 c0       	rjmp	.+162    	; 0xb70 <FUNCshellsort+0xea>
     ace:	6a c0       	rjmp	.+212    	; 0xba4 <FUNCshellsort+0x11e>
     ad0:	96 01       	movw	r18, r12
     ad2:	dd 20       	and	r13, r13
     ad4:	9c f1       	brlt	.+102    	; 0xb3c <FUNCshellsort+0xb6>
     ad6:	f5 01       	movw	r30, r10
     ad8:	40 81       	ld	r20, Z
     ada:	51 81       	ldd	r21, Z+1	; 0x01
     adc:	f4 01       	movw	r30, r8
     ade:	60 81       	ld	r22, Z
     ae0:	71 81       	ldd	r23, Z+1	; 0x01
     ae2:	64 17       	cp	r22, r20
     ae4:	75 07       	cpc	r23, r21
     ae6:	54 f5       	brge	.+84     	; 0xb3c <FUNCshellsort+0xb6>
     ae8:	8c 01       	movw	r16, r24
     aea:	0a 0d       	add	r16, r10
     aec:	1b 1d       	adc	r17, r11
     aee:	d4 01       	movw	r26, r8
     af0:	bc 82       	std	Y+4, r11	; 0x04
     af2:	ab 82       	std	Y+3, r10	; 0x03
     af4:	ba 82       	std	Y+2, r11	; 0x02
     af6:	a9 82       	std	Y+1, r10	; 0x01
     af8:	eb 81       	ldd	r30, Y+3	; 0x03
     afa:	fc 81       	ldd	r31, Y+4	; 0x04
     afc:	71 83       	std	Z+1, r23	; 0x01
     afe:	60 83       	st	Z, r22
     b00:	11 96       	adiw	r26, 0x01	; 1
     b02:	5c 93       	st	X, r21
     b04:	4e 93       	st	-X, r20
     b06:	2e 19       	sub	r18, r14
     b08:	3f 09       	sbc	r19, r15
     b0a:	c2 f0       	brmi	.+48     	; 0xb3c <FUNCshellsort+0xb6>
     b0c:	f8 01       	movw	r30, r16
     b0e:	40 81       	ld	r20, Z
     b10:	51 81       	ldd	r21, Z+1	; 0x01
     b12:	e9 81       	ldd	r30, Y+1	; 0x01
     b14:	fa 81       	ldd	r31, Y+2	; 0x02
     b16:	60 81       	ld	r22, Z
     b18:	71 81       	ldd	r23, Z+1	; 0x01
     b1a:	08 0f       	add	r16, r24
     b1c:	19 1f       	adc	r17, r25
     b1e:	e8 0f       	add	r30, r24
     b20:	f9 1f       	adc	r31, r25
     b22:	fa 83       	std	Y+2, r31	; 0x02
     b24:	e9 83       	std	Y+1, r30	; 0x01
     b26:	eb 81       	ldd	r30, Y+3	; 0x03
     b28:	fc 81       	ldd	r31, Y+4	; 0x04
     b2a:	e8 0f       	add	r30, r24
     b2c:	f9 1f       	adc	r31, r25
     b2e:	fc 83       	std	Y+4, r31	; 0x04
     b30:	eb 83       	std	Y+3, r30	; 0x03
     b32:	a8 0f       	add	r26, r24
     b34:	b9 1f       	adc	r27, r25
     b36:	64 17       	cp	r22, r20
     b38:	75 07       	cpc	r23, r21
     b3a:	f4 f2       	brlt	.-68     	; 0xaf8 <FUNCshellsort+0x72>
     b3c:	ff ef       	ldi	r31, 0xFF	; 255
     b3e:	cf 1a       	sub	r12, r31
     b40:	df 0a       	sbc	r13, r31
     b42:	22 e0       	ldi	r18, 0x02	; 2
     b44:	a2 0e       	add	r10, r18
     b46:	b1 1c       	adc	r11, r1
     b48:	e2 e0       	ldi	r30, 0x02	; 2
     b4a:	8e 0e       	add	r8, r30
     b4c:	91 1c       	adc	r9, r1
     b4e:	c6 14       	cp	r12, r6
     b50:	d7 04       	cpc	r13, r7
     b52:	09 f0       	breq	.+2      	; 0xb56 <FUNCshellsort+0xd0>
     b54:	bd cf       	rjmp	.-134    	; 0xad0 <FUNCshellsort+0x4a>
     b56:	47 01       	movw	r8, r14
     b58:	ff 20       	and	r15, r15
     b5a:	1c f4       	brge	.+6      	; 0xb62 <FUNCshellsort+0xdc>
     b5c:	ff ef       	ldi	r31, 0xFF	; 255
     b5e:	8f 1a       	sub	r8, r31
     b60:	9f 0a       	sbc	r9, r31
     b62:	95 94       	asr	r9
     b64:	87 94       	ror	r8
     b66:	18 14       	cp	r1, r8
     b68:	19 04       	cpc	r1, r9
     b6a:	e4 f4       	brge	.+56     	; 0xba4 <FUNCshellsort+0x11e>
     b6c:	74 01       	movw	r14, r8
     b6e:	01 c0       	rjmp	.+2      	; 0xb72 <FUNCshellsort+0xec>
     b70:	74 01       	movw	r14, r8
     b72:	82 14       	cp	r8, r2
     b74:	93 04       	cpc	r9, r3
     b76:	7c f7       	brge	.-34     	; 0xb56 <FUNCshellsort+0xd0>
     b78:	64 01       	movw	r12, r8
     b7a:	ce 18       	sub	r12, r14
     b7c:	df 08       	sbc	r13, r15
     b7e:	56 01       	movw	r10, r12
     b80:	aa 0c       	add	r10, r10
     b82:	bb 1c       	adc	r11, r11
     b84:	a4 0c       	add	r10, r4
     b86:	b5 1c       	adc	r11, r5
     b88:	88 0c       	add	r8, r8
     b8a:	99 1c       	adc	r9, r9
     b8c:	84 0c       	add	r8, r4
     b8e:	95 1c       	adc	r9, r5
     b90:	31 01       	movw	r6, r2
     b92:	6e 18       	sub	r6, r14
     b94:	7f 08       	sbc	r7, r15
     b96:	c7 01       	movw	r24, r14
     b98:	88 0f       	add	r24, r24
     b9a:	99 1f       	adc	r25, r25
     b9c:	91 95       	neg	r25
     b9e:	81 95       	neg	r24
     ba0:	91 09       	sbc	r25, r1
     ba2:	96 cf       	rjmp	.-212    	; 0xad0 <FUNCshellsort+0x4a>
     ba4:	0f 90       	pop	r0
     ba6:	0f 90       	pop	r0
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	df 91       	pop	r29
     bae:	cf 91       	pop	r28
     bb0:	1f 91       	pop	r17
     bb2:	0f 91       	pop	r16
     bb4:	ff 90       	pop	r15
     bb6:	ef 90       	pop	r14
     bb8:	df 90       	pop	r13
     bba:	cf 90       	pop	r12
     bbc:	bf 90       	pop	r11
     bbe:	af 90       	pop	r10
     bc0:	9f 90       	pop	r9
     bc2:	8f 90       	pop	r8
     bc4:	7f 90       	pop	r7
     bc6:	6f 90       	pop	r6
     bc8:	5f 90       	pop	r5
     bca:	4f 90       	pop	r4
     bcc:	3f 90       	pop	r3
     bce:	2f 90       	pop	r2
     bd0:	08 95       	ret

00000bd2 <FUNCpmax>:
     bd2:	86 17       	cp	r24, r22
     bd4:	97 07       	cpc	r25, r23
     bd6:	0c f4       	brge	.+2      	; 0xbda <FUNCpmax+0x8>
     bd8:	cb 01       	movw	r24, r22
     bda:	08 95       	ret

00000bdc <FUNCgcd>:
     bdc:	9b 01       	movw	r18, r22
     bde:	67 2b       	or	r22, r23
     be0:	11 f4       	brne	.+4      	; 0xbe6 <FUNCgcd+0xa>
     be2:	08 95       	ret
     be4:	9a 01       	movw	r18, r20
     be6:	b9 01       	movw	r22, r18
     be8:	0e 94 c3 13 	call	0x2786	; 0x2786 <__divmodhi4>
     bec:	ac 01       	movw	r20, r24
     bee:	82 2f       	mov	r24, r18
     bf0:	93 2f       	mov	r25, r19
     bf2:	41 15       	cp	r20, r1
     bf4:	51 05       	cpc	r21, r1
     bf6:	b1 f7       	brne	.-20     	; 0xbe4 <FUNCgcd+0x8>
     bf8:	08 95       	ret

00000bfa <FUNCstrToInt>:
     bfa:	fc 01       	movw	r30, r24
     bfc:	90 81       	ld	r25, Z
     bfe:	80 ed       	ldi	r24, 0xD0	; 208
     c00:	89 0f       	add	r24, r25
     c02:	8a 30       	cpi	r24, 0x0A	; 10
     c04:	d0 f4       	brcc	.+52     	; 0xc3a <FUNCstrToInt+0x40>
     c06:	31 96       	adiw	r30, 0x01	; 1
     c08:	20 e0       	ldi	r18, 0x00	; 0
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	a9 01       	movw	r20, r18
     c0e:	44 0f       	add	r20, r20
     c10:	55 1f       	adc	r21, r21
     c12:	22 0f       	add	r18, r18
     c14:	33 1f       	adc	r19, r19
     c16:	22 0f       	add	r18, r18
     c18:	33 1f       	adc	r19, r19
     c1a:	22 0f       	add	r18, r18
     c1c:	33 1f       	adc	r19, r19
     c1e:	42 0f       	add	r20, r18
     c20:	53 1f       	adc	r21, r19
     c22:	29 2f       	mov	r18, r25
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	20 53       	subi	r18, 0x30	; 48
     c28:	31 09       	sbc	r19, r1
     c2a:	24 0f       	add	r18, r20
     c2c:	35 1f       	adc	r19, r21
     c2e:	91 91       	ld	r25, Z+
     c30:	80 ed       	ldi	r24, 0xD0	; 208
     c32:	89 0f       	add	r24, r25
     c34:	8a 30       	cpi	r24, 0x0A	; 10
     c36:	50 f3       	brcs	.-44     	; 0xc0c <FUNCstrToInt+0x12>
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <FUNCstrToInt+0x44>
     c3a:	20 e0       	ldi	r18, 0x00	; 0
     c3c:	30 e0       	ldi	r19, 0x00	; 0
     c3e:	c9 01       	movw	r24, r18
     c40:	08 95       	ret

00000c42 <FUNCfilter>:
     c42:	86 23       	and	r24, r22
     c44:	08 95       	ret

00000c46 <FUNCticks>:
     c46:	00 97       	sbiw	r24, 0x00	; 0
     c48:	39 f0       	breq	.+14     	; 0xc58 <FUNCticks+0x12>
     c4a:	20 e0       	ldi	r18, 0x00	; 0
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	2f 5f       	subi	r18, 0xFF	; 255
     c50:	3f 4f       	sbci	r19, 0xFF	; 255
     c52:	82 17       	cp	r24, r18
     c54:	93 07       	cpc	r25, r19
     c56:	d9 f7       	brne	.-10     	; 0xc4e <FUNCticks+0x8>
     c58:	08 95       	ret

00000c5a <FUNCtwocomptoint8bit>:
     c5a:	87 ff       	sbrs	r24, 7
     c5c:	08 c0       	rjmp	.+16     	; 0xc6e <FUNCtwocomptoint8bit+0x14>
     c5e:	91 95       	neg	r25
     c60:	81 95       	neg	r24
     c62:	91 09       	sbc	r25, r1
     c64:	99 27       	eor	r25, r25
     c66:	91 95       	neg	r25
     c68:	81 95       	neg	r24
     c6a:	91 09       	sbc	r25, r1
     c6c:	08 95       	ret
     c6e:	8f 77       	andi	r24, 0x7F	; 127
     c70:	99 27       	eor	r25, r25
     c72:	08 95       	ret

00000c74 <FUNCtwocomptoint10bit>:
     c74:	91 ff       	sbrs	r25, 1
     c76:	08 c0       	rjmp	.+16     	; 0xc88 <FUNCtwocomptoint10bit+0x14>
     c78:	91 95       	neg	r25
     c7a:	81 95       	neg	r24
     c7c:	91 09       	sbc	r25, r1
     c7e:	93 70       	andi	r25, 0x03	; 3
     c80:	91 95       	neg	r25
     c82:	81 95       	neg	r24
     c84:	91 09       	sbc	r25, r1
     c86:	08 95       	ret
     c88:	91 70       	andi	r25, 0x01	; 1
     c8a:	08 95       	ret

00000c8c <FUNCtwocomptointnbit>:
     c8c:	61 50       	subi	r22, 0x01	; 1
     c8e:	21 e0       	ldi	r18, 0x01	; 1
     c90:	30 e0       	ldi	r19, 0x00	; 0
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <FUNCtwocomptointnbit+0xc>
     c94:	22 0f       	add	r18, r18
     c96:	33 1f       	adc	r19, r19
     c98:	6a 95       	dec	r22
     c9a:	e2 f7       	brpl	.-8      	; 0xc94 <FUNCtwocomptointnbit+0x8>
     c9c:	a9 01       	movw	r20, r18
     c9e:	41 50       	subi	r20, 0x01	; 1
     ca0:	51 09       	sbc	r21, r1
     ca2:	b9 01       	movw	r22, r18
     ca4:	68 23       	and	r22, r24
     ca6:	79 23       	and	r23, r25
     ca8:	67 2b       	or	r22, r23
     caa:	29 f0       	breq	.+10     	; 0xcb6 <FUNCtwocomptointnbit+0x2a>
     cac:	84 23       	and	r24, r20
     cae:	95 23       	and	r25, r21
     cb0:	82 1b       	sub	r24, r18
     cb2:	93 0b       	sbc	r25, r19
     cb4:	08 95       	ret
     cb6:	84 23       	and	r24, r20
     cb8:	95 23       	and	r25, r21
     cba:	08 95       	ret

00000cbc <FUNCdec2bcd>:
     cbc:	9d ec       	ldi	r25, 0xCD	; 205
     cbe:	89 9f       	mul	r24, r25
     cc0:	91 2d       	mov	r25, r1
     cc2:	11 24       	eor	r1, r1
     cc4:	96 95       	lsr	r25
     cc6:	96 95       	lsr	r25
     cc8:	96 95       	lsr	r25
     cca:	39 2f       	mov	r19, r25
     ccc:	33 0f       	add	r19, r19
     cce:	23 2f       	mov	r18, r19
     cd0:	22 0f       	add	r18, r18
     cd2:	22 0f       	add	r18, r18
     cd4:	23 0f       	add	r18, r19
     cd6:	82 1b       	sub	r24, r18
     cd8:	20 e1       	ldi	r18, 0x10	; 16
     cda:	92 9f       	mul	r25, r18
     cdc:	80 0d       	add	r24, r0
     cde:	11 24       	eor	r1, r1
     ce0:	08 95       	ret

00000ce2 <FUNCbcd2dec>:
     ce2:	98 2f       	mov	r25, r24
     ce4:	92 95       	swap	r25
     ce6:	9f 70       	andi	r25, 0x0F	; 15
     ce8:	99 0f       	add	r25, r25
     cea:	29 2f       	mov	r18, r25
     cec:	22 0f       	add	r18, r18
     cee:	22 0f       	add	r18, r18
     cf0:	92 0f       	add	r25, r18
     cf2:	8f 70       	andi	r24, 0x0F	; 15
     cf4:	89 0f       	add	r24, r25
     cf6:	08 95       	ret

00000cf8 <FUNCresizestr>:
     cf8:	fc 01       	movw	r30, r24
     cfa:	db 01       	movw	r26, r22
     cfc:	ac 53       	subi	r26, 0x3C	; 60
     cfe:	bd 4f       	sbci	r27, 0xFD	; 253
     d00:	1c 92       	st	X, r1
     d02:	16 16       	cp	r1, r22
     d04:	17 06       	cpc	r1, r23
     d06:	14 f5       	brge	.+68     	; 0xd4c <FUNCresizestr+0x54>
     d08:	90 81       	ld	r25, Z
     d0a:	91 11       	cpse	r25, r1
     d0c:	0c c0       	rjmp	.+24     	; 0xd26 <FUNCresizestr+0x2e>
     d0e:	17 c0       	rjmp	.+46     	; 0xd3e <FUNCresizestr+0x46>
     d10:	91 91       	ld	r25, Z+
     d12:	91 11       	cpse	r25, r1
     d14:	0d c0       	rjmp	.+26     	; 0xd30 <FUNCresizestr+0x38>
     d16:	15 c0       	rjmp	.+42     	; 0xd42 <FUNCresizestr+0x4a>
     d18:	81 93       	st	Z+, r24
     d1a:	2f 5f       	subi	r18, 0xFF	; 255
     d1c:	3f 4f       	sbci	r19, 0xFF	; 255
     d1e:	26 17       	cp	r18, r22
     d20:	37 07       	cpc	r19, r23
     d22:	d4 f3       	brlt	.-12     	; 0xd18 <FUNCresizestr+0x20>
     d24:	13 c0       	rjmp	.+38     	; 0xd4c <FUNCresizestr+0x54>
     d26:	a4 ec       	ldi	r26, 0xC4	; 196
     d28:	b2 e0       	ldi	r27, 0x02	; 2
     d2a:	31 96       	adiw	r30, 0x01	; 1
     d2c:	20 e0       	ldi	r18, 0x00	; 0
     d2e:	30 e0       	ldi	r19, 0x00	; 0
     d30:	9d 93       	st	X+, r25
     d32:	2f 5f       	subi	r18, 0xFF	; 255
     d34:	3f 4f       	sbci	r19, 0xFF	; 255
     d36:	62 17       	cp	r22, r18
     d38:	73 07       	cpc	r23, r19
     d3a:	51 f7       	brne	.-44     	; 0xd10 <FUNCresizestr+0x18>
     d3c:	07 c0       	rjmp	.+14     	; 0xd4c <FUNCresizestr+0x54>
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	f9 01       	movw	r30, r18
     d44:	ec 53       	subi	r30, 0x3C	; 60
     d46:	fd 4f       	sbci	r31, 0xFD	; 253
     d48:	80 e2       	ldi	r24, 0x20	; 32
     d4a:	e6 cf       	rjmp	.-52     	; 0xd18 <FUNCresizestr+0x20>
     d4c:	84 ec       	ldi	r24, 0xC4	; 196
     d4e:	92 e0       	ldi	r25, 0x02	; 2
     d50:	08 95       	ret

00000d52 <FUNCtrimmer>:
     d52:	4f 92       	push	r4
     d54:	5f 92       	push	r5
     d56:	6f 92       	push	r6
     d58:	7f 92       	push	r7
     d5a:	af 92       	push	r10
     d5c:	bf 92       	push	r11
     d5e:	cf 92       	push	r12
     d60:	df 92       	push	r13
     d62:	ef 92       	push	r14
     d64:	ff 92       	push	r15
     d66:	0f 93       	push	r16
     d68:	1f 93       	push	r17
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	29 01       	movw	r4, r18
     d74:	3a 01       	movw	r6, r20
     d76:	9b 01       	movw	r18, r22
     d78:	ac 01       	movw	r20, r24
     d7a:	24 19       	sub	r18, r4
     d7c:	35 09       	sbc	r19, r5
     d7e:	46 09       	sbc	r20, r6
     d80:	57 09       	sbc	r21, r7
     d82:	89 89       	ldd	r24, Y+17	; 0x11
     d84:	9a 89       	ldd	r25, Y+18	; 0x12
     d86:	ab 89       	ldd	r26, Y+19	; 0x13
     d88:	bc 89       	ldd	r27, Y+20	; 0x14
     d8a:	bc 01       	movw	r22, r24
     d8c:	cd 01       	movw	r24, r26
     d8e:	6a 19       	sub	r22, r10
     d90:	7b 09       	sbc	r23, r11
     d92:	8c 09       	sbc	r24, r12
     d94:	9d 09       	sbc	r25, r13
     d96:	0e 94 a0 13 	call	0x2740	; 0x2740 <__mulsi3>
     d9a:	a8 01       	movw	r20, r16
     d9c:	97 01       	movw	r18, r14
     d9e:	24 19       	sub	r18, r4
     da0:	35 09       	sbc	r19, r5
     da2:	46 09       	sbc	r20, r6
     da4:	57 09       	sbc	r21, r7
     da6:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <__divmodsi4>
     daa:	ca 01       	movw	r24, r20
     dac:	b9 01       	movw	r22, r18
     dae:	6a 0d       	add	r22, r10
     db0:	7b 1d       	adc	r23, r11
     db2:	8c 1d       	adc	r24, r12
     db4:	9d 1d       	adc	r25, r13
     db6:	df 91       	pop	r29
     db8:	cf 91       	pop	r28
     dba:	1f 91       	pop	r17
     dbc:	0f 91       	pop	r16
     dbe:	ff 90       	pop	r15
     dc0:	ef 90       	pop	r14
     dc2:	df 90       	pop	r13
     dc4:	cf 90       	pop	r12
     dc6:	bf 90       	pop	r11
     dc8:	af 90       	pop	r10
     dca:	7f 90       	pop	r7
     dcc:	6f 90       	pop	r6
     dce:	5f 90       	pop	r5
     dd0:	4f 90       	pop	r4
     dd2:	08 95       	ret

00000dd4 <Pwr>:
     dd4:	70 e0       	ldi	r23, 0x00	; 0
     dd6:	61 15       	cp	r22, r1
     dd8:	71 05       	cpc	r23, r1
     dda:	99 f0       	breq	.+38     	; 0xe02 <Pwr+0x2e>
     ddc:	41 e0       	ldi	r20, 0x01	; 1
     dde:	50 e0       	ldi	r21, 0x00	; 0
     de0:	21 e0       	ldi	r18, 0x01	; 1
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	fa 01       	movw	r30, r20
     de8:	e8 9f       	mul	r30, r24
     dea:	a0 01       	movw	r20, r0
     dec:	e9 9f       	mul	r30, r25
     dee:	50 0d       	add	r21, r0
     df0:	f8 9f       	mul	r31, r24
     df2:	50 0d       	add	r21, r0
     df4:	11 24       	eor	r1, r1
     df6:	2f 5f       	subi	r18, 0xFF	; 255
     df8:	3f 4f       	sbci	r19, 0xFF	; 255
     dfa:	62 17       	cp	r22, r18
     dfc:	73 07       	cpc	r23, r19
     dfe:	98 f7       	brcc	.-26     	; 0xde6 <Pwr+0x12>
     e00:	02 c0       	rjmp	.+4      	; 0xe06 <Pwr+0x32>
     e02:	41 e0       	ldi	r20, 0x01	; 1
     e04:	50 e0       	ldi	r21, 0x00	; 0
     e06:	ca 01       	movw	r24, r20
     e08:	08 95       	ret

00000e0a <StringLength>:
     e0a:	fc 01       	movw	r30, r24
     e0c:	20 81       	ld	r18, Z
     e0e:	22 23       	and	r18, r18
     e10:	41 f0       	breq	.+16     	; 0xe22 <StringLength+0x18>
     e12:	31 96       	adiw	r30, 0x01	; 1
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	01 96       	adiw	r24, 0x01	; 1
     e1a:	21 91       	ld	r18, Z+
     e1c:	21 11       	cpse	r18, r1
     e1e:	fc cf       	rjmp	.-8      	; 0xe18 <StringLength+0xe>
     e20:	08 95       	ret
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	08 95       	ret

00000e28 <FUNCtrim>:
     e28:	cf 93       	push	r28
     e2a:	df 93       	push	r29
     e2c:	ec 01       	movw	r28, r24
     e2e:	ed df       	rcall	.-38     	; 0xe0a <StringLength>
     e30:	9c 01       	movw	r18, r24
     e32:	21 50       	subi	r18, 0x01	; 1
     e34:	31 09       	sbc	r19, r1
     e36:	62 f0       	brmi	.+24     	; 0xe50 <FUNCtrim+0x28>
     e38:	fe 01       	movw	r30, r28
     e3a:	e8 0f       	add	r30, r24
     e3c:	f9 1f       	adc	r31, r25
     e3e:	92 91       	ld	r25, -Z
     e40:	90 32       	cpi	r25, 0x20	; 32
     e42:	19 f0       	breq	.+6      	; 0xe4a <FUNCtrim+0x22>
     e44:	99 50       	subi	r25, 0x09	; 9
     e46:	92 30       	cpi	r25, 0x02	; 2
     e48:	18 f4       	brcc	.+6      	; 0xe50 <FUNCtrim+0x28>
     e4a:	21 50       	subi	r18, 0x01	; 1
     e4c:	31 09       	sbc	r19, r1
     e4e:	b8 f7       	brcc	.-18     	; 0xe3e <FUNCtrim+0x16>
     e50:	c2 0f       	add	r28, r18
     e52:	d3 1f       	adc	r29, r19
     e54:	19 82       	std	Y+1, r1	; 0x01
     e56:	c9 01       	movw	r24, r18
     e58:	df 91       	pop	r29
     e5a:	cf 91       	pop	r28
     e5c:	08 95       	ret

00000e5e <Reverse>:
     e5e:	cf 93       	push	r28
     e60:	df 93       	push	r29
     e62:	ec 01       	movw	r28, r24
     e64:	d2 df       	rcall	.-92     	; 0xe0a <StringLength>
     e66:	9c 01       	movw	r18, r24
     e68:	21 50       	subi	r18, 0x01	; 1
     e6a:	31 09       	sbc	r19, r1
     e6c:	12 16       	cp	r1, r18
     e6e:	13 06       	cpc	r1, r19
     e70:	84 f4       	brge	.+32     	; 0xe92 <Reverse+0x34>
     e72:	de 01       	movw	r26, r28
     e74:	a8 0f       	add	r26, r24
     e76:	b9 1f       	adc	r27, r25
     e78:	fe 01       	movw	r30, r28
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	40 81       	ld	r20, Z
     e80:	5e 91       	ld	r21, -X
     e82:	51 93       	st	Z+, r21
     e84:	4c 93       	st	X, r20
     e86:	01 96       	adiw	r24, 0x01	; 1
     e88:	21 50       	subi	r18, 0x01	; 1
     e8a:	31 09       	sbc	r19, r1
     e8c:	82 17       	cp	r24, r18
     e8e:	93 07       	cpc	r25, r19
     e90:	b4 f3       	brlt	.-20     	; 0xe7e <Reverse+0x20>
     e92:	df 91       	pop	r29
     e94:	cf 91       	pop	r28
     e96:	08 95       	ret

00000e98 <FUNCi32toa>:
     e98:	8f 92       	push	r8
     e9a:	9f 92       	push	r9
     e9c:	af 92       	push	r10
     e9e:	bf 92       	push	r11
     ea0:	cf 92       	push	r12
     ea2:	df 92       	push	r13
     ea4:	ef 92       	push	r14
     ea6:	ff 92       	push	r15
     ea8:	0f 93       	push	r16
     eaa:	1f 93       	push	r17
     eac:	cf 93       	push	r28
     eae:	df 93       	push	r29
     eb0:	6b 01       	movw	r12, r22
     eb2:	7c 01       	movw	r14, r24
     eb4:	dc 01       	movw	r26, r24
     eb6:	cb 01       	movw	r24, r22
     eb8:	ff 20       	and	r15, r15
     eba:	3c f4       	brge	.+14     	; 0xeca <FUNCi32toa+0x32>
     ebc:	88 27       	eor	r24, r24
     ebe:	99 27       	eor	r25, r25
     ec0:	dc 01       	movw	r26, r24
     ec2:	8c 19       	sub	r24, r12
     ec4:	9d 09       	sbc	r25, r13
     ec6:	ae 09       	sbc	r26, r14
     ec8:	bf 09       	sbc	r27, r15
     eca:	bc 01       	movw	r22, r24
     ecc:	cd 01       	movw	r24, r26
     ece:	10 e0       	ldi	r17, 0x00	; 0
     ed0:	0f 2e       	mov	r0, r31
     ed2:	fa e0       	ldi	r31, 0x0A	; 10
     ed4:	8f 2e       	mov	r8, r31
     ed6:	91 2c       	mov	r9, r1
     ed8:	a1 2c       	mov	r10, r1
     eda:	b1 2c       	mov	r11, r1
     edc:	f0 2d       	mov	r31, r0
     ede:	01 c0       	rjmp	.+2      	; 0xee2 <FUNCi32toa+0x4a>
     ee0:	10 2f       	mov	r17, r16
     ee2:	01 e0       	ldi	r16, 0x01	; 1
     ee4:	01 0f       	add	r16, r17
     ee6:	c1 2f       	mov	r28, r17
     ee8:	d0 e0       	ldi	r29, 0x00	; 0
     eea:	cc 53       	subi	r28, 0x3C	; 60
     eec:	dd 4f       	sbci	r29, 0xFD	; 253
     eee:	a5 01       	movw	r20, r10
     ef0:	94 01       	movw	r18, r8
     ef2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <__divmodsi4>
     ef6:	60 5d       	subi	r22, 0xD0	; 208
     ef8:	68 83       	st	Y, r22
     efa:	62 2f       	mov	r22, r18
     efc:	73 2f       	mov	r23, r19
     efe:	84 2f       	mov	r24, r20
     f00:	95 2f       	mov	r25, r21
     f02:	16 16       	cp	r1, r22
     f04:	17 06       	cpc	r1, r23
     f06:	18 06       	cpc	r1, r24
     f08:	19 06       	cpc	r1, r25
     f0a:	54 f3       	brlt	.-44     	; 0xee0 <FUNCi32toa+0x48>
     f0c:	ff 20       	and	r15, r15
     f0e:	44 f4       	brge	.+16     	; 0xf20 <FUNCi32toa+0x88>
     f10:	e0 2f       	mov	r30, r16
     f12:	f0 e0       	ldi	r31, 0x00	; 0
     f14:	ec 53       	subi	r30, 0x3C	; 60
     f16:	fd 4f       	sbci	r31, 0xFD	; 253
     f18:	8d e2       	ldi	r24, 0x2D	; 45
     f1a:	80 83       	st	Z, r24
     f1c:	02 e0       	ldi	r16, 0x02	; 2
     f1e:	01 0f       	add	r16, r17
     f20:	e0 2f       	mov	r30, r16
     f22:	f0 e0       	ldi	r31, 0x00	; 0
     f24:	ec 53       	subi	r30, 0x3C	; 60
     f26:	fd 4f       	sbci	r31, 0xFD	; 253
     f28:	10 82       	st	Z, r1
     f2a:	84 ec       	ldi	r24, 0xC4	; 196
     f2c:	92 e0       	ldi	r25, 0x02	; 2
     f2e:	97 df       	rcall	.-210    	; 0xe5e <Reverse>
     f30:	84 ec       	ldi	r24, 0xC4	; 196
     f32:	92 e0       	ldi	r25, 0x02	; 2
     f34:	df 91       	pop	r29
     f36:	cf 91       	pop	r28
     f38:	1f 91       	pop	r17
     f3a:	0f 91       	pop	r16
     f3c:	ff 90       	pop	r15
     f3e:	ef 90       	pop	r14
     f40:	df 90       	pop	r13
     f42:	cf 90       	pop	r12
     f44:	bf 90       	pop	r11
     f46:	af 90       	pop	r10
     f48:	9f 90       	pop	r9
     f4a:	8f 90       	pop	r8
     f4c:	08 95       	ret

00000f4e <FUNCi16toa>:
     f4e:	0f 93       	push	r16
     f50:	1f 93       	push	r17
     f52:	cf 93       	push	r28
     f54:	df 93       	push	r29
     f56:	ec 01       	movw	r28, r24
     f58:	99 23       	and	r25, r25
     f5a:	24 f4       	brge	.+8      	; 0xf64 <FUNCi16toa+0x16>
     f5c:	88 27       	eor	r24, r24
     f5e:	99 27       	eor	r25, r25
     f60:	8c 1b       	sub	r24, r28
     f62:	9d 0b       	sbc	r25, r29
     f64:	20 e0       	ldi	r18, 0x00	; 0
     f66:	0a e0       	ldi	r16, 0x0A	; 10
     f68:	10 e0       	ldi	r17, 0x00	; 0
     f6a:	01 c0       	rjmp	.+2      	; 0xf6e <FUNCi16toa+0x20>
     f6c:	23 2f       	mov	r18, r19
     f6e:	31 e0       	ldi	r19, 0x01	; 1
     f70:	32 0f       	add	r19, r18
     f72:	e2 2f       	mov	r30, r18
     f74:	f0 e0       	ldi	r31, 0x00	; 0
     f76:	ec 53       	subi	r30, 0x3C	; 60
     f78:	fd 4f       	sbci	r31, 0xFD	; 253
     f7a:	b8 01       	movw	r22, r16
     f7c:	0e 94 c3 13 	call	0x2786	; 0x2786 <__divmodhi4>
     f80:	80 5d       	subi	r24, 0xD0	; 208
     f82:	80 83       	st	Z, r24
     f84:	86 2f       	mov	r24, r22
     f86:	97 2f       	mov	r25, r23
     f88:	18 16       	cp	r1, r24
     f8a:	19 06       	cpc	r1, r25
     f8c:	7c f3       	brlt	.-34     	; 0xf6c <FUNCi16toa+0x1e>
     f8e:	dd 23       	and	r29, r29
     f90:	44 f4       	brge	.+16     	; 0xfa2 <FUNCi16toa+0x54>
     f92:	e3 2f       	mov	r30, r19
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	ec 53       	subi	r30, 0x3C	; 60
     f98:	fd 4f       	sbci	r31, 0xFD	; 253
     f9a:	8d e2       	ldi	r24, 0x2D	; 45
     f9c:	80 83       	st	Z, r24
     f9e:	32 e0       	ldi	r19, 0x02	; 2
     fa0:	32 0f       	add	r19, r18
     fa2:	e3 2f       	mov	r30, r19
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	ec 53       	subi	r30, 0x3C	; 60
     fa8:	fd 4f       	sbci	r31, 0xFD	; 253
     faa:	10 82       	st	Z, r1
     fac:	84 ec       	ldi	r24, 0xC4	; 196
     fae:	92 e0       	ldi	r25, 0x02	; 2
     fb0:	56 df       	rcall	.-340    	; 0xe5e <Reverse>
     fb2:	84 ec       	ldi	r24, 0xC4	; 196
     fb4:	92 e0       	ldi	r25, 0x02	; 2
     fb6:	df 91       	pop	r29
     fb8:	cf 91       	pop	r28
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	08 95       	ret

00000fc0 <FUNCui16toa>:
     fc0:	cf 93       	push	r28
     fc2:	ac 01       	movw	r20, r24
     fc4:	e0 e0       	ldi	r30, 0x00	; 0
     fc6:	c1 e0       	ldi	r28, 0x01	; 1
     fc8:	ce 0f       	add	r28, r30
     fca:	f0 e0       	ldi	r31, 0x00	; 0
     fcc:	ec 53       	subi	r30, 0x3C	; 60
     fce:	fd 4f       	sbci	r31, 0xFD	; 253
     fd0:	9a 01       	movw	r18, r20
     fd2:	ad ec       	ldi	r26, 0xCD	; 205
     fd4:	bc ec       	ldi	r27, 0xCC	; 204
     fd6:	0e 94 1d 14 	call	0x283a	; 0x283a <__umulhisi3>
     fda:	96 95       	lsr	r25
     fdc:	87 95       	ror	r24
     fde:	96 95       	lsr	r25
     fe0:	87 95       	ror	r24
     fe2:	96 95       	lsr	r25
     fe4:	87 95       	ror	r24
     fe6:	9c 01       	movw	r18, r24
     fe8:	22 0f       	add	r18, r18
     fea:	33 1f       	adc	r19, r19
     fec:	88 0f       	add	r24, r24
     fee:	99 1f       	adc	r25, r25
     ff0:	88 0f       	add	r24, r24
     ff2:	99 1f       	adc	r25, r25
     ff4:	88 0f       	add	r24, r24
     ff6:	99 1f       	adc	r25, r25
     ff8:	82 0f       	add	r24, r18
     ffa:	93 1f       	adc	r25, r19
     ffc:	9a 01       	movw	r18, r20
     ffe:	28 1b       	sub	r18, r24
    1000:	39 0b       	sbc	r19, r25
    1002:	c9 01       	movw	r24, r18
    1004:	80 5d       	subi	r24, 0xD0	; 208
    1006:	80 83       	st	Z, r24
    1008:	9a 01       	movw	r18, r20
    100a:	0e 94 1d 14 	call	0x283a	; 0x283a <__umulhisi3>
    100e:	ac 01       	movw	r20, r24
    1010:	56 95       	lsr	r21
    1012:	47 95       	ror	r20
    1014:	56 95       	lsr	r21
    1016:	47 95       	ror	r20
    1018:	56 95       	lsr	r21
    101a:	47 95       	ror	r20
    101c:	ec 2f       	mov	r30, r28
    101e:	41 15       	cp	r20, r1
    1020:	51 05       	cpc	r21, r1
    1022:	89 f6       	brne	.-94     	; 0xfc6 <FUNCui16toa+0x6>
    1024:	ec 2f       	mov	r30, r28
    1026:	f0 e0       	ldi	r31, 0x00	; 0
    1028:	ec 53       	subi	r30, 0x3C	; 60
    102a:	fd 4f       	sbci	r31, 0xFD	; 253
    102c:	10 82       	st	Z, r1
    102e:	84 ec       	ldi	r24, 0xC4	; 196
    1030:	92 e0       	ldi	r25, 0x02	; 2
    1032:	15 df       	rcall	.-470    	; 0xe5e <Reverse>
    1034:	84 ec       	ldi	r24, 0xC4	; 196
    1036:	92 e0       	ldi	r25, 0x02	; 2
    1038:	cf 91       	pop	r28
    103a:	08 95       	ret

0000103c <FUNCbcd2bin>:
    103c:	98 2f       	mov	r25, r24
    103e:	92 95       	swap	r25
    1040:	9f 70       	andi	r25, 0x0F	; 15
    1042:	99 0f       	add	r25, r25
    1044:	29 2f       	mov	r18, r25
    1046:	22 0f       	add	r18, r18
    1048:	22 0f       	add	r18, r18
    104a:	92 0f       	add	r25, r18
    104c:	8f 70       	andi	r24, 0x0F	; 15
    104e:	89 0f       	add	r24, r25
    1050:	08 95       	ret

00001052 <FUNCbin2bcd>:
    1052:	ac 01       	movw	r20, r24
    1054:	9c 01       	movw	r18, r24
    1056:	ad ec       	ldi	r26, 0xCD	; 205
    1058:	bc ec       	ldi	r27, 0xCC	; 204
    105a:	0e 94 1d 14 	call	0x283a	; 0x283a <__umulhisi3>
    105e:	96 95       	lsr	r25
    1060:	87 95       	ror	r24
    1062:	96 95       	lsr	r25
    1064:	87 95       	ror	r24
    1066:	96 95       	lsr	r25
    1068:	87 95       	ror	r24
    106a:	bc 01       	movw	r22, r24
    106c:	66 0f       	add	r22, r22
    106e:	77 1f       	adc	r23, r23
    1070:	9c 01       	movw	r18, r24
    1072:	22 0f       	add	r18, r18
    1074:	33 1f       	adc	r19, r19
    1076:	22 0f       	add	r18, r18
    1078:	33 1f       	adc	r19, r19
    107a:	22 0f       	add	r18, r18
    107c:	33 1f       	adc	r19, r19
    107e:	26 0f       	add	r18, r22
    1080:	37 1f       	adc	r19, r23
    1082:	42 1b       	sub	r20, r18
    1084:	53 0b       	sbc	r21, r19
    1086:	34 2f       	mov	r19, r20
    1088:	20 e1       	ldi	r18, 0x10	; 16
    108a:	82 9f       	mul	r24, r18
    108c:	30 0d       	add	r19, r0
    108e:	11 24       	eor	r1, r1
    1090:	83 2f       	mov	r24, r19
    1092:	08 95       	ret

00001094 <FUNCgcd1>:
    1094:	cf 92       	push	r12
    1096:	df 92       	push	r13
    1098:	ef 92       	push	r14
    109a:	ff 92       	push	r15
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	cd b7       	in	r28, 0x3d	; 61
    10a2:	de b7       	in	r29, 0x3e	; 62
    10a4:	28 97       	sbiw	r28, 0x08	; 8
    10a6:	0f b6       	in	r0, 0x3f	; 63
    10a8:	f8 94       	cli
    10aa:	de bf       	out	0x3e, r29	; 62
    10ac:	0f be       	out	0x3f, r0	; 63
    10ae:	cd bf       	out	0x3d, r28	; 61
    10b0:	6b 01       	movw	r12, r22
    10b2:	7c 01       	movw	r14, r24
    10b4:	69 83       	std	Y+1, r22	; 0x01
    10b6:	7a 83       	std	Y+2, r23	; 0x02
    10b8:	8b 83       	std	Y+3, r24	; 0x03
    10ba:	9c 83       	std	Y+4, r25	; 0x04
    10bc:	2d 83       	std	Y+5, r18	; 0x05
    10be:	3e 83       	std	Y+6, r19	; 0x06
    10c0:	4f 83       	std	Y+7, r20	; 0x07
    10c2:	58 87       	std	Y+8, r21	; 0x08
    10c4:	c2 16       	cp	r12, r18
    10c6:	d3 06       	cpc	r13, r19
    10c8:	e4 06       	cpc	r14, r20
    10ca:	f5 06       	cpc	r15, r21
    10cc:	34 f4       	brge	.+12     	; 0x10da <FUNCgcd1+0x46>
    10ce:	be 01       	movw	r22, r28
    10d0:	6b 5f       	subi	r22, 0xFB	; 251
    10d2:	7f 4f       	sbci	r23, 0xFF	; 255
    10d4:	ce 01       	movw	r24, r28
    10d6:	01 96       	adiw	r24, 0x01	; 1
    10d8:	85 dc       	rcall	.-1782   	; 0x9e4 <FUNCswap>
    10da:	8d 81       	ldd	r24, Y+5	; 0x05
    10dc:	9e 81       	ldd	r25, Y+6	; 0x06
    10de:	af 81       	ldd	r26, Y+7	; 0x07
    10e0:	b8 85       	ldd	r27, Y+8	; 0x08
    10e2:	89 2b       	or	r24, r25
    10e4:	8a 2b       	or	r24, r26
    10e6:	8b 2b       	or	r24, r27
    10e8:	71 f4       	brne	.+28     	; 0x1106 <__stack+0x7>
    10ea:	69 81       	ldd	r22, Y+1	; 0x01
    10ec:	7a 81       	ldd	r23, Y+2	; 0x02
    10ee:	8b 81       	ldd	r24, Y+3	; 0x03
    10f0:	9c 81       	ldd	r25, Y+4	; 0x04
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	a9 01       	movw	r20, r18
    10f8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <__divmodsi4>
    10fc:	61 15       	cp	r22, r1
    10fe:	71 05       	cpc	r23, r1
    1100:	81 05       	cpc	r24, r1
    1102:	91 05       	cpc	r25, r1
    1104:	29 f4       	brne	.+10     	; 0x1110 <__stack+0x11>
    1106:	6d 81       	ldd	r22, Y+5	; 0x05
    1108:	7e 81       	ldd	r23, Y+6	; 0x06
    110a:	8f 81       	ldd	r24, Y+7	; 0x07
    110c:	98 85       	ldd	r25, Y+8	; 0x08
    110e:	05 c0       	rjmp	.+10     	; 0x111a <__stack+0x1b>
    1110:	6d 83       	std	Y+5, r22	; 0x05
    1112:	7e 83       	std	Y+6, r23	; 0x06
    1114:	8f 83       	std	Y+7, r24	; 0x07
    1116:	98 87       	std	Y+8, r25	; 0x08
    1118:	f6 cf       	rjmp	.-20     	; 0x1106 <__stack+0x7>
    111a:	28 96       	adiw	r28, 0x08	; 8
    111c:	0f b6       	in	r0, 0x3f	; 63
    111e:	f8 94       	cli
    1120:	de bf       	out	0x3e, r29	; 62
    1122:	0f be       	out	0x3f, r0	; 63
    1124:	cd bf       	out	0x3d, r28	; 61
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	ff 90       	pop	r15
    112c:	ef 90       	pop	r14
    112e:	df 90       	pop	r13
    1130:	cf 90       	pop	r12
    1132:	08 95       	ret

00001134 <FUNCpincheck>:
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	02 c0       	rjmp	.+4      	; 0x113c <FUNCpincheck+0x8>
    1138:	95 95       	asr	r25
    113a:	87 95       	ror	r24
    113c:	6a 95       	dec	r22
    113e:	e2 f7       	brpl	.-8      	; 0x1138 <FUNCpincheck+0x4>
    1140:	81 70       	andi	r24, 0x01	; 1
    1142:	08 95       	ret

00001144 <FUNCprint_binary>:
    1144:	e4 ec       	ldi	r30, 0xC4	; 196
    1146:	f2 e0       	ldi	r31, 0x02	; 2
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	20 e8       	ldi	r18, 0x80	; 128
    114c:	50 e3       	ldi	r21, 0x30	; 48
    114e:	41 e3       	ldi	r20, 0x31	; 49
    1150:	38 2f       	mov	r19, r24
    1152:	32 23       	and	r19, r18
    1154:	11 f0       	breq	.+4      	; 0x115a <FUNCprint_binary+0x16>
    1156:	40 83       	st	Z, r20
    1158:	01 c0       	rjmp	.+2      	; 0x115c <FUNCprint_binary+0x18>
    115a:	50 83       	st	Z, r21
    115c:	26 95       	lsr	r18
    115e:	9f 5f       	subi	r25, 0xFF	; 255
    1160:	31 96       	adiw	r30, 0x01	; 1
    1162:	98 30       	cpi	r25, 0x08	; 8
    1164:	a9 f7       	brne	.-22     	; 0x1150 <FUNCprint_binary+0xc>
    1166:	10 92 cc 02 	sts	0x02CC, r1	; 0x8002cc <FUNCstr+0x8>
    116a:	84 ec       	ldi	r24, 0xC4	; 196
    116c:	92 e0       	ldi	r25, 0x02	; 2
    116e:	08 95       	ret

00001170 <FUNCmayia>:
    1170:	a4 2f       	mov	r26, r20
    1172:	b0 e0       	ldi	r27, 0x00	; 0
    1174:	10 97       	sbiw	r26, 0x00	; 0
    1176:	61 f0       	breq	.+24     	; 0x1190 <FUNCmayia+0x20>
    1178:	21 e0       	ldi	r18, 0x01	; 1
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	e1 e0       	ldi	r30, 0x01	; 1
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	ee 0f       	add	r30, r30
    1182:	ff 1f       	adc	r31, r31
    1184:	2f 5f       	subi	r18, 0xFF	; 255
    1186:	3f 4f       	sbci	r19, 0xFF	; 255
    1188:	a2 17       	cp	r26, r18
    118a:	b3 07       	cpc	r27, r19
    118c:	c8 f7       	brcc	.-14     	; 0x1180 <FUNCmayia+0x10>
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <FUNCmayia+0x24>
    1190:	e1 e0       	ldi	r30, 0x01	; 1
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	31 97       	sbiw	r30, 0x01	; 1
    1196:	6e 23       	and	r22, r30
    1198:	7f 23       	and	r23, r31
    119a:	8e 23       	and	r24, r30
    119c:	9f 23       	and	r25, r31
    119e:	86 27       	eor	r24, r22
    11a0:	97 27       	eor	r25, r23
    11a2:	68 23       	and	r22, r24
    11a4:	79 23       	and	r23, r25
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <FUNCmayia+0x3c>
    11a8:	66 0f       	add	r22, r22
    11aa:	77 1f       	adc	r23, r23
    11ac:	4a 95       	dec	r20
    11ae:	e2 f7       	brpl	.-8      	; 0x11a8 <FUNCmayia+0x38>
    11b0:	86 2b       	or	r24, r22
    11b2:	97 2b       	or	r25, r23
    11b4:	08 95       	ret

000011b6 <FUNCenable>:
    11b6:	fc 01       	movw	r30, r24
    11b8:	9f b7       	in	r25, 0x3f	; 63
    11ba:	8f b7       	in	r24, 0x3f	; 63
    11bc:	8f 77       	andi	r24, 0x7F	; 127
    11be:	8f bf       	out	0x3f, r24	; 63
    11c0:	9f bf       	out	0x3f, r25	; 63
    11c2:	8a ee       	ldi	r24, 0xEA	; 234
    11c4:	96 e0       	ldi	r25, 0x06	; 6
    11c6:	91 83       	std	Z+1, r25	; 0x01
    11c8:	80 83       	st	Z, r24
    11ca:	85 e0       	ldi	r24, 0x05	; 5
    11cc:	97 e0       	ldi	r25, 0x07	; 7
    11ce:	93 83       	std	Z+3, r25	; 0x03
    11d0:	82 83       	std	Z+2, r24	; 0x02
    11d2:	8f e2       	ldi	r24, 0x2F	; 47
    11d4:	97 e0       	ldi	r25, 0x07	; 7
    11d6:	95 83       	std	Z+5, r25	; 0x05
    11d8:	84 83       	std	Z+4, r24	; 0x04
    11da:	88 eb       	ldi	r24, 0xB8	; 184
    11dc:	98 e0       	ldi	r25, 0x08	; 8
    11de:	97 83       	std	Z+7, r25	; 0x07
    11e0:	86 83       	std	Z+6, r24	; 0x06
    11e2:	87 ed       	ldi	r24, 0xD7	; 215
    11e4:	94 e0       	ldi	r25, 0x04	; 4
    11e6:	91 87       	std	Z+9, r25	; 0x09
    11e8:	80 87       	std	Z+8, r24	; 0x08
    11ea:	85 ee       	ldi	r24, 0xE5	; 229
    11ec:	94 e0       	ldi	r25, 0x04	; 4
    11ee:	93 87       	std	Z+11, r25	; 0x0b
    11f0:	82 87       	std	Z+10, r24	; 0x0a
    11f2:	87 ee       	ldi	r24, 0xE7	; 231
    11f4:	94 e0       	ldi	r25, 0x04	; 4
    11f6:	95 87       	std	Z+13, r25	; 0x0d
    11f8:	84 87       	std	Z+12, r24	; 0x0c
    11fa:	8a ee       	ldi	r24, 0xEA	; 234
    11fc:	94 e0       	ldi	r25, 0x04	; 4
    11fe:	97 87       	std	Z+15, r25	; 0x0f
    1200:	86 87       	std	Z+14, r24	; 0x0e
    1202:	8d ee       	ldi	r24, 0xED	; 237
    1204:	94 e0       	ldi	r25, 0x04	; 4
    1206:	91 8b       	std	Z+17, r25	; 0x11
    1208:	80 8b       	std	Z+16, r24	; 0x10
    120a:	80 ef       	ldi	r24, 0xF0	; 240
    120c:	94 e0       	ldi	r25, 0x04	; 4
    120e:	93 8b       	std	Z+19, r25	; 0x13
    1210:	82 8b       	std	Z+18, r24	; 0x12
    1212:	81 ee       	ldi	r24, 0xE1	; 225
    1214:	94 e0       	ldi	r25, 0x04	; 4
    1216:	95 8b       	std	Z+21, r25	; 0x15
    1218:	84 8b       	std	Z+20, r24	; 0x14
    121a:	83 ee       	ldi	r24, 0xE3	; 227
    121c:	94 e0       	ldi	r25, 0x04	; 4
    121e:	97 8b       	std	Z+23, r25	; 0x17
    1220:	86 8b       	std	Z+22, r24	; 0x16
    1222:	82 ef       	ldi	r24, 0xF2	; 242
    1224:	94 e0       	ldi	r25, 0x04	; 4
    1226:	91 8f       	std	Z+25, r25	; 0x19
    1228:	80 8f       	std	Z+24, r24	; 0x18
    122a:	83 e1       	ldi	r24, 0x13	; 19
    122c:	95 e0       	ldi	r25, 0x05	; 5
    122e:	93 8f       	std	Z+27, r25	; 0x1b
    1230:	82 8f       	std	Z+26, r24	; 0x1a
    1232:	81 e2       	ldi	r24, 0x21	; 33
    1234:	95 e0       	ldi	r25, 0x05	; 5
    1236:	95 8f       	std	Z+29, r25	; 0x1d
    1238:	84 8f       	std	Z+28, r24	; 0x1c
    123a:	83 e4       	ldi	r24, 0x43	; 67
    123c:	95 e0       	ldi	r25, 0x05	; 5
    123e:	97 8f       	std	Z+31, r25	; 0x1f
    1240:	86 8f       	std	Z+30, r24	; 0x1e
    1242:	87 ea       	ldi	r24, 0xA7	; 167
    1244:	97 e0       	ldi	r25, 0x07	; 7
    1246:	91 a3       	std	Z+33, r25	; 0x21
    1248:	80 a3       	std	Z+32, r24	; 0x20
    124a:	80 ee       	ldi	r24, 0xE0	; 224
    124c:	97 e0       	ldi	r25, 0x07	; 7
    124e:	93 a3       	std	Z+35, r25	; 0x23
    1250:	82 a3       	std	Z+34, r24	; 0x22
    1252:	8c e4       	ldi	r24, 0x4C	; 76
    1254:	97 e0       	ldi	r25, 0x07	; 7
    1256:	95 a3       	std	Z+37, r25	; 0x25
    1258:	84 a3       	std	Z+36, r24	; 0x24
    125a:	84 e1       	ldi	r24, 0x14	; 20
    125c:	97 e0       	ldi	r25, 0x07	; 7
    125e:	97 a3       	std	Z+39, r25	; 0x27
    1260:	86 a3       	std	Z+38, r24	; 0x26
    1262:	89 ee       	ldi	r24, 0xE9	; 233
    1264:	95 e0       	ldi	r25, 0x05	; 5
    1266:	91 a7       	std	Z+41, r25	; 0x29
    1268:	80 a7       	std	Z+40, r24	; 0x28
    126a:	8e ee       	ldi	r24, 0xEE	; 238
    126c:	95 e0       	ldi	r25, 0x05	; 5
    126e:	93 a7       	std	Z+43, r25	; 0x2b
    1270:	82 a7       	std	Z+42, r24	; 0x2a
    1272:	8d ef       	ldi	r24, 0xFD	; 253
    1274:	95 e0       	ldi	r25, 0x05	; 5
    1276:	95 a7       	std	Z+45, r25	; 0x2d
    1278:	84 a7       	std	Z+44, r24	; 0x2c
    127a:	81 e2       	ldi	r24, 0x21	; 33
    127c:	96 e0       	ldi	r25, 0x06	; 6
    127e:	97 a7       	std	Z+47, r25	; 0x2f
    1280:	86 a7       	std	Z+46, r24	; 0x2e
    1282:	83 e2       	ldi	r24, 0x23	; 35
    1284:	96 e0       	ldi	r25, 0x06	; 6
    1286:	91 ab       	std	Z+49, r25	; 0x31
    1288:	80 ab       	std	Z+48, r24	; 0x30
    128a:	8d e2       	ldi	r24, 0x2D	; 45
    128c:	96 e0       	ldi	r25, 0x06	; 6
    128e:	93 ab       	std	Z+51, r25	; 0x33
    1290:	82 ab       	std	Z+50, r24	; 0x32
    1292:	8a e3       	ldi	r24, 0x3A	; 58
    1294:	96 e0       	ldi	r25, 0x06	; 6
    1296:	95 ab       	std	Z+53, r25	; 0x35
    1298:	84 ab       	std	Z+52, r24	; 0x34
    129a:	86 e4       	ldi	r24, 0x46	; 70
    129c:	96 e0       	ldi	r25, 0x06	; 6
    129e:	97 ab       	std	Z+55, r25	; 0x37
    12a0:	86 ab       	std	Z+54, r24	; 0x36
    12a2:	8e e5       	ldi	r24, 0x5E	; 94
    12a4:	96 e0       	ldi	r25, 0x06	; 6
    12a6:	91 af       	std	Z+57, r25	; 0x39
    12a8:	80 af       	std	Z+56, r24	; 0x38
    12aa:	81 e7       	ldi	r24, 0x71	; 113
    12ac:	96 e0       	ldi	r25, 0x06	; 6
    12ae:	93 af       	std	Z+59, r25	; 0x3b
    12b0:	82 af       	std	Z+58, r24	; 0x3a
    12b2:	8c e7       	ldi	r24, 0x7C	; 124
    12b4:	96 e0       	ldi	r25, 0x06	; 6
    12b6:	95 af       	std	Z+61, r25	; 0x3d
    12b8:	84 af       	std	Z+60, r24	; 0x3c
    12ba:	89 ea       	ldi	r24, 0xA9	; 169
    12bc:	96 e0       	ldi	r25, 0x06	; 6
    12be:	97 af       	std	Z+63, r25	; 0x3f
    12c0:	86 af       	std	Z+62, r24	; 0x3e
    12c2:	df 01       	movw	r26, r30
    12c4:	a0 5c       	subi	r26, 0xC0	; 192
    12c6:	bf 4f       	sbci	r27, 0xFF	; 255
    12c8:	8e e1       	ldi	r24, 0x1E	; 30
    12ca:	98 e0       	ldi	r25, 0x08	; 8
    12cc:	11 96       	adiw	r26, 0x01	; 1
    12ce:	9c 93       	st	X, r25
    12d0:	8e 93       	st	-X, r24
    12d2:	12 96       	adiw	r26, 0x02	; 2
    12d4:	89 e2       	ldi	r24, 0x29	; 41
    12d6:	98 e0       	ldi	r25, 0x08	; 8
    12d8:	11 96       	adiw	r26, 0x01	; 1
    12da:	9c 93       	st	X, r25
    12dc:	8e 93       	st	-X, r24
    12de:	12 96       	adiw	r26, 0x02	; 2
    12e0:	8a e4       	ldi	r24, 0x4A	; 74
    12e2:	98 e0       	ldi	r25, 0x08	; 8
    12e4:	11 96       	adiw	r26, 0x01	; 1
    12e6:	9c 93       	st	X, r25
    12e8:	8e 93       	st	-X, r24
    12ea:	12 96       	adiw	r26, 0x02	; 2
    12ec:	8a e9       	ldi	r24, 0x9A	; 154
    12ee:	98 e0       	ldi	r25, 0x08	; 8
    12f0:	11 96       	adiw	r26, 0x01	; 1
    12f2:	9c 93       	st	X, r25
    12f4:	8e 93       	st	-X, r24
    12f6:	12 96       	adiw	r26, 0x02	; 2
    12f8:	82 ea       	ldi	r24, 0xA2	; 162
    12fa:	98 e0       	ldi	r25, 0x08	; 8
    12fc:	11 96       	adiw	r26, 0x01	; 1
    12fe:	9c 93       	st	X, r25
    1300:	8e 93       	st	-X, r24
    1302:	12 96       	adiw	r26, 0x02	; 2
    1304:	86 e1       	ldi	r24, 0x16	; 22
    1306:	9a e0       	ldi	r25, 0x0A	; 10
    1308:	8d 93       	st	X+, r24
    130a:	9c 93       	st	X, r25
    130c:	cf 01       	movw	r24, r30
    130e:	08 95       	ret

00001310 <FUNCreverse>:
Thanks to:
https://www.geeksforgeeks.org/convert-floating-point-number-string/
******/
void FUNCreverse(char* str, int len)
{
	int i = 0, j = len - 1, temp;
    1310:	9b 01       	movw	r18, r22
    1312:	21 50       	subi	r18, 0x01	; 1
    1314:	31 09       	sbc	r19, r1
	while (i < j) {
    1316:	12 16       	cp	r1, r18
    1318:	13 06       	cpc	r1, r19
    131a:	84 f4       	brge	.+32     	; 0x133c <FUNCreverse+0x2c>
    131c:	fc 01       	movw	r30, r24
    131e:	e6 0f       	add	r30, r22
    1320:	f7 1f       	adc	r31, r23
    1322:	dc 01       	movw	r26, r24
    1324:	80 e0       	ldi	r24, 0x00	; 0
    1326:	90 e0       	ldi	r25, 0x00	; 0
		temp = str[i];
    1328:	4c 91       	ld	r20, X
		str[i] = str[j];
    132a:	52 91       	ld	r21, -Z
    132c:	5d 93       	st	X+, r21
		str[j] = temp;
    132e:	40 83       	st	Z, r20
		i++;
    1330:	01 96       	adiw	r24, 0x01	; 1
		j--;
    1332:	21 50       	subi	r18, 0x01	; 1
    1334:	31 09       	sbc	r19, r1
https://www.geeksforgeeks.org/convert-floating-point-number-string/
******/
void FUNCreverse(char* str, int len)
{
	int i = 0, j = len - 1, temp;
	while (i < j) {
    1336:	82 17       	cp	r24, r18
    1338:	93 07       	cpc	r25, r19
    133a:	b4 f3       	brlt	.-20     	; 0x1328 <FUNCreverse+0x18>
    133c:	08 95       	ret

0000133e <FUNCintToStr>:
		i++;
		j--;
	}
}
int FUNCintToStr(int32_t x, char str[], int d)
{
    133e:	4f 92       	push	r4
    1340:	5f 92       	push	r5
    1342:	6f 92       	push	r6
    1344:	7f 92       	push	r7
    1346:	8f 92       	push	r8
    1348:	9f 92       	push	r9
    134a:	af 92       	push	r10
    134c:	bf 92       	push	r11
    134e:	cf 92       	push	r12
    1350:	df 92       	push	r13
    1352:	ef 92       	push	r14
    1354:	ff 92       	push	r15
    1356:	0f 93       	push	r16
    1358:	1f 93       	push	r17
    135a:	cf 93       	push	r28
    135c:	df 93       	push	r29
    135e:	2b 01       	movw	r4, r22
    1360:	3c 01       	movw	r6, r24
    1362:	7a 01       	movw	r14, r20
    1364:	69 01       	movw	r12, r18
    1366:	dc 01       	movw	r26, r24
    1368:	cb 01       	movw	r24, r22
    136a:	77 20       	and	r7, r7
    136c:	3c f4       	brge	.+14     	; 0x137c <FUNCintToStr+0x3e>
    136e:	88 27       	eor	r24, r24
    1370:	99 27       	eor	r25, r25
    1372:	dc 01       	movw	r26, r24
    1374:	84 19       	sub	r24, r4
    1376:	95 09       	sbc	r25, r5
    1378:	a6 09       	sbc	r26, r6
    137a:	b7 09       	sbc	r27, r7
    137c:	bc 01       	movw	r22, r24
    137e:	cd 01       	movw	r24, r26
	int i = 0;
	int32_t sign;
	if ((sign = x) < 0) // record sign
		x = -x; // make n positive
    while (x) { 
    1380:	61 15       	cp	r22, r1
    1382:	71 05       	cpc	r23, r1
    1384:	81 05       	cpc	r24, r1
    1386:	91 05       	cpc	r25, r1
    1388:	e9 f0       	breq	.+58     	; 0x13c4 <FUNCintToStr+0x86>
    138a:	87 01       	movw	r16, r14
    138c:	c0 e0       	ldi	r28, 0x00	; 0
    138e:	d0 e0       	ldi	r29, 0x00	; 0
        str[i++] = (x % 10) + '0'; 
    1390:	0f 2e       	mov	r0, r31
    1392:	fa e0       	ldi	r31, 0x0A	; 10
    1394:	8f 2e       	mov	r8, r31
    1396:	91 2c       	mov	r9, r1
    1398:	a1 2c       	mov	r10, r1
    139a:	b1 2c       	mov	r11, r1
    139c:	f0 2d       	mov	r31, r0
    139e:	21 96       	adiw	r28, 0x01	; 1
    13a0:	a5 01       	movw	r20, r10
    13a2:	94 01       	movw	r18, r8
    13a4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <__divmodsi4>
    13a8:	60 5d       	subi	r22, 0xD0	; 208
    13aa:	f8 01       	movw	r30, r16
    13ac:	61 93       	st	Z+, r22
    13ae:	8f 01       	movw	r16, r30
        x = x / 10; 
    13b0:	62 2f       	mov	r22, r18
    13b2:	73 2f       	mov	r23, r19
    13b4:	84 2f       	mov	r24, r20
    13b6:	95 2f       	mov	r25, r21
{
	int i = 0;
	int32_t sign;
	if ((sign = x) < 0) // record sign
		x = -x; // make n positive
    while (x) { 
    13b8:	61 15       	cp	r22, r1
    13ba:	71 05       	cpc	r23, r1
    13bc:	81 05       	cpc	r24, r1
    13be:	91 05       	cpc	r25, r1
    13c0:	71 f7       	brne	.-36     	; 0x139e <FUNCintToStr+0x60>
    13c2:	02 c0       	rjmp	.+4      	; 0x13c8 <FUNCintToStr+0x8a>
    13c4:	c0 e0       	ldi	r28, 0x00	; 0
    13c6:	d0 e0       	ldi	r29, 0x00	; 0
        str[i++] = (x % 10) + '0'; 
        x = x / 10; 
    } 
    // If number of digits required is more, then 
    // add 0s at the beginning 
    while (i < d) 
    13c8:	cc 15       	cp	r28, r12
    13ca:	dd 05       	cpc	r29, r13
    13cc:	5c f4       	brge	.+22     	; 0x13e4 <FUNCintToStr+0xa6>
    13ce:	ce 0d       	add	r28, r14
    13d0:	df 1d       	adc	r29, r15
    13d2:	97 01       	movw	r18, r14
    13d4:	2c 0d       	add	r18, r12
    13d6:	3d 1d       	adc	r19, r13
        str[i++] = '0';
    13d8:	80 e3       	ldi	r24, 0x30	; 48
    13da:	89 93       	st	Y+, r24
        str[i++] = (x % 10) + '0'; 
        x = x / 10; 
    } 
    // If number of digits required is more, then 
    // add 0s at the beginning 
    while (i < d) 
    13dc:	c2 17       	cp	r28, r18
    13de:	d3 07       	cpc	r29, r19
    13e0:	e1 f7       	brne	.-8      	; 0x13da <FUNCintToStr+0x9c>
    13e2:	01 c0       	rjmp	.+2      	; 0x13e6 <FUNCintToStr+0xa8>
    13e4:	6e 01       	movw	r12, r28
        str[i++] = '0';
	if (sign < 0)
    13e6:	77 20       	and	r7, r7
    13e8:	44 f4       	brge	.+16     	; 0x13fa <FUNCintToStr+0xbc>
		str[i++] = '-';
    13ea:	f7 01       	movw	r30, r14
    13ec:	ec 0d       	add	r30, r12
    13ee:	fd 1d       	adc	r31, r13
    13f0:	8d e2       	ldi	r24, 0x2D	; 45
    13f2:	80 83       	st	Z, r24
    13f4:	c6 01       	movw	r24, r12
    13f6:	01 96       	adiw	r24, 0x01	; 1
    13f8:	6c 01       	movw	r12, r24
    FUNCreverse(str, i); 
    13fa:	b6 01       	movw	r22, r12
    13fc:	c7 01       	movw	r24, r14
    13fe:	88 df       	rcall	.-240    	; 0x1310 <FUNCreverse>
    str[i] = '\0'; 
    1400:	f7 01       	movw	r30, r14
    1402:	ec 0d       	add	r30, r12
    1404:	fd 1d       	adc	r31, r13
    1406:	10 82       	st	Z, r1
    return i;
}
    1408:	c6 01       	movw	r24, r12
    140a:	df 91       	pop	r29
    140c:	cf 91       	pop	r28
    140e:	1f 91       	pop	r17
    1410:	0f 91       	pop	r16
    1412:	ff 90       	pop	r15
    1414:	ef 90       	pop	r14
    1416:	df 90       	pop	r13
    1418:	cf 90       	pop	r12
    141a:	bf 90       	pop	r11
    141c:	af 90       	pop	r10
    141e:	9f 90       	pop	r9
    1420:	8f 90       	pop	r8
    1422:	7f 90       	pop	r7
    1424:	6f 90       	pop	r6
    1426:	5f 90       	pop	r5
    1428:	4f 90       	pop	r4
    142a:	08 95       	ret

0000142c <FUNCftoa>:
char* FUNCftoa(float n, char* res, int afterpoint)
{
    142c:	2f 92       	push	r2
    142e:	3f 92       	push	r3
    1430:	4f 92       	push	r4
    1432:	5f 92       	push	r5
    1434:	6f 92       	push	r6
    1436:	7f 92       	push	r7
    1438:	8f 92       	push	r8
    143a:	9f 92       	push	r9
    143c:	af 92       	push	r10
    143e:	bf 92       	push	r11
    1440:	cf 92       	push	r12
    1442:	df 92       	push	r13
    1444:	ef 92       	push	r14
    1446:	ff 92       	push	r15
    1448:	0f 93       	push	r16
    144a:	1f 93       	push	r17
    144c:	cf 93       	push	r28
    144e:	df 93       	push	r29
    1450:	6b 01       	movw	r12, r22
    1452:	7c 01       	movw	r14, r24
    1454:	8a 01       	movw	r16, r20
    1456:	e9 01       	movw	r28, r18
	// Extract integer part
	int32_t ipart = (int32_t)n;
    1458:	c8 d6       	rcall	.+3472   	; 0x21ea <__fixsfsi>
    145a:	4b 01       	movw	r8, r22
    145c:	5c 01       	movw	r10, r24
	
	// Extract floating part
	float fpart = n - (float)ipart;
	
	// convert integer part to string
	int i =	FUNCintToStr(ipart, res, 1);
    145e:	21 e0       	ldi	r18, 0x01	; 1
    1460:	30 e0       	ldi	r19, 0x00	; 0
    1462:	a8 01       	movw	r20, r16
    1464:	6c df       	rcall	.-296    	; 0x133e <FUNCintToStr>
    1466:	1c 01       	movw	r2, r24
	
	// check for display option after point
	if (afterpoint != 0) {
    1468:	20 97       	sbiw	r28, 0x00	; 0
    146a:	09 f4       	brne	.+2      	; 0x146e <FUNCftoa+0x42>
    146c:	3a c0       	rjmp	.+116    	; 0x14e2 <FUNCftoa+0xb6>
		res[i] = '.'; // add dot
    146e:	8e e2       	ldi	r24, 0x2E	; 46
    1470:	f8 01       	movw	r30, r16
    1472:	e2 0d       	add	r30, r2
    1474:	f3 1d       	adc	r31, r3
    1476:	80 83       	st	Z, r24
	
		// Get the value of fraction part up to given no.
		// of points after dot. The third parameter
		// is needed to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
    1478:	be 01       	movw	r22, r28
    147a:	0d 2e       	mov	r0, r29
    147c:	00 0c       	add	r0, r0
    147e:	88 0b       	sbc	r24, r24
    1480:	99 0b       	sbc	r25, r25
    1482:	e6 d6       	rcall	.+3532   	; 0x2250 <__floatsisf>
    1484:	9b 01       	movw	r18, r22
    1486:	ac 01       	movw	r20, r24
    1488:	60 e0       	ldi	r22, 0x00	; 0
    148a:	70 e0       	ldi	r23, 0x00	; 0
    148c:	80 e2       	ldi	r24, 0x20	; 32
    148e:	91 e4       	ldi	r25, 0x41	; 65
    1490:	f2 d7       	rcall	.+4068   	; 0x2476 <pow>
    1492:	2b 01       	movw	r4, r22
    1494:	3c 01       	movw	r6, r24
{
	// Extract integer part
	int32_t ipart = (int32_t)n;
	
	// Extract floating part
	float fpart = n - (float)ipart;
    1496:	c5 01       	movw	r24, r10
    1498:	b4 01       	movw	r22, r8
    149a:	da d6       	rcall	.+3508   	; 0x2250 <__floatsisf>
    149c:	9b 01       	movw	r18, r22
    149e:	ac 01       	movw	r20, r24
    14a0:	c7 01       	movw	r24, r14
    14a2:	b6 01       	movw	r22, r12
    14a4:	d1 d5       	rcall	.+2978   	; 0x2048 <__subsf3>
		res[i] = '.'; // add dot
	
		// Get the value of fraction part up to given no.
		// of points after dot. The third parameter
		// is needed to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
    14a6:	a3 01       	movw	r20, r6
    14a8:	92 01       	movw	r18, r4
    14aa:	82 d7       	rcall	.+3844   	; 0x23b0 <__mulsf3>
    14ac:	6b 01       	movw	r12, r22
    14ae:	7c 01       	movw	r14, r24
		if (fpart < 0) // record sign
    14b0:	20 e0       	ldi	r18, 0x00	; 0
    14b2:	30 e0       	ldi	r19, 0x00	; 0
    14b4:	a9 01       	movw	r20, r18
    14b6:	2d d6       	rcall	.+3162   	; 0x2112 <__cmpsf2>
    14b8:	88 23       	and	r24, r24
    14ba:	24 f4       	brge	.+8      	; 0x14c4 <FUNCftoa+0x98>
    14bc:	f7 fa       	bst	r15, 7
			fpart = -fpart; // make fpart positive
    14be:	f0 94       	com	r15
    14c0:	f7 f8       	bld	r15, 7
    14c2:	f0 94       	com	r15
    14c4:	8f ef       	ldi	r24, 0xFF	; 255
	
		FUNCintToStr((int)fpart, res + i + 1, afterpoint);
    14c6:	28 1a       	sub	r2, r24
    14c8:	38 0a       	sbc	r3, r24
    14ca:	20 0e       	add	r2, r16
    14cc:	31 1e       	adc	r3, r17
    14ce:	c7 01       	movw	r24, r14
    14d0:	b6 01       	movw	r22, r12
    14d2:	8b d6       	rcall	.+3350   	; 0x21ea <__fixsfsi>
    14d4:	07 2e       	mov	r0, r23
    14d6:	00 0c       	add	r0, r0
    14d8:	88 0b       	sbc	r24, r24
    14da:	99 0b       	sbc	r25, r25
    14dc:	9e 01       	movw	r18, r28
    14de:	a1 01       	movw	r20, r2
    14e0:	2e df       	rcall	.-420    	; 0x133e <FUNCintToStr>
    14e2:	c8 01       	movw	r24, r16
	}
	return res;
}
    14e4:	df 91       	pop	r29
    14e6:	cf 91       	pop	r28
    14e8:	1f 91       	pop	r17
    14ea:	0f 91       	pop	r16
    14ec:	ff 90       	pop	r15
    14ee:	ef 90       	pop	r14
    14f0:	df 90       	pop	r13
    14f2:	cf 90       	pop	r12
    14f4:	bf 90       	pop	r11
    14f6:	af 90       	pop	r10
    14f8:	9f 90       	pop	r9
    14fa:	8f 90       	pop	r8
    14fc:	7f 90       	pop	r7
    14fe:	6f 90       	pop	r6
    1500:	5f 90       	pop	r5
    1502:	4f 90       	pop	r4
    1504:	3f 90       	pop	r3
    1506:	2f 90       	pop	r2
    1508:	08 95       	ret

0000150a <LCD0_write>:
    150a:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    150e:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1512:	90 81       	ld	r25, Z
    1514:	9d 7f       	andi	r25, 0xFD	; 253
    1516:	90 83       	st	Z, r25
    1518:	67 2b       	or	r22, r23
    151a:	41 f0       	breq	.+16     	; 0x152c <LCD0_write+0x22>
    151c:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1520:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1524:	90 81       	ld	r25, Z
    1526:	91 60       	ori	r25, 0x01	; 1
    1528:	90 83       	st	Z, r25
    152a:	07 c0       	rjmp	.+14     	; 0x153a <LCD0_write+0x30>
    152c:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1530:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1534:	90 81       	ld	r25, Z
    1536:	9e 7f       	andi	r25, 0xFE	; 254
    1538:	90 83       	st	Z, r25
    153a:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <lcd0_DDR>
    153e:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <lcd0_DDR+0x1>
    1542:	90 81       	ld	r25, Z
    1544:	90 6f       	ori	r25, 0xF0	; 240
    1546:	90 83       	st	Z, r25
    1548:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    154c:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1550:	90 81       	ld	r25, Z
    1552:	94 60       	ori	r25, 0x04	; 4
    1554:	90 83       	st	Z, r25
    1556:	88 23       	and	r24, r24
    1558:	44 f4       	brge	.+16     	; 0x156a <LCD0_write+0x60>
    155a:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    155e:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1562:	90 81       	ld	r25, Z
    1564:	90 68       	ori	r25, 0x80	; 128
    1566:	90 83       	st	Z, r25
    1568:	07 c0       	rjmp	.+14     	; 0x1578 <LCD0_write+0x6e>
    156a:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    156e:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1572:	90 81       	ld	r25, Z
    1574:	9f 77       	andi	r25, 0x7F	; 127
    1576:	90 83       	st	Z, r25
    1578:	86 ff       	sbrs	r24, 6
    157a:	08 c0       	rjmp	.+16     	; 0x158c <LCD0_write+0x82>
    157c:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1580:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1584:	90 81       	ld	r25, Z
    1586:	90 64       	ori	r25, 0x40	; 64
    1588:	90 83       	st	Z, r25
    158a:	07 c0       	rjmp	.+14     	; 0x159a <LCD0_write+0x90>
    158c:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1590:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1594:	90 81       	ld	r25, Z
    1596:	9f 7b       	andi	r25, 0xBF	; 191
    1598:	90 83       	st	Z, r25
    159a:	85 ff       	sbrs	r24, 5
    159c:	08 c0       	rjmp	.+16     	; 0x15ae <LCD0_write+0xa4>
    159e:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    15a2:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    15a6:	90 81       	ld	r25, Z
    15a8:	90 62       	ori	r25, 0x20	; 32
    15aa:	90 83       	st	Z, r25
    15ac:	07 c0       	rjmp	.+14     	; 0x15bc <LCD0_write+0xb2>
    15ae:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    15b2:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    15b6:	90 81       	ld	r25, Z
    15b8:	9f 7d       	andi	r25, 0xDF	; 223
    15ba:	90 83       	st	Z, r25
    15bc:	84 ff       	sbrs	r24, 4
    15be:	08 c0       	rjmp	.+16     	; 0x15d0 <LCD0_write+0xc6>
    15c0:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    15c4:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    15c8:	90 81       	ld	r25, Z
    15ca:	90 61       	ori	r25, 0x10	; 16
    15cc:	90 83       	st	Z, r25
    15ce:	07 c0       	rjmp	.+14     	; 0x15de <LCD0_write+0xd4>
    15d0:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    15d4:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    15d8:	90 81       	ld	r25, Z
    15da:	9f 7e       	andi	r25, 0xEF	; 239
    15dc:	90 83       	st	Z, r25
    15de:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    15e2:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    15e6:	90 81       	ld	r25, Z
    15e8:	9b 7f       	andi	r25, 0xFB	; 251
    15ea:	90 83       	st	Z, r25
    15ec:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    15f0:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    15f4:	90 81       	ld	r25, Z
    15f6:	94 60       	ori	r25, 0x04	; 4
    15f8:	90 83       	st	Z, r25
    15fa:	83 ff       	sbrs	r24, 3
    15fc:	08 c0       	rjmp	.+16     	; 0x160e <LCD0_write+0x104>
    15fe:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1602:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1606:	90 81       	ld	r25, Z
    1608:	90 68       	ori	r25, 0x80	; 128
    160a:	90 83       	st	Z, r25
    160c:	07 c0       	rjmp	.+14     	; 0x161c <LCD0_write+0x112>
    160e:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1612:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1616:	90 81       	ld	r25, Z
    1618:	9f 77       	andi	r25, 0x7F	; 127
    161a:	90 83       	st	Z, r25
    161c:	82 ff       	sbrs	r24, 2
    161e:	08 c0       	rjmp	.+16     	; 0x1630 <LCD0_write+0x126>
    1620:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1624:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1628:	90 81       	ld	r25, Z
    162a:	90 64       	ori	r25, 0x40	; 64
    162c:	90 83       	st	Z, r25
    162e:	07 c0       	rjmp	.+14     	; 0x163e <LCD0_write+0x134>
    1630:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1634:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1638:	90 81       	ld	r25, Z
    163a:	9f 7b       	andi	r25, 0xBF	; 191
    163c:	90 83       	st	Z, r25
    163e:	81 ff       	sbrs	r24, 1
    1640:	08 c0       	rjmp	.+16     	; 0x1652 <LCD0_write+0x148>
    1642:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1646:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    164a:	90 81       	ld	r25, Z
    164c:	90 62       	ori	r25, 0x20	; 32
    164e:	90 83       	st	Z, r25
    1650:	07 c0       	rjmp	.+14     	; 0x1660 <LCD0_write+0x156>
    1652:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1656:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    165a:	90 81       	ld	r25, Z
    165c:	9f 7d       	andi	r25, 0xDF	; 223
    165e:	90 83       	st	Z, r25
    1660:	80 ff       	sbrs	r24, 0
    1662:	08 c0       	rjmp	.+16     	; 0x1674 <LCD0_write+0x16a>
    1664:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1668:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    166c:	80 81       	ld	r24, Z
    166e:	80 61       	ori	r24, 0x10	; 16
    1670:	80 83       	st	Z, r24
    1672:	07 c0       	rjmp	.+14     	; 0x1682 <LCD0_write+0x178>
    1674:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1678:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    167c:	80 81       	ld	r24, Z
    167e:	8f 7e       	andi	r24, 0xEF	; 239
    1680:	80 83       	st	Z, r24
    1682:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1686:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    168a:	80 81       	ld	r24, Z
    168c:	8b 7f       	andi	r24, 0xFB	; 251
    168e:	80 83       	st	Z, r24
    1690:	08 95       	ret

00001692 <LCD0_read>:
    1692:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <lcd0_DDR>
    1696:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <lcd0_DDR+0x1>
    169a:	20 81       	ld	r18, Z
    169c:	2f 70       	andi	r18, 0x0F	; 15
    169e:	20 83       	st	Z, r18
    16a0:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    16a4:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    16a8:	20 81       	ld	r18, Z
    16aa:	20 6f       	ori	r18, 0xF0	; 240
    16ac:	20 83       	st	Z, r18
    16ae:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    16b2:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    16b6:	20 81       	ld	r18, Z
    16b8:	22 60       	ori	r18, 0x02	; 2
    16ba:	20 83       	st	Z, r18
    16bc:	89 2b       	or	r24, r25
    16be:	41 f0       	breq	.+16     	; 0x16d0 <LCD0_read+0x3e>
    16c0:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    16c4:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    16c8:	80 81       	ld	r24, Z
    16ca:	81 60       	ori	r24, 0x01	; 1
    16cc:	80 83       	st	Z, r24
    16ce:	07 c0       	rjmp	.+14     	; 0x16de <LCD0_read+0x4c>
    16d0:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    16d4:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    16d8:	80 81       	ld	r24, Z
    16da:	8e 7f       	andi	r24, 0xFE	; 254
    16dc:	80 83       	st	Z, r24
    16de:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    16e2:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    16e6:	80 81       	ld	r24, Z
    16e8:	84 60       	ori	r24, 0x04	; 4
    16ea:	80 83       	st	Z, r24
    16ec:	e0 91 d9 02 	lds	r30, 0x02D9	; 0x8002d9 <lcd0_PIN>
    16f0:	f0 91 da 02 	lds	r31, 0x02DA	; 0x8002da <lcd0_PIN+0x1>
    16f4:	80 81       	ld	r24, Z
    16f6:	88 23       	and	r24, r24
    16f8:	14 f0       	brlt	.+4      	; 0x16fe <LCD0_read+0x6c>
    16fa:	80 e0       	ldi	r24, 0x00	; 0
    16fc:	01 c0       	rjmp	.+2      	; 0x1700 <LCD0_read+0x6e>
    16fe:	80 e8       	ldi	r24, 0x80	; 128
    1700:	90 81       	ld	r25, Z
    1702:	96 ff       	sbrs	r25, 6
    1704:	02 c0       	rjmp	.+4      	; 0x170a <LCD0_read+0x78>
    1706:	80 64       	ori	r24, 0x40	; 64
    1708:	01 c0       	rjmp	.+2      	; 0x170c <LCD0_read+0x7a>
    170a:	8f 7b       	andi	r24, 0xBF	; 191
    170c:	90 81       	ld	r25, Z
    170e:	95 ff       	sbrs	r25, 5
    1710:	02 c0       	rjmp	.+4      	; 0x1716 <LCD0_read+0x84>
    1712:	80 62       	ori	r24, 0x20	; 32
    1714:	01 c0       	rjmp	.+2      	; 0x1718 <LCD0_read+0x86>
    1716:	8f 7d       	andi	r24, 0xDF	; 223
    1718:	90 81       	ld	r25, Z
    171a:	94 ff       	sbrs	r25, 4
    171c:	02 c0       	rjmp	.+4      	; 0x1722 <LCD0_read+0x90>
    171e:	80 61       	ori	r24, 0x10	; 16
    1720:	01 c0       	rjmp	.+2      	; 0x1724 <LCD0_read+0x92>
    1722:	8f 7e       	andi	r24, 0xEF	; 239
    1724:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1728:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    172c:	90 81       	ld	r25, Z
    172e:	9b 7f       	andi	r25, 0xFB	; 251
    1730:	90 83       	st	Z, r25
    1732:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1736:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    173a:	90 81       	ld	r25, Z
    173c:	94 60       	ori	r25, 0x04	; 4
    173e:	90 83       	st	Z, r25
    1740:	e0 91 d9 02 	lds	r30, 0x02D9	; 0x8002d9 <lcd0_PIN>
    1744:	f0 91 da 02 	lds	r31, 0x02DA	; 0x8002da <lcd0_PIN+0x1>
    1748:	90 81       	ld	r25, Z
    174a:	99 23       	and	r25, r25
    174c:	14 f4       	brge	.+4      	; 0x1752 <LCD0_read+0xc0>
    174e:	88 60       	ori	r24, 0x08	; 8
    1750:	01 c0       	rjmp	.+2      	; 0x1754 <LCD0_read+0xc2>
    1752:	87 7f       	andi	r24, 0xF7	; 247
    1754:	90 81       	ld	r25, Z
    1756:	96 ff       	sbrs	r25, 6
    1758:	02 c0       	rjmp	.+4      	; 0x175e <LCD0_read+0xcc>
    175a:	84 60       	ori	r24, 0x04	; 4
    175c:	01 c0       	rjmp	.+2      	; 0x1760 <LCD0_read+0xce>
    175e:	8b 7f       	andi	r24, 0xFB	; 251
    1760:	90 81       	ld	r25, Z
    1762:	95 ff       	sbrs	r25, 5
    1764:	02 c0       	rjmp	.+4      	; 0x176a <LCD0_read+0xd8>
    1766:	82 60       	ori	r24, 0x02	; 2
    1768:	01 c0       	rjmp	.+2      	; 0x176c <LCD0_read+0xda>
    176a:	8d 7f       	andi	r24, 0xFD	; 253
    176c:	90 81       	ld	r25, Z
    176e:	94 ff       	sbrs	r25, 4
    1770:	02 c0       	rjmp	.+4      	; 0x1776 <LCD0_read+0xe4>
    1772:	81 60       	ori	r24, 0x01	; 1
    1774:	01 c0       	rjmp	.+2      	; 0x1778 <LCD0_read+0xe6>
    1776:	8e 7f       	andi	r24, 0xFE	; 254
    1778:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    177c:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1780:	90 81       	ld	r25, Z
    1782:	9b 7f       	andi	r25, 0xFB	; 251
    1784:	90 83       	st	Z, r25
    1786:	08 95       	ret

00001788 <LCD0_BF>:
    1788:	cf 93       	push	r28
    178a:	df 93       	push	r29
    178c:	80 e0       	ldi	r24, 0x00	; 0
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	80 df       	rcall	.-256    	; 0x1692 <LCD0_read>
    1792:	cb e0       	ldi	r28, 0x0B	; 11
    1794:	d0 e0       	ldi	r29, 0x00	; 0
    1796:	05 c0       	rjmp	.+10     	; 0x17a2 <LCD0_BF+0x1a>
    1798:	80 e0       	ldi	r24, 0x00	; 0
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	7a df       	rcall	.-268    	; 0x1692 <LCD0_read>
    179e:	21 97       	sbiw	r28, 0x01	; 1
    17a0:	11 f0       	breq	.+4      	; 0x17a6 <LCD0_BF+0x1e>
    17a2:	88 23       	and	r24, r24
    17a4:	cc f3       	brlt	.-14     	; 0x1798 <LCD0_BF+0x10>
    17a6:	df 91       	pop	r29
    17a8:	cf 91       	pop	r28
    17aa:	08 95       	ret

000017ac <LCD0_putch>:
    17ac:	61 e0       	ldi	r22, 0x01	; 1
    17ae:	70 e0       	ldi	r23, 0x00	; 0
    17b0:	ac de       	rcall	.-680    	; 0x150a <LCD0_write>
    17b2:	ea cf       	rjmp	.-44     	; 0x1788 <LCD0_BF>
    17b4:	08 95       	ret

000017b6 <LCD0_getch>:
    17b6:	cf 93       	push	r28
    17b8:	81 e0       	ldi	r24, 0x01	; 1
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	6a df       	rcall	.-300    	; 0x1692 <LCD0_read>
    17be:	c8 2f       	mov	r28, r24
    17c0:	e3 df       	rcall	.-58     	; 0x1788 <LCD0_BF>
    17c2:	8c 2f       	mov	r24, r28
    17c4:	cf 91       	pop	r28
    17c6:	08 95       	ret

000017c8 <LCD0_string>:
    17c8:	cf 93       	push	r28
    17ca:	df 93       	push	r29
    17cc:	ec 01       	movw	r28, r24
    17ce:	88 81       	ld	r24, Y
    17d0:	88 23       	and	r24, r24
    17d2:	41 f0       	breq	.+16     	; 0x17e4 <LCD0_string+0x1c>
    17d4:	21 96       	adiw	r28, 0x01	; 1
    17d6:	61 e0       	ldi	r22, 0x01	; 1
    17d8:	70 e0       	ldi	r23, 0x00	; 0
    17da:	97 de       	rcall	.-722    	; 0x150a <LCD0_write>
    17dc:	d5 df       	rcall	.-86     	; 0x1788 <LCD0_BF>
    17de:	89 91       	ld	r24, Y+
    17e0:	81 11       	cpse	r24, r1
    17e2:	f9 cf       	rjmp	.-14     	; 0x17d6 <LCD0_string+0xe>
    17e4:	df 91       	pop	r29
    17e6:	cf 91       	pop	r28
    17e8:	08 95       	ret

000017ea <LCD0_string_size>:
    17ea:	0f 93       	push	r16
    17ec:	1f 93       	push	r17
    17ee:	cf 93       	push	r28
    17f0:	df 93       	push	r29
    17f2:	fc 01       	movw	r30, r24
    17f4:	d6 2f       	mov	r29, r22
    17f6:	80 81       	ld	r24, Z
    17f8:	88 23       	and	r24, r24
    17fa:	51 f0       	breq	.+20     	; 0x1810 <LCD0_string_size+0x26>
    17fc:	8f 01       	movw	r16, r30
    17fe:	0f 5f       	subi	r16, 0xFF	; 255
    1800:	1f 4f       	sbci	r17, 0xFF	; 255
    1802:	61 11       	cpse	r22, r1
    1804:	09 c0       	rjmp	.+18     	; 0x1818 <LCD0_string_size+0x2e>
    1806:	1b c0       	rjmp	.+54     	; 0x183e <LCD0_string_size+0x54>
    1808:	cf 5f       	subi	r28, 0xFF	; 255
    180a:	dc 17       	cp	r29, r28
    180c:	30 f4       	brcc	.+12     	; 0x181a <LCD0_string_size+0x30>
    180e:	01 c0       	rjmp	.+2      	; 0x1812 <LCD0_string_size+0x28>
    1810:	c0 e0       	ldi	r28, 0x00	; 0
    1812:	cd 17       	cp	r28, r29
    1814:	60 f0       	brcs	.+24     	; 0x182e <LCD0_string_size+0x44>
    1816:	13 c0       	rjmp	.+38     	; 0x183e <LCD0_string_size+0x54>
    1818:	c1 e0       	ldi	r28, 0x01	; 1
    181a:	61 e0       	ldi	r22, 0x01	; 1
    181c:	70 e0       	ldi	r23, 0x00	; 0
    181e:	75 de       	rcall	.-790    	; 0x150a <LCD0_write>
    1820:	b3 df       	rcall	.-154    	; 0x1788 <LCD0_BF>
    1822:	f8 01       	movw	r30, r16
    1824:	81 91       	ld	r24, Z+
    1826:	8f 01       	movw	r16, r30
    1828:	81 11       	cpse	r24, r1
    182a:	ee cf       	rjmp	.-36     	; 0x1808 <LCD0_string_size+0x1e>
    182c:	f2 cf       	rjmp	.-28     	; 0x1812 <LCD0_string_size+0x28>
    182e:	cf 5f       	subi	r28, 0xFF	; 255
    1830:	61 e0       	ldi	r22, 0x01	; 1
    1832:	70 e0       	ldi	r23, 0x00	; 0
    1834:	80 e2       	ldi	r24, 0x20	; 32
    1836:	69 de       	rcall	.-814    	; 0x150a <LCD0_write>
    1838:	a7 df       	rcall	.-178    	; 0x1788 <LCD0_BF>
    183a:	cd 17       	cp	r28, r29
    183c:	c0 f3       	brcs	.-16     	; 0x182e <LCD0_string_size+0x44>
    183e:	df 91       	pop	r29
    1840:	cf 91       	pop	r28
    1842:	1f 91       	pop	r17
    1844:	0f 91       	pop	r16
    1846:	08 95       	ret

00001848 <LCD0_hspace>:
    1848:	cf 93       	push	r28
    184a:	c8 2f       	mov	r28, r24
    184c:	88 23       	and	r24, r24
    184e:	39 f0       	breq	.+14     	; 0x185e <LCD0_hspace+0x16>
    1850:	61 e0       	ldi	r22, 0x01	; 1
    1852:	70 e0       	ldi	r23, 0x00	; 0
    1854:	80 e2       	ldi	r24, 0x20	; 32
    1856:	59 de       	rcall	.-846    	; 0x150a <LCD0_write>
    1858:	97 df       	rcall	.-210    	; 0x1788 <LCD0_BF>
    185a:	c1 50       	subi	r28, 0x01	; 1
    185c:	c9 f7       	brne	.-14     	; 0x1850 <LCD0_hspace+0x8>
    185e:	cf 91       	pop	r28
    1860:	08 95       	ret

00001862 <LCD0_gotoxy>:
    1862:	26 2f       	mov	r18, r22
    1864:	81 30       	cpi	r24, 0x01	; 1
    1866:	91 05       	cpc	r25, r1
    1868:	71 f0       	breq	.+28     	; 0x1886 <LCD0_gotoxy+0x24>
    186a:	30 f0       	brcs	.+12     	; 0x1878 <LCD0_gotoxy+0x16>
    186c:	82 30       	cpi	r24, 0x02	; 2
    186e:	91 05       	cpc	r25, r1
    1870:	89 f0       	breq	.+34     	; 0x1894 <LCD0_gotoxy+0x32>
    1872:	03 97       	sbiw	r24, 0x03	; 3
    1874:	b1 f0       	breq	.+44     	; 0x18a2 <LCD0_gotoxy+0x40>
    1876:	08 95       	ret
    1878:	60 e0       	ldi	r22, 0x00	; 0
    187a:	70 e0       	ldi	r23, 0x00	; 0
    187c:	80 e8       	ldi	r24, 0x80	; 128
    187e:	82 0f       	add	r24, r18
    1880:	44 de       	rcall	.-888    	; 0x150a <LCD0_write>
    1882:	82 cf       	rjmp	.-252    	; 0x1788 <LCD0_BF>
    1884:	08 95       	ret
    1886:	60 e0       	ldi	r22, 0x00	; 0
    1888:	70 e0       	ldi	r23, 0x00	; 0
    188a:	80 ec       	ldi	r24, 0xC0	; 192
    188c:	82 0f       	add	r24, r18
    188e:	3d de       	rcall	.-902    	; 0x150a <LCD0_write>
    1890:	7b cf       	rjmp	.-266    	; 0x1788 <LCD0_BF>
    1892:	08 95       	ret
    1894:	60 e0       	ldi	r22, 0x00	; 0
    1896:	70 e0       	ldi	r23, 0x00	; 0
    1898:	84 e9       	ldi	r24, 0x94	; 148
    189a:	82 0f       	add	r24, r18
    189c:	36 de       	rcall	.-916    	; 0x150a <LCD0_write>
    189e:	74 cf       	rjmp	.-280    	; 0x1788 <LCD0_BF>
    18a0:	08 95       	ret
    18a2:	60 e0       	ldi	r22, 0x00	; 0
    18a4:	70 e0       	ldi	r23, 0x00	; 0
    18a6:	84 ed       	ldi	r24, 0xD4	; 212
    18a8:	82 0f       	add	r24, r18
    18aa:	2f de       	rcall	.-930    	; 0x150a <LCD0_write>
    18ac:	6d cf       	rjmp	.-294    	; 0x1788 <LCD0_BF>
    18ae:	08 95       	ret

000018b0 <LCD0_clear>:
    18b0:	60 e0       	ldi	r22, 0x00	; 0
    18b2:	70 e0       	ldi	r23, 0x00	; 0
    18b4:	81 e0       	ldi	r24, 0x01	; 1
    18b6:	29 de       	rcall	.-942    	; 0x150a <LCD0_write>
    18b8:	87 ee       	ldi	r24, 0xE7	; 231
    18ba:	97 e1       	ldi	r25, 0x17	; 23
    18bc:	01 97       	sbiw	r24, 0x01	; 1
    18be:	f1 f7       	brne	.-4      	; 0x18bc <LCD0_clear+0xc>
    18c0:	00 c0       	rjmp	.+0      	; 0x18c2 <LCD0_clear+0x12>
    18c2:	00 00       	nop
    18c4:	08 95       	ret

000018c6 <LCD0_inic>:
	return lcd0;
}
void LCD0_inic(void)
{
	//LCD INIC
	*lcd0_DDR=(1<<RS)|(1<<RW)|(1<<EN)|(0<<NC);
    18c6:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <lcd0_DDR>
    18ca:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <lcd0_DDR+0x1>
    18ce:	87 e0       	ldi	r24, 0x07	; 7
    18d0:	80 83       	st	Z, r24
	*lcd0_PORT=(1<<NC);
    18d2:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    18d6:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    18da:	88 e0       	ldi	r24, 0x08	; 8
    18dc:	80 83       	st	Z, r24
    18de:	2f ef       	ldi	r18, 0xFF	; 255
    18e0:	83 ef       	ldi	r24, 0xF3	; 243
    18e2:	91 e0       	ldi	r25, 0x01	; 1
    18e4:	21 50       	subi	r18, 0x01	; 1
    18e6:	80 40       	sbci	r24, 0x00	; 0
    18e8:	90 40       	sbci	r25, 0x00	; 0
    18ea:	e1 f7       	brne	.-8      	; 0x18e4 <LCD0_inic+0x1e>
    18ec:	00 c0       	rjmp	.+0      	; 0x18ee <LCD0_inic+0x28>
    18ee:	00 00       	nop
	/***INICIALIZACAO LCD**datasheet*/
	_delay_ms(40);
	LCD0_write(0x33,INST); //function set
    18f0:	60 e0       	ldi	r22, 0x00	; 0
    18f2:	70 e0       	ldi	r23, 0x00	; 0
    18f4:	83 e3       	ldi	r24, 0x33	; 51
    18f6:	09 de       	rcall	.-1006   	; 0x150a <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    18f8:	20 ed       	ldi	r18, 0xD0	; 208
    18fa:	2a 95       	dec	r18
    18fc:	f1 f7       	brne	.-4      	; 0x18fa <LCD0_inic+0x34>
	_delay_us(39);
	LCD0_write(0x33,INST); //function set
    18fe:	60 e0       	ldi	r22, 0x00	; 0
    1900:	70 e0       	ldi	r23, 0x00	; 0
    1902:	83 e3       	ldi	r24, 0x33	; 51
    1904:	02 de       	rcall	.-1020   	; 0x150a <LCD0_write>
    1906:	80 ed       	ldi	r24, 0xD0	; 208
    1908:	8a 95       	dec	r24
    190a:	f1 f7       	brne	.-4      	; 0x1908 <LCD0_inic+0x42>
	_delay_us(39);
	LCD0_write(0x2B,INST); //function set
    190c:	60 e0       	ldi	r22, 0x00	; 0
    190e:	70 e0       	ldi	r23, 0x00	; 0
    1910:	8b e2       	ldi	r24, 0x2B	; 43
    1912:	fb dd       	rcall	.-1034   	; 0x150a <LCD0_write>
    1914:	95 ec       	ldi	r25, 0xC5	; 197
    1916:	9a 95       	dec	r25
    1918:	f1 f7       	brne	.-4      	; 0x1916 <LCD0_inic+0x50>
    191a:	00 00       	nop
	_delay_us(37);
	LCD0_write(0x0C,INST);// display on/off control
    191c:	60 e0       	ldi	r22, 0x00	; 0
    191e:	70 e0       	ldi	r23, 0x00	; 0
    1920:	8c e0       	ldi	r24, 0x0C	; 12
    1922:	f3 dd       	rcall	.-1050   	; 0x150a <LCD0_write>
    1924:	25 ec       	ldi	r18, 0xC5	; 197
    1926:	2a 95       	dec	r18
    1928:	f1 f7       	brne	.-4      	; 0x1926 <LCD0_inic+0x60>
	_delay_us(37);
	LCD0_write(0x01,INST);// clear display
    192a:	00 00       	nop
    192c:	60 e0       	ldi	r22, 0x00	; 0
    192e:	70 e0       	ldi	r23, 0x00	; 0
    1930:	81 e0       	ldi	r24, 0x01	; 1
    1932:	eb dd       	rcall	.-1066   	; 0x150a <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1934:	87 ee       	ldi	r24, 0xE7	; 231
    1936:	97 e1       	ldi	r25, 0x17	; 23
    1938:	01 97       	sbiw	r24, 0x01	; 1
    193a:	f1 f7       	brne	.-4      	; 0x1938 <LCD0_inic+0x72>
    193c:	00 c0       	rjmp	.+0      	; 0x193e <LCD0_inic+0x78>
	_delay_ms(1.53);
	LCD0_write(0x06,INST);// entry mode set (crazy settings)
    193e:	00 00       	nop
    1940:	60 e0       	ldi	r22, 0x00	; 0
    1942:	70 e0       	ldi	r23, 0x00	; 0
    1944:	86 e0       	ldi	r24, 0x06	; 6
    1946:	e1 dd       	rcall	.-1086   	; 0x150a <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1948:	95 ec       	ldi	r25, 0xC5	; 197
    194a:	9a 95       	dec	r25
    194c:	f1 f7       	brne	.-4      	; 0x194a <LCD0_inic+0x84>
    194e:	00 00       	nop
    1950:	08 95       	ret

00001952 <LCD0enable>:
void LCD1_strobe(unsigned int num);
void LCD1_reboot(void);
unsigned int LCD_ticks(unsigned int num);
/***Procedure & Function***/
LCD0 LCD0enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port)
{
    1952:	1f 93       	push	r17
    1954:	cf 93       	push	r28
    1956:	df 93       	push	r29
    1958:	ec 01       	movw	r28, r24
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    195a:	1f b7       	in	r17, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    195c:	8f b7       	in	r24, 0x3f	; 63
    195e:	8f 77       	andi	r24, 0x7F	; 127
    1960:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	LCD0 lcd0;
	//import parametros
	lcd0_DDR=ddr;
    1962:	70 93 e1 02 	sts	0x02E1, r23	; 0x8002e1 <lcd0_DDR+0x1>
    1966:	60 93 e0 02 	sts	0x02E0, r22	; 0x8002e0 <lcd0_DDR>
	lcd0_PIN=pin;
    196a:	50 93 da 02 	sts	0x02DA, r21	; 0x8002da <lcd0_PIN+0x1>
    196e:	40 93 d9 02 	sts	0x02D9, r20	; 0x8002d9 <lcd0_PIN>
	lcd0_PORT=port;
    1972:	30 93 e4 02 	sts	0x02E4, r19	; 0x8002e4 <lcd0_PORT+0x1>
    1976:	20 93 e3 02 	sts	0x02E3, r18	; 0x8002e3 <lcd0_PORT>
	//inic variables
	*lcd0_DDR=0x00;
    197a:	fb 01       	movw	r30, r22
    197c:	10 82       	st	Z, r1
	*lcd0_PORT=0xFF;
    197e:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <lcd0_PORT>
    1982:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <lcd0_PORT+0x1>
    1986:	8f ef       	ldi	r24, 0xFF	; 255
    1988:	80 83       	st	Z, r24
	lcd0_detect=*lcd0_PIN & (1<<NC);
    198a:	e0 91 d9 02 	lds	r30, 0x02D9	; 0x8002d9 <lcd0_PIN>
    198e:	f0 91 da 02 	lds	r31, 0x02DA	; 0x8002da <lcd0_PIN+0x1>
    1992:	80 81       	ld	r24, Z
    1994:	88 70       	andi	r24, 0x08	; 8
    1996:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <lcd0_detect>
	lcd0.hspace=LCD0_hspace;
	lcd0.clear=LCD0_clear;
	lcd0.gotoxy=LCD0_gotoxy;
	lcd0.reboot=LCD0_reboot;
	//LCD INIC
	LCD0_inic();
    199a:	95 df       	rcall	.-214    	; 0x18c6 <LCD0_inic>
	SREG=tSREG;
    199c:	1f bf       	out	0x3f, r17	; 63
	//
	return lcd0;
    199e:	85 e8       	ldi	r24, 0x85	; 133
    19a0:	9a e0       	ldi	r25, 0x0A	; 10
    19a2:	99 83       	std	Y+1, r25	; 0x01
    19a4:	88 83       	st	Y, r24
    19a6:	89 e4       	ldi	r24, 0x49	; 73
    19a8:	9b e0       	ldi	r25, 0x0B	; 11
    19aa:	9b 83       	std	Y+3, r25	; 0x03
    19ac:	8a 83       	std	Y+2, r24	; 0x02
    19ae:	84 ec       	ldi	r24, 0xC4	; 196
    19b0:	9b e0       	ldi	r25, 0x0B	; 11
    19b2:	9d 83       	std	Y+5, r25	; 0x05
    19b4:	8c 83       	std	Y+4, r24	; 0x04
    19b6:	86 ed       	ldi	r24, 0xD6	; 214
    19b8:	9b e0       	ldi	r25, 0x0B	; 11
    19ba:	9f 83       	std	Y+7, r25	; 0x07
    19bc:	8e 83       	std	Y+6, r24	; 0x06
    19be:	8b ed       	ldi	r24, 0xDB	; 219
    19c0:	9b e0       	ldi	r25, 0x0B	; 11
    19c2:	99 87       	std	Y+9, r25	; 0x09
    19c4:	88 87       	std	Y+8, r24	; 0x08
    19c6:	84 ee       	ldi	r24, 0xE4	; 228
    19c8:	9b e0       	ldi	r25, 0x0B	; 11
    19ca:	9b 87       	std	Y+11, r25	; 0x0b
    19cc:	8a 87       	std	Y+10, r24	; 0x0a
    19ce:	85 ef       	ldi	r24, 0xF5	; 245
    19d0:	9b e0       	ldi	r25, 0x0B	; 11
    19d2:	9d 87       	std	Y+13, r25	; 0x0d
    19d4:	8c 87       	std	Y+12, r24	; 0x0c
    19d6:	84 e2       	ldi	r24, 0x24	; 36
    19d8:	9c e0       	ldi	r25, 0x0C	; 12
    19da:	9f 87       	std	Y+15, r25	; 0x0f
    19dc:	8e 87       	std	Y+14, r24	; 0x0e
    19de:	88 e5       	ldi	r24, 0x58	; 88
    19e0:	9c e0       	ldi	r25, 0x0C	; 12
    19e2:	99 8b       	std	Y+17, r25	; 0x11
    19e4:	88 8b       	std	Y+16, r24	; 0x10
    19e6:	81 e3       	ldi	r24, 0x31	; 49
    19e8:	9c e0       	ldi	r25, 0x0C	; 12
    19ea:	9b 8b       	std	Y+19, r25	; 0x13
    19ec:	8a 8b       	std	Y+18, r24	; 0x12
    19ee:	80 e0       	ldi	r24, 0x00	; 0
    19f0:	9d e0       	ldi	r25, 0x0D	; 13
    19f2:	9d 8b       	std	Y+21, r25	; 0x15
    19f4:	8c 8b       	std	Y+20, r24	; 0x14
}
    19f6:	ce 01       	movw	r24, r28
    19f8:	df 91       	pop	r29
    19fa:	cf 91       	pop	r28
    19fc:	1f 91       	pop	r17
    19fe:	08 95       	ret

00001a00 <LCD0_reboot>:
	*lcd0_PORT|=(1<<EN);
	LCD_ticks(num);
	*lcd0_PORT&=~(1<<EN);
}
void LCD0_reboot(void)
{
    1a00:	cf 93       	push	r28
	//low high detect pin NC
	uint8_t i;
	uint8_t tmp;
	tmp=*lcd0_PIN & (1<<NC);
    1a02:	e0 91 d9 02 	lds	r30, 0x02D9	; 0x8002d9 <lcd0_PIN>
    1a06:	f0 91 da 02 	lds	r31, 0x02DA	; 0x8002da <lcd0_PIN+0x1>
    1a0a:	c0 81       	ld	r28, Z
    1a0c:	c8 70       	andi	r28, 0x08	; 8
	i=tmp^lcd0_detect;
    1a0e:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <lcd0_detect>
    1a12:	8c 27       	eor	r24, r28
	i&=tmp;
	if(i)
    1a14:	8c 23       	and	r24, r28
    1a16:	09 f0       	breq	.+2      	; 0x1a1a <LCD0_reboot+0x1a>
		LCD0_inic();
    1a18:	56 df       	rcall	.-340    	; 0x18c6 <LCD0_inic>
	lcd0_detect=tmp;
    1a1a:	c0 93 e2 02 	sts	0x02E2, r28	; 0x8002e2 <lcd0_detect>
}
    1a1e:	cf 91       	pop	r28
    1a20:	08 95       	ret

00001a22 <HX711_set_readflag>:
	// returns a copy
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=ONE;
    1a22:	21 e0       	ldi	r18, 0x01	; 1
    1a24:	fc 01       	movw	r30, r24
    1a26:	20 83       	st	Z, r18
    1a28:	08 95       	ret

00001a2a <HX711_check_readflag>:
	self->readflag=ZERO;
}
uint8_t HX711_check_readflag(HX711* self)
{
	return self->readflag;	
}
    1a2a:	fc 01       	movw	r30, r24
    1a2c:	80 81       	ld	r24, Z
    1a2e:	08 95       	ret

00001a30 <HX711_read_bit>:
uint8_t HX711_read_bit(void)
{	
	uint16_t bool;
	*hx711_PORT|=(ONE<<hx711_clkpin);
    1a30:	e0 91 ea 02 	lds	r30, 0x02EA	; 0x8002ea <hx711_PORT>
    1a34:	f0 91 eb 02 	lds	r31, 0x02EB	; 0x8002eb <hx711_PORT+0x1>
    1a38:	20 81       	ld	r18, Z
    1a3a:	81 e0       	ldi	r24, 0x01	; 1
    1a3c:	90 e0       	ldi	r25, 0x00	; 0
    1a3e:	00 90 ee 02 	lds	r0, 0x02EE	; 0x8002ee <hx711_clkpin>
    1a42:	02 c0       	rjmp	.+4      	; 0x1a48 <HX711_read_bit+0x18>
    1a44:	88 0f       	add	r24, r24
    1a46:	99 1f       	adc	r25, r25
    1a48:	0a 94       	dec	r0
    1a4a:	e2 f7       	brpl	.-8      	; 0x1a44 <HX711_read_bit+0x14>
    1a4c:	82 2b       	or	r24, r18
    1a4e:	80 83       	st	Z, r24
    1a50:	8e e6       	ldi	r24, 0x6E	; 110
    1a52:	90 e0       	ldi	r25, 0x00	; 0
    1a54:	01 97       	sbiw	r24, 0x01	; 1
	/**0.1us minimum**/
	for(bool=0;bool<HX711_ticks;bool++);
    1a56:	f1 f7       	brne	.-4      	; 0x1a54 <HX711_read_bit+0x24>
	bool=*hx711_PIN & (ONE<<hx711_datapin);
    1a58:	e0 91 e8 02 	lds	r30, 0x02E8	; 0x8002e8 <hx711_PIN>
    1a5c:	f0 91 e9 02 	lds	r31, 0x02E9	; 0x8002e9 <hx711_PIN+0x1>
    1a60:	40 81       	ld	r20, Z
    1a62:	21 e0       	ldi	r18, 0x01	; 1
    1a64:	30 e0       	ldi	r19, 0x00	; 0
    1a66:	c9 01       	movw	r24, r18
    1a68:	00 90 e7 02 	lds	r0, 0x02E7	; 0x8002e7 <hx711_datapin>
    1a6c:	02 c0       	rjmp	.+4      	; 0x1a72 <HX711_read_bit+0x42>
    1a6e:	88 0f       	add	r24, r24
    1a70:	99 1f       	adc	r25, r25
    1a72:	0a 94       	dec	r0
    1a74:	e2 f7       	brpl	.-8      	; 0x1a6e <HX711_read_bit+0x3e>
	*hx711_PORT&=~(ONE<<hx711_clkpin);
    1a76:	e0 91 ea 02 	lds	r30, 0x02EA	; 0x8002ea <hx711_PORT>
    1a7a:	f0 91 eb 02 	lds	r31, 0x02EB	; 0x8002eb <hx711_PORT+0x1>
    1a7e:	90 81       	ld	r25, Z
    1a80:	00 90 ee 02 	lds	r0, 0x02EE	; 0x8002ee <hx711_clkpin>
    1a84:	02 c0       	rjmp	.+4      	; 0x1a8a <HX711_read_bit+0x5a>
    1a86:	22 0f       	add	r18, r18
    1a88:	33 1f       	adc	r19, r19
    1a8a:	0a 94       	dec	r0
    1a8c:	e2 f7       	brpl	.-8      	; 0x1a86 <HX711_read_bit+0x56>
    1a8e:	20 95       	com	r18
    1a90:	29 23       	and	r18, r25
    1a92:	20 83       	st	Z, r18
	return bool;
}
    1a94:	84 23       	and	r24, r20
    1a96:	08 95       	ret

00001a98 <HX711_set_amplify>:
// Gain selector
// AVDD connected to 5V, channel B gain=32
void HX711_set_amplify(HX711* self, uint8_t amplify)
{
	switch(amplify){
    1a98:	60 34       	cpi	r22, 0x40	; 64
    1a9a:	79 f0       	breq	.+30     	; 0x1aba <HX711_set_amplify+0x22>
    1a9c:	60 38       	cpi	r22, 0x80	; 128
    1a9e:	19 f0       	breq	.+6      	; 0x1aa6 <HX711_set_amplify+0xe>
    1aa0:	60 32       	cpi	r22, 0x20	; 32
    1aa2:	81 f4       	brne	.+32     	; 0x1ac4 <HX711_set_amplify+0x2c>
    1aa4:	05 c0       	rjmp	.+10     	; 0x1ab0 <HX711_set_amplify+0x18>
		case 128:
			self->amplify=ONE; //channel A
    1aa6:	21 e0       	ldi	r18, 0x01	; 1
    1aa8:	fc 01       	movw	r30, r24
    1aaa:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=ONE;
    1aac:	23 83       	std	Z+3, r18	; 0x03
			break;
    1aae:	08 95       	ret
		case 32:
			self->amplify=2; //channel B
    1ab0:	22 e0       	ldi	r18, 0x02	; 2
    1ab2:	fc 01       	movw	r30, r24
    1ab4:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=2; 
    1ab6:	23 83       	std	Z+3, r18	; 0x03
			break;
    1ab8:	08 95       	ret
		case 64:
			self->amplify=3; //channel A
    1aba:	23 e0       	ldi	r18, 0x03	; 3
    1abc:	fc 01       	movw	r30, r24
    1abe:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=3;
    1ac0:	23 83       	std	Z+3, r18	; 0x03
			break;
    1ac2:	08 95       	ret
		default:
			self->amplify=ONE;
    1ac4:	21 e0       	ldi	r18, 0x01	; 1
    1ac6:	fc 01       	movw	r30, r24
    1ac8:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=ONE;
    1aca:	23 83       	std	Z+3, r18	; 0x03
    1acc:	08 95       	ret

00001ace <HX711_readraw>:
}
/***
Function to be used in the interrupt routine with appropriate cycle period.
***/
int32_t HX711_readraw(HX711* self)
{
    1ace:	0f 93       	push	r16
    1ad0:	1f 93       	push	r17
    1ad2:	cf 93       	push	r28
    1ad4:	df 93       	push	r29
    1ad6:	ec 01       	movw	r28, r24
	uint8_t aindex, bindex;
	int32_t value;
	aindex = self->bufferindex-ONE;
    1ad8:	19 85       	ldd	r17, Y+9	; 0x09
	bindex = self->bitcount-ONE;
    1ada:	0c 81       	ldd	r16, Y+4	; 0x04
	ptr=(int32_t*)self->buffer;
    1adc:	05 96       	adiw	r24, 0x05	; 5
    1ade:	90 93 ed 02 	sts	0x02ED, r25	; 0x8002ed <ptr+0x1>
    1ae2:	80 93 ec 02 	sts	0x02EC, r24	; 0x8002ec <ptr>
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
    1ae6:	e0 91 e8 02 	lds	r30, 0x02E8	; 0x8002e8 <hx711_PIN>
    1aea:	f0 91 e9 02 	lds	r31, 0x02E9	; 0x8002e9 <hx711_PIN+0x1>
    1aee:	80 81       	ld	r24, Z
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	00 90 e7 02 	lds	r0, 0x02E7	; 0x8002e7 <hx711_datapin>
    1af6:	02 c0       	rjmp	.+4      	; 0x1afc <HX711_readraw+0x2e>
    1af8:	95 95       	asr	r25
    1afa:	87 95       	ror	r24
    1afc:	0a 94       	dec	r0
    1afe:	e2 f7       	brpl	.-8      	; 0x1af8 <HX711_readraw+0x2a>
    1b00:	80 fd       	sbrc	r24, 0
    1b02:	06 c0       	rjmp	.+12     	; 0x1b10 <HX711_readraw+0x42>
    1b04:	88 81       	ld	r24, Y
    1b06:	81 11       	cpse	r24, r1
    1b08:	07 c0       	rjmp	.+14     	; 0x1b18 <HX711_readraw+0x4a>
	// returns a copy
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=ONE;
    1b0a:	81 e0       	ldi	r24, 0x01	; 1
    1b0c:	88 83       	st	Y, r24
	bindex = self->bitcount-ONE;
	ptr=(int32_t*)self->buffer;
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
		HX711_set_readflag(self);
		PORTC&=~(1<<0); // indicator remove when finished
    1b0e:	a8 98       	cbi	0x15, 0	; 21
	}
	/***Interrupt 24 times sequence***/
	if(self->readflag){
    1b10:	88 81       	ld	r24, Y
    1b12:	88 23       	and	r24, r24
    1b14:	09 f4       	brne	.+2      	; 0x1b18 <HX711_readraw+0x4a>
    1b16:	49 c0       	rjmp	.+146    	; 0x1baa <HX711_readraw+0xdc>
		if(self->bitcount){
    1b18:	8c 81       	ldd	r24, Y+4	; 0x04
    1b1a:	88 23       	and	r24, r24
    1b1c:	29 f1       	breq	.+74     	; 0x1b68 <HX711_readraw+0x9a>
			if (HX711_read_bit())
    1b1e:	88 df       	rcall	.-240    	; 0x1a30 <HX711_read_bit>
    1b20:	88 23       	and	r24, r24
    1b22:	a9 f0       	breq	.+42     	; 0x1b4e <HX711_readraw+0x80>
				self->buffer[aindex] |= ONE<<(bindex-(aindex*8));
    1b24:	11 50       	subi	r17, 0x01	; 1
    1b26:	81 2f       	mov	r24, r17
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	fe 01       	movw	r30, r28
    1b2c:	e8 0f       	add	r30, r24
    1b2e:	f9 1f       	adc	r31, r25
    1b30:	01 50       	subi	r16, 0x01	; 1
    1b32:	28 e0       	ldi	r18, 0x08	; 8
    1b34:	12 9f       	mul	r17, r18
    1b36:	00 19       	sub	r16, r0
    1b38:	11 24       	eor	r1, r1
    1b3a:	81 e0       	ldi	r24, 0x01	; 1
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	02 c0       	rjmp	.+4      	; 0x1b44 <HX711_readraw+0x76>
    1b40:	88 0f       	add	r24, r24
    1b42:	99 1f       	adc	r25, r25
    1b44:	0a 95       	dec	r16
    1b46:	e2 f7       	brpl	.-8      	; 0x1b40 <HX711_readraw+0x72>
    1b48:	95 81       	ldd	r25, Z+5	; 0x05
    1b4a:	89 2b       	or	r24, r25
    1b4c:	85 83       	std	Z+5, r24	; 0x05
			self->bitcount--;
    1b4e:	8c 81       	ldd	r24, Y+4	; 0x04
    1b50:	81 50       	subi	r24, 0x01	; 1
    1b52:	8c 83       	std	Y+4, r24	; 0x04
			if(self->bitcount==16)
    1b54:	80 31       	cpi	r24, 0x10	; 16
    1b56:	19 f4       	brne	.+6      	; 0x1b5e <HX711_readraw+0x90>
				self->bufferindex=2;
    1b58:	82 e0       	ldi	r24, 0x02	; 2
    1b5a:	89 87       	std	Y+9, r24	; 0x09
    1b5c:	26 c0       	rjmp	.+76     	; 0x1baa <HX711_readraw+0xdc>
			if(self->bitcount==8)
    1b5e:	88 30       	cpi	r24, 0x08	; 8
    1b60:	21 f5       	brne	.+72     	; 0x1baa <HX711_readraw+0xdc>
				self->bufferindex=ONE;
    1b62:	81 e0       	ldi	r24, 0x01	; 1
    1b64:	89 87       	std	Y+9, r24	; 0x09
    1b66:	21 c0       	rjmp	.+66     	; 0x1baa <HX711_readraw+0xdc>
		}else{
			if(self->ampcount){
    1b68:	8b 81       	ldd	r24, Y+3	; 0x03
    1b6a:	88 23       	and	r24, r24
				HX711_read_bit();
    1b6c:	29 f0       	breq	.+10     	; 0x1b78 <HX711_readraw+0xaa>
    1b6e:	60 df       	rcall	.-320    	; 0x1a30 <HX711_read_bit>
				self->ampcount--;
    1b70:	8b 81       	ldd	r24, Y+3	; 0x03
    1b72:	81 50       	subi	r24, 0x01	; 1
    1b74:	8b 83       	std	Y+3, r24	; 0x03
    1b76:	19 c0       	rjmp	.+50     	; 0x1baa <HX711_readraw+0xdc>
			}else{
				value=*(ptr);
    1b78:	e0 91 ec 02 	lds	r30, 0x02EC	; 0x8002ec <ptr>
    1b7c:	f0 91 ed 02 	lds	r31, 0x02ED	; 0x8002ed <ptr+0x1>
    1b80:	80 81       	ld	r24, Z
    1b82:	91 81       	ldd	r25, Z+1	; 0x01
    1b84:	a2 81       	ldd	r26, Z+2	; 0x02
    1b86:	b3 81       	ldd	r27, Z+3	; 0x03
				self->reading=value;
    1b88:	8a 87       	std	Y+10, r24	; 0x0a
    1b8a:	9b 87       	std	Y+11, r25	; 0x0b
    1b8c:	ac 87       	std	Y+12, r26	; 0x0c
    1b8e:	bd 87       	std	Y+13, r27	; 0x0d
				self->bitcount=HX711_ADC_bits;
    1b90:	88 e1       	ldi	r24, 0x18	; 24
    1b92:	8c 83       	std	Y+4, r24	; 0x04
				self->bufferindex=HX711_VECT_SIZE-ONE;
    1b94:	83 e0       	ldi	r24, 0x03	; 3
    1b96:	89 87       	std	Y+9, r24	; 0x09
				self->ampcount=self->amplify;
    1b98:	8a 81       	ldd	r24, Y+2	; 0x02
    1b9a:	8b 83       	std	Y+3, r24	; 0x03
				self->buffer[0]=ZERO;
    1b9c:	1d 82       	std	Y+5, r1	; 0x05
				self->buffer[1]=ZERO;
    1b9e:	1e 82       	std	Y+6, r1	; 0x06
				self->buffer[2]=ZERO;
    1ba0:	1f 82       	std	Y+7, r1	; 0x07
				self->buffer[3]=ZERO;
    1ba2:	18 86       	std	Y+8, r1	; 0x08
				self->trigger=ONE;
    1ba4:	81 e0       	ldi	r24, 0x01	; 1
    1ba6:	89 83       	std	Y+1, r24	; 0x01
{
	self->readflag=ONE;
}
void HX711_reset_readflag(HX711* self)
{
	self->readflag=ZERO;
    1ba8:	18 82       	st	Y, r1
				/***Reset ready for next query***/
				HX711_reset_readflag(self);
			}
		}
	}
	return self->reading;
    1baa:	6a 85       	ldd	r22, Y+10	; 0x0a
    1bac:	7b 85       	ldd	r23, Y+11	; 0x0b
    1bae:	8c 85       	ldd	r24, Y+12	; 0x0c
    1bb0:	9d 85       	ldd	r25, Y+13	; 0x0d
}
    1bb2:	df 91       	pop	r29
    1bb4:	cf 91       	pop	r28
    1bb6:	1f 91       	pop	r17
    1bb8:	0f 91       	pop	r16
    1bba:	08 95       	ret

00001bbc <HX711enable>:
void HX711_set_amplify(HX711* self, uint8_t amplify);
int32_t HX711_readraw(HX711* self);
uint8_t HX711_hl(uint8_t xi, uint8_t xf);
/***Procedure & Function***/
HX711 HX711enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port, uint8_t datapin, uint8_t clkpin)
{
    1bbc:	ef 92       	push	r14
    1bbe:	0f 93       	push	r16
    1bc0:	fc 01       	movw	r30, r24
    1bc2:	da 01       	movw	r26, r20
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    1bc4:	5f b7       	in	r21, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1bc6:	8f b7       	in	r24, 0x3f	; 63
    1bc8:	8f 77       	andi	r24, 0x7F	; 127
    1bca:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	HX711 hx711;
	//import parametros
	hx711_DDR=ddr;
    1bcc:	70 93 f0 02 	sts	0x02F0, r23	; 0x8002f0 <hx711_DDR+0x1>
    1bd0:	60 93 ef 02 	sts	0x02EF, r22	; 0x8002ef <hx711_DDR>
	hx711_PIN=pin;
    1bd4:	b0 93 e9 02 	sts	0x02E9, r27	; 0x8002e9 <hx711_PIN+0x1>
    1bd8:	a0 93 e8 02 	sts	0x02E8, r26	; 0x8002e8 <hx711_PIN>
	hx711_PORT=port;
    1bdc:	30 93 eb 02 	sts	0x02EB, r19	; 0x8002eb <hx711_PORT+0x1>
    1be0:	20 93 ea 02 	sts	0x02EA, r18	; 0x8002ea <hx711_PORT>
	hx711_datapin=datapin;
    1be4:	00 93 e7 02 	sts	0x02E7, r16	; 0x8002e7 <hx711_datapin>
	hx711_clkpin=clkpin;
    1be8:	e0 92 ee 02 	sts	0x02EE, r14	; 0x8002ee <hx711_clkpin>
	//inic variables
	*hx711_DDR |= (ONE<<clkpin);
    1bec:	db 01       	movw	r26, r22
    1bee:	4c 91       	ld	r20, X
    1bf0:	81 e0       	ldi	r24, 0x01	; 1
    1bf2:	90 e0       	ldi	r25, 0x00	; 0
    1bf4:	9c 01       	movw	r18, r24
    1bf6:	02 c0       	rjmp	.+4      	; 0x1bfc <HX711enable+0x40>
    1bf8:	22 0f       	add	r18, r18
    1bfa:	33 1f       	adc	r19, r19
    1bfc:	ea 94       	dec	r14
    1bfe:	e2 f7       	brpl	.-8      	; 0x1bf8 <HX711enable+0x3c>
    1c00:	24 2b       	or	r18, r20
    1c02:	2c 93       	st	X, r18
	*hx711_PORT |= (ONE<<datapin);
    1c04:	a0 91 ea 02 	lds	r26, 0x02EA	; 0x8002ea <hx711_PORT>
    1c08:	b0 91 eb 02 	lds	r27, 0x02EB	; 0x8002eb <hx711_PORT+0x1>
    1c0c:	2c 91       	ld	r18, X
    1c0e:	02 c0       	rjmp	.+4      	; 0x1c14 <HX711enable+0x58>
    1c10:	88 0f       	add	r24, r24
    1c12:	99 1f       	adc	r25, r25
    1c14:	0a 95       	dec	r16
    1c16:	e2 f7       	brpl	.-8      	; 0x1c10 <HX711enable+0x54>
    1c18:	82 2b       	or	r24, r18
    1c1a:	8c 93       	st	X, r24
	hx711.set_readflag=HX711_set_readflag;
	hx711.check_readflag=HX711_check_readflag;
	hx711.read_bit=HX711_read_bit;
	hx711.set_amplify=HX711_set_amplify;
	hx711.readraw=HX711_readraw;
	SREG=tSREG;
    1c1c:	5f bf       	out	0x3f, r21	; 63
	// returns a copy
	return hx711;
    1c1e:	10 82       	st	Z, r1
    1c20:	11 82       	std	Z+1, r1	; 0x01
    1c22:	81 e0       	ldi	r24, 0x01	; 1
    1c24:	82 83       	std	Z+2, r24	; 0x02
    1c26:	83 83       	std	Z+3, r24	; 0x03
    1c28:	88 e1       	ldi	r24, 0x18	; 24
    1c2a:	84 83       	std	Z+4, r24	; 0x04
    1c2c:	15 82       	std	Z+5, r1	; 0x05
    1c2e:	16 82       	std	Z+6, r1	; 0x06
    1c30:	17 82       	std	Z+7, r1	; 0x07
    1c32:	10 86       	std	Z+8, r1	; 0x08
    1c34:	83 e0       	ldi	r24, 0x03	; 3
    1c36:	81 87       	std	Z+9, r24	; 0x09
    1c38:	12 86       	std	Z+10, r1	; 0x0a
    1c3a:	13 86       	std	Z+11, r1	; 0x0b
    1c3c:	14 86       	std	Z+12, r1	; 0x0c
    1c3e:	15 86       	std	Z+13, r1	; 0x0d
    1c40:	82 e0       	ldi	r24, 0x02	; 2
    1c42:	91 e9       	ldi	r25, 0x91	; 145
    1c44:	a0 e0       	ldi	r26, 0x00	; 0
    1c46:	b0 e0       	ldi	r27, 0x00	; 0
    1c48:	86 87       	std	Z+14, r24	; 0x0e
    1c4a:	97 87       	std	Z+15, r25	; 0x0f
    1c4c:	a0 8b       	std	Z+16, r26	; 0x10
    1c4e:	b1 8b       	std	Z+17, r27	; 0x11
    1c50:	8d e8       	ldi	r24, 0x8D	; 141
    1c52:	91 e2       	ldi	r25, 0x21	; 33
    1c54:	a1 e0       	ldi	r26, 0x01	; 1
    1c56:	b0 e0       	ldi	r27, 0x00	; 0
    1c58:	82 8b       	std	Z+18, r24	; 0x12
    1c5a:	93 8b       	std	Z+19, r25	; 0x13
    1c5c:	a4 8b       	std	Z+20, r26	; 0x14
    1c5e:	b5 8b       	std	Z+21, r27	; 0x15
    1c60:	8c e2       	ldi	r24, 0x2C	; 44
    1c62:	90 e4       	ldi	r25, 0x40	; 64
    1c64:	a2 e0       	ldi	r26, 0x02	; 2
    1c66:	b0 e0       	ldi	r27, 0x00	; 0
    1c68:	86 8b       	std	Z+22, r24	; 0x16
    1c6a:	97 8b       	std	Z+23, r25	; 0x17
    1c6c:	a0 8f       	std	Z+24, r26	; 0x18
    1c6e:	b1 8f       	std	Z+25, r27	; 0x19
    1c70:	87 e1       	ldi	r24, 0x17	; 23
    1c72:	82 8f       	std	Z+26, r24	; 0x1a
    1c74:	8e e2       	ldi	r24, 0x2E	; 46
    1c76:	85 8f       	std	Z+29, r24	; 0x1d
    1c78:	8c e5       	ldi	r24, 0x5C	; 92
    1c7a:	80 a3       	std	Z+32, r24	; 0x20
    1c7c:	81 e1       	ldi	r24, 0x11	; 17
    1c7e:	9d e0       	ldi	r25, 0x0D	; 13
    1c80:	94 a3       	std	Z+36, r25	; 0x24
    1c82:	83 a3       	std	Z+35, r24	; 0x23
    1c84:	85 e1       	ldi	r24, 0x15	; 21
    1c86:	9d e0       	ldi	r25, 0x0D	; 13
    1c88:	96 a3       	std	Z+38, r25	; 0x26
    1c8a:	85 a3       	std	Z+37, r24	; 0x25
    1c8c:	88 e1       	ldi	r24, 0x18	; 24
    1c8e:	9d e0       	ldi	r25, 0x0D	; 13
    1c90:	90 a7       	std	Z+40, r25	; 0x28
    1c92:	87 a3       	std	Z+39, r24	; 0x27
    1c94:	8c e4       	ldi	r24, 0x4C	; 76
    1c96:	9d e0       	ldi	r25, 0x0D	; 13
    1c98:	92 a7       	std	Z+42, r25	; 0x2a
    1c9a:	81 a7       	std	Z+41, r24	; 0x29
    1c9c:	87 e6       	ldi	r24, 0x67	; 103
    1c9e:	9d e0       	ldi	r25, 0x0D	; 13
    1ca0:	94 a7       	std	Z+44, r25	; 0x2c
    1ca2:	83 a7       	std	Z+43, r24	; 0x2b
}
    1ca4:	cf 01       	movw	r24, r30
    1ca6:	0f 91       	pop	r16
    1ca8:	ef 90       	pop	r14
    1caa:	08 95       	ret

00001cac <PORTINIT>:
/*
** procedure and function
*/
void PORTINIT(void)
{
	DDRC=0xFF;
    1cac:	8f ef       	ldi	r24, 0xFF	; 255
    1cae:	84 bb       	out	0x14, r24	; 20
	PORTC=0xFF;
    1cb0:	85 bb       	out	0x15, r24	; 21
    1cb2:	08 95       	ret

00001cb4 <main>:
** Header
*/
void PORTINIT();
/****MAIN****/
int main(void)
{
    1cb4:	cf 93       	push	r28
    1cb6:	df 93       	push	r29
    1cb8:	cd b7       	in	r28, 0x3d	; 61
    1cba:	de b7       	in	r29, 0x3e	; 62
    1cbc:	c7 5b       	subi	r28, 0xB7	; 183
    1cbe:	d1 09       	sbc	r29, r1
    1cc0:	0f b6       	in	r0, 0x3f	; 63
    1cc2:	f8 94       	cli
    1cc4:	de bf       	out	0x3e, r29	; 62
    1cc6:	0f be       	out	0x3f, r0	; 63
    1cc8:	cd bf       	out	0x3d, r28	; 61
	//SREG|=1<<7;
	PORTINIT();
    1cca:	f0 df       	rcall	.-32     	; 0x1cac <PORTINIT>
	/***INICIALIZE OBJECTS***/
	FUNC function = FUNCenable();
    1ccc:	ce 01       	movw	r24, r28
    1cce:	01 96       	adiw	r24, 0x01	; 1
    1cd0:	72 da       	rcall	.-2844   	; 0x11b6 <FUNCenable>
    1cd2:	8d a1       	ldd	r24, Y+37	; 0x25
    1cd4:	9e a1       	ldd	r25, Y+38	; 0x26
    1cd6:	ca 54       	subi	r28, 0x4A	; 74
    1cd8:	df 4f       	sbci	r29, 0xFF	; 255
    1cda:	99 83       	std	Y+1, r25	; 0x01
    1cdc:	88 83       	st	Y, r24
    1cde:	c6 5b       	subi	r28, 0xB6	; 182
    1ce0:	d0 40       	sbci	r29, 0x00	; 0
    1ce2:	2d 96       	adiw	r28, 0x0d	; 13
    1ce4:	ee ad       	ldd	r30, Y+62	; 0x3e
    1ce6:	ff ad       	ldd	r31, Y+63	; 0x3f
    1ce8:	2d 97       	sbiw	r28, 0x0d	; 13
    1cea:	cc 54       	subi	r28, 0x4C	; 76
    1cec:	df 4f       	sbci	r29, 0xFF	; 255
    1cee:	f9 83       	std	Y+1, r31	; 0x01
    1cf0:	e8 83       	st	Y, r30
    1cf2:	c4 5b       	subi	r28, 0xB4	; 180
    1cf4:	d0 40       	sbci	r29, 0x00	; 0
	LCD0 lcd0 = LCD0enable(&DDRA,&PINA,&PORTA);
    1cf6:	2b e3       	ldi	r18, 0x3B	; 59
    1cf8:	30 e0       	ldi	r19, 0x00	; 0
    1cfa:	49 e3       	ldi	r20, 0x39	; 57
    1cfc:	50 e0       	ldi	r21, 0x00	; 0
    1cfe:	6a e3       	ldi	r22, 0x3A	; 58
    1d00:	70 e0       	ldi	r23, 0x00	; 0
    1d02:	ce 01       	movw	r24, r28
    1d04:	83 5b       	subi	r24, 0xB3	; 179
    1d06:	9f 4f       	sbci	r25, 0xFF	; 255
    1d08:	24 de       	rcall	.-952    	; 0x1952 <LCD0enable>
    1d0a:	6b 96       	adiw	r28, 0x1b	; 27
    1d0c:	ce ac       	ldd	r12, Y+62	; 0x3e
    1d0e:	df ac       	ldd	r13, Y+63	; 0x3f
    1d10:	6b 97       	sbiw	r28, 0x1b	; 27
    1d12:	a1 96       	adiw	r28, 0x21	; 33
    1d14:	2e ac       	ldd	r2, Y+62	; 0x3e
    1d16:	3f ac       	ldd	r3, Y+63	; 0x3f
    1d18:	a1 97       	sbiw	r28, 0x21	; 33
	TIMER_COUNTER0 timer0 = TIMER_COUNTER0enable(2,2); //2,2
    1d1a:	42 e0       	ldi	r20, 0x02	; 2
    1d1c:	62 e0       	ldi	r22, 0x02	; 2
    1d1e:	ce 01       	movw	r24, r28
    1d20:	8d 59       	subi	r24, 0x9D	; 157
    1d22:	9f 4f       	sbci	r25, 0xFF	; 255
    1d24:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <TIMER_COUNTER0enable>
	TIMER_COUNTER1 timer1 = TIMER_COUNTER1enable(4,0);
    1d28:	40 e0       	ldi	r20, 0x00	; 0
    1d2a:	64 e0       	ldi	r22, 0x04	; 4
    1d2c:	ce 01       	movw	r24, r28
    1d2e:	8d 58       	subi	r24, 0x8D	; 141
    1d30:	9f 4f       	sbci	r25, 0xFF	; 255
    1d32:	0e 94 9f 02 	call	0x53e	; 0x53e <TIMER_COUNTER1enable>
	hx = HX711enable(&DDRF, &PINF, &PORTF, 6, 7);
    1d36:	0f 2e       	mov	r0, r31
    1d38:	f7 e0       	ldi	r31, 0x07	; 7
    1d3a:	ef 2e       	mov	r14, r31
    1d3c:	f0 2d       	mov	r31, r0
    1d3e:	06 e0       	ldi	r16, 0x06	; 6
    1d40:	22 e6       	ldi	r18, 0x62	; 98
    1d42:	30 e0       	ldi	r19, 0x00	; 0
    1d44:	40 e2       	ldi	r20, 0x20	; 32
    1d46:	50 e0       	ldi	r21, 0x00	; 0
    1d48:	61 e6       	ldi	r22, 0x61	; 97
    1d4a:	70 e0       	ldi	r23, 0x00	; 0
    1d4c:	ce 01       	movw	r24, r28
    1d4e:	8d 57       	subi	r24, 0x7D	; 125
    1d50:	9f 4f       	sbci	r25, 0xFF	; 255
    1d52:	34 df       	rcall	.-408    	; 0x1bbc <HX711enable>
    1d54:	8d e2       	ldi	r24, 0x2D	; 45
    1d56:	fe 01       	movw	r30, r28
    1d58:	ed 57       	subi	r30, 0x7D	; 125
    1d5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5c:	a9 e0       	ldi	r26, 0x09	; 9
    1d5e:	b3 e0       	ldi	r27, 0x03	; 3
    1d60:	01 90       	ld	r0, Z+
    1d62:	0d 92       	st	X+, r0
    1d64:	8a 95       	dec	r24
    1d66:	e1 f7       	brne	.-8      	; 0x1d60 <main+0xac>
	/******/
	char Menu='1'; // Main menu selector
	float value=0;
	uint8_t i=0;
	uint32_t itmp=0;
	tmp=0;
    1d68:	10 92 f1 02 	sts	0x02F1, r1	; 0x8002f1 <tmp>
    1d6c:	10 92 f2 02 	sts	0x02F2, r1	; 0x8002f2 <tmp+0x1>
    1d70:	10 92 f3 02 	sts	0x02F3, r1	; 0x8002f3 <tmp+0x2>
    1d74:	10 92 f4 02 	sts	0x02F4, r1	; 0x8002f4 <tmp+0x3>
	/***Parameters timers***/
	//vector[0]=255;
	//vector[1]=255;
	//vector[2]=255;
	//uint8_t* ptr=vector;
	timer0.compoutmode(1);
    1d78:	a5 96       	adiw	r28, 0x25	; 37
    1d7a:	ee ad       	ldd	r30, Y+62	; 0x3e
    1d7c:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d7e:	a5 97       	sbiw	r28, 0x25	; 37
    1d80:	81 e0       	ldi	r24, 0x01	; 1
    1d82:	09 95       	icall
	timer0.compare(79);// 1 -> 159 -> 20us, 1 -> 79 -> 10 us, 8 -> 99 -> 100 us
    1d84:	ab 96       	adiw	r28, 0x2b	; 43
    1d86:	ee ad       	ldd	r30, Y+62	; 0x3e
    1d88:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d8a:	ab 97       	sbiw	r28, 0x2b	; 43
    1d8c:	8f e4       	ldi	r24, 0x4F	; 79
    1d8e:	09 95       	icall
	timer0.start(1);// 1 -> 32 us , 8 -> 256 us , 32 64 128 256 1024
    1d90:	e1 96       	adiw	r28, 0x31	; 49
    1d92:	ee ad       	ldd	r30, Y+62	; 0x3e
    1d94:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d96:	e1 97       	sbiw	r28, 0x31	; 49
    1d98:	81 e0       	ldi	r24, 0x01	; 1
    1d9a:	90 e0       	ldi	r25, 0x00	; 0
    1d9c:	09 95       	icall
	
	timer1.compareA(50);
    1d9e:	eb 96       	adiw	r28, 0x3b	; 59
    1da0:	ee ad       	ldd	r30, Y+62	; 0x3e
    1da2:	ff ad       	ldd	r31, Y+63	; 0x3f
    1da4:	eb 97       	sbiw	r28, 0x3b	; 59
    1da6:	82 e3       	ldi	r24, 0x32	; 50
    1da8:	90 e0       	ldi	r25, 0x00	; 0
    1daa:	09 95       	icall
	timer1.compoutmodeA(1);
    1dac:	e5 96       	adiw	r28, 0x35	; 53
    1dae:	ee ad       	ldd	r30, Y+62	; 0x3e
    1db0:	ff ad       	ldd	r31, Y+63	; 0x3f
    1db2:	e5 97       	sbiw	r28, 0x35	; 53
    1db4:	81 e0       	ldi	r24, 0x01	; 1
    1db6:	09 95       	icall
	timer1.start(256);
    1db8:	c1 58       	subi	r28, 0x81	; 129
    1dba:	df 4f       	sbci	r29, 0xFF	; 255
    1dbc:	e8 81       	ld	r30, Y
    1dbe:	f9 81       	ldd	r31, Y+1	; 0x01
    1dc0:	cf 57       	subi	r28, 0x7F	; 127
    1dc2:	d0 40       	sbci	r29, 0x00	; 0
    1dc4:	80 e0       	ldi	r24, 0x00	; 0
    1dc6:	91 e0       	ldi	r25, 0x01	; 1
    1dc8:	09 95       	icall
	hx.set_amplify(&hx,128); // 32 64 128
    1dca:	e0 91 32 03 	lds	r30, 0x0332	; 0x800332 <hx+0x29>
    1dce:	f0 91 33 03 	lds	r31, 0x0333	; 0x800333 <hx+0x2a>
    1dd2:	60 e8       	ldi	r22, 0x80	; 128
    1dd4:	89 e0       	ldi	r24, 0x09	; 9
    1dd6:	93 e0       	ldi	r25, 0x03	; 3
    1dd8:	09 95       	icall
	hx = HX711enable(&DDRF, &PINF, &PORTF, 6, 7);
	/******/
	char Menu='1'; // Main menu selector
	float value=0;
	uint8_t i=0;
	uint32_t itmp=0;
    1dda:	81 2c       	mov	r8, r1
    1ddc:	91 2c       	mov	r9, r1
    1dde:	54 01       	movw	r10, r8
	TIMER_COUNTER1 timer1 = TIMER_COUNTER1enable(4,0);
	hx = HX711enable(&DDRF, &PINF, &PORTF, 6, 7);
	/******/
	char Menu='1'; // Main menu selector
	float value=0;
	uint8_t i=0;
    1de0:	10 e0       	ldi	r17, 0x00	; 0
	TIMER_COUNTER0 timer0 = TIMER_COUNTER0enable(2,2); //2,2
	TIMER_COUNTER1 timer1 = TIMER_COUNTER1enable(4,0);
	hx = HX711enable(&DDRF, &PINF, &PORTF, 6, 7);
	/******/
	char Menu='1'; // Main menu selector
	float value=0;
    1de2:	c0 55       	subi	r28, 0x50	; 80
    1de4:	df 4f       	sbci	r29, 0xFF	; 255
    1de6:	18 82       	st	Y, r1
    1de8:	19 82       	std	Y+1, r1	; 0x01
    1dea:	1a 82       	std	Y+2, r1	; 0x02
    1dec:	1b 82       	std	Y+3, r1	; 0x03
    1dee:	c0 5b       	subi	r28, 0xB0	; 176
    1df0:	d0 40       	sbci	r29, 0x00	; 0
				//if(!strcmp(keypad.get().string,"B")){Menu='3';keypad.flush();lcd0.clear();break;}					
		
				
				// my average function
				/**/
				if(hx.trigger){
    1df2:	0f 2e       	mov	r0, r31
    1df4:	f9 e0       	ldi	r31, 0x09	; 9
    1df6:	ef 2e       	mov	r14, r31
    1df8:	f3 e0       	ldi	r31, 0x03	; 3
    1dfa:	ff 2e       	mov	r15, r31
    1dfc:	f0 2d       	mov	r31, r0
	hx.set_amplify(&hx,128); // 32 64 128
	/**********/
	//TODO:: Please write your application code
	while(TRUE){
		/***PREAMBLE***/
		lcd0.reboot();
    1dfe:	a3 96       	adiw	r28, 0x23	; 35
    1e00:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e02:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e04:	a3 97       	sbiw	r28, 0x23	; 35
    1e06:	09 95       	icall
				//if(!strcmp(keypad.get().string,"B")){Menu='3';keypad.flush();lcd0.clear();break;}					
		
				
				// my average function
				/**/
				if(hx.trigger){
    1e08:	f7 01       	movw	r30, r14
    1e0a:	81 81       	ldd	r24, Z+1	; 0x01
    1e0c:	88 23       	and	r24, r24
    1e0e:	09 f4       	brne	.+2      	; 0x1e12 <main+0x15e>
    1e10:	4f c0       	rjmp	.+158    	; 0x1eb0 <main+0x1fc>
					if(i<average_n){
    1e12:	13 30       	cpi	r17, 0x03	; 3
    1e14:	30 f5       	brcc	.+76     	; 0x1e62 <main+0x1ae>
						itmp+=tmp;
    1e16:	80 91 f1 02 	lds	r24, 0x02F1	; 0x8002f1 <tmp>
    1e1a:	90 91 f2 02 	lds	r25, 0x02F2	; 0x8002f2 <tmp+0x1>
    1e1e:	a0 91 f3 02 	lds	r26, 0x02F3	; 0x8002f3 <tmp+0x2>
    1e22:	b0 91 f4 02 	lds	r27, 0x02F4	; 0x8002f4 <tmp+0x3>
    1e26:	88 0e       	add	r8, r24
    1e28:	99 1e       	adc	r9, r25
    1e2a:	aa 1e       	adc	r10, r26
    1e2c:	bb 1e       	adc	r11, r27
						i++;
    1e2e:	1f 5f       	subi	r17, 0xFF	; 255
						lcd0.gotoxy(3,0);
    1e30:	60 e0       	ldi	r22, 0x00	; 0
    1e32:	70 e0       	ldi	r23, 0x00	; 0
    1e34:	83 e0       	ldi	r24, 0x03	; 3
    1e36:	90 e0       	ldi	r25, 0x00	; 0
    1e38:	f1 01       	movw	r30, r2
    1e3a:	09 95       	icall
						lcd0.string_size(function.i32toa(tmp),3);
    1e3c:	60 91 f1 02 	lds	r22, 0x02F1	; 0x8002f1 <tmp>
    1e40:	70 91 f2 02 	lds	r23, 0x02F2	; 0x8002f2 <tmp+0x1>
    1e44:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <tmp+0x2>
    1e48:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <tmp+0x3>
    1e4c:	ca 54       	subi	r28, 0x4A	; 74
    1e4e:	df 4f       	sbci	r29, 0xFF	; 255
    1e50:	e8 81       	ld	r30, Y
    1e52:	f9 81       	ldd	r31, Y+1	; 0x01
    1e54:	c6 5b       	subi	r28, 0xB6	; 182
    1e56:	d0 40       	sbci	r29, 0x00	; 0
    1e58:	09 95       	icall
    1e5a:	63 e0       	ldi	r22, 0x03	; 3
    1e5c:	f6 01       	movw	r30, r12
    1e5e:	09 95       	icall
    1e60:	25 c0       	rjmp	.+74     	; 0x1eac <main+0x1f8>
					}else{
						i=0;
						value=itmp/average_n;
    1e62:	c5 01       	movw	r24, r10
    1e64:	b4 01       	movw	r22, r8
    1e66:	2b ea       	ldi	r18, 0xAB	; 171
    1e68:	3a ea       	ldi	r19, 0xAA	; 170
    1e6a:	4a ea       	ldi	r20, 0xAA	; 170
    1e6c:	5a ea       	ldi	r21, 0xAA	; 170
    1e6e:	fe d4       	rcall	.+2556   	; 0x286c <__umulsidi3>
    1e70:	00 e2       	ldi	r16, 0x20	; 32
    1e72:	25 d5       	rcall	.+2634   	; 0x28be <__lshrdi3>
    1e74:	42 2e       	mov	r4, r18
    1e76:	53 2e       	mov	r5, r19
    1e78:	64 2e       	mov	r6, r20
    1e7a:	75 2e       	mov	r7, r21
    1e7c:	c3 01       	movw	r24, r6
    1e7e:	b2 01       	movw	r22, r4
    1e80:	96 95       	lsr	r25
    1e82:	87 95       	ror	r24
    1e84:	77 95       	ror	r23
    1e86:	67 95       	ror	r22
    1e88:	e1 d1       	rcall	.+962    	; 0x224c <__floatunsisf>
    1e8a:	c0 55       	subi	r28, 0x50	; 80
    1e8c:	df 4f       	sbci	r29, 0xFF	; 255
    1e8e:	68 83       	st	Y, r22
    1e90:	79 83       	std	Y+1, r23	; 0x01
    1e92:	8a 83       	std	Y+2, r24	; 0x02
    1e94:	9b 83       	std	Y+3, r25	; 0x03
    1e96:	c0 5b       	subi	r28, 0xB0	; 176
    1e98:	d0 40       	sbci	r29, 0x00	; 0
						itmp=0;
						itmp+=tmp;
    1e9a:	80 90 f1 02 	lds	r8, 0x02F1	; 0x8002f1 <tmp>
    1e9e:	90 90 f2 02 	lds	r9, 0x02F2	; 0x8002f2 <tmp+0x1>
    1ea2:	a0 90 f3 02 	lds	r10, 0x02F3	; 0x8002f3 <tmp+0x2>
    1ea6:	b0 90 f4 02 	lds	r11, 0x02F4	; 0x8002f4 <tmp+0x3>
						i++;
    1eaa:	11 e0       	ldi	r17, 0x01	; 1
					}
					hx.trigger=ZERO;
    1eac:	f7 01       	movw	r30, r14
    1eae:	11 82       	std	Z+1, r1	; 0x01
				}
				/**/
				//value=tmp;
				
				lcd0.gotoxy(0,0);
    1eb0:	60 e0       	ldi	r22, 0x00	; 0
    1eb2:	70 e0       	ldi	r23, 0x00	; 0
    1eb4:	80 e0       	ldi	r24, 0x00	; 0
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	f1 01       	movw	r30, r2
    1eba:	09 95       	icall
				lcd0.string_size(function.i32toa(tmp), 8); lcd0.string_size("raw", 3);
    1ebc:	60 91 f1 02 	lds	r22, 0x02F1	; 0x8002f1 <tmp>
    1ec0:	70 91 f2 02 	lds	r23, 0x02F2	; 0x8002f2 <tmp+0x1>
    1ec4:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <tmp+0x2>
    1ec8:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <tmp+0x3>
    1ecc:	ca 54       	subi	r28, 0x4A	; 74
    1ece:	df 4f       	sbci	r29, 0xFF	; 255
    1ed0:	e8 81       	ld	r30, Y
    1ed2:	f9 81       	ldd	r31, Y+1	; 0x01
    1ed4:	c6 5b       	subi	r28, 0xB6	; 182
    1ed6:	d0 40       	sbci	r29, 0x00	; 0
    1ed8:	09 95       	icall
    1eda:	68 e0       	ldi	r22, 0x08	; 8
    1edc:	f6 01       	movw	r30, r12
    1ede:	09 95       	icall
    1ee0:	63 e0       	ldi	r22, 0x03	; 3
    1ee2:	80 e0       	ldi	r24, 0x00	; 0
    1ee4:	91 e0       	ldi	r25, 0x01	; 1
    1ee6:	f6 01       	movw	r30, r12
    1ee8:	09 95       	icall
				lcd0.gotoxy(1,0);
    1eea:	60 e0       	ldi	r22, 0x00	; 0
    1eec:	70 e0       	ldi	r23, 0x00	; 0
    1eee:	81 e0       	ldi	r24, 0x01	; 1
    1ef0:	90 e0       	ldi	r25, 0x00	; 0
    1ef2:	f1 01       	movw	r30, r2
				lcd0.string_size(function.ftoa((value-hx.cal.offset_64)/hx.cal.divfactor_64,result,0), 8); lcd0.string_size("gram", 4);
    1ef4:	09 95       	icall
    1ef6:	f7 01       	movw	r30, r14
    1ef8:	62 89       	ldd	r22, Z+18	; 0x12
    1efa:	73 89       	ldd	r23, Z+19	; 0x13
    1efc:	84 89       	ldd	r24, Z+20	; 0x14
    1efe:	95 89       	ldd	r25, Z+21	; 0x15
    1f00:	a7 d1       	rcall	.+846    	; 0x2250 <__floatsisf>
    1f02:	9b 01       	movw	r18, r22
    1f04:	ac 01       	movw	r20, r24
    1f06:	c0 55       	subi	r28, 0x50	; 80
    1f08:	df 4f       	sbci	r29, 0xFF	; 255
    1f0a:	68 81       	ld	r22, Y
    1f0c:	79 81       	ldd	r23, Y+1	; 0x01
    1f0e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f10:	9b 81       	ldd	r25, Y+3	; 0x03
    1f12:	c0 5b       	subi	r28, 0xB0	; 176
    1f14:	d0 40       	sbci	r29, 0x00	; 0
    1f16:	98 d0       	rcall	.+304    	; 0x2048 <__subsf3>
    1f18:	2b 01       	movw	r4, r22
    1f1a:	3c 01       	movw	r6, r24
    1f1c:	f7 01       	movw	r30, r14
    1f1e:	65 8d       	ldd	r22, Z+29	; 0x1d
    1f20:	70 e0       	ldi	r23, 0x00	; 0
    1f22:	80 e0       	ldi	r24, 0x00	; 0
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	94 d1       	rcall	.+808    	; 0x2250 <__floatsisf>
    1f28:	9b 01       	movw	r18, r22
    1f2a:	ac 01       	movw	r20, r24
    1f2c:	c3 01       	movw	r24, r6
    1f2e:	b2 01       	movw	r22, r4
    1f30:	f4 d0       	rcall	.+488    	; 0x211a <__divsf3>
    1f32:	20 e0       	ldi	r18, 0x00	; 0
    1f34:	30 e0       	ldi	r19, 0x00	; 0
    1f36:	45 ef       	ldi	r20, 0xF5	; 245
    1f38:	52 e0       	ldi	r21, 0x02	; 2
    1f3a:	cc 54       	subi	r28, 0x4C	; 76
    1f3c:	df 4f       	sbci	r29, 0xFF	; 255
    1f3e:	e8 81       	ld	r30, Y
    1f40:	f9 81       	ldd	r31, Y+1	; 0x01
    1f42:	c4 5b       	subi	r28, 0xB4	; 180
    1f44:	d0 40       	sbci	r29, 0x00	; 0
    1f46:	09 95       	icall
    1f48:	68 e0       	ldi	r22, 0x08	; 8
    1f4a:	f6 01       	movw	r30, r12
    1f4c:	09 95       	icall
    1f4e:	64 e0       	ldi	r22, 0x04	; 4
    1f50:	84 e0       	ldi	r24, 0x04	; 4
    1f52:	91 e0       	ldi	r25, 0x01	; 1
    1f54:	f6 01       	movw	r30, r12
    1f56:	09 95       	icall
				lcd0.gotoxy(2,0);
    1f58:	60 e0       	ldi	r22, 0x00	; 0
    1f5a:	70 e0       	ldi	r23, 0x00	; 0
    1f5c:	82 e0       	ldi	r24, 0x02	; 2
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	f1 01       	movw	r30, r2
				lcd0.string_size(function.ftoa((value-hx.cal.offset_128)/hx.cal.divfactor_128,result,0), 8); lcd0.string_size("gram", 4);
    1f62:	09 95       	icall
    1f64:	f7 01       	movw	r30, r14
    1f66:	66 89       	ldd	r22, Z+22	; 0x16
    1f68:	77 89       	ldd	r23, Z+23	; 0x17
    1f6a:	80 8d       	ldd	r24, Z+24	; 0x18
    1f6c:	91 8d       	ldd	r25, Z+25	; 0x19
    1f6e:	70 d1       	rcall	.+736    	; 0x2250 <__floatsisf>
    1f70:	9b 01       	movw	r18, r22
    1f72:	ac 01       	movw	r20, r24
    1f74:	c0 55       	subi	r28, 0x50	; 80
    1f76:	df 4f       	sbci	r29, 0xFF	; 255
    1f78:	68 81       	ld	r22, Y
    1f7a:	79 81       	ldd	r23, Y+1	; 0x01
    1f7c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f7e:	9b 81       	ldd	r25, Y+3	; 0x03
    1f80:	c0 5b       	subi	r28, 0xB0	; 176
    1f82:	d0 40       	sbci	r29, 0x00	; 0
    1f84:	61 d0       	rcall	.+194    	; 0x2048 <__subsf3>
    1f86:	2b 01       	movw	r4, r22
    1f88:	3c 01       	movw	r6, r24
    1f8a:	f7 01       	movw	r30, r14
    1f8c:	60 a1       	ldd	r22, Z+32	; 0x20
    1f8e:	70 e0       	ldi	r23, 0x00	; 0
    1f90:	80 e0       	ldi	r24, 0x00	; 0
    1f92:	90 e0       	ldi	r25, 0x00	; 0
    1f94:	5d d1       	rcall	.+698    	; 0x2250 <__floatsisf>
    1f96:	9b 01       	movw	r18, r22
    1f98:	ac 01       	movw	r20, r24
    1f9a:	c3 01       	movw	r24, r6
    1f9c:	b2 01       	movw	r22, r4
    1f9e:	bd d0       	rcall	.+378    	; 0x211a <__divsf3>
    1fa0:	20 e0       	ldi	r18, 0x00	; 0
    1fa2:	30 e0       	ldi	r19, 0x00	; 0
    1fa4:	45 ef       	ldi	r20, 0xF5	; 245
    1fa6:	52 e0       	ldi	r21, 0x02	; 2
    1fa8:	cc 54       	subi	r28, 0x4C	; 76
    1faa:	df 4f       	sbci	r29, 0xFF	; 255
    1fac:	e8 81       	ld	r30, Y
    1fae:	f9 81       	ldd	r31, Y+1	; 0x01
    1fb0:	c4 5b       	subi	r28, 0xB4	; 180
    1fb2:	d0 40       	sbci	r29, 0x00	; 0
    1fb4:	09 95       	icall
    1fb6:	68 e0       	ldi	r22, 0x08	; 8
    1fb8:	f6 01       	movw	r30, r12
    1fba:	09 95       	icall
    1fbc:	64 e0       	ldi	r22, 0x04	; 4
    1fbe:	84 e0       	ldi	r24, 0x04	; 4
    1fc0:	91 e0       	ldi	r25, 0x01	; 1
    1fc2:	f6 01       	movw	r30, r12
    1fc4:	09 95       	icall
				
				//(value-73990)/46
					
				break;
    1fc6:	1b cf       	rjmp	.-458    	; 0x1dfe <main+0x14a>

00001fc8 <__vector_15>:
}
/*
** interrupt
*/
ISR(TIMER0_COMP_vect)
{
    1fc8:	1f 92       	push	r1
    1fca:	0f 92       	push	r0
    1fcc:	0f b6       	in	r0, 0x3f	; 63
    1fce:	0f 92       	push	r0
    1fd0:	11 24       	eor	r1, r1
    1fd2:	0b b6       	in	r0, 0x3b	; 59
    1fd4:	0f 92       	push	r0
    1fd6:	2f 93       	push	r18
    1fd8:	3f 93       	push	r19
    1fda:	4f 93       	push	r20
    1fdc:	5f 93       	push	r21
    1fde:	6f 93       	push	r22
    1fe0:	7f 93       	push	r23
    1fe2:	8f 93       	push	r24
    1fe4:	9f 93       	push	r25
    1fe6:	af 93       	push	r26
    1fe8:	bf 93       	push	r27
    1fea:	cf 93       	push	r28
    1fec:	ef 93       	push	r30
    1fee:	ff 93       	push	r31
	/***Block other interrupts during this procedure***/
	uint8_t Sreg;
	Sreg=SREG;
    1ff0:	cf b7       	in	r28, 0x3f	; 63
	SREG&=~(1<<7);
    1ff2:	8f b7       	in	r24, 0x3f	; 63
    1ff4:	8f 77       	andi	r24, 0x7F	; 127
    1ff6:	8f bf       	out	0x3f, r24	; 63
	/***Block other interrupts during this procedure***/	
	tmp=hx.readraw(&hx);
    1ff8:	e0 91 34 03 	lds	r30, 0x0334	; 0x800334 <hx+0x2b>
    1ffc:	f0 91 35 03 	lds	r31, 0x0335	; 0x800335 <hx+0x2c>
    2000:	89 e0       	ldi	r24, 0x09	; 9
    2002:	93 e0       	ldi	r25, 0x03	; 3
    2004:	09 95       	icall
    2006:	60 93 f1 02 	sts	0x02F1, r22	; 0x8002f1 <tmp>
    200a:	70 93 f2 02 	sts	0x02F2, r23	; 0x8002f2 <tmp+0x1>
    200e:	80 93 f3 02 	sts	0x02F3, r24	; 0x8002f3 <tmp+0x2>
    2012:	90 93 f4 02 	sts	0x02F4, r25	; 0x8002f4 <tmp+0x3>

	PORTC^=(1<<0);
    2016:	95 b3       	in	r25, 0x15	; 21
    2018:	81 e0       	ldi	r24, 0x01	; 1
    201a:	89 27       	eor	r24, r25
    201c:	85 bb       	out	0x15, r24	; 21
	
	/***enable interrupts again***/
	SREG=Sreg;
    201e:	cf bf       	out	0x3f, r28	; 63
}
    2020:	ff 91       	pop	r31
    2022:	ef 91       	pop	r30
    2024:	cf 91       	pop	r28
    2026:	bf 91       	pop	r27
    2028:	af 91       	pop	r26
    202a:	9f 91       	pop	r25
    202c:	8f 91       	pop	r24
    202e:	7f 91       	pop	r23
    2030:	6f 91       	pop	r22
    2032:	5f 91       	pop	r21
    2034:	4f 91       	pop	r20
    2036:	3f 91       	pop	r19
    2038:	2f 91       	pop	r18
    203a:	0f 90       	pop	r0
    203c:	0b be       	out	0x3b, r0	; 59
    203e:	0f 90       	pop	r0
    2040:	0f be       	out	0x3f, r0	; 63
    2042:	0f 90       	pop	r0
    2044:	1f 90       	pop	r1
    2046:	18 95       	reti

00002048 <__subsf3>:
    2048:	50 58       	subi	r21, 0x80	; 128

0000204a <__addsf3>:
    204a:	bb 27       	eor	r27, r27
    204c:	aa 27       	eor	r26, r26
    204e:	0e d0       	rcall	.+28     	; 0x206c <__addsf3x>
    2050:	75 c1       	rjmp	.+746    	; 0x233c <__fp_round>
    2052:	66 d1       	rcall	.+716    	; 0x2320 <__fp_pscA>
    2054:	30 f0       	brcs	.+12     	; 0x2062 <__addsf3+0x18>
    2056:	6b d1       	rcall	.+726    	; 0x232e <__fp_pscB>
    2058:	20 f0       	brcs	.+8      	; 0x2062 <__addsf3+0x18>
    205a:	31 f4       	brne	.+12     	; 0x2068 <__addsf3+0x1e>
    205c:	9f 3f       	cpi	r25, 0xFF	; 255
    205e:	11 f4       	brne	.+4      	; 0x2064 <__addsf3+0x1a>
    2060:	1e f4       	brtc	.+6      	; 0x2068 <__addsf3+0x1e>
    2062:	5b c1       	rjmp	.+694    	; 0x231a <__fp_nan>
    2064:	0e f4       	brtc	.+2      	; 0x2068 <__addsf3+0x1e>
    2066:	e0 95       	com	r30
    2068:	e7 fb       	bst	r30, 7
    206a:	51 c1       	rjmp	.+674    	; 0x230e <__fp_inf>

0000206c <__addsf3x>:
    206c:	e9 2f       	mov	r30, r25
    206e:	77 d1       	rcall	.+750    	; 0x235e <__fp_split3>
    2070:	80 f3       	brcs	.-32     	; 0x2052 <__addsf3+0x8>
    2072:	ba 17       	cp	r27, r26
    2074:	62 07       	cpc	r22, r18
    2076:	73 07       	cpc	r23, r19
    2078:	84 07       	cpc	r24, r20
    207a:	95 07       	cpc	r25, r21
    207c:	18 f0       	brcs	.+6      	; 0x2084 <__addsf3x+0x18>
    207e:	71 f4       	brne	.+28     	; 0x209c <__addsf3x+0x30>
    2080:	9e f5       	brtc	.+102    	; 0x20e8 <__addsf3x+0x7c>
    2082:	8f c1       	rjmp	.+798    	; 0x23a2 <__fp_zero>
    2084:	0e f4       	brtc	.+2      	; 0x2088 <__addsf3x+0x1c>
    2086:	e0 95       	com	r30
    2088:	0b 2e       	mov	r0, r27
    208a:	ba 2f       	mov	r27, r26
    208c:	a0 2d       	mov	r26, r0
    208e:	0b 01       	movw	r0, r22
    2090:	b9 01       	movw	r22, r18
    2092:	90 01       	movw	r18, r0
    2094:	0c 01       	movw	r0, r24
    2096:	ca 01       	movw	r24, r20
    2098:	a0 01       	movw	r20, r0
    209a:	11 24       	eor	r1, r1
    209c:	ff 27       	eor	r31, r31
    209e:	59 1b       	sub	r21, r25
    20a0:	99 f0       	breq	.+38     	; 0x20c8 <__addsf3x+0x5c>
    20a2:	59 3f       	cpi	r21, 0xF9	; 249
    20a4:	50 f4       	brcc	.+20     	; 0x20ba <__addsf3x+0x4e>
    20a6:	50 3e       	cpi	r21, 0xE0	; 224
    20a8:	68 f1       	brcs	.+90     	; 0x2104 <__addsf3x+0x98>
    20aa:	1a 16       	cp	r1, r26
    20ac:	f0 40       	sbci	r31, 0x00	; 0
    20ae:	a2 2f       	mov	r26, r18
    20b0:	23 2f       	mov	r18, r19
    20b2:	34 2f       	mov	r19, r20
    20b4:	44 27       	eor	r20, r20
    20b6:	58 5f       	subi	r21, 0xF8	; 248
    20b8:	f3 cf       	rjmp	.-26     	; 0x20a0 <__addsf3x+0x34>
    20ba:	46 95       	lsr	r20
    20bc:	37 95       	ror	r19
    20be:	27 95       	ror	r18
    20c0:	a7 95       	ror	r26
    20c2:	f0 40       	sbci	r31, 0x00	; 0
    20c4:	53 95       	inc	r21
    20c6:	c9 f7       	brne	.-14     	; 0x20ba <__addsf3x+0x4e>
    20c8:	7e f4       	brtc	.+30     	; 0x20e8 <__addsf3x+0x7c>
    20ca:	1f 16       	cp	r1, r31
    20cc:	ba 0b       	sbc	r27, r26
    20ce:	62 0b       	sbc	r22, r18
    20d0:	73 0b       	sbc	r23, r19
    20d2:	84 0b       	sbc	r24, r20
    20d4:	ba f0       	brmi	.+46     	; 0x2104 <__addsf3x+0x98>
    20d6:	91 50       	subi	r25, 0x01	; 1
    20d8:	a1 f0       	breq	.+40     	; 0x2102 <__addsf3x+0x96>
    20da:	ff 0f       	add	r31, r31
    20dc:	bb 1f       	adc	r27, r27
    20de:	66 1f       	adc	r22, r22
    20e0:	77 1f       	adc	r23, r23
    20e2:	88 1f       	adc	r24, r24
    20e4:	c2 f7       	brpl	.-16     	; 0x20d6 <__addsf3x+0x6a>
    20e6:	0e c0       	rjmp	.+28     	; 0x2104 <__addsf3x+0x98>
    20e8:	ba 0f       	add	r27, r26
    20ea:	62 1f       	adc	r22, r18
    20ec:	73 1f       	adc	r23, r19
    20ee:	84 1f       	adc	r24, r20
    20f0:	48 f4       	brcc	.+18     	; 0x2104 <__addsf3x+0x98>
    20f2:	87 95       	ror	r24
    20f4:	77 95       	ror	r23
    20f6:	67 95       	ror	r22
    20f8:	b7 95       	ror	r27
    20fa:	f7 95       	ror	r31
    20fc:	9e 3f       	cpi	r25, 0xFE	; 254
    20fe:	08 f0       	brcs	.+2      	; 0x2102 <__addsf3x+0x96>
    2100:	b3 cf       	rjmp	.-154    	; 0x2068 <__addsf3+0x1e>
    2102:	93 95       	inc	r25
    2104:	88 0f       	add	r24, r24
    2106:	08 f0       	brcs	.+2      	; 0x210a <__addsf3x+0x9e>
    2108:	99 27       	eor	r25, r25
    210a:	ee 0f       	add	r30, r30
    210c:	97 95       	ror	r25
    210e:	87 95       	ror	r24
    2110:	08 95       	ret

00002112 <__cmpsf2>:
    2112:	d9 d0       	rcall	.+434    	; 0x22c6 <__fp_cmp>
    2114:	08 f4       	brcc	.+2      	; 0x2118 <__cmpsf2+0x6>
    2116:	81 e0       	ldi	r24, 0x01	; 1
    2118:	08 95       	ret

0000211a <__divsf3>:
    211a:	0c d0       	rcall	.+24     	; 0x2134 <__divsf3x>
    211c:	0f c1       	rjmp	.+542    	; 0x233c <__fp_round>
    211e:	07 d1       	rcall	.+526    	; 0x232e <__fp_pscB>
    2120:	40 f0       	brcs	.+16     	; 0x2132 <__divsf3+0x18>
    2122:	fe d0       	rcall	.+508    	; 0x2320 <__fp_pscA>
    2124:	30 f0       	brcs	.+12     	; 0x2132 <__divsf3+0x18>
    2126:	21 f4       	brne	.+8      	; 0x2130 <__divsf3+0x16>
    2128:	5f 3f       	cpi	r21, 0xFF	; 255
    212a:	19 f0       	breq	.+6      	; 0x2132 <__divsf3+0x18>
    212c:	f0 c0       	rjmp	.+480    	; 0x230e <__fp_inf>
    212e:	51 11       	cpse	r21, r1
    2130:	39 c1       	rjmp	.+626    	; 0x23a4 <__fp_szero>
    2132:	f3 c0       	rjmp	.+486    	; 0x231a <__fp_nan>

00002134 <__divsf3x>:
    2134:	14 d1       	rcall	.+552    	; 0x235e <__fp_split3>
    2136:	98 f3       	brcs	.-26     	; 0x211e <__divsf3+0x4>

00002138 <__divsf3_pse>:
    2138:	99 23       	and	r25, r25
    213a:	c9 f3       	breq	.-14     	; 0x212e <__divsf3+0x14>
    213c:	55 23       	and	r21, r21
    213e:	b1 f3       	breq	.-20     	; 0x212c <__divsf3+0x12>
    2140:	95 1b       	sub	r25, r21
    2142:	55 0b       	sbc	r21, r21
    2144:	bb 27       	eor	r27, r27
    2146:	aa 27       	eor	r26, r26
    2148:	62 17       	cp	r22, r18
    214a:	73 07       	cpc	r23, r19
    214c:	84 07       	cpc	r24, r20
    214e:	38 f0       	brcs	.+14     	; 0x215e <__divsf3_pse+0x26>
    2150:	9f 5f       	subi	r25, 0xFF	; 255
    2152:	5f 4f       	sbci	r21, 0xFF	; 255
    2154:	22 0f       	add	r18, r18
    2156:	33 1f       	adc	r19, r19
    2158:	44 1f       	adc	r20, r20
    215a:	aa 1f       	adc	r26, r26
    215c:	a9 f3       	breq	.-22     	; 0x2148 <__divsf3_pse+0x10>
    215e:	33 d0       	rcall	.+102    	; 0x21c6 <__divsf3_pse+0x8e>
    2160:	0e 2e       	mov	r0, r30
    2162:	3a f0       	brmi	.+14     	; 0x2172 <__divsf3_pse+0x3a>
    2164:	e0 e8       	ldi	r30, 0x80	; 128
    2166:	30 d0       	rcall	.+96     	; 0x21c8 <__divsf3_pse+0x90>
    2168:	91 50       	subi	r25, 0x01	; 1
    216a:	50 40       	sbci	r21, 0x00	; 0
    216c:	e6 95       	lsr	r30
    216e:	00 1c       	adc	r0, r0
    2170:	ca f7       	brpl	.-14     	; 0x2164 <__divsf3_pse+0x2c>
    2172:	29 d0       	rcall	.+82     	; 0x21c6 <__divsf3_pse+0x8e>
    2174:	fe 2f       	mov	r31, r30
    2176:	27 d0       	rcall	.+78     	; 0x21c6 <__divsf3_pse+0x8e>
    2178:	66 0f       	add	r22, r22
    217a:	77 1f       	adc	r23, r23
    217c:	88 1f       	adc	r24, r24
    217e:	bb 1f       	adc	r27, r27
    2180:	26 17       	cp	r18, r22
    2182:	37 07       	cpc	r19, r23
    2184:	48 07       	cpc	r20, r24
    2186:	ab 07       	cpc	r26, r27
    2188:	b0 e8       	ldi	r27, 0x80	; 128
    218a:	09 f0       	breq	.+2      	; 0x218e <__divsf3_pse+0x56>
    218c:	bb 0b       	sbc	r27, r27
    218e:	80 2d       	mov	r24, r0
    2190:	bf 01       	movw	r22, r30
    2192:	ff 27       	eor	r31, r31
    2194:	93 58       	subi	r25, 0x83	; 131
    2196:	5f 4f       	sbci	r21, 0xFF	; 255
    2198:	2a f0       	brmi	.+10     	; 0x21a4 <__divsf3_pse+0x6c>
    219a:	9e 3f       	cpi	r25, 0xFE	; 254
    219c:	51 05       	cpc	r21, r1
    219e:	68 f0       	brcs	.+26     	; 0x21ba <__divsf3_pse+0x82>
    21a0:	b6 c0       	rjmp	.+364    	; 0x230e <__fp_inf>
    21a2:	00 c1       	rjmp	.+512    	; 0x23a4 <__fp_szero>
    21a4:	5f 3f       	cpi	r21, 0xFF	; 255
    21a6:	ec f3       	brlt	.-6      	; 0x21a2 <__divsf3_pse+0x6a>
    21a8:	98 3e       	cpi	r25, 0xE8	; 232
    21aa:	dc f3       	brlt	.-10     	; 0x21a2 <__divsf3_pse+0x6a>
    21ac:	86 95       	lsr	r24
    21ae:	77 95       	ror	r23
    21b0:	67 95       	ror	r22
    21b2:	b7 95       	ror	r27
    21b4:	f7 95       	ror	r31
    21b6:	9f 5f       	subi	r25, 0xFF	; 255
    21b8:	c9 f7       	brne	.-14     	; 0x21ac <__divsf3_pse+0x74>
    21ba:	88 0f       	add	r24, r24
    21bc:	91 1d       	adc	r25, r1
    21be:	96 95       	lsr	r25
    21c0:	87 95       	ror	r24
    21c2:	97 f9       	bld	r25, 7
    21c4:	08 95       	ret
    21c6:	e1 e0       	ldi	r30, 0x01	; 1
    21c8:	66 0f       	add	r22, r22
    21ca:	77 1f       	adc	r23, r23
    21cc:	88 1f       	adc	r24, r24
    21ce:	bb 1f       	adc	r27, r27
    21d0:	62 17       	cp	r22, r18
    21d2:	73 07       	cpc	r23, r19
    21d4:	84 07       	cpc	r24, r20
    21d6:	ba 07       	cpc	r27, r26
    21d8:	20 f0       	brcs	.+8      	; 0x21e2 <__divsf3_pse+0xaa>
    21da:	62 1b       	sub	r22, r18
    21dc:	73 0b       	sbc	r23, r19
    21de:	84 0b       	sbc	r24, r20
    21e0:	ba 0b       	sbc	r27, r26
    21e2:	ee 1f       	adc	r30, r30
    21e4:	88 f7       	brcc	.-30     	; 0x21c8 <__divsf3_pse+0x90>
    21e6:	e0 95       	com	r30
    21e8:	08 95       	ret

000021ea <__fixsfsi>:
    21ea:	04 d0       	rcall	.+8      	; 0x21f4 <__fixunssfsi>
    21ec:	68 94       	set
    21ee:	b1 11       	cpse	r27, r1
    21f0:	d9 c0       	rjmp	.+434    	; 0x23a4 <__fp_szero>
    21f2:	08 95       	ret

000021f4 <__fixunssfsi>:
    21f4:	bc d0       	rcall	.+376    	; 0x236e <__fp_splitA>
    21f6:	88 f0       	brcs	.+34     	; 0x221a <__fixunssfsi+0x26>
    21f8:	9f 57       	subi	r25, 0x7F	; 127
    21fa:	90 f0       	brcs	.+36     	; 0x2220 <__fixunssfsi+0x2c>
    21fc:	b9 2f       	mov	r27, r25
    21fe:	99 27       	eor	r25, r25
    2200:	b7 51       	subi	r27, 0x17	; 23
    2202:	a0 f0       	brcs	.+40     	; 0x222c <__fixunssfsi+0x38>
    2204:	d1 f0       	breq	.+52     	; 0x223a <__fixunssfsi+0x46>
    2206:	66 0f       	add	r22, r22
    2208:	77 1f       	adc	r23, r23
    220a:	88 1f       	adc	r24, r24
    220c:	99 1f       	adc	r25, r25
    220e:	1a f0       	brmi	.+6      	; 0x2216 <__fixunssfsi+0x22>
    2210:	ba 95       	dec	r27
    2212:	c9 f7       	brne	.-14     	; 0x2206 <__fixunssfsi+0x12>
    2214:	12 c0       	rjmp	.+36     	; 0x223a <__fixunssfsi+0x46>
    2216:	b1 30       	cpi	r27, 0x01	; 1
    2218:	81 f0       	breq	.+32     	; 0x223a <__fixunssfsi+0x46>
    221a:	c3 d0       	rcall	.+390    	; 0x23a2 <__fp_zero>
    221c:	b1 e0       	ldi	r27, 0x01	; 1
    221e:	08 95       	ret
    2220:	c0 c0       	rjmp	.+384    	; 0x23a2 <__fp_zero>
    2222:	67 2f       	mov	r22, r23
    2224:	78 2f       	mov	r23, r24
    2226:	88 27       	eor	r24, r24
    2228:	b8 5f       	subi	r27, 0xF8	; 248
    222a:	39 f0       	breq	.+14     	; 0x223a <__fixunssfsi+0x46>
    222c:	b9 3f       	cpi	r27, 0xF9	; 249
    222e:	cc f3       	brlt	.-14     	; 0x2222 <__fixunssfsi+0x2e>
    2230:	86 95       	lsr	r24
    2232:	77 95       	ror	r23
    2234:	67 95       	ror	r22
    2236:	b3 95       	inc	r27
    2238:	d9 f7       	brne	.-10     	; 0x2230 <__fixunssfsi+0x3c>
    223a:	3e f4       	brtc	.+14     	; 0x224a <__fixunssfsi+0x56>
    223c:	90 95       	com	r25
    223e:	80 95       	com	r24
    2240:	70 95       	com	r23
    2242:	61 95       	neg	r22
    2244:	7f 4f       	sbci	r23, 0xFF	; 255
    2246:	8f 4f       	sbci	r24, 0xFF	; 255
    2248:	9f 4f       	sbci	r25, 0xFF	; 255
    224a:	08 95       	ret

0000224c <__floatunsisf>:
    224c:	e8 94       	clt
    224e:	09 c0       	rjmp	.+18     	; 0x2262 <__floatsisf+0x12>

00002250 <__floatsisf>:
    2250:	97 fb       	bst	r25, 7
    2252:	3e f4       	brtc	.+14     	; 0x2262 <__floatsisf+0x12>
    2254:	90 95       	com	r25
    2256:	80 95       	com	r24
    2258:	70 95       	com	r23
    225a:	61 95       	neg	r22
    225c:	7f 4f       	sbci	r23, 0xFF	; 255
    225e:	8f 4f       	sbci	r24, 0xFF	; 255
    2260:	9f 4f       	sbci	r25, 0xFF	; 255
    2262:	99 23       	and	r25, r25
    2264:	a9 f0       	breq	.+42     	; 0x2290 <__floatsisf+0x40>
    2266:	f9 2f       	mov	r31, r25
    2268:	96 e9       	ldi	r25, 0x96	; 150
    226a:	bb 27       	eor	r27, r27
    226c:	93 95       	inc	r25
    226e:	f6 95       	lsr	r31
    2270:	87 95       	ror	r24
    2272:	77 95       	ror	r23
    2274:	67 95       	ror	r22
    2276:	b7 95       	ror	r27
    2278:	f1 11       	cpse	r31, r1
    227a:	f8 cf       	rjmp	.-16     	; 0x226c <__floatsisf+0x1c>
    227c:	fa f4       	brpl	.+62     	; 0x22bc <__floatsisf+0x6c>
    227e:	bb 0f       	add	r27, r27
    2280:	11 f4       	brne	.+4      	; 0x2286 <__floatsisf+0x36>
    2282:	60 ff       	sbrs	r22, 0
    2284:	1b c0       	rjmp	.+54     	; 0x22bc <__floatsisf+0x6c>
    2286:	6f 5f       	subi	r22, 0xFF	; 255
    2288:	7f 4f       	sbci	r23, 0xFF	; 255
    228a:	8f 4f       	sbci	r24, 0xFF	; 255
    228c:	9f 4f       	sbci	r25, 0xFF	; 255
    228e:	16 c0       	rjmp	.+44     	; 0x22bc <__floatsisf+0x6c>
    2290:	88 23       	and	r24, r24
    2292:	11 f0       	breq	.+4      	; 0x2298 <__floatsisf+0x48>
    2294:	96 e9       	ldi	r25, 0x96	; 150
    2296:	11 c0       	rjmp	.+34     	; 0x22ba <__floatsisf+0x6a>
    2298:	77 23       	and	r23, r23
    229a:	21 f0       	breq	.+8      	; 0x22a4 <__floatsisf+0x54>
    229c:	9e e8       	ldi	r25, 0x8E	; 142
    229e:	87 2f       	mov	r24, r23
    22a0:	76 2f       	mov	r23, r22
    22a2:	05 c0       	rjmp	.+10     	; 0x22ae <__floatsisf+0x5e>
    22a4:	66 23       	and	r22, r22
    22a6:	71 f0       	breq	.+28     	; 0x22c4 <__floatsisf+0x74>
    22a8:	96 e8       	ldi	r25, 0x86	; 134
    22aa:	86 2f       	mov	r24, r22
    22ac:	70 e0       	ldi	r23, 0x00	; 0
    22ae:	60 e0       	ldi	r22, 0x00	; 0
    22b0:	2a f0       	brmi	.+10     	; 0x22bc <__floatsisf+0x6c>
    22b2:	9a 95       	dec	r25
    22b4:	66 0f       	add	r22, r22
    22b6:	77 1f       	adc	r23, r23
    22b8:	88 1f       	adc	r24, r24
    22ba:	da f7       	brpl	.-10     	; 0x22b2 <__floatsisf+0x62>
    22bc:	88 0f       	add	r24, r24
    22be:	96 95       	lsr	r25
    22c0:	87 95       	ror	r24
    22c2:	97 f9       	bld	r25, 7
    22c4:	08 95       	ret

000022c6 <__fp_cmp>:
    22c6:	99 0f       	add	r25, r25
    22c8:	00 08       	sbc	r0, r0
    22ca:	55 0f       	add	r21, r21
    22cc:	aa 0b       	sbc	r26, r26
    22ce:	e0 e8       	ldi	r30, 0x80	; 128
    22d0:	fe ef       	ldi	r31, 0xFE	; 254
    22d2:	16 16       	cp	r1, r22
    22d4:	17 06       	cpc	r1, r23
    22d6:	e8 07       	cpc	r30, r24
    22d8:	f9 07       	cpc	r31, r25
    22da:	c0 f0       	brcs	.+48     	; 0x230c <__fp_cmp+0x46>
    22dc:	12 16       	cp	r1, r18
    22de:	13 06       	cpc	r1, r19
    22e0:	e4 07       	cpc	r30, r20
    22e2:	f5 07       	cpc	r31, r21
    22e4:	98 f0       	brcs	.+38     	; 0x230c <__fp_cmp+0x46>
    22e6:	62 1b       	sub	r22, r18
    22e8:	73 0b       	sbc	r23, r19
    22ea:	84 0b       	sbc	r24, r20
    22ec:	95 0b       	sbc	r25, r21
    22ee:	39 f4       	brne	.+14     	; 0x22fe <__fp_cmp+0x38>
    22f0:	0a 26       	eor	r0, r26
    22f2:	61 f0       	breq	.+24     	; 0x230c <__fp_cmp+0x46>
    22f4:	23 2b       	or	r18, r19
    22f6:	24 2b       	or	r18, r20
    22f8:	25 2b       	or	r18, r21
    22fa:	21 f4       	brne	.+8      	; 0x2304 <__fp_cmp+0x3e>
    22fc:	08 95       	ret
    22fe:	0a 26       	eor	r0, r26
    2300:	09 f4       	brne	.+2      	; 0x2304 <__fp_cmp+0x3e>
    2302:	a1 40       	sbci	r26, 0x01	; 1
    2304:	a6 95       	lsr	r26
    2306:	8f ef       	ldi	r24, 0xFF	; 255
    2308:	81 1d       	adc	r24, r1
    230a:	81 1d       	adc	r24, r1
    230c:	08 95       	ret

0000230e <__fp_inf>:
    230e:	97 f9       	bld	r25, 7
    2310:	9f 67       	ori	r25, 0x7F	; 127
    2312:	80 e8       	ldi	r24, 0x80	; 128
    2314:	70 e0       	ldi	r23, 0x00	; 0
    2316:	60 e0       	ldi	r22, 0x00	; 0
    2318:	08 95       	ret

0000231a <__fp_nan>:
    231a:	9f ef       	ldi	r25, 0xFF	; 255
    231c:	80 ec       	ldi	r24, 0xC0	; 192
    231e:	08 95       	ret

00002320 <__fp_pscA>:
    2320:	00 24       	eor	r0, r0
    2322:	0a 94       	dec	r0
    2324:	16 16       	cp	r1, r22
    2326:	17 06       	cpc	r1, r23
    2328:	18 06       	cpc	r1, r24
    232a:	09 06       	cpc	r0, r25
    232c:	08 95       	ret

0000232e <__fp_pscB>:
    232e:	00 24       	eor	r0, r0
    2330:	0a 94       	dec	r0
    2332:	12 16       	cp	r1, r18
    2334:	13 06       	cpc	r1, r19
    2336:	14 06       	cpc	r1, r20
    2338:	05 06       	cpc	r0, r21
    233a:	08 95       	ret

0000233c <__fp_round>:
    233c:	09 2e       	mov	r0, r25
    233e:	03 94       	inc	r0
    2340:	00 0c       	add	r0, r0
    2342:	11 f4       	brne	.+4      	; 0x2348 <__fp_round+0xc>
    2344:	88 23       	and	r24, r24
    2346:	52 f0       	brmi	.+20     	; 0x235c <__fp_round+0x20>
    2348:	bb 0f       	add	r27, r27
    234a:	40 f4       	brcc	.+16     	; 0x235c <__fp_round+0x20>
    234c:	bf 2b       	or	r27, r31
    234e:	11 f4       	brne	.+4      	; 0x2354 <__fp_round+0x18>
    2350:	60 ff       	sbrs	r22, 0
    2352:	04 c0       	rjmp	.+8      	; 0x235c <__fp_round+0x20>
    2354:	6f 5f       	subi	r22, 0xFF	; 255
    2356:	7f 4f       	sbci	r23, 0xFF	; 255
    2358:	8f 4f       	sbci	r24, 0xFF	; 255
    235a:	9f 4f       	sbci	r25, 0xFF	; 255
    235c:	08 95       	ret

0000235e <__fp_split3>:
    235e:	57 fd       	sbrc	r21, 7
    2360:	90 58       	subi	r25, 0x80	; 128
    2362:	44 0f       	add	r20, r20
    2364:	55 1f       	adc	r21, r21
    2366:	59 f0       	breq	.+22     	; 0x237e <__fp_splitA+0x10>
    2368:	5f 3f       	cpi	r21, 0xFF	; 255
    236a:	71 f0       	breq	.+28     	; 0x2388 <__fp_splitA+0x1a>
    236c:	47 95       	ror	r20

0000236e <__fp_splitA>:
    236e:	88 0f       	add	r24, r24
    2370:	97 fb       	bst	r25, 7
    2372:	99 1f       	adc	r25, r25
    2374:	61 f0       	breq	.+24     	; 0x238e <__fp_splitA+0x20>
    2376:	9f 3f       	cpi	r25, 0xFF	; 255
    2378:	79 f0       	breq	.+30     	; 0x2398 <__fp_splitA+0x2a>
    237a:	87 95       	ror	r24
    237c:	08 95       	ret
    237e:	12 16       	cp	r1, r18
    2380:	13 06       	cpc	r1, r19
    2382:	14 06       	cpc	r1, r20
    2384:	55 1f       	adc	r21, r21
    2386:	f2 cf       	rjmp	.-28     	; 0x236c <__fp_split3+0xe>
    2388:	46 95       	lsr	r20
    238a:	f1 df       	rcall	.-30     	; 0x236e <__fp_splitA>
    238c:	08 c0       	rjmp	.+16     	; 0x239e <__fp_splitA+0x30>
    238e:	16 16       	cp	r1, r22
    2390:	17 06       	cpc	r1, r23
    2392:	18 06       	cpc	r1, r24
    2394:	99 1f       	adc	r25, r25
    2396:	f1 cf       	rjmp	.-30     	; 0x237a <__fp_splitA+0xc>
    2398:	86 95       	lsr	r24
    239a:	71 05       	cpc	r23, r1
    239c:	61 05       	cpc	r22, r1
    239e:	08 94       	sec
    23a0:	08 95       	ret

000023a2 <__fp_zero>:
    23a2:	e8 94       	clt

000023a4 <__fp_szero>:
    23a4:	bb 27       	eor	r27, r27
    23a6:	66 27       	eor	r22, r22
    23a8:	77 27       	eor	r23, r23
    23aa:	cb 01       	movw	r24, r22
    23ac:	97 f9       	bld	r25, 7
    23ae:	08 95       	ret

000023b0 <__mulsf3>:
    23b0:	0b d0       	rcall	.+22     	; 0x23c8 <__mulsf3x>
    23b2:	c4 cf       	rjmp	.-120    	; 0x233c <__fp_round>
    23b4:	b5 df       	rcall	.-150    	; 0x2320 <__fp_pscA>
    23b6:	28 f0       	brcs	.+10     	; 0x23c2 <__mulsf3+0x12>
    23b8:	ba df       	rcall	.-140    	; 0x232e <__fp_pscB>
    23ba:	18 f0       	brcs	.+6      	; 0x23c2 <__mulsf3+0x12>
    23bc:	95 23       	and	r25, r21
    23be:	09 f0       	breq	.+2      	; 0x23c2 <__mulsf3+0x12>
    23c0:	a6 cf       	rjmp	.-180    	; 0x230e <__fp_inf>
    23c2:	ab cf       	rjmp	.-170    	; 0x231a <__fp_nan>
    23c4:	11 24       	eor	r1, r1
    23c6:	ee cf       	rjmp	.-36     	; 0x23a4 <__fp_szero>

000023c8 <__mulsf3x>:
    23c8:	ca df       	rcall	.-108    	; 0x235e <__fp_split3>
    23ca:	a0 f3       	brcs	.-24     	; 0x23b4 <__mulsf3+0x4>

000023cc <__mulsf3_pse>:
    23cc:	95 9f       	mul	r25, r21
    23ce:	d1 f3       	breq	.-12     	; 0x23c4 <__mulsf3+0x14>
    23d0:	95 0f       	add	r25, r21
    23d2:	50 e0       	ldi	r21, 0x00	; 0
    23d4:	55 1f       	adc	r21, r21
    23d6:	62 9f       	mul	r22, r18
    23d8:	f0 01       	movw	r30, r0
    23da:	72 9f       	mul	r23, r18
    23dc:	bb 27       	eor	r27, r27
    23de:	f0 0d       	add	r31, r0
    23e0:	b1 1d       	adc	r27, r1
    23e2:	63 9f       	mul	r22, r19
    23e4:	aa 27       	eor	r26, r26
    23e6:	f0 0d       	add	r31, r0
    23e8:	b1 1d       	adc	r27, r1
    23ea:	aa 1f       	adc	r26, r26
    23ec:	64 9f       	mul	r22, r20
    23ee:	66 27       	eor	r22, r22
    23f0:	b0 0d       	add	r27, r0
    23f2:	a1 1d       	adc	r26, r1
    23f4:	66 1f       	adc	r22, r22
    23f6:	82 9f       	mul	r24, r18
    23f8:	22 27       	eor	r18, r18
    23fa:	b0 0d       	add	r27, r0
    23fc:	a1 1d       	adc	r26, r1
    23fe:	62 1f       	adc	r22, r18
    2400:	73 9f       	mul	r23, r19
    2402:	b0 0d       	add	r27, r0
    2404:	a1 1d       	adc	r26, r1
    2406:	62 1f       	adc	r22, r18
    2408:	83 9f       	mul	r24, r19
    240a:	a0 0d       	add	r26, r0
    240c:	61 1d       	adc	r22, r1
    240e:	22 1f       	adc	r18, r18
    2410:	74 9f       	mul	r23, r20
    2412:	33 27       	eor	r19, r19
    2414:	a0 0d       	add	r26, r0
    2416:	61 1d       	adc	r22, r1
    2418:	23 1f       	adc	r18, r19
    241a:	84 9f       	mul	r24, r20
    241c:	60 0d       	add	r22, r0
    241e:	21 1d       	adc	r18, r1
    2420:	82 2f       	mov	r24, r18
    2422:	76 2f       	mov	r23, r22
    2424:	6a 2f       	mov	r22, r26
    2426:	11 24       	eor	r1, r1
    2428:	9f 57       	subi	r25, 0x7F	; 127
    242a:	50 40       	sbci	r21, 0x00	; 0
    242c:	8a f0       	brmi	.+34     	; 0x2450 <__mulsf3_pse+0x84>
    242e:	e1 f0       	breq	.+56     	; 0x2468 <__mulsf3_pse+0x9c>
    2430:	88 23       	and	r24, r24
    2432:	4a f0       	brmi	.+18     	; 0x2446 <__mulsf3_pse+0x7a>
    2434:	ee 0f       	add	r30, r30
    2436:	ff 1f       	adc	r31, r31
    2438:	bb 1f       	adc	r27, r27
    243a:	66 1f       	adc	r22, r22
    243c:	77 1f       	adc	r23, r23
    243e:	88 1f       	adc	r24, r24
    2440:	91 50       	subi	r25, 0x01	; 1
    2442:	50 40       	sbci	r21, 0x00	; 0
    2444:	a9 f7       	brne	.-22     	; 0x2430 <__mulsf3_pse+0x64>
    2446:	9e 3f       	cpi	r25, 0xFE	; 254
    2448:	51 05       	cpc	r21, r1
    244a:	70 f0       	brcs	.+28     	; 0x2468 <__mulsf3_pse+0x9c>
    244c:	60 cf       	rjmp	.-320    	; 0x230e <__fp_inf>
    244e:	aa cf       	rjmp	.-172    	; 0x23a4 <__fp_szero>
    2450:	5f 3f       	cpi	r21, 0xFF	; 255
    2452:	ec f3       	brlt	.-6      	; 0x244e <__mulsf3_pse+0x82>
    2454:	98 3e       	cpi	r25, 0xE8	; 232
    2456:	dc f3       	brlt	.-10     	; 0x244e <__mulsf3_pse+0x82>
    2458:	86 95       	lsr	r24
    245a:	77 95       	ror	r23
    245c:	67 95       	ror	r22
    245e:	b7 95       	ror	r27
    2460:	f7 95       	ror	r31
    2462:	e7 95       	ror	r30
    2464:	9f 5f       	subi	r25, 0xFF	; 255
    2466:	c1 f7       	brne	.-16     	; 0x2458 <__mulsf3_pse+0x8c>
    2468:	fe 2b       	or	r31, r30
    246a:	88 0f       	add	r24, r24
    246c:	91 1d       	adc	r25, r1
    246e:	96 95       	lsr	r25
    2470:	87 95       	ror	r24
    2472:	97 f9       	bld	r25, 7
    2474:	08 95       	ret

00002476 <pow>:
    2476:	fa 01       	movw	r30, r20
    2478:	ee 0f       	add	r30, r30
    247a:	ff 1f       	adc	r31, r31
    247c:	30 96       	adiw	r30, 0x00	; 0
    247e:	21 05       	cpc	r18, r1
    2480:	31 05       	cpc	r19, r1
    2482:	99 f1       	breq	.+102    	; 0x24ea <pow+0x74>
    2484:	61 15       	cp	r22, r1
    2486:	71 05       	cpc	r23, r1
    2488:	61 f4       	brne	.+24     	; 0x24a2 <pow+0x2c>
    248a:	80 38       	cpi	r24, 0x80	; 128
    248c:	bf e3       	ldi	r27, 0x3F	; 63
    248e:	9b 07       	cpc	r25, r27
    2490:	49 f1       	breq	.+82     	; 0x24e4 <pow+0x6e>
    2492:	68 94       	set
    2494:	90 38       	cpi	r25, 0x80	; 128
    2496:	81 05       	cpc	r24, r1
    2498:	61 f0       	breq	.+24     	; 0x24b2 <pow+0x3c>
    249a:	80 38       	cpi	r24, 0x80	; 128
    249c:	bf ef       	ldi	r27, 0xFF	; 255
    249e:	9b 07       	cpc	r25, r27
    24a0:	41 f0       	breq	.+16     	; 0x24b2 <pow+0x3c>
    24a2:	99 23       	and	r25, r25
    24a4:	42 f5       	brpl	.+80     	; 0x24f6 <pow+0x80>
    24a6:	ff 3f       	cpi	r31, 0xFF	; 255
    24a8:	e1 05       	cpc	r30, r1
    24aa:	31 05       	cpc	r19, r1
    24ac:	21 05       	cpc	r18, r1
    24ae:	11 f1       	breq	.+68     	; 0x24f4 <pow+0x7e>
    24b0:	e8 94       	clt
    24b2:	08 94       	sec
    24b4:	e7 95       	ror	r30
    24b6:	d9 01       	movw	r26, r18
    24b8:	aa 23       	and	r26, r26
    24ba:	29 f4       	brne	.+10     	; 0x24c6 <pow+0x50>
    24bc:	ab 2f       	mov	r26, r27
    24be:	be 2f       	mov	r27, r30
    24c0:	f8 5f       	subi	r31, 0xF8	; 248
    24c2:	d0 f3       	brcs	.-12     	; 0x24b8 <pow+0x42>
    24c4:	10 c0       	rjmp	.+32     	; 0x24e6 <pow+0x70>
    24c6:	ff 5f       	subi	r31, 0xFF	; 255
    24c8:	70 f4       	brcc	.+28     	; 0x24e6 <pow+0x70>
    24ca:	a6 95       	lsr	r26
    24cc:	e0 f7       	brcc	.-8      	; 0x24c6 <pow+0x50>
    24ce:	f7 39       	cpi	r31, 0x97	; 151
    24d0:	50 f0       	brcs	.+20     	; 0x24e6 <pow+0x70>
    24d2:	19 f0       	breq	.+6      	; 0x24da <pow+0x64>
    24d4:	ff 3a       	cpi	r31, 0xAF	; 175
    24d6:	38 f4       	brcc	.+14     	; 0x24e6 <pow+0x70>
    24d8:	9f 77       	andi	r25, 0x7F	; 127
    24da:	9f 93       	push	r25
    24dc:	0c d0       	rcall	.+24     	; 0x24f6 <pow+0x80>
    24de:	0f 90       	pop	r0
    24e0:	07 fc       	sbrc	r0, 7
    24e2:	90 58       	subi	r25, 0x80	; 128
    24e4:	08 95       	ret
    24e6:	3e f0       	brts	.+14     	; 0x24f6 <pow+0x80>
    24e8:	18 cf       	rjmp	.-464    	; 0x231a <__fp_nan>
    24ea:	60 e0       	ldi	r22, 0x00	; 0
    24ec:	70 e0       	ldi	r23, 0x00	; 0
    24ee:	80 e8       	ldi	r24, 0x80	; 128
    24f0:	9f e3       	ldi	r25, 0x3F	; 63
    24f2:	08 95       	ret
    24f4:	4f e7       	ldi	r20, 0x7F	; 127
    24f6:	9f 77       	andi	r25, 0x7F	; 127
    24f8:	5f 93       	push	r21
    24fa:	4f 93       	push	r20
    24fc:	3f 93       	push	r19
    24fe:	2f 93       	push	r18
    2500:	9e d0       	rcall	.+316    	; 0x263e <log>
    2502:	2f 91       	pop	r18
    2504:	3f 91       	pop	r19
    2506:	4f 91       	pop	r20
    2508:	5f 91       	pop	r21
    250a:	52 df       	rcall	.-348    	; 0x23b0 <__mulsf3>
    250c:	05 c0       	rjmp	.+10     	; 0x2518 <exp>
    250e:	19 f4       	brne	.+6      	; 0x2516 <pow+0xa0>
    2510:	0e f0       	brts	.+2      	; 0x2514 <pow+0x9e>
    2512:	fd ce       	rjmp	.-518    	; 0x230e <__fp_inf>
    2514:	46 cf       	rjmp	.-372    	; 0x23a2 <__fp_zero>
    2516:	01 cf       	rjmp	.-510    	; 0x231a <__fp_nan>

00002518 <exp>:
    2518:	2a df       	rcall	.-428    	; 0x236e <__fp_splitA>
    251a:	c8 f3       	brcs	.-14     	; 0x250e <pow+0x98>
    251c:	96 38       	cpi	r25, 0x86	; 134
    251e:	c0 f7       	brcc	.-16     	; 0x2510 <pow+0x9a>
    2520:	07 f8       	bld	r0, 7
    2522:	0f 92       	push	r0
    2524:	e8 94       	clt
    2526:	2b e3       	ldi	r18, 0x3B	; 59
    2528:	3a ea       	ldi	r19, 0xAA	; 170
    252a:	48 eb       	ldi	r20, 0xB8	; 184
    252c:	5f e7       	ldi	r21, 0x7F	; 127
    252e:	4e df       	rcall	.-356    	; 0x23cc <__mulsf3_pse>
    2530:	0f 92       	push	r0
    2532:	0f 92       	push	r0
    2534:	0f 92       	push	r0
    2536:	4d b7       	in	r20, 0x3d	; 61
    2538:	5e b7       	in	r21, 0x3e	; 62
    253a:	0f 92       	push	r0
    253c:	c0 d0       	rcall	.+384    	; 0x26be <modf>
    253e:	e2 ec       	ldi	r30, 0xC2	; 194
    2540:	f0 e0       	ldi	r31, 0x00	; 0
    2542:	16 d0       	rcall	.+44     	; 0x2570 <__fp_powser>
    2544:	4f 91       	pop	r20
    2546:	5f 91       	pop	r21
    2548:	ef 91       	pop	r30
    254a:	ff 91       	pop	r31
    254c:	e5 95       	asr	r30
    254e:	ee 1f       	adc	r30, r30
    2550:	ff 1f       	adc	r31, r31
    2552:	49 f0       	breq	.+18     	; 0x2566 <exp+0x4e>
    2554:	fe 57       	subi	r31, 0x7E	; 126
    2556:	e0 68       	ori	r30, 0x80	; 128
    2558:	44 27       	eor	r20, r20
    255a:	ee 0f       	add	r30, r30
    255c:	44 1f       	adc	r20, r20
    255e:	fa 95       	dec	r31
    2560:	e1 f7       	brne	.-8      	; 0x255a <exp+0x42>
    2562:	41 95       	neg	r20
    2564:	55 0b       	sbc	r21, r21
    2566:	32 d0       	rcall	.+100    	; 0x25cc <ldexp>
    2568:	0f 90       	pop	r0
    256a:	07 fe       	sbrs	r0, 7
    256c:	26 c0       	rjmp	.+76     	; 0x25ba <inverse>
    256e:	08 95       	ret

00002570 <__fp_powser>:
    2570:	df 93       	push	r29
    2572:	cf 93       	push	r28
    2574:	1f 93       	push	r17
    2576:	0f 93       	push	r16
    2578:	ff 92       	push	r15
    257a:	ef 92       	push	r14
    257c:	df 92       	push	r13
    257e:	7b 01       	movw	r14, r22
    2580:	8c 01       	movw	r16, r24
    2582:	68 94       	set
    2584:	05 c0       	rjmp	.+10     	; 0x2590 <__fp_powser+0x20>
    2586:	da 2e       	mov	r13, r26
    2588:	ef 01       	movw	r28, r30
    258a:	1e df       	rcall	.-452    	; 0x23c8 <__mulsf3x>
    258c:	fe 01       	movw	r30, r28
    258e:	e8 94       	clt
    2590:	a5 91       	lpm	r26, Z+
    2592:	25 91       	lpm	r18, Z+
    2594:	35 91       	lpm	r19, Z+
    2596:	45 91       	lpm	r20, Z+
    2598:	55 91       	lpm	r21, Z+
    259a:	ae f3       	brts	.-22     	; 0x2586 <__fp_powser+0x16>
    259c:	ef 01       	movw	r28, r30
    259e:	66 dd       	rcall	.-1332   	; 0x206c <__addsf3x>
    25a0:	fe 01       	movw	r30, r28
    25a2:	97 01       	movw	r18, r14
    25a4:	a8 01       	movw	r20, r16
    25a6:	da 94       	dec	r13
    25a8:	79 f7       	brne	.-34     	; 0x2588 <__fp_powser+0x18>
    25aa:	df 90       	pop	r13
    25ac:	ef 90       	pop	r14
    25ae:	ff 90       	pop	r15
    25b0:	0f 91       	pop	r16
    25b2:	1f 91       	pop	r17
    25b4:	cf 91       	pop	r28
    25b6:	df 91       	pop	r29
    25b8:	08 95       	ret

000025ba <inverse>:
    25ba:	9b 01       	movw	r18, r22
    25bc:	ac 01       	movw	r20, r24
    25be:	60 e0       	ldi	r22, 0x00	; 0
    25c0:	70 e0       	ldi	r23, 0x00	; 0
    25c2:	80 e8       	ldi	r24, 0x80	; 128
    25c4:	9f e3       	ldi	r25, 0x3F	; 63
    25c6:	a9 cd       	rjmp	.-1198   	; 0x211a <__divsf3>
    25c8:	a2 ce       	rjmp	.-700    	; 0x230e <__fp_inf>
    25ca:	ac c0       	rjmp	.+344    	; 0x2724 <__fp_mpack>

000025cc <ldexp>:
    25cc:	d0 de       	rcall	.-608    	; 0x236e <__fp_splitA>
    25ce:	e8 f3       	brcs	.-6      	; 0x25ca <inverse+0x10>
    25d0:	99 23       	and	r25, r25
    25d2:	d9 f3       	breq	.-10     	; 0x25ca <inverse+0x10>
    25d4:	94 0f       	add	r25, r20
    25d6:	51 1d       	adc	r21, r1
    25d8:	bb f3       	brvs	.-18     	; 0x25c8 <inverse+0xe>
    25da:	91 50       	subi	r25, 0x01	; 1
    25dc:	50 40       	sbci	r21, 0x00	; 0
    25de:	94 f0       	brlt	.+36     	; 0x2604 <ldexp+0x38>
    25e0:	59 f0       	breq	.+22     	; 0x25f8 <ldexp+0x2c>
    25e2:	88 23       	and	r24, r24
    25e4:	32 f0       	brmi	.+12     	; 0x25f2 <ldexp+0x26>
    25e6:	66 0f       	add	r22, r22
    25e8:	77 1f       	adc	r23, r23
    25ea:	88 1f       	adc	r24, r24
    25ec:	91 50       	subi	r25, 0x01	; 1
    25ee:	50 40       	sbci	r21, 0x00	; 0
    25f0:	c1 f7       	brne	.-16     	; 0x25e2 <ldexp+0x16>
    25f2:	9e 3f       	cpi	r25, 0xFE	; 254
    25f4:	51 05       	cpc	r21, r1
    25f6:	44 f7       	brge	.-48     	; 0x25c8 <inverse+0xe>
    25f8:	88 0f       	add	r24, r24
    25fa:	91 1d       	adc	r25, r1
    25fc:	96 95       	lsr	r25
    25fe:	87 95       	ror	r24
    2600:	97 f9       	bld	r25, 7
    2602:	08 95       	ret
    2604:	5f 3f       	cpi	r21, 0xFF	; 255
    2606:	ac f0       	brlt	.+42     	; 0x2632 <ldexp+0x66>
    2608:	98 3e       	cpi	r25, 0xE8	; 232
    260a:	9c f0       	brlt	.+38     	; 0x2632 <ldexp+0x66>
    260c:	bb 27       	eor	r27, r27
    260e:	86 95       	lsr	r24
    2610:	77 95       	ror	r23
    2612:	67 95       	ror	r22
    2614:	b7 95       	ror	r27
    2616:	08 f4       	brcc	.+2      	; 0x261a <ldexp+0x4e>
    2618:	b1 60       	ori	r27, 0x01	; 1
    261a:	93 95       	inc	r25
    261c:	c1 f7       	brne	.-16     	; 0x260e <ldexp+0x42>
    261e:	bb 0f       	add	r27, r27
    2620:	58 f7       	brcc	.-42     	; 0x25f8 <ldexp+0x2c>
    2622:	11 f4       	brne	.+4      	; 0x2628 <ldexp+0x5c>
    2624:	60 ff       	sbrs	r22, 0
    2626:	e8 cf       	rjmp	.-48     	; 0x25f8 <ldexp+0x2c>
    2628:	6f 5f       	subi	r22, 0xFF	; 255
    262a:	7f 4f       	sbci	r23, 0xFF	; 255
    262c:	8f 4f       	sbci	r24, 0xFF	; 255
    262e:	9f 4f       	sbci	r25, 0xFF	; 255
    2630:	e3 cf       	rjmp	.-58     	; 0x25f8 <ldexp+0x2c>
    2632:	b8 ce       	rjmp	.-656    	; 0x23a4 <__fp_szero>
    2634:	0e f0       	brts	.+2      	; 0x2638 <ldexp+0x6c>
    2636:	76 c0       	rjmp	.+236    	; 0x2724 <__fp_mpack>
    2638:	70 ce       	rjmp	.-800    	; 0x231a <__fp_nan>
    263a:	68 94       	set
    263c:	68 ce       	rjmp	.-816    	; 0x230e <__fp_inf>

0000263e <log>:
    263e:	97 de       	rcall	.-722    	; 0x236e <__fp_splitA>
    2640:	c8 f3       	brcs	.-14     	; 0x2634 <ldexp+0x68>
    2642:	99 23       	and	r25, r25
    2644:	d1 f3       	breq	.-12     	; 0x263a <ldexp+0x6e>
    2646:	c6 f3       	brts	.-16     	; 0x2638 <ldexp+0x6c>
    2648:	df 93       	push	r29
    264a:	cf 93       	push	r28
    264c:	1f 93       	push	r17
    264e:	0f 93       	push	r16
    2650:	ff 92       	push	r15
    2652:	c9 2f       	mov	r28, r25
    2654:	dd 27       	eor	r29, r29
    2656:	88 23       	and	r24, r24
    2658:	2a f0       	brmi	.+10     	; 0x2664 <log+0x26>
    265a:	21 97       	sbiw	r28, 0x01	; 1
    265c:	66 0f       	add	r22, r22
    265e:	77 1f       	adc	r23, r23
    2660:	88 1f       	adc	r24, r24
    2662:	da f7       	brpl	.-10     	; 0x265a <log+0x1c>
    2664:	20 e0       	ldi	r18, 0x00	; 0
    2666:	30 e0       	ldi	r19, 0x00	; 0
    2668:	40 e8       	ldi	r20, 0x80	; 128
    266a:	5f eb       	ldi	r21, 0xBF	; 191
    266c:	9f e3       	ldi	r25, 0x3F	; 63
    266e:	88 39       	cpi	r24, 0x98	; 152
    2670:	20 f0       	brcs	.+8      	; 0x267a <log+0x3c>
    2672:	80 3e       	cpi	r24, 0xE0	; 224
    2674:	30 f0       	brcs	.+12     	; 0x2682 <log+0x44>
    2676:	21 96       	adiw	r28, 0x01	; 1
    2678:	8f 77       	andi	r24, 0x7F	; 127
    267a:	e7 dc       	rcall	.-1586   	; 0x204a <__addsf3>
    267c:	ea ee       	ldi	r30, 0xEA	; 234
    267e:	f0 e0       	ldi	r31, 0x00	; 0
    2680:	03 c0       	rjmp	.+6      	; 0x2688 <log+0x4a>
    2682:	e3 dc       	rcall	.-1594   	; 0x204a <__addsf3>
    2684:	e7 e1       	ldi	r30, 0x17	; 23
    2686:	f1 e0       	ldi	r31, 0x01	; 1
    2688:	73 df       	rcall	.-282    	; 0x2570 <__fp_powser>
    268a:	8b 01       	movw	r16, r22
    268c:	be 01       	movw	r22, r28
    268e:	ec 01       	movw	r28, r24
    2690:	fb 2e       	mov	r15, r27
    2692:	6f 57       	subi	r22, 0x7F	; 127
    2694:	71 09       	sbc	r23, r1
    2696:	75 95       	asr	r23
    2698:	77 1f       	adc	r23, r23
    269a:	88 0b       	sbc	r24, r24
    269c:	99 0b       	sbc	r25, r25
    269e:	d8 dd       	rcall	.-1104   	; 0x2250 <__floatsisf>
    26a0:	28 e1       	ldi	r18, 0x18	; 24
    26a2:	32 e7       	ldi	r19, 0x72	; 114
    26a4:	41 e3       	ldi	r20, 0x31	; 49
    26a6:	5f e3       	ldi	r21, 0x3F	; 63
    26a8:	8f de       	rcall	.-738    	; 0x23c8 <__mulsf3x>
    26aa:	af 2d       	mov	r26, r15
    26ac:	98 01       	movw	r18, r16
    26ae:	ae 01       	movw	r20, r28
    26b0:	ff 90       	pop	r15
    26b2:	0f 91       	pop	r16
    26b4:	1f 91       	pop	r17
    26b6:	cf 91       	pop	r28
    26b8:	df 91       	pop	r29
    26ba:	d8 dc       	rcall	.-1616   	; 0x206c <__addsf3x>
    26bc:	3f ce       	rjmp	.-898    	; 0x233c <__fp_round>

000026be <modf>:
    26be:	fa 01       	movw	r30, r20
    26c0:	dc 01       	movw	r26, r24
    26c2:	aa 0f       	add	r26, r26
    26c4:	bb 1f       	adc	r27, r27
    26c6:	9b 01       	movw	r18, r22
    26c8:	ac 01       	movw	r20, r24
    26ca:	bf 57       	subi	r27, 0x7F	; 127
    26cc:	28 f4       	brcc	.+10     	; 0x26d8 <modf+0x1a>
    26ce:	22 27       	eor	r18, r18
    26d0:	33 27       	eor	r19, r19
    26d2:	44 27       	eor	r20, r20
    26d4:	50 78       	andi	r21, 0x80	; 128
    26d6:	1f c0       	rjmp	.+62     	; 0x2716 <modf+0x58>
    26d8:	b7 51       	subi	r27, 0x17	; 23
    26da:	88 f4       	brcc	.+34     	; 0x26fe <modf+0x40>
    26dc:	ab 2f       	mov	r26, r27
    26de:	00 24       	eor	r0, r0
    26e0:	46 95       	lsr	r20
    26e2:	37 95       	ror	r19
    26e4:	27 95       	ror	r18
    26e6:	01 1c       	adc	r0, r1
    26e8:	a3 95       	inc	r26
    26ea:	d2 f3       	brmi	.-12     	; 0x26e0 <modf+0x22>
    26ec:	00 20       	and	r0, r0
    26ee:	69 f0       	breq	.+26     	; 0x270a <modf+0x4c>
    26f0:	22 0f       	add	r18, r18
    26f2:	33 1f       	adc	r19, r19
    26f4:	44 1f       	adc	r20, r20
    26f6:	b3 95       	inc	r27
    26f8:	da f3       	brmi	.-10     	; 0x26f0 <modf+0x32>
    26fa:	0d d0       	rcall	.+26     	; 0x2716 <modf+0x58>
    26fc:	a5 cc       	rjmp	.-1718   	; 0x2048 <__subsf3>
    26fe:	61 30       	cpi	r22, 0x01	; 1
    2700:	71 05       	cpc	r23, r1
    2702:	a0 e8       	ldi	r26, 0x80	; 128
    2704:	8a 07       	cpc	r24, r26
    2706:	b9 46       	sbci	r27, 0x69	; 105
    2708:	30 f4       	brcc	.+12     	; 0x2716 <modf+0x58>
    270a:	9b 01       	movw	r18, r22
    270c:	ac 01       	movw	r20, r24
    270e:	66 27       	eor	r22, r22
    2710:	77 27       	eor	r23, r23
    2712:	88 27       	eor	r24, r24
    2714:	90 78       	andi	r25, 0x80	; 128
    2716:	30 96       	adiw	r30, 0x00	; 0
    2718:	21 f0       	breq	.+8      	; 0x2722 <modf+0x64>
    271a:	20 83       	st	Z, r18
    271c:	31 83       	std	Z+1, r19	; 0x01
    271e:	42 83       	std	Z+2, r20	; 0x02
    2720:	53 83       	std	Z+3, r21	; 0x03
    2722:	08 95       	ret

00002724 <__fp_mpack>:
    2724:	9f 3f       	cpi	r25, 0xFF	; 255
    2726:	31 f0       	breq	.+12     	; 0x2734 <__fp_mpack_finite+0xc>

00002728 <__fp_mpack_finite>:
    2728:	91 50       	subi	r25, 0x01	; 1
    272a:	20 f4       	brcc	.+8      	; 0x2734 <__fp_mpack_finite+0xc>
    272c:	87 95       	ror	r24
    272e:	77 95       	ror	r23
    2730:	67 95       	ror	r22
    2732:	b7 95       	ror	r27
    2734:	88 0f       	add	r24, r24
    2736:	91 1d       	adc	r25, r1
    2738:	96 95       	lsr	r25
    273a:	87 95       	ror	r24
    273c:	97 f9       	bld	r25, 7
    273e:	08 95       	ret

00002740 <__mulsi3>:
    2740:	db 01       	movw	r26, r22
    2742:	8f 93       	push	r24
    2744:	9f 93       	push	r25
    2746:	88 d0       	rcall	.+272    	; 0x2858 <__muluhisi3>
    2748:	bf 91       	pop	r27
    274a:	af 91       	pop	r26
    274c:	a2 9f       	mul	r26, r18
    274e:	80 0d       	add	r24, r0
    2750:	91 1d       	adc	r25, r1
    2752:	a3 9f       	mul	r26, r19
    2754:	90 0d       	add	r25, r0
    2756:	b2 9f       	mul	r27, r18
    2758:	90 0d       	add	r25, r0
    275a:	11 24       	eor	r1, r1
    275c:	08 95       	ret

0000275e <__udivmodhi4>:
    275e:	aa 1b       	sub	r26, r26
    2760:	bb 1b       	sub	r27, r27
    2762:	51 e1       	ldi	r21, 0x11	; 17
    2764:	07 c0       	rjmp	.+14     	; 0x2774 <__udivmodhi4_ep>

00002766 <__udivmodhi4_loop>:
    2766:	aa 1f       	adc	r26, r26
    2768:	bb 1f       	adc	r27, r27
    276a:	a6 17       	cp	r26, r22
    276c:	b7 07       	cpc	r27, r23
    276e:	10 f0       	brcs	.+4      	; 0x2774 <__udivmodhi4_ep>
    2770:	a6 1b       	sub	r26, r22
    2772:	b7 0b       	sbc	r27, r23

00002774 <__udivmodhi4_ep>:
    2774:	88 1f       	adc	r24, r24
    2776:	99 1f       	adc	r25, r25
    2778:	5a 95       	dec	r21
    277a:	a9 f7       	brne	.-22     	; 0x2766 <__udivmodhi4_loop>
    277c:	80 95       	com	r24
    277e:	90 95       	com	r25
    2780:	bc 01       	movw	r22, r24
    2782:	cd 01       	movw	r24, r26
    2784:	08 95       	ret

00002786 <__divmodhi4>:
    2786:	97 fb       	bst	r25, 7
    2788:	07 2e       	mov	r0, r23
    278a:	16 f4       	brtc	.+4      	; 0x2790 <__divmodhi4+0xa>
    278c:	00 94       	com	r0
    278e:	06 d0       	rcall	.+12     	; 0x279c <__divmodhi4_neg1>
    2790:	77 fd       	sbrc	r23, 7
    2792:	08 d0       	rcall	.+16     	; 0x27a4 <__divmodhi4_neg2>
    2794:	e4 df       	rcall	.-56     	; 0x275e <__udivmodhi4>
    2796:	07 fc       	sbrc	r0, 7
    2798:	05 d0       	rcall	.+10     	; 0x27a4 <__divmodhi4_neg2>
    279a:	3e f4       	brtc	.+14     	; 0x27aa <__divmodhi4_exit>

0000279c <__divmodhi4_neg1>:
    279c:	90 95       	com	r25
    279e:	81 95       	neg	r24
    27a0:	9f 4f       	sbci	r25, 0xFF	; 255
    27a2:	08 95       	ret

000027a4 <__divmodhi4_neg2>:
    27a4:	70 95       	com	r23
    27a6:	61 95       	neg	r22
    27a8:	7f 4f       	sbci	r23, 0xFF	; 255

000027aa <__divmodhi4_exit>:
    27aa:	08 95       	ret

000027ac <__udivmodsi4>:
    27ac:	a1 e2       	ldi	r26, 0x21	; 33
    27ae:	1a 2e       	mov	r1, r26
    27b0:	aa 1b       	sub	r26, r26
    27b2:	bb 1b       	sub	r27, r27
    27b4:	fd 01       	movw	r30, r26
    27b6:	0d c0       	rjmp	.+26     	; 0x27d2 <__udivmodsi4_ep>

000027b8 <__udivmodsi4_loop>:
    27b8:	aa 1f       	adc	r26, r26
    27ba:	bb 1f       	adc	r27, r27
    27bc:	ee 1f       	adc	r30, r30
    27be:	ff 1f       	adc	r31, r31
    27c0:	a2 17       	cp	r26, r18
    27c2:	b3 07       	cpc	r27, r19
    27c4:	e4 07       	cpc	r30, r20
    27c6:	f5 07       	cpc	r31, r21
    27c8:	20 f0       	brcs	.+8      	; 0x27d2 <__udivmodsi4_ep>
    27ca:	a2 1b       	sub	r26, r18
    27cc:	b3 0b       	sbc	r27, r19
    27ce:	e4 0b       	sbc	r30, r20
    27d0:	f5 0b       	sbc	r31, r21

000027d2 <__udivmodsi4_ep>:
    27d2:	66 1f       	adc	r22, r22
    27d4:	77 1f       	adc	r23, r23
    27d6:	88 1f       	adc	r24, r24
    27d8:	99 1f       	adc	r25, r25
    27da:	1a 94       	dec	r1
    27dc:	69 f7       	brne	.-38     	; 0x27b8 <__udivmodsi4_loop>
    27de:	60 95       	com	r22
    27e0:	70 95       	com	r23
    27e2:	80 95       	com	r24
    27e4:	90 95       	com	r25
    27e6:	9b 01       	movw	r18, r22
    27e8:	ac 01       	movw	r20, r24
    27ea:	bd 01       	movw	r22, r26
    27ec:	cf 01       	movw	r24, r30
    27ee:	08 95       	ret

000027f0 <__divmodsi4>:
    27f0:	05 2e       	mov	r0, r21
    27f2:	97 fb       	bst	r25, 7
    27f4:	16 f4       	brtc	.+4      	; 0x27fa <__divmodsi4+0xa>
    27f6:	00 94       	com	r0
    27f8:	0f d0       	rcall	.+30     	; 0x2818 <__negsi2>
    27fa:	57 fd       	sbrc	r21, 7
    27fc:	05 d0       	rcall	.+10     	; 0x2808 <__divmodsi4_neg2>
    27fe:	d6 df       	rcall	.-84     	; 0x27ac <__udivmodsi4>
    2800:	07 fc       	sbrc	r0, 7
    2802:	02 d0       	rcall	.+4      	; 0x2808 <__divmodsi4_neg2>
    2804:	46 f4       	brtc	.+16     	; 0x2816 <__divmodsi4_exit>
    2806:	08 c0       	rjmp	.+16     	; 0x2818 <__negsi2>

00002808 <__divmodsi4_neg2>:
    2808:	50 95       	com	r21
    280a:	40 95       	com	r20
    280c:	30 95       	com	r19
    280e:	21 95       	neg	r18
    2810:	3f 4f       	sbci	r19, 0xFF	; 255
    2812:	4f 4f       	sbci	r20, 0xFF	; 255
    2814:	5f 4f       	sbci	r21, 0xFF	; 255

00002816 <__divmodsi4_exit>:
    2816:	08 95       	ret

00002818 <__negsi2>:
    2818:	90 95       	com	r25
    281a:	80 95       	com	r24
    281c:	70 95       	com	r23
    281e:	61 95       	neg	r22
    2820:	7f 4f       	sbci	r23, 0xFF	; 255
    2822:	8f 4f       	sbci	r24, 0xFF	; 255
    2824:	9f 4f       	sbci	r25, 0xFF	; 255
    2826:	08 95       	ret

00002828 <__tablejump2__>:
    2828:	ee 0f       	add	r30, r30
    282a:	ff 1f       	adc	r31, r31
    282c:	00 24       	eor	r0, r0
    282e:	00 1c       	adc	r0, r0
    2830:	0b be       	out	0x3b, r0	; 59
    2832:	07 90       	elpm	r0, Z+
    2834:	f6 91       	elpm	r31, Z
    2836:	e0 2d       	mov	r30, r0
    2838:	09 94       	ijmp

0000283a <__umulhisi3>:
    283a:	a2 9f       	mul	r26, r18
    283c:	b0 01       	movw	r22, r0
    283e:	b3 9f       	mul	r27, r19
    2840:	c0 01       	movw	r24, r0
    2842:	a3 9f       	mul	r26, r19
    2844:	70 0d       	add	r23, r0
    2846:	81 1d       	adc	r24, r1
    2848:	11 24       	eor	r1, r1
    284a:	91 1d       	adc	r25, r1
    284c:	b2 9f       	mul	r27, r18
    284e:	70 0d       	add	r23, r0
    2850:	81 1d       	adc	r24, r1
    2852:	11 24       	eor	r1, r1
    2854:	91 1d       	adc	r25, r1
    2856:	08 95       	ret

00002858 <__muluhisi3>:
    2858:	f0 df       	rcall	.-32     	; 0x283a <__umulhisi3>
    285a:	a5 9f       	mul	r26, r21
    285c:	90 0d       	add	r25, r0
    285e:	b4 9f       	mul	r27, r20
    2860:	90 0d       	add	r25, r0
    2862:	a4 9f       	mul	r26, r20
    2864:	80 0d       	add	r24, r0
    2866:	91 1d       	adc	r25, r1
    2868:	11 24       	eor	r1, r1
    286a:	08 95       	ret

0000286c <__umulsidi3>:
    286c:	e8 94       	clt

0000286e <__umulsidi3_helper>:
    286e:	df 93       	push	r29
    2870:	cf 93       	push	r28
    2872:	fc 01       	movw	r30, r24
    2874:	db 01       	movw	r26, r22
    2876:	e1 df       	rcall	.-62     	; 0x283a <__umulhisi3>
    2878:	7f 93       	push	r23
    287a:	6f 93       	push	r22
    287c:	e9 01       	movw	r28, r18
    287e:	9a 01       	movw	r18, r20
    2880:	ac 01       	movw	r20, r24
    2882:	bf 93       	push	r27
    2884:	af 93       	push	r26
    2886:	3f 93       	push	r19
    2888:	2f 93       	push	r18
    288a:	df 01       	movw	r26, r30
    288c:	d6 df       	rcall	.-84     	; 0x283a <__umulhisi3>
    288e:	26 f4       	brtc	.+8      	; 0x2898 <__umulsidi3_helper+0x2a>
    2890:	6c 1b       	sub	r22, r28
    2892:	7d 0b       	sbc	r23, r29
    2894:	82 0b       	sbc	r24, r18
    2896:	93 0b       	sbc	r25, r19
    2898:	9e 01       	movw	r18, r28
    289a:	eb 01       	movw	r28, r22
    289c:	fc 01       	movw	r30, r24
    289e:	2b d0       	rcall	.+86     	; 0x28f6 <__muldi3_6>
    28a0:	af 91       	pop	r26
    28a2:	bf 91       	pop	r27
    28a4:	2f 91       	pop	r18
    28a6:	3f 91       	pop	r19
    28a8:	26 d0       	rcall	.+76     	; 0x28f6 <__muldi3_6>
    28aa:	be 01       	movw	r22, r28
    28ac:	cf 01       	movw	r24, r30
    28ae:	f9 01       	movw	r30, r18
    28b0:	2f 91       	pop	r18
    28b2:	3f 91       	pop	r19
    28b4:	cf 91       	pop	r28
    28b6:	df 91       	pop	r29
    28b8:	08 95       	ret

000028ba <__ashrdi3>:
    28ba:	97 fb       	bst	r25, 7
    28bc:	10 f8       	bld	r1, 0

000028be <__lshrdi3>:
    28be:	16 94       	lsr	r1
    28c0:	00 08       	sbc	r0, r0
    28c2:	0f 93       	push	r16
    28c4:	08 30       	cpi	r16, 0x08	; 8
    28c6:	98 f0       	brcs	.+38     	; 0x28ee <__lshrdi3+0x30>
    28c8:	08 50       	subi	r16, 0x08	; 8
    28ca:	23 2f       	mov	r18, r19
    28cc:	34 2f       	mov	r19, r20
    28ce:	45 2f       	mov	r20, r21
    28d0:	56 2f       	mov	r21, r22
    28d2:	67 2f       	mov	r22, r23
    28d4:	78 2f       	mov	r23, r24
    28d6:	89 2f       	mov	r24, r25
    28d8:	90 2d       	mov	r25, r0
    28da:	f4 cf       	rjmp	.-24     	; 0x28c4 <__lshrdi3+0x6>
    28dc:	05 94       	asr	r0
    28de:	97 95       	ror	r25
    28e0:	87 95       	ror	r24
    28e2:	77 95       	ror	r23
    28e4:	67 95       	ror	r22
    28e6:	57 95       	ror	r21
    28e8:	47 95       	ror	r20
    28ea:	37 95       	ror	r19
    28ec:	27 95       	ror	r18
    28ee:	0a 95       	dec	r16
    28f0:	aa f7       	brpl	.-22     	; 0x28dc <__lshrdi3+0x1e>
    28f2:	0f 91       	pop	r16
    28f4:	08 95       	ret

000028f6 <__muldi3_6>:
    28f6:	a1 df       	rcall	.-190    	; 0x283a <__umulhisi3>
    28f8:	46 0f       	add	r20, r22
    28fa:	57 1f       	adc	r21, r23
    28fc:	c8 1f       	adc	r28, r24
    28fe:	d9 1f       	adc	r29, r25
    2900:	08 f4       	brcc	.+2      	; 0x2904 <__muldi3_6+0xe>
    2902:	31 96       	adiw	r30, 0x01	; 1
    2904:	08 95       	ret

00002906 <_exit>:
    2906:	f8 94       	cli

00002908 <__stop_program>:
    2908:	ff cf       	rjmp	.-2      	; 0x2908 <__stop_program>
