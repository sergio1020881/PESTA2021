
Atmega128.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00002d12  00002da6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002d12  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a9  00800114  00800114  00002dba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002dba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002dec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000007d0  00000000  00000000  00002e28  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000724b  00000000  00000000  000035f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001bdd  00000000  00000000  0000a843  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003ff3  00000000  00000000  0000c420  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000011ac  00000000  00000000  00010414  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000156c  00000000  00000000  000115c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000056c8  00000000  00000000  00012b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000005d0  00000000  00000000  000181f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a1 c0       	rjmp	.+322    	; 0x144 <__ctors_end>
       2:	00 00       	nop
       4:	be c0       	rjmp	.+380    	; 0x182 <__bad_interrupt>
       6:	00 00       	nop
       8:	bc c0       	rjmp	.+376    	; 0x182 <__bad_interrupt>
       a:	00 00       	nop
       c:	ba c0       	rjmp	.+372    	; 0x182 <__bad_interrupt>
       e:	00 00       	nop
      10:	b8 c0       	rjmp	.+368    	; 0x182 <__bad_interrupt>
      12:	00 00       	nop
      14:	b6 c0       	rjmp	.+364    	; 0x182 <__bad_interrupt>
      16:	00 00       	nop
      18:	b4 c0       	rjmp	.+360    	; 0x182 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b2 c0       	rjmp	.+356    	; 0x182 <__bad_interrupt>
      1e:	00 00       	nop
      20:	b0 c0       	rjmp	.+352    	; 0x182 <__bad_interrupt>
      22:	00 00       	nop
      24:	ae c0       	rjmp	.+348    	; 0x182 <__bad_interrupt>
      26:	00 00       	nop
      28:	b6 c3       	rjmp	.+1900   	; 0x796 <__vector_10>
      2a:	00 00       	nop
      2c:	8c c3       	rjmp	.+1816   	; 0x746 <__vector_11>
      2e:	00 00       	nop
      30:	0c 94 ad 11 	jmp	0x235a	; 0x235a <__vector_12>
      34:	92 c3       	rjmp	.+1828   	; 0x75a <__vector_13>
      36:	00 00       	nop
      38:	a4 c3       	rjmp	.+1864   	; 0x782 <__vector_14>
      3a:	00 00       	nop
      3c:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__vector_15>
      40:	78 c3       	rjmp	.+1776   	; 0x732 <__vector_16>
      42:	00 00       	nop
      44:	9e c0       	rjmp	.+316    	; 0x182 <__bad_interrupt>
      46:	00 00       	nop
      48:	e2 c3       	rjmp	.+1988   	; 0x80e <__vector_18>
      4a:	00 00       	nop
      4c:	16 c4       	rjmp	.+2092   	; 0x87a <__vector_19>
      4e:	00 00       	nop
      50:	98 c0       	rjmp	.+304    	; 0x182 <__bad_interrupt>
      52:	00 00       	nop
      54:	97 c0       	rjmp	.+302    	; 0x184 <__vector_21>
      56:	00 00       	nop
      58:	94 c0       	rjmp	.+296    	; 0x182 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	92 c0       	rjmp	.+292    	; 0x182 <__bad_interrupt>
      5e:	00 00       	nop
      60:	86 c3       	rjmp	.+1804   	; 0x76e <__vector_24>
      62:	00 00       	nop
      64:	a2 c3       	rjmp	.+1860   	; 0x7aa <__vector_25>
      66:	00 00       	nop
      68:	aa c3       	rjmp	.+1876   	; 0x7be <__vector_26>
      6a:	00 00       	nop
      6c:	b2 c3       	rjmp	.+1892   	; 0x7d2 <__vector_27>
      6e:	00 00       	nop
      70:	ba c3       	rjmp	.+1908   	; 0x7e6 <__vector_28>
      72:	00 00       	nop
      74:	c2 c3       	rjmp	.+1924   	; 0x7fa <__vector_29>
      76:	00 00       	nop
      78:	29 c4       	rjmp	.+2130   	; 0x8cc <__vector_30>
      7a:	00 00       	nop
      7c:	60 c4       	rjmp	.+2240   	; 0x93e <__vector_31>
      7e:	00 00       	nop
      80:	80 c0       	rjmp	.+256    	; 0x182 <__bad_interrupt>
      82:	00 00       	nop
      84:	7e c0       	rjmp	.+252    	; 0x182 <__bad_interrupt>
      86:	00 00       	nop
      88:	7c c0       	rjmp	.+248    	; 0x182 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ba 02       	muls	r27, r26
      8e:	be 02       	muls	r27, r30
      90:	c2 02       	muls	r28, r18
      92:	c6 02       	muls	r28, r22
      94:	ca 02       	muls	r28, r26
      96:	d1 02       	muls	r29, r17
      98:	d8 02       	muls	r29, r24
      9a:	df 02       	muls	r29, r31
      9c:	e3 02       	muls	r30, r19
      9e:	ea 02       	muls	r30, r26
      a0:	f1 02       	muls	r31, r17
      a2:	f8 02       	muls	r31, r24
      a4:	fc 02       	muls	r31, r28
      a6:	03 03       	mulsu	r16, r19
      a8:	0a 03       	fmul	r16, r18
      aa:	26 03       	mulsu	r18, r22
      ac:	2a 03       	fmul	r18, r18
      ae:	2e 03       	fmul	r18, r22
      b0:	32 03       	mulsu	r19, r18
      b2:	38 03       	fmul	r19, r16
      b4:	3c 03       	fmul	r19, r20
      b6:	40 03       	mulsu	r20, r16
      b8:	44 03       	mulsu	r20, r20
      ba:	4d 03       	fmul	r20, r21
      bc:	51 03       	mulsu	r21, r17
      be:	55 03       	mulsu	r21, r21
      c0:	5e 03       	fmul	r21, r22
      c2:	07 63       	ori	r16, 0x37	; 55
      c4:	42 36       	cpi	r20, 0x62	; 98
      c6:	b7 9b       	sbis	0x16, 7	; 22
      c8:	d8 a7       	std	Y+40, r29	; 0x28
      ca:	1a 39       	cpi	r17, 0x9A	; 154
      cc:	68 56       	subi	r22, 0x68	; 104
      ce:	18 ae       	std	Y+56, r1	; 0x38
      d0:	ba ab       	std	Y+50, r27	; 0x32
      d2:	55 8c       	ldd	r5, Z+29	; 0x1d
      d4:	1d 3c       	cpi	r17, 0xCD	; 205
      d6:	b7 cc       	rjmp	.-1682   	; 0xfffffa46 <__eeprom_end+0xff7efa46>
      d8:	57 63       	ori	r21, 0x37	; 55
      da:	bd 6d       	ori	r27, 0xDD	; 221
      dc:	ed fd       	.word	0xfded	; ????
      de:	75 3e       	cpi	r23, 0xE5	; 229
      e0:	f6 17       	cp	r31, r22
      e2:	72 31       	cpi	r23, 0x12	; 18
      e4:	bf 00       	.word	0x00bf	; ????
      e6:	00 00       	nop
      e8:	80 3f       	cpi	r24, 0xF0	; 240
      ea:	08 00       	.word	0x0008	; ????
      ec:	00 00       	nop
      ee:	be 92       	st	-X, r11
      f0:	24 49       	sbci	r18, 0x94	; 148
      f2:	12 3e       	cpi	r17, 0xE2	; 226
      f4:	ab aa       	std	Y+51, r10	; 0x33
      f6:	aa 2a       	or	r10, r26
      f8:	be cd       	rjmp	.-1156   	; 0xfffffc76 <__eeprom_end+0xff7efc76>
      fa:	cc cc       	rjmp	.-1640   	; 0xfffffa94 <__eeprom_end+0xff7efa94>
      fc:	4c 3e       	cpi	r20, 0xEC	; 236
      fe:	00 00       	nop
     100:	00 80       	ld	r0, Z
     102:	be ab       	std	Y+54, r27	; 0x36
     104:	aa aa       	std	Y+50, r10	; 0x32
     106:	aa 3e       	cpi	r26, 0xEA	; 234
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	bf 00       	.word	0x00bf	; ????
     10e:	00 00       	nop
     110:	80 3f       	cpi	r24, 0xF0	; 240
     112:	00 00       	nop
     114:	00 00       	nop
     116:	00 08       	sbc	r0, r0
     118:	41 78       	andi	r20, 0x81	; 129
     11a:	d3 bb       	out	0x13, r29	; 19
     11c:	43 87       	std	Z+11, r20	; 0x0b
     11e:	d1 13       	cpse	r29, r17
     120:	3d 19       	sub	r19, r13
     122:	0e 3c       	cpi	r16, 0xCE	; 206
     124:	c3 bd       	out	0x23, r28	; 35
     126:	42 82       	std	Z+2, r4	; 0x02
     128:	ad 2b       	or	r26, r29
     12a:	3e 68       	ori	r19, 0x8E	; 142
     12c:	ec 82       	std	Y+4, r14	; 0x04
     12e:	76 be       	out	0x36, r7	; 54
     130:	d9 8f       	std	Y+25, r29	; 0x19
     132:	e1 a9       	ldd	r30, Z+49	; 0x31
     134:	3e 4c       	sbci	r19, 0xCE	; 206
     136:	80 ef       	ldi	r24, 0xF0	; 240
     138:	ff be       	out	0x3f, r15	; 63
     13a:	01 c4       	rjmp	.+2050   	; 0x93e <__vector_31>
     13c:	ff 7f       	andi	r31, 0xFF	; 255
     13e:	3f 00       	.word	0x003f	; ????
     140:	00 00       	nop
	...

00000144 <__ctors_end>:
     144:	11 24       	eor	r1, r1
     146:	1f be       	out	0x3f, r1	; 63
     148:	cf ef       	ldi	r28, 0xFF	; 255
     14a:	d0 e1       	ldi	r29, 0x10	; 16
     14c:	de bf       	out	0x3e, r29	; 62
     14e:	cd bf       	out	0x3d, r28	; 61

00000150 <__do_copy_data>:
     150:	11 e0       	ldi	r17, 0x01	; 1
     152:	a0 e0       	ldi	r26, 0x00	; 0
     154:	b1 e0       	ldi	r27, 0x01	; 1
     156:	e2 e1       	ldi	r30, 0x12	; 18
     158:	fd e2       	ldi	r31, 0x2D	; 45
     15a:	00 e0       	ldi	r16, 0x00	; 0
     15c:	0b bf       	out	0x3b, r16	; 59
     15e:	02 c0       	rjmp	.+4      	; 0x164 <__do_copy_data+0x14>
     160:	07 90       	elpm	r0, Z+
     162:	0d 92       	st	X+, r0
     164:	a4 31       	cpi	r26, 0x14	; 20
     166:	b1 07       	cpc	r27, r17
     168:	d9 f7       	brne	.-10     	; 0x160 <__do_copy_data+0x10>

0000016a <__do_clear_bss>:
     16a:	23 e0       	ldi	r18, 0x03	; 3
     16c:	a4 e1       	ldi	r26, 0x14	; 20
     16e:	b1 e0       	ldi	r27, 0x01	; 1
     170:	01 c0       	rjmp	.+2      	; 0x174 <.do_clear_bss_start>

00000172 <.do_clear_bss_loop>:
     172:	1d 92       	st	X+, r1

00000174 <.do_clear_bss_start>:
     174:	ad 3b       	cpi	r26, 0xBD	; 189
     176:	b2 07       	cpc	r27, r18
     178:	e1 f7       	brne	.-8      	; 0x172 <.do_clear_bss_loop>
     17a:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <main>
     17e:	0c 94 87 16 	jmp	0x2d0e	; 0x2d0e <_exit>

00000182 <__bad_interrupt>:
     182:	3e cf       	rjmp	.-388    	; 0x0 <__vectors>

00000184 <__vector_21>:
ISR(ANALOG_INTERRUPT)
/*************************************************************************
Function: ANALOG interrupt
Purpose:  Read Analog Input
**************************************************************************/
{
     184:	1f 92       	push	r1
     186:	0f 92       	push	r0
     188:	0f b6       	in	r0, 0x3f	; 63
     18a:	0f 92       	push	r0
     18c:	11 24       	eor	r1, r1
     18e:	0b b6       	in	r0, 0x3b	; 59
     190:	0f 92       	push	r0
     192:	2f 93       	push	r18
     194:	3f 93       	push	r19
     196:	4f 93       	push	r20
     198:	5f 93       	push	r21
     19a:	8f 93       	push	r24
     19c:	9f 93       	push	r25
     19e:	ef 93       	push	r30
     1a0:	ff 93       	push	r31
	uint8_t Sreg;
	Sreg=STATUS_REGISTER;
     1a2:	2f b7       	in	r18, 0x3f	; 63
	STATUS_REGISTER&=~(1<<GLOBAL_INTERRUPT_ENABLE);
     1a4:	8f b7       	in	r24, 0x3f	; 63
     1a6:	8f 77       	andi	r24, 0x7F	; 127
     1a8:	8f bf       	out	0x3f, r24	; 63
	adc_tmp=ADCL;
     1aa:	84 b1       	in	r24, 0x04	; 4
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <adc_tmp+0x1>
     1b2:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <adc_tmp>
	adc_tmp|=(ADCH<<8);
     1b6:	35 b1       	in	r19, 0x05	; 5
     1b8:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <adc_tmp>
     1bc:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <adc_tmp+0x1>
     1c0:	93 2b       	or	r25, r19
     1c2:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <adc_tmp+0x1>
     1c6:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <adc_tmp>
	if(adc_n_sample < (1<<ADC_NUMBER_SAMPLE)){
     1ca:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
     1ce:	84 30       	cpi	r24, 0x04	; 4
     1d0:	a0 f4       	brcc	.+40     	; 0x1fa <__vector_21+0x76>
		adc_n_sample++;
     1d2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
     1d6:	8f 5f       	subi	r24, 0xFF	; 255
     1d8:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
		adc_sample+=adc_tmp;
     1dc:	40 91 15 01 	lds	r20, 0x0115	; 0x800115 <adc_tmp>
     1e0:	50 91 16 01 	lds	r21, 0x0116	; 0x800116 <adc_tmp+0x1>
     1e4:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <adc_sample>
     1e8:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <adc_sample+0x1>
     1ec:	84 0f       	add	r24, r20
     1ee:	95 1f       	adc	r25, r21
     1f0:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <adc_sample+0x1>
     1f4:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <adc_sample>
     1f8:	43 c0       	rjmp	.+134    	; 0x280 <__vector_21+0xfc>
	}else{
		ADC_VALUE[ADC_SELECTOR]=adc_sample>>ADC_NUMBER_SAMPLE;
     1fa:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <ADC_SELECTOR>
     1fe:	f0 91 1a 01 	lds	r31, 0x011A	; 0x80011a <ADC_SELECTOR+0x1>
     202:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <adc_sample>
     206:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <adc_sample+0x1>
     20a:	95 95       	asr	r25
     20c:	87 95       	ror	r24
     20e:	95 95       	asr	r25
     210:	87 95       	ror	r24
     212:	ee 0f       	add	r30, r30
     214:	ff 1f       	adc	r31, r31
     216:	e3 5d       	subi	r30, 0xD3	; 211
     218:	fe 4f       	sbci	r31, 0xFE	; 254
     21a:	91 83       	std	Z+1, r25	; 0x01
     21c:	80 83       	st	Z, r24
		adc_n_sample=adc_sample=0;
     21e:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <adc_sample+0x1>
     222:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <adc_sample>
     226:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end>
		/******/
		if(ADC_SELECTOR < ADC_N_CHANNEL)
     22a:	40 91 19 01 	lds	r20, 0x0119	; 0x800119 <ADC_SELECTOR>
     22e:	50 91 1a 01 	lds	r21, 0x011A	; 0x80011a <ADC_SELECTOR+0x1>
     232:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <ADC_N_CHANNEL>
     236:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <ADC_N_CHANNEL+0x1>
     23a:	48 17       	cp	r20, r24
     23c:	59 07       	cpc	r21, r25
     23e:	54 f4       	brge	.+20     	; 0x254 <__vector_21+0xd0>
			ADC_SELECTOR++;
     240:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <ADC_SELECTOR>
     244:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <ADC_SELECTOR+0x1>
     248:	01 96       	adiw	r24, 0x01	; 1
     24a:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <ADC_SELECTOR+0x1>
     24e:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <ADC_SELECTOR>
     252:	04 c0       	rjmp	.+8      	; 0x25c <__vector_21+0xd8>
		else
			ADC_SELECTOR=0;
     254:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <ADC_SELECTOR+0x1>
     258:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <ADC_SELECTOR>
		ADC_SELECT &= ~MUX_MASK;
     25c:	87 b1       	in	r24, 0x07	; 7
     25e:	80 7e       	andi	r24, 0xE0	; 224
     260:	87 b9       	out	0x07, r24	; 7
		ADC_SELECT |= (ADC_CHANNEL_GAIN[ADC_SELECTOR] & MUX_MASK);
     262:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <ADC_SELECTOR>
     266:	f0 91 1a 01 	lds	r31, 0x011A	; 0x80011a <ADC_SELECTOR+0x1>
     26a:	ee 0f       	add	r30, r30
     26c:	ff 1f       	adc	r31, r31
     26e:	e3 5e       	subi	r30, 0xE3	; 227
     270:	fe 4f       	sbci	r31, 0xFE	; 254
     272:	80 81       	ld	r24, Z
     274:	91 81       	ldd	r25, Z+1	; 0x01
     276:	37 b1       	in	r19, 0x07	; 7
     278:	8f 71       	andi	r24, 0x1F	; 31
     27a:	99 27       	eor	r25, r25
     27c:	83 2b       	or	r24, r19
     27e:	87 b9       	out	0x07, r24	; 7
	}
	STATUS_REGISTER=Sreg;
     280:	2f bf       	out	0x3f, r18	; 63
}
     282:	ff 91       	pop	r31
     284:	ef 91       	pop	r30
     286:	9f 91       	pop	r25
     288:	8f 91       	pop	r24
     28a:	5f 91       	pop	r21
     28c:	4f 91       	pop	r20
     28e:	3f 91       	pop	r19
     290:	2f 91       	pop	r18
     292:	0f 90       	pop	r0
     294:	0b be       	out	0x3b, r0	; 59
     296:	0f 90       	pop	r0
     298:	0f be       	out	0x3f, r0	; 63
     29a:	0f 90       	pop	r0
     29c:	1f 90       	pop	r1
     29e:	18 95       	reti

000002a0 <TIMER_COUNTER0_start>:
	timer3.compareB=TIMER_COUNTER3_compareB;
	timer3.compareC=TIMER_COUNTER3_compareC;
	timer3.start=TIMER_COUNTER3_start;
	timer3.stop=TIMER_COUNTER3_stop;
	return timer3;
}
     2a0:	20 91 41 01 	lds	r18, 0x0141	; 0x800141 <timer0_state>
     2a4:	21 11       	cpse	r18, r1
     2a6:	41 c0       	rjmp	.+130    	; 0x32a <TIMER_COUNTER0_start+0x8a>
     2a8:	23 b7       	in	r18, 0x33	; 51
     2aa:	28 7f       	andi	r18, 0xF8	; 248
     2ac:	23 bf       	out	0x33, r18	; 51
     2ae:	80 34       	cpi	r24, 0x40	; 64
     2b0:	91 05       	cpc	r25, r1
     2b2:	11 f1       	breq	.+68     	; 0x2f8 <TIMER_COUNTER0_start+0x58>
     2b4:	48 f4       	brcc	.+18     	; 0x2c8 <TIMER_COUNTER0_start+0x28>
     2b6:	88 30       	cpi	r24, 0x08	; 8
     2b8:	91 05       	cpc	r25, r1
     2ba:	b1 f0       	breq	.+44     	; 0x2e8 <TIMER_COUNTER0_start+0x48>
     2bc:	80 32       	cpi	r24, 0x20	; 32
     2be:	91 05       	cpc	r25, r1
     2c0:	b9 f0       	breq	.+46     	; 0x2f0 <TIMER_COUNTER0_start+0x50>
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	49 f5       	brne	.+82     	; 0x318 <TIMER_COUNTER0_start+0x78>
     2c6:	0c c0       	rjmp	.+24     	; 0x2e0 <TIMER_COUNTER0_start+0x40>
     2c8:	81 15       	cp	r24, r1
     2ca:	21 e0       	ldi	r18, 0x01	; 1
     2cc:	92 07       	cpc	r25, r18
     2ce:	e1 f0       	breq	.+56     	; 0x308 <TIMER_COUNTER0_start+0x68>
     2d0:	81 15       	cp	r24, r1
     2d2:	24 e0       	ldi	r18, 0x04	; 4
     2d4:	92 07       	cpc	r25, r18
     2d6:	e1 f0       	breq	.+56     	; 0x310 <TIMER_COUNTER0_start+0x70>
     2d8:	80 38       	cpi	r24, 0x80	; 128
     2da:	91 05       	cpc	r25, r1
     2dc:	e9 f4       	brne	.+58     	; 0x318 <TIMER_COUNTER0_start+0x78>
     2de:	10 c0       	rjmp	.+32     	; 0x300 <TIMER_COUNTER0_start+0x60>
     2e0:	83 b7       	in	r24, 0x33	; 51
     2e2:	81 60       	ori	r24, 0x01	; 1
     2e4:	83 bf       	out	0x33, r24	; 51
     2e6:	1b c0       	rjmp	.+54     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2e8:	83 b7       	in	r24, 0x33	; 51
     2ea:	82 60       	ori	r24, 0x02	; 2
     2ec:	83 bf       	out	0x33, r24	; 51
     2ee:	17 c0       	rjmp	.+46     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2f0:	83 b7       	in	r24, 0x33	; 51
     2f2:	83 60       	ori	r24, 0x03	; 3
     2f4:	83 bf       	out	0x33, r24	; 51
     2f6:	13 c0       	rjmp	.+38     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     2f8:	83 b7       	in	r24, 0x33	; 51
     2fa:	84 60       	ori	r24, 0x04	; 4
     2fc:	83 bf       	out	0x33, r24	; 51
     2fe:	0f c0       	rjmp	.+30     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     300:	83 b7       	in	r24, 0x33	; 51
     302:	85 60       	ori	r24, 0x05	; 5
     304:	83 bf       	out	0x33, r24	; 51
     306:	0b c0       	rjmp	.+22     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     308:	83 b7       	in	r24, 0x33	; 51
     30a:	86 60       	ori	r24, 0x06	; 6
     30c:	83 bf       	out	0x33, r24	; 51
     30e:	07 c0       	rjmp	.+14     	; 0x31e <TIMER_COUNTER0_start+0x7e>
     310:	83 b7       	in	r24, 0x33	; 51
     312:	87 60       	ori	r24, 0x07	; 7
     314:	83 bf       	out	0x33, r24	; 51
     316:	03 c0       	rjmp	.+6      	; 0x31e <TIMER_COUNTER0_start+0x7e>
     318:	83 b7       	in	r24, 0x33	; 51
     31a:	87 60       	ori	r24, 0x07	; 7
     31c:	83 bf       	out	0x33, r24	; 51
     31e:	8f b7       	in	r24, 0x3f	; 63
     320:	80 68       	ori	r24, 0x80	; 128
     322:	8f bf       	out	0x3f, r24	; 63
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <timer0_state>
     32a:	08 95       	ret

0000032c <TIMER_COUNTER0_compoutmode>:
     32c:	93 b7       	in	r25, 0x33	; 51
     32e:	9f 7c       	andi	r25, 0xCF	; 207
     330:	93 bf       	out	0x33, r25	; 51
     332:	82 30       	cpi	r24, 0x02	; 2
     334:	51 f0       	breq	.+20     	; 0x34a <TIMER_COUNTER0_compoutmode+0x1e>
     336:	83 30       	cpi	r24, 0x03	; 3
     338:	71 f0       	breq	.+28     	; 0x356 <TIMER_COUNTER0_compoutmode+0x2a>
     33a:	81 30       	cpi	r24, 0x01	; 1
     33c:	89 f4       	brne	.+34     	; 0x360 <TIMER_COUNTER0_compoutmode+0x34>
     33e:	80 e1       	ldi	r24, 0x10	; 16
     340:	87 bb       	out	0x17, r24	; 23
     342:	83 b7       	in	r24, 0x33	; 51
     344:	80 61       	ori	r24, 0x10	; 16
     346:	83 bf       	out	0x33, r24	; 51
     348:	08 95       	ret
     34a:	80 e1       	ldi	r24, 0x10	; 16
     34c:	87 bb       	out	0x17, r24	; 23
     34e:	83 b7       	in	r24, 0x33	; 51
     350:	80 62       	ori	r24, 0x20	; 32
     352:	83 bf       	out	0x33, r24	; 51
     354:	08 95       	ret
     356:	80 e1       	ldi	r24, 0x10	; 16
     358:	87 bb       	out	0x17, r24	; 23
     35a:	83 b7       	in	r24, 0x33	; 51
     35c:	80 63       	ori	r24, 0x30	; 48
     35e:	83 bf       	out	0x33, r24	; 51
     360:	08 95       	ret

00000362 <TIMER_COUNTER0_compare>:
     362:	81 bf       	out	0x31, r24	; 49
     364:	08 95       	ret

00000366 <TIMER_COUNTER0_stop>:
     366:	83 b7       	in	r24, 0x33	; 51
     368:	88 7f       	andi	r24, 0xF8	; 248
     36a:	83 bf       	out	0x33, r24	; 51
     36c:	12 be       	out	0x32, r1	; 50
     36e:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <timer0_state>
     372:	08 95       	ret

00000374 <TIMER_COUNTER1_start>:
     374:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <timer1_state>
     378:	21 11       	cpse	r18, r1
     37a:	41 c0       	rjmp	.+130    	; 0x3fe <TIMER_COUNTER1_start+0x8a>
     37c:	2e b5       	in	r18, 0x2e	; 46
     37e:	28 7f       	andi	r18, 0xF8	; 248
     380:	2e bd       	out	0x2e, r18	; 46
     382:	88 30       	cpi	r24, 0x08	; 8
     384:	91 05       	cpc	r25, r1
     386:	d1 f0       	breq	.+52     	; 0x3bc <TIMER_COUNTER1_start+0x48>
     388:	48 f4       	brcc	.+18     	; 0x39c <TIMER_COUNTER1_start+0x28>
     38a:	83 30       	cpi	r24, 0x03	; 3
     38c:	91 05       	cpc	r25, r1
     38e:	31 f1       	breq	.+76     	; 0x3dc <TIMER_COUNTER1_start+0x68>
     390:	85 30       	cpi	r24, 0x05	; 5
     392:	91 05       	cpc	r25, r1
     394:	39 f1       	breq	.+78     	; 0x3e4 <TIMER_COUNTER1_start+0x70>
     396:	01 97       	sbiw	r24, 0x01	; 1
     398:	49 f5       	brne	.+82     	; 0x3ec <TIMER_COUNTER1_start+0x78>
     39a:	0c c0       	rjmp	.+24     	; 0x3b4 <TIMER_COUNTER1_start+0x40>
     39c:	81 15       	cp	r24, r1
     39e:	21 e0       	ldi	r18, 0x01	; 1
     3a0:	92 07       	cpc	r25, r18
     3a2:	a1 f0       	breq	.+40     	; 0x3cc <TIMER_COUNTER1_start+0x58>
     3a4:	81 15       	cp	r24, r1
     3a6:	24 e0       	ldi	r18, 0x04	; 4
     3a8:	92 07       	cpc	r25, r18
     3aa:	a1 f0       	breq	.+40     	; 0x3d4 <TIMER_COUNTER1_start+0x60>
     3ac:	80 34       	cpi	r24, 0x40	; 64
     3ae:	91 05       	cpc	r25, r1
     3b0:	e9 f4       	brne	.+58     	; 0x3ec <TIMER_COUNTER1_start+0x78>
     3b2:	08 c0       	rjmp	.+16     	; 0x3c4 <TIMER_COUNTER1_start+0x50>
     3b4:	8e b5       	in	r24, 0x2e	; 46
     3b6:	81 60       	ori	r24, 0x01	; 1
     3b8:	8e bd       	out	0x2e, r24	; 46
     3ba:	1b c0       	rjmp	.+54     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3bc:	8e b5       	in	r24, 0x2e	; 46
     3be:	82 60       	ori	r24, 0x02	; 2
     3c0:	8e bd       	out	0x2e, r24	; 46
     3c2:	17 c0       	rjmp	.+46     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3c4:	8e b5       	in	r24, 0x2e	; 46
     3c6:	83 60       	ori	r24, 0x03	; 3
     3c8:	8e bd       	out	0x2e, r24	; 46
     3ca:	13 c0       	rjmp	.+38     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3cc:	8e b5       	in	r24, 0x2e	; 46
     3ce:	84 60       	ori	r24, 0x04	; 4
     3d0:	8e bd       	out	0x2e, r24	; 46
     3d2:	0f c0       	rjmp	.+30     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3d4:	8e b5       	in	r24, 0x2e	; 46
     3d6:	85 60       	ori	r24, 0x05	; 5
     3d8:	8e bd       	out	0x2e, r24	; 46
     3da:	0b c0       	rjmp	.+22     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3dc:	8e b5       	in	r24, 0x2e	; 46
     3de:	86 60       	ori	r24, 0x06	; 6
     3e0:	8e bd       	out	0x2e, r24	; 46
     3e2:	07 c0       	rjmp	.+14     	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3e4:	8e b5       	in	r24, 0x2e	; 46
     3e6:	87 60       	ori	r24, 0x07	; 7
     3e8:	8e bd       	out	0x2e, r24	; 46
     3ea:	03 c0       	rjmp	.+6      	; 0x3f2 <TIMER_COUNTER1_start+0x7e>
     3ec:	8e b5       	in	r24, 0x2e	; 46
     3ee:	85 60       	ori	r24, 0x05	; 5
     3f0:	8e bd       	out	0x2e, r24	; 46
     3f2:	8f b7       	in	r24, 0x3f	; 63
     3f4:	80 68       	ori	r24, 0x80	; 128
     3f6:	8f bf       	out	0x3f, r24	; 63
     3f8:	81 e0       	ldi	r24, 0x01	; 1
     3fa:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <timer1_state>
     3fe:	08 95       	ret

00000400 <TIMER_COUNTER1_compoutmodeA>:
     400:	9f b5       	in	r25, 0x2f	; 47
     402:	9f 73       	andi	r25, 0x3F	; 63
     404:	9f bd       	out	0x2f, r25	; 47
     406:	82 30       	cpi	r24, 0x02	; 2
     408:	49 f0       	breq	.+18     	; 0x41c <TIMER_COUNTER1_compoutmodeA+0x1c>
     40a:	83 30       	cpi	r24, 0x03	; 3
     40c:	61 f0       	breq	.+24     	; 0x426 <TIMER_COUNTER1_compoutmodeA+0x26>
     40e:	81 30       	cpi	r24, 0x01	; 1
     410:	71 f4       	brne	.+28     	; 0x42e <TIMER_COUNTER1_compoutmodeA+0x2e>
     412:	bd 9a       	sbi	0x17, 5	; 23
     414:	8f b5       	in	r24, 0x2f	; 47
     416:	80 64       	ori	r24, 0x40	; 64
     418:	8f bd       	out	0x2f, r24	; 47
     41a:	08 95       	ret
     41c:	bd 9a       	sbi	0x17, 5	; 23
     41e:	8f b5       	in	r24, 0x2f	; 47
     420:	80 68       	ori	r24, 0x80	; 128
     422:	8f bd       	out	0x2f, r24	; 47
     424:	08 95       	ret
     426:	bd 9a       	sbi	0x17, 5	; 23
     428:	8f b5       	in	r24, 0x2f	; 47
     42a:	80 6c       	ori	r24, 0xC0	; 192
     42c:	8f bd       	out	0x2f, r24	; 47
     42e:	08 95       	ret

00000430 <TIMER_COUNTER1_compoutmodeB>:
     430:	9f b5       	in	r25, 0x2f	; 47
     432:	9f 7c       	andi	r25, 0xCF	; 207
     434:	9f bd       	out	0x2f, r25	; 47
     436:	82 30       	cpi	r24, 0x02	; 2
     438:	49 f0       	breq	.+18     	; 0x44c <TIMER_COUNTER1_compoutmodeB+0x1c>
     43a:	83 30       	cpi	r24, 0x03	; 3
     43c:	61 f0       	breq	.+24     	; 0x456 <TIMER_COUNTER1_compoutmodeB+0x26>
     43e:	81 30       	cpi	r24, 0x01	; 1
     440:	71 f4       	brne	.+28     	; 0x45e <TIMER_COUNTER1_compoutmodeB+0x2e>
     442:	be 9a       	sbi	0x17, 6	; 23
     444:	8f b5       	in	r24, 0x2f	; 47
     446:	80 61       	ori	r24, 0x10	; 16
     448:	8f bd       	out	0x2f, r24	; 47
     44a:	08 95       	ret
     44c:	be 9a       	sbi	0x17, 6	; 23
     44e:	8f b5       	in	r24, 0x2f	; 47
     450:	80 62       	ori	r24, 0x20	; 32
     452:	8f bd       	out	0x2f, r24	; 47
     454:	08 95       	ret
     456:	be 9a       	sbi	0x17, 6	; 23
     458:	8f b5       	in	r24, 0x2f	; 47
     45a:	80 63       	ori	r24, 0x30	; 48
     45c:	8f bd       	out	0x2f, r24	; 47
     45e:	08 95       	ret

00000460 <TIMER_COUNTER1_compoutmodeC>:
     460:	9f b5       	in	r25, 0x2f	; 47
     462:	93 7f       	andi	r25, 0xF3	; 243
     464:	9f bd       	out	0x2f, r25	; 47
     466:	82 30       	cpi	r24, 0x02	; 2
     468:	49 f0       	breq	.+18     	; 0x47c <TIMER_COUNTER1_compoutmodeC+0x1c>
     46a:	83 30       	cpi	r24, 0x03	; 3
     46c:	61 f0       	breq	.+24     	; 0x486 <TIMER_COUNTER1_compoutmodeC+0x26>
     46e:	81 30       	cpi	r24, 0x01	; 1
     470:	71 f4       	brne	.+28     	; 0x48e <TIMER_COUNTER1_compoutmodeC+0x2e>
     472:	bf 9a       	sbi	0x17, 7	; 23
     474:	8f b5       	in	r24, 0x2f	; 47
     476:	84 60       	ori	r24, 0x04	; 4
     478:	8f bd       	out	0x2f, r24	; 47
     47a:	08 95       	ret
     47c:	bf 9a       	sbi	0x17, 7	; 23
     47e:	8f b5       	in	r24, 0x2f	; 47
     480:	88 60       	ori	r24, 0x08	; 8
     482:	8f bd       	out	0x2f, r24	; 47
     484:	08 95       	ret
     486:	bf 9a       	sbi	0x17, 7	; 23
     488:	8f b5       	in	r24, 0x2f	; 47
     48a:	8c 60       	ori	r24, 0x0C	; 12
     48c:	8f bd       	out	0x2f, r24	; 47
     48e:	08 95       	ret

00000490 <TIMER_COUNTER1_compareA>:
     490:	9b bd       	out	0x2b, r25	; 43
     492:	8a bd       	out	0x2a, r24	; 42
     494:	08 95       	ret

00000496 <TIMER_COUNTER1_compareB>:
     496:	99 bd       	out	0x29, r25	; 41
     498:	88 bd       	out	0x28, r24	; 40
     49a:	08 95       	ret

0000049c <TIMER_COUNTER1_compareC>:
     49c:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     4a0:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     4a4:	08 95       	ret

000004a6 <TIMER_COUNTER1_stop>:
     4a6:	8e b5       	in	r24, 0x2e	; 46
     4a8:	88 7f       	andi	r24, 0xF8	; 248
     4aa:	8e bd       	out	0x2e, r24	; 46
     4ac:	1d bc       	out	0x2d, r1	; 45
     4ae:	1c bc       	out	0x2c, r1	; 44
     4b0:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <timer1_state>
     4b4:	08 95       	ret

000004b6 <TIMER_COUNTER0enable>:
     4b6:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <timer0_state>
     4ba:	2f ef       	ldi	r18, 0xFF	; 255
     4bc:	21 bf       	out	0x31, r18	; 49
     4be:	23 b7       	in	r18, 0x33	; 51
     4c0:	27 7b       	andi	r18, 0xB7	; 183
     4c2:	23 bf       	out	0x33, r18	; 51
     4c4:	62 30       	cpi	r22, 0x02	; 2
     4c6:	41 f0       	breq	.+16     	; 0x4d8 <TIMER_COUNTER0enable+0x22>
     4c8:	63 30       	cpi	r22, 0x03	; 3
     4ca:	51 f0       	breq	.+20     	; 0x4e0 <TIMER_COUNTER0enable+0x2a>
     4cc:	61 30       	cpi	r22, 0x01	; 1
     4ce:	59 f4       	brne	.+22     	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4d0:	23 b7       	in	r18, 0x33	; 51
     4d2:	20 64       	ori	r18, 0x40	; 64
     4d4:	23 bf       	out	0x33, r18	; 51
     4d6:	07 c0       	rjmp	.+14     	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4d8:	23 b7       	in	r18, 0x33	; 51
     4da:	28 60       	ori	r18, 0x08	; 8
     4dc:	23 bf       	out	0x33, r18	; 51
     4de:	03 c0       	rjmp	.+6      	; 0x4e6 <TIMER_COUNTER0enable+0x30>
     4e0:	23 b7       	in	r18, 0x33	; 51
     4e2:	28 64       	ori	r18, 0x48	; 72
     4e4:	23 bf       	out	0x33, r18	; 51
     4e6:	27 b7       	in	r18, 0x37	; 55
     4e8:	2e 7f       	andi	r18, 0xFE	; 254
     4ea:	27 bf       	out	0x37, r18	; 55
     4ec:	27 b7       	in	r18, 0x37	; 55
     4ee:	2d 7f       	andi	r18, 0xFD	; 253
     4f0:	27 bf       	out	0x37, r18	; 55
     4f2:	42 30       	cpi	r20, 0x02	; 2
     4f4:	41 f0       	breq	.+16     	; 0x506 <TIMER_COUNTER0enable+0x50>
     4f6:	43 30       	cpi	r20, 0x03	; 3
     4f8:	51 f0       	breq	.+20     	; 0x50e <TIMER_COUNTER0enable+0x58>
     4fa:	41 30       	cpi	r20, 0x01	; 1
     4fc:	71 f4       	brne	.+28     	; 0x51a <TIMER_COUNTER0enable+0x64>
     4fe:	27 b7       	in	r18, 0x37	; 55
     500:	21 60       	ori	r18, 0x01	; 1
     502:	27 bf       	out	0x37, r18	; 55
     504:	0a c0       	rjmp	.+20     	; 0x51a <TIMER_COUNTER0enable+0x64>
     506:	27 b7       	in	r18, 0x37	; 55
     508:	22 60       	ori	r18, 0x02	; 2
     50a:	27 bf       	out	0x37, r18	; 55
     50c:	06 c0       	rjmp	.+12     	; 0x51a <TIMER_COUNTER0enable+0x64>
     50e:	27 b7       	in	r18, 0x37	; 55
     510:	21 60       	ori	r18, 0x01	; 1
     512:	27 bf       	out	0x37, r18	; 55
     514:	27 b7       	in	r18, 0x37	; 55
     516:	22 60       	ori	r18, 0x02	; 2
     518:	27 bf       	out	0x37, r18	; 55
     51a:	26 e9       	ldi	r18, 0x96	; 150
     51c:	31 e0       	ldi	r19, 0x01	; 1
     51e:	fc 01       	movw	r30, r24
     520:	31 83       	std	Z+1, r19	; 0x01
     522:	20 83       	st	Z, r18
     524:	21 eb       	ldi	r18, 0xB1	; 177
     526:	31 e0       	ldi	r19, 0x01	; 1
     528:	37 83       	std	Z+7, r19	; 0x07
     52a:	26 83       	std	Z+6, r18	; 0x06
     52c:	20 e5       	ldi	r18, 0x50	; 80
     52e:	31 e0       	ldi	r19, 0x01	; 1
     530:	35 87       	std	Z+13, r19	; 0x0d
     532:	24 87       	std	Z+12, r18	; 0x0c
     534:	23 eb       	ldi	r18, 0xB3	; 179
     536:	31 e0       	ldi	r19, 0x01	; 1
     538:	37 87       	std	Z+15, r19	; 0x0f
     53a:	26 87       	std	Z+14, r18	; 0x0e
     53c:	08 95       	ret

0000053e <TIMER_COUNTER1enable>:
     53e:	0f 93       	push	r16
     540:	1f 93       	push	r17
     542:	dc 01       	movw	r26, r24
     544:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <timer1_state>
     548:	8f ef       	ldi	r24, 0xFF	; 255
     54a:	9f ef       	ldi	r25, 0xFF	; 255
     54c:	9b bd       	out	0x2b, r25	; 43
     54e:	8a bd       	out	0x2a, r24	; 42
     550:	8f b5       	in	r24, 0x2f	; 47
     552:	8c 7f       	andi	r24, 0xFC	; 252
     554:	8f bd       	out	0x2f, r24	; 47
     556:	8e b5       	in	r24, 0x2e	; 46
     558:	87 7e       	andi	r24, 0xE7	; 231
     55a:	8e bd       	out	0x2e, r24	; 46
     55c:	06 2f       	mov	r16, r22
     55e:	10 e0       	ldi	r17, 0x00	; 0
     560:	f8 01       	movw	r30, r16
     562:	31 97       	sbiw	r30, 0x01	; 1
     564:	ef 30       	cpi	r30, 0x0F	; 15
     566:	f1 05       	cpc	r31, r1
     568:	08 f0       	brcs	.+2      	; 0x56c <TIMER_COUNTER1enable+0x2e>
     56a:	5a c0       	rjmp	.+180    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     56c:	ea 5b       	subi	r30, 0xBA	; 186
     56e:	ff 4f       	sbci	r31, 0xFF	; 255
     570:	0c 94 fe 15 	jmp	0x2bfc	; 0x2bfc <__tablejump2__>
     574:	8f b5       	in	r24, 0x2f	; 47
     576:	81 60       	ori	r24, 0x01	; 1
     578:	8f bd       	out	0x2f, r24	; 47
     57a:	52 c0       	rjmp	.+164    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     57c:	8f b5       	in	r24, 0x2f	; 47
     57e:	82 60       	ori	r24, 0x02	; 2
     580:	8f bd       	out	0x2f, r24	; 47
     582:	4e c0       	rjmp	.+156    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     584:	8f b5       	in	r24, 0x2f	; 47
     586:	83 60       	ori	r24, 0x03	; 3
     588:	8f bd       	out	0x2f, r24	; 47
     58a:	4a c0       	rjmp	.+148    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     58c:	8e b5       	in	r24, 0x2e	; 46
     58e:	88 60       	ori	r24, 0x08	; 8
     590:	8e bd       	out	0x2e, r24	; 46
     592:	46 c0       	rjmp	.+140    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     594:	8f b5       	in	r24, 0x2f	; 47
     596:	81 60       	ori	r24, 0x01	; 1
     598:	8f bd       	out	0x2f, r24	; 47
     59a:	8e b5       	in	r24, 0x2e	; 46
     59c:	88 60       	ori	r24, 0x08	; 8
     59e:	8e bd       	out	0x2e, r24	; 46
     5a0:	3f c0       	rjmp	.+126    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5a2:	8f b5       	in	r24, 0x2f	; 47
     5a4:	82 60       	ori	r24, 0x02	; 2
     5a6:	8f bd       	out	0x2f, r24	; 47
     5a8:	8e b5       	in	r24, 0x2e	; 46
     5aa:	88 60       	ori	r24, 0x08	; 8
     5ac:	8e bd       	out	0x2e, r24	; 46
     5ae:	38 c0       	rjmp	.+112    	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5b0:	8f b5       	in	r24, 0x2f	; 47
     5b2:	83 60       	ori	r24, 0x03	; 3
     5b4:	8f bd       	out	0x2f, r24	; 47
     5b6:	8e b5       	in	r24, 0x2e	; 46
     5b8:	88 60       	ori	r24, 0x08	; 8
     5ba:	8e bd       	out	0x2e, r24	; 46
     5bc:	31 c0       	rjmp	.+98     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5be:	8e b5       	in	r24, 0x2e	; 46
     5c0:	80 61       	ori	r24, 0x10	; 16
     5c2:	8e bd       	out	0x2e, r24	; 46
     5c4:	2d c0       	rjmp	.+90     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5c6:	8f b5       	in	r24, 0x2f	; 47
     5c8:	81 60       	ori	r24, 0x01	; 1
     5ca:	8f bd       	out	0x2f, r24	; 47
     5cc:	8e b5       	in	r24, 0x2e	; 46
     5ce:	80 61       	ori	r24, 0x10	; 16
     5d0:	8e bd       	out	0x2e, r24	; 46
     5d2:	26 c0       	rjmp	.+76     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5d4:	8f b5       	in	r24, 0x2f	; 47
     5d6:	82 60       	ori	r24, 0x02	; 2
     5d8:	8f bd       	out	0x2f, r24	; 47
     5da:	8e b5       	in	r24, 0x2e	; 46
     5dc:	80 61       	ori	r24, 0x10	; 16
     5de:	8e bd       	out	0x2e, r24	; 46
     5e0:	1f c0       	rjmp	.+62     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5e2:	8f b5       	in	r24, 0x2f	; 47
     5e4:	83 60       	ori	r24, 0x03	; 3
     5e6:	8f bd       	out	0x2f, r24	; 47
     5e8:	8e b5       	in	r24, 0x2e	; 46
     5ea:	80 61       	ori	r24, 0x10	; 16
     5ec:	8e bd       	out	0x2e, r24	; 46
     5ee:	18 c0       	rjmp	.+48     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5f0:	8e b5       	in	r24, 0x2e	; 46
     5f2:	88 61       	ori	r24, 0x18	; 24
     5f4:	8e bd       	out	0x2e, r24	; 46
     5f6:	14 c0       	rjmp	.+40     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     5f8:	8f b5       	in	r24, 0x2f	; 47
     5fa:	81 60       	ori	r24, 0x01	; 1
     5fc:	8f bd       	out	0x2f, r24	; 47
     5fe:	8e b5       	in	r24, 0x2e	; 46
     600:	88 61       	ori	r24, 0x18	; 24
     602:	8e bd       	out	0x2e, r24	; 46
     604:	0d c0       	rjmp	.+26     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     606:	8f b5       	in	r24, 0x2f	; 47
     608:	82 60       	ori	r24, 0x02	; 2
     60a:	8f bd       	out	0x2f, r24	; 47
     60c:	8e b5       	in	r24, 0x2e	; 46
     60e:	88 61       	ori	r24, 0x18	; 24
     610:	8e bd       	out	0x2e, r24	; 46
     612:	06 c0       	rjmp	.+12     	; 0x620 <TIMER_COUNTER1enable+0xe2>
     614:	8f b5       	in	r24, 0x2f	; 47
     616:	83 60       	ori	r24, 0x03	; 3
     618:	8f bd       	out	0x2f, r24	; 47
     61a:	8e b5       	in	r24, 0x2e	; 46
     61c:	88 61       	ori	r24, 0x18	; 24
     61e:	8e bd       	out	0x2e, r24	; 46
     620:	8f b5       	in	r24, 0x2f	; 47
     622:	83 70       	andi	r24, 0x03	; 3
     624:	8f bd       	out	0x2f, r24	; 47
     626:	87 b7       	in	r24, 0x37	; 55
     628:	83 7c       	andi	r24, 0xC3	; 195
     62a:	87 bf       	out	0x37, r24	; 55
     62c:	ed e7       	ldi	r30, 0x7D	; 125
     62e:	f0 e0       	ldi	r31, 0x00	; 0
     630:	80 81       	ld	r24, Z
     632:	8e 7f       	andi	r24, 0xFE	; 254
     634:	80 83       	st	Z, r24
     636:	50 e0       	ldi	r21, 0x00	; 0
     638:	fa 01       	movw	r30, r20
     63a:	31 97       	sbiw	r30, 0x01	; 1
     63c:	ec 30       	cpi	r30, 0x0C	; 12
     63e:	f1 05       	cpc	r31, r1
     640:	08 f0       	brcs	.+2      	; 0x644 <TIMER_COUNTER1enable+0x106>
     642:	44 c0       	rjmp	.+136    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     644:	eb 5a       	subi	r30, 0xAB	; 171
     646:	ff 4f       	sbci	r31, 0xFF	; 255
     648:	0c 94 fe 15 	jmp	0x2bfc	; 0x2bfc <__tablejump2__>
     64c:	87 b7       	in	r24, 0x37	; 55
     64e:	84 60       	ori	r24, 0x04	; 4
     650:	87 bf       	out	0x37, r24	; 55
     652:	3c c0       	rjmp	.+120    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     654:	87 b7       	in	r24, 0x37	; 55
     656:	80 61       	ori	r24, 0x10	; 16
     658:	87 bf       	out	0x37, r24	; 55
     65a:	38 c0       	rjmp	.+112    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     65c:	87 b7       	in	r24, 0x37	; 55
     65e:	88 60       	ori	r24, 0x08	; 8
     660:	87 bf       	out	0x37, r24	; 55
     662:	34 c0       	rjmp	.+104    	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     664:	ed e7       	ldi	r30, 0x7D	; 125
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	81 60       	ori	r24, 0x01	; 1
     66c:	80 83       	st	Z, r24
     66e:	2e c0       	rjmp	.+92     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     670:	87 b7       	in	r24, 0x37	; 55
     672:	80 62       	ori	r24, 0x20	; 32
     674:	87 bf       	out	0x37, r24	; 55
     676:	2a c0       	rjmp	.+84     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     678:	87 b7       	in	r24, 0x37	; 55
     67a:	84 61       	ori	r24, 0x14	; 20
     67c:	87 bf       	out	0x37, r24	; 55
     67e:	26 c0       	rjmp	.+76     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     680:	87 b7       	in	r24, 0x37	; 55
     682:	8c 60       	ori	r24, 0x0C	; 12
     684:	87 bf       	out	0x37, r24	; 55
     686:	22 c0       	rjmp	.+68     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     688:	87 b7       	in	r24, 0x37	; 55
     68a:	84 60       	ori	r24, 0x04	; 4
     68c:	87 bf       	out	0x37, r24	; 55
     68e:	ed e7       	ldi	r30, 0x7D	; 125
     690:	f0 e0       	ldi	r31, 0x00	; 0
     692:	80 81       	ld	r24, Z
     694:	81 60       	ori	r24, 0x01	; 1
     696:	80 83       	st	Z, r24
     698:	19 c0       	rjmp	.+50     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     69a:	87 b7       	in	r24, 0x37	; 55
     69c:	84 62       	ori	r24, 0x24	; 36
     69e:	87 bf       	out	0x37, r24	; 55
     6a0:	15 c0       	rjmp	.+42     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6a2:	87 b7       	in	r24, 0x37	; 55
     6a4:	8c 61       	ori	r24, 0x1C	; 28
     6a6:	87 bf       	out	0x37, r24	; 55
     6a8:	11 c0       	rjmp	.+34     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6aa:	87 b7       	in	r24, 0x37	; 55
     6ac:	8c 61       	ori	r24, 0x1C	; 28
     6ae:	87 bf       	out	0x37, r24	; 55
     6b0:	ed e7       	ldi	r30, 0x7D	; 125
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	80 81       	ld	r24, Z
     6b6:	81 60       	ori	r24, 0x01	; 1
     6b8:	80 83       	st	Z, r24
     6ba:	08 c0       	rjmp	.+16     	; 0x6cc <TIMER_COUNTER1enable+0x18e>
     6bc:	87 b7       	in	r24, 0x37	; 55
     6be:	88 61       	ori	r24, 0x18	; 24
     6c0:	87 bf       	out	0x37, r24	; 55
     6c2:	ed e7       	ldi	r30, 0x7D	; 125
     6c4:	f0 e0       	ldi	r31, 0x00	; 0
     6c6:	80 81       	ld	r24, Z
     6c8:	81 60       	ori	r24, 0x01	; 1
     6ca:	80 83       	st	Z, r24
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	92 e0       	ldi	r25, 0x02	; 2
     6d0:	11 96       	adiw	r26, 0x01	; 1
     6d2:	9c 93       	st	X, r25
     6d4:	8e 93       	st	-X, r24
     6d6:	88 e1       	ldi	r24, 0x18	; 24
     6d8:	92 e0       	ldi	r25, 0x02	; 2
     6da:	13 96       	adiw	r26, 0x03	; 3
     6dc:	9c 93       	st	X, r25
     6de:	8e 93       	st	-X, r24
     6e0:	12 97       	sbiw	r26, 0x02	; 2
     6e2:	80 e3       	ldi	r24, 0x30	; 48
     6e4:	92 e0       	ldi	r25, 0x02	; 2
     6e6:	15 96       	adiw	r26, 0x05	; 5
     6e8:	9c 93       	st	X, r25
     6ea:	8e 93       	st	-X, r24
     6ec:	14 97       	sbiw	r26, 0x04	; 4
     6ee:	88 e4       	ldi	r24, 0x48	; 72
     6f0:	92 e0       	ldi	r25, 0x02	; 2
     6f2:	17 96       	adiw	r26, 0x07	; 7
     6f4:	9c 93       	st	X, r25
     6f6:	8e 93       	st	-X, r24
     6f8:	16 97       	sbiw	r26, 0x06	; 6
     6fa:	8b e4       	ldi	r24, 0x4B	; 75
     6fc:	92 e0       	ldi	r25, 0x02	; 2
     6fe:	19 96       	adiw	r26, 0x09	; 9
     700:	9c 93       	st	X, r25
     702:	8e 93       	st	-X, r24
     704:	18 97       	sbiw	r26, 0x08	; 8
     706:	8e e4       	ldi	r24, 0x4E	; 78
     708:	92 e0       	ldi	r25, 0x02	; 2
     70a:	1b 96       	adiw	r26, 0x0b	; 11
     70c:	9c 93       	st	X, r25
     70e:	8e 93       	st	-X, r24
     710:	1a 97       	sbiw	r26, 0x0a	; 10
     712:	8a eb       	ldi	r24, 0xBA	; 186
     714:	91 e0       	ldi	r25, 0x01	; 1
     716:	1d 96       	adiw	r26, 0x0d	; 13
     718:	9c 93       	st	X, r25
     71a:	8e 93       	st	-X, r24
     71c:	1c 97       	sbiw	r26, 0x0c	; 12
     71e:	83 e5       	ldi	r24, 0x53	; 83
     720:	92 e0       	ldi	r25, 0x02	; 2
     722:	1f 96       	adiw	r26, 0x0f	; 15
     724:	9c 93       	st	X, r25
     726:	8e 93       	st	-X, r24
     728:	1e 97       	sbiw	r26, 0x0e	; 14
     72a:	cd 01       	movw	r24, r26
     72c:	1f 91       	pop	r17
     72e:	0f 91       	pop	r16
     730:	08 95       	ret

00000732 <__vector_16>:
	timer3_state=0;
}
/***Interrupt***/
// So that main will not freeze when not defined, therefore exclude here! before use.
//ISR(TIMER0_COMP_vect){ }
ISR(TIMER0_OVF_vect){ }
     732:	1f 92       	push	r1
     734:	0f 92       	push	r0
     736:	0f b6       	in	r0, 0x3f	; 63
     738:	0f 92       	push	r0
     73a:	11 24       	eor	r1, r1
     73c:	0f 90       	pop	r0
     73e:	0f be       	out	0x3f, r0	; 63
     740:	0f 90       	pop	r0
     742:	1f 90       	pop	r1
     744:	18 95       	reti

00000746 <__vector_11>:
ISR(TIMER1_CAPT_vect){ }
     746:	1f 92       	push	r1
     748:	0f 92       	push	r0
     74a:	0f b6       	in	r0, 0x3f	; 63
     74c:	0f 92       	push	r0
     74e:	11 24       	eor	r1, r1
     750:	0f 90       	pop	r0
     752:	0f be       	out	0x3f, r0	; 63
     754:	0f 90       	pop	r0
     756:	1f 90       	pop	r1
     758:	18 95       	reti

0000075a <__vector_13>:
//ISR(TIMER1_COMPA_vect){ }
ISR(TIMER1_COMPB_vect){ }
     75a:	1f 92       	push	r1
     75c:	0f 92       	push	r0
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	0f 92       	push	r0
     762:	11 24       	eor	r1, r1
     764:	0f 90       	pop	r0
     766:	0f be       	out	0x3f, r0	; 63
     768:	0f 90       	pop	r0
     76a:	1f 90       	pop	r1
     76c:	18 95       	reti

0000076e <__vector_24>:
ISR(TIMER1_COMPC_vect){ }
     76e:	1f 92       	push	r1
     770:	0f 92       	push	r0
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	0f 92       	push	r0
     776:	11 24       	eor	r1, r1
     778:	0f 90       	pop	r0
     77a:	0f be       	out	0x3f, r0	; 63
     77c:	0f 90       	pop	r0
     77e:	1f 90       	pop	r1
     780:	18 95       	reti

00000782 <__vector_14>:
ISR(TIMER1_OVF_vect){ }
     782:	1f 92       	push	r1
     784:	0f 92       	push	r0
     786:	0f b6       	in	r0, 0x3f	; 63
     788:	0f 92       	push	r0
     78a:	11 24       	eor	r1, r1
     78c:	0f 90       	pop	r0
     78e:	0f be       	out	0x3f, r0	; 63
     790:	0f 90       	pop	r0
     792:	1f 90       	pop	r1
     794:	18 95       	reti

00000796 <__vector_10>:
ISR(TIMER2_OVF_vect){ }
     796:	1f 92       	push	r1
     798:	0f 92       	push	r0
     79a:	0f b6       	in	r0, 0x3f	; 63
     79c:	0f 92       	push	r0
     79e:	11 24       	eor	r1, r1
     7a0:	0f 90       	pop	r0
     7a2:	0f be       	out	0x3f, r0	; 63
     7a4:	0f 90       	pop	r0
     7a6:	1f 90       	pop	r1
     7a8:	18 95       	reti

000007aa <__vector_25>:
ISR(TIMER3_CAPT_vect){ }
     7aa:	1f 92       	push	r1
     7ac:	0f 92       	push	r0
     7ae:	0f b6       	in	r0, 0x3f	; 63
     7b0:	0f 92       	push	r0
     7b2:	11 24       	eor	r1, r1
     7b4:	0f 90       	pop	r0
     7b6:	0f be       	out	0x3f, r0	; 63
     7b8:	0f 90       	pop	r0
     7ba:	1f 90       	pop	r1
     7bc:	18 95       	reti

000007be <__vector_26>:
ISR(TIMER3_COMPA_vect){ }
     7be:	1f 92       	push	r1
     7c0:	0f 92       	push	r0
     7c2:	0f b6       	in	r0, 0x3f	; 63
     7c4:	0f 92       	push	r0
     7c6:	11 24       	eor	r1, r1
     7c8:	0f 90       	pop	r0
     7ca:	0f be       	out	0x3f, r0	; 63
     7cc:	0f 90       	pop	r0
     7ce:	1f 90       	pop	r1
     7d0:	18 95       	reti

000007d2 <__vector_27>:
ISR(TIMER3_COMPB_vect){ }
     7d2:	1f 92       	push	r1
     7d4:	0f 92       	push	r0
     7d6:	0f b6       	in	r0, 0x3f	; 63
     7d8:	0f 92       	push	r0
     7da:	11 24       	eor	r1, r1
     7dc:	0f 90       	pop	r0
     7de:	0f be       	out	0x3f, r0	; 63
     7e0:	0f 90       	pop	r0
     7e2:	1f 90       	pop	r1
     7e4:	18 95       	reti

000007e6 <__vector_28>:
ISR(TIMER3_COMPC_vect){ }
     7e6:	1f 92       	push	r1
     7e8:	0f 92       	push	r0
     7ea:	0f b6       	in	r0, 0x3f	; 63
     7ec:	0f 92       	push	r0
     7ee:	11 24       	eor	r1, r1
     7f0:	0f 90       	pop	r0
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	0f 90       	pop	r0
     7f6:	1f 90       	pop	r1
     7f8:	18 95       	reti

000007fa <__vector_29>:
ISR(TIMER3_OVF_vect){ }
     7fa:	1f 92       	push	r1
     7fc:	0f 92       	push	r0
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	0f 92       	push	r0
     802:	11 24       	eor	r1, r1
     804:	0f 90       	pop	r0
     806:	0f be       	out	0x3f, r0	; 63
     808:	0f 90       	pop	r0
     80a:	1f 90       	pop	r1
     80c:	18 95       	reti

0000080e <__vector_18>:
	}else{
		uart1_index=0;
		ret=uart1_msg;
	}
	return ret;
}
     80e:	1f 92       	push	r1
     810:	0f 92       	push	r0
     812:	0f b6       	in	r0, 0x3f	; 63
     814:	0f 92       	push	r0
     816:	11 24       	eor	r1, r1
     818:	0b b6       	in	r0, 0x3b	; 59
     81a:	0f 92       	push	r0
     81c:	8f 93       	push	r24
     81e:	9f 93       	push	r25
     820:	ef 93       	push	r30
     822:	ff 93       	push	r31
     824:	8b b1       	in	r24, 0x0b	; 11
     826:	9a b1       	in	r25, 0x0a	; 10
     828:	88 71       	andi	r24, 0x18	; 24
     82a:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <UART_LastRxError>
     82e:	e0 91 8c 02 	lds	r30, 0x028C	; 0x80028c <UART_RxHead>
     832:	ef 5f       	subi	r30, 0xFF	; 255
     834:	ef 73       	andi	r30, 0x3F	; 63
     836:	90 91 8d 02 	lds	r25, 0x028D	; 0x80028d <UART_RxTail>
     83a:	e9 13       	cpse	r30, r25
     83c:	04 c0       	rjmp	.+8      	; 0x846 <__vector_18+0x38>
     83e:	82 e0       	ldi	r24, 0x02	; 2
     840:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <UART_LastRxError>
     844:	0f c0       	rjmp	.+30     	; 0x864 <__vector_18+0x56>
     846:	9c b1       	in	r25, 0x0c	; 12
     848:	e0 93 8c 02 	sts	0x028C, r30	; 0x80028c <UART_RxHead>
     84c:	88 23       	and	r24, r24
     84e:	31 f0       	breq	.+12     	; 0x85c <__vector_18+0x4e>
     850:	f0 e0       	ldi	r31, 0x00	; 0
     852:	e1 57       	subi	r30, 0x71	; 113
     854:	fd 4f       	sbci	r31, 0xFD	; 253
     856:	88 e5       	ldi	r24, 0x58	; 88
     858:	80 83       	st	Z, r24
     85a:	04 c0       	rjmp	.+8      	; 0x864 <__vector_18+0x56>
     85c:	f0 e0       	ldi	r31, 0x00	; 0
     85e:	e1 57       	subi	r30, 0x71	; 113
     860:	fd 4f       	sbci	r31, 0xFD	; 253
     862:	90 83       	st	Z, r25
     864:	ff 91       	pop	r31
     866:	ef 91       	pop	r30
     868:	9f 91       	pop	r25
     86a:	8f 91       	pop	r24
     86c:	0f 90       	pop	r0
     86e:	0b be       	out	0x3b, r0	; 59
     870:	0f 90       	pop	r0
     872:	0f be       	out	0x3f, r0	; 63
     874:	0f 90       	pop	r0
     876:	1f 90       	pop	r1
     878:	18 95       	reti

0000087a <__vector_19>:
     87a:	1f 92       	push	r1
     87c:	0f 92       	push	r0
     87e:	0f b6       	in	r0, 0x3f	; 63
     880:	0f 92       	push	r0
     882:	11 24       	eor	r1, r1
     884:	0b b6       	in	r0, 0x3b	; 59
     886:	0f 92       	push	r0
     888:	8f 93       	push	r24
     88a:	9f 93       	push	r25
     88c:	ef 93       	push	r30
     88e:	ff 93       	push	r31
     890:	e0 91 c7 01 	lds	r30, 0x01C7	; 0x8001c7 <UART_TxTail>
     894:	f0 e0       	ldi	r31, 0x00	; 0
     896:	e4 5b       	subi	r30, 0xB4	; 180
     898:	fd 4f       	sbci	r31, 0xFD	; 253
     89a:	80 81       	ld	r24, Z
     89c:	8c b9       	out	0x0c, r24	; 12
     89e:	10 82       	st	Z, r1
     8a0:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <UART_TxTail>
     8a4:	8f 5f       	subi	r24, 0xFF	; 255
     8a6:	8f 73       	andi	r24, 0x3F	; 63
     8a8:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <UART_TxTail>
     8ac:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <UART_TxHead>
     8b0:	89 13       	cpse	r24, r25
     8b2:	01 c0       	rjmp	.+2      	; 0x8b6 <__vector_19+0x3c>
     8b4:	55 98       	cbi	0x0a, 5	; 10
     8b6:	ff 91       	pop	r31
     8b8:	ef 91       	pop	r30
     8ba:	9f 91       	pop	r25
     8bc:	8f 91       	pop	r24
     8be:	0f 90       	pop	r0
     8c0:	0b be       	out	0x3b, r0	; 59
     8c2:	0f 90       	pop	r0
     8c4:	0f be       	out	0x3f, r0	; 63
     8c6:	0f 90       	pop	r0
     8c8:	1f 90       	pop	r1
     8ca:	18 95       	reti

000008cc <__vector_30>:
	UART1_TxHead = UART1_TxTail;
}
/***Interrupt***/
/***SIGNAL(UART1_RECEIVE_INTERRUPT)***/
SIGNAL(UART1_RECEIVE_INTERRUPT)
{
     8cc:	1f 92       	push	r1
     8ce:	0f 92       	push	r0
     8d0:	0f b6       	in	r0, 0x3f	; 63
     8d2:	0f 92       	push	r0
     8d4:	11 24       	eor	r1, r1
     8d6:	0b b6       	in	r0, 0x3b	; 59
     8d8:	0f 92       	push	r0
     8da:	8f 93       	push	r24
     8dc:	9f 93       	push	r25
     8de:	ef 93       	push	r30
     8e0:	ff 93       	push	r31
    unsigned char tmphead;
	unsigned char data;
	unsigned char bit9;
    unsigned char usr;
    /***read UART status register and UART data register***/
	usr  = UART1_STATUS;
     8e2:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    bit9 = UART1_CONTROL;
     8e6:	90 91 9a 00 	lds	r25, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    bit9 = 0x01 & (bit9>>1);
    /***/
    UART1_LastRxError = (usr & (_BV(FE1)|_BV(DOR1)));
     8ea:	88 71       	andi	r24, 0x18	; 24
     8ec:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <UART1_LastRxError>
	/***calculate buffer index***/
    tmphead = ( UART1_RxHead + 1) & UART_RX_BUFFER_MASK;
     8f0:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <UART1_RxHead>
     8f4:	ef 5f       	subi	r30, 0xFF	; 255
     8f6:	ef 73       	andi	r30, 0x3F	; 63
    if ( tmphead == UART1_RxTail ) {	
     8f8:	90 91 8e 02 	lds	r25, 0x028E	; 0x80028e <UART1_RxTail>
     8fc:	e9 13       	cpse	r30, r25
     8fe:	04 c0       	rjmp	.+8      	; 0x908 <__vector_30+0x3c>
        /***error: receive buffer overflow, caracter is lost***/
        UART1_LastRxError = UART_BUFFER_OVERFLOW >> 8; 
     900:	82 e0       	ldi	r24, 0x02	; 2
     902:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <UART1_LastRxError>
     906:	10 c0       	rjmp	.+32     	; 0x928 <__vector_30+0x5c>
	}else{
		data = UART1_DATA;
     908:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
        /***store new index***/
        UART1_RxHead = tmphead;
     90c:	e0 93 c8 01 	sts	0x01C8, r30	; 0x8001c8 <UART1_RxHead>
		if(UART1_LastRxError){
     910:	88 23       	and	r24, r24
     912:	31 f0       	breq	.+12     	; 0x920 <__vector_30+0x54>
			/***store indication data error in buffer***/
			UART1_RxBuf[tmphead] = 'X';
     914:	f0 e0       	ldi	r31, 0x00	; 0
     916:	eb 57       	subi	r30, 0x7B	; 123
     918:	fe 4f       	sbci	r31, 0xFE	; 254
     91a:	88 e5       	ldi	r24, 0x58	; 88
     91c:	80 83       	st	Z, r24
     91e:	04 c0       	rjmp	.+8      	; 0x928 <__vector_30+0x5c>
		}else{
			/***store received data in buffer***/
			UART1_RxBuf[tmphead] = data;
     920:	f0 e0       	ldi	r31, 0x00	; 0
     922:	eb 57       	subi	r30, 0x7B	; 123
     924:	fe 4f       	sbci	r31, 0xFE	; 254
     926:	90 83       	st	Z, r25
		}
    }
}
     928:	ff 91       	pop	r31
     92a:	ef 91       	pop	r30
     92c:	9f 91       	pop	r25
     92e:	8f 91       	pop	r24
     930:	0f 90       	pop	r0
     932:	0b be       	out	0x3b, r0	; 59
     934:	0f 90       	pop	r0
     936:	0f be       	out	0x3f, r0	; 63
     938:	0f 90       	pop	r0
     93a:	1f 90       	pop	r1
     93c:	18 95       	reti

0000093e <__vector_31>:
/***SIGNAL(UART1_TRANSMIT_INTERRUPT)***/
SIGNAL(UART1_TRANSMIT_INTERRUPT)
{
     93e:	1f 92       	push	r1
     940:	0f 92       	push	r0
     942:	0f b6       	in	r0, 0x3f	; 63
     944:	0f 92       	push	r0
     946:	11 24       	eor	r1, r1
     948:	0b b6       	in	r0, 0x3b	; 59
     94a:	0f 92       	push	r0
     94c:	8f 93       	push	r24
     94e:	9f 93       	push	r25
     950:	ef 93       	push	r30
     952:	ff 93       	push	r31
	uint8_t tail = UART1_TxTail;
	UART1_DATA = UART1_TxBuf[tail];
     954:	e0 91 84 01 	lds	r30, 0x0184	; 0x800184 <UART1_TxTail>
     958:	f0 e0       	ldi	r31, 0x00	; 0
     95a:	e4 5f       	subi	r30, 0xF4	; 244
     95c:	fd 4f       	sbci	r31, 0xFD	; 253
     95e:	80 81       	ld	r24, Z
     960:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
	UART1_TxBuf[tail]='\0';
     964:	10 82       	st	Z, r1
	UART1_TxTail = (UART1_TxTail + 1) & UART_TX_BUFFER_MASK;
     966:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <UART1_TxTail>
     96a:	8f 5f       	subi	r24, 0xFF	; 255
     96c:	8f 73       	andi	r24, 0x3F	; 63
     96e:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <UART1_TxTail>
	if ( UART1_TxTail != UART1_TxHead )
     972:	90 91 ca 01 	lds	r25, 0x01CA	; 0x8001ca <UART1_TxHead>
     976:	89 13       	cpse	r24, r25
     978:	05 c0       	rjmp	.+10     	; 0x984 <__vector_31+0x46>
        ;
    else
		UART1_CONTROL &= ~_BV(UART1_UDRIE);
     97a:	ea e9       	ldi	r30, 0x9A	; 154
     97c:	f0 e0       	ldi	r31, 0x00	; 0
     97e:	80 81       	ld	r24, Z
     980:	8f 7d       	andi	r24, 0xDF	; 223
     982:	80 83       	st	Z, r24
}
     984:	ff 91       	pop	r31
     986:	ef 91       	pop	r30
     988:	9f 91       	pop	r25
     98a:	8f 91       	pop	r24
     98c:	0f 90       	pop	r0
     98e:	0b be       	out	0x3b, r0	; 59
     990:	0f 90       	pop	r0
     992:	0f be       	out	0x3f, r0	; 63
     994:	0f 90       	pop	r0
     996:	1f 90       	pop	r1
     998:	18 95       	reti

0000099a <EEPROMenable>:
#include "eeprom.h"
/***Constant & Macro***/
/***Global File Variable***/
/***Header***/
/***Procedure & Function***/
EEPROM EEPROMenable(void){
     99a:	fc 01       	movw	r30, r24
	eprom.write_float=eeprom_write_float;
	eprom.update_float=eeprom_update_float;
	eprom.read_block=eeprom_read_block;
	eprom.write_block=eeprom_write_block;
	eprom.update_block=eeprom_update_block;
	return eprom;
     99c:	80 e3       	ldi	r24, 0x30	; 48
     99e:	96 e1       	ldi	r25, 0x16	; 22
     9a0:	91 83       	std	Z+1, r25	; 0x01
     9a2:	80 83       	st	Z, r24
     9a4:	82 e7       	ldi	r24, 0x72	; 114
     9a6:	96 e1       	ldi	r25, 0x16	; 22
     9a8:	93 83       	std	Z+3, r25	; 0x03
     9aa:	82 83       	std	Z+2, r24	; 0x02
     9ac:	8c e4       	ldi	r24, 0x4C	; 76
     9ae:	96 e1       	ldi	r25, 0x16	; 22
     9b0:	95 83       	std	Z+5, r25	; 0x05
     9b2:	84 83       	std	Z+4, r24	; 0x04
     9b4:	88 e3       	ldi	r24, 0x38	; 56
     9b6:	96 e1       	ldi	r25, 0x16	; 22
     9b8:	97 83       	std	Z+7, r25	; 0x07
     9ba:	86 83       	std	Z+6, r24	; 0x06
     9bc:	84 e8       	ldi	r24, 0x84	; 132
     9be:	96 e1       	ldi	r25, 0x16	; 22
     9c0:	91 87       	std	Z+9, r25	; 0x09
     9c2:	80 87       	std	Z+8, r24	; 0x08
     9c4:	85 e6       	ldi	r24, 0x65	; 101
     9c6:	96 e1       	ldi	r25, 0x16	; 22
     9c8:	93 87       	std	Z+11, r25	; 0x0b
     9ca:	82 87       	std	Z+10, r24	; 0x0a
     9cc:	8f e7       	ldi	r24, 0x7F	; 127
     9ce:	96 e1       	ldi	r25, 0x16	; 22
     9d0:	97 87       	std	Z+15, r25	; 0x0f
     9d2:	86 87       	std	Z+14, r24	; 0x0e
     9d4:	8f e7       	ldi	r24, 0x7F	; 127
     9d6:	96 e1       	ldi	r25, 0x16	; 22
     9d8:	95 8b       	std	Z+21, r25	; 0x15
     9da:	84 8b       	std	Z+20, r24	; 0x14
     9dc:	8d e5       	ldi	r24, 0x5D	; 93
     9de:	96 e1       	ldi	r25, 0x16	; 22
     9e0:	97 8b       	std	Z+23, r25	; 0x17
     9e2:	86 8b       	std	Z+22, r24	; 0x16
     9e4:	80 e2       	ldi	r24, 0x20	; 32
     9e6:	96 e1       	ldi	r25, 0x16	; 22
     9e8:	91 8f       	std	Z+25, r25	; 0x19
     9ea:	80 8f       	std	Z+24, r24	; 0x18
     9ec:	89 e6       	ldi	r24, 0x69	; 105
     9ee:	96 e1       	ldi	r25, 0x16	; 22
     9f0:	93 8f       	std	Z+27, r25	; 0x1b
     9f2:	82 8f       	std	Z+26, r24	; 0x1a
     9f4:	8d e3       	ldi	r24, 0x3D	; 61
     9f6:	96 e1       	ldi	r25, 0x16	; 22
     9f8:	95 8f       	std	Z+29, r25	; 0x1d
     9fa:	84 8f       	std	Z+28, r24	; 0x1c
}
     9fc:	cf 01       	movw	r24, r30
     9fe:	08 95       	ret

00000a00 <EXPLODEboot>:
	/******/
	return explode;
}
// boot
void EXPLODEboot(EXPLODE* self, uint8_t x)
{
     a00:	fc 01       	movw	r30, r24
	self->XI = self->XF;
     a02:	82 81       	ldd	r24, Z+2	; 0x02
     a04:	93 81       	ldd	r25, Z+3	; 0x03
     a06:	91 83       	std	Z+1, r25	; 0x01
     a08:	80 83       	st	Z, r24
	self->XF = x;
     a0a:	70 e0       	ldi	r23, 0x00	; 0
     a0c:	73 83       	std	Z+3, r23	; 0x03
     a0e:	62 83       	std	Z+2, r22	; 0x02
     a10:	08 95       	ret

00000a12 <EXPLODEhh>:
	trans=diff&self->XF;
	return (trans<<nbits)|diff;
}
// hh
uint8_t EXPLODEhh(EXPLODE* self)
{
     a12:	fc 01       	movw	r30, r24
	uint8_t i;
	i=self->XI&self->XF;
	return i;
     a14:	90 81       	ld	r25, Z
     a16:	82 81       	ldd	r24, Z+2	; 0x02
}
     a18:	89 23       	and	r24, r25
     a1a:	08 95       	ret

00000a1c <EXPLODEll>:
// ll
uint8_t EXPLODEll(EXPLODE* self)
{
     a1c:	fc 01       	movw	r30, r24
	uint8_t i;
	i=self->XI|self->XF;
	return ~i;
     a1e:	90 81       	ld	r25, Z
     a20:	82 81       	ldd	r24, Z+2	; 0x02
     a22:	89 2b       	or	r24, r25
}
     a24:	80 95       	com	r24
     a26:	08 95       	ret

00000a28 <EXPLODElh>:
// lh
uint8_t EXPLODElh(EXPLODE* self)
{
     a28:	fc 01       	movw	r30, r24
	uint8_t i;
	i=self->XI^self->XF;
     a2a:	92 81       	ldd	r25, Z+2	; 0x02
     a2c:	80 81       	ld	r24, Z
     a2e:	89 27       	eor	r24, r25
	i&=self->XF;
	return i;
}
     a30:	89 23       	and	r24, r25
     a32:	08 95       	ret

00000a34 <EXPLODEhl>:
// hl
uint8_t EXPLODEhl(EXPLODE* self)
{
     a34:	fc 01       	movw	r30, r24
	uint8_t i;
	i=self->XF^self->XI;
     a36:	90 81       	ld	r25, Z
     a38:	82 81       	ldd	r24, Z+2	; 0x02
     a3a:	89 27       	eor	r24, r25
	i&=self->XI;
	return i;
}
     a3c:	89 23       	and	r24, r25
     a3e:	08 95       	ret

00000a40 <EXPLODEdiff>:
// diff
uint8_t EXPLODEdiff(EXPLODE* self)
{
     a40:	fc 01       	movw	r30, r24
	return self->XF^self->XI;
     a42:	92 81       	ldd	r25, Z+2	; 0x02
     a44:	80 81       	ld	r24, Z
}
     a46:	89 27       	eor	r24, r25
     a48:	08 95       	ret

00000a4a <EXPLODEdata>:
uint8_t EXPLODEdata(EXPLODE* self)
{
	return self->XF;	
}
     a4a:	fc 01       	movw	r30, r24
     a4c:	82 81       	ldd	r24, Z+2	; 0x02
     a4e:	08 95       	ret

00000a50 <EXPLODEmayia>:
	self->XI = self->XF;
	self->XF = x;
}
// mayia
uint8_t EXPLODEmayia(EXPLODE* self, uint8_t nbits)
{//magic formula
     a50:	dc 01       	movw	r26, r24
// power: raise base to n-th power; n >= 0
uint8_t EXPLODEPwr(uint8_t bs, uint8_t n)
{
	uint8_t i, p;
	p = 1;
	for (i = 1; i <= n; ++i)
     a52:	66 23       	and	r22, r22
     a54:	39 f0       	breq	.+14     	; 0xa64 <EXPLODEmayia+0x14>
     a56:	91 e0       	ldi	r25, 0x01	; 1
     a58:	21 e0       	ldi	r18, 0x01	; 1
	p = p * bs;
     a5a:	22 0f       	add	r18, r18
// power: raise base to n-th power; n >= 0
uint8_t EXPLODEPwr(uint8_t bs, uint8_t n)
{
	uint8_t i, p;
	p = 1;
	for (i = 1; i <= n; ++i)
     a5c:	9f 5f       	subi	r25, 0xFF	; 255
     a5e:	69 17       	cp	r22, r25
     a60:	e0 f7       	brcc	.-8      	; 0xa5a <EXPLODEmayia+0xa>
     a62:	01 c0       	rjmp	.+2      	; 0xa66 <EXPLODEmayia+0x16>
/*******************************************************************/
// power: raise base to n-th power; n >= 0
uint8_t EXPLODEPwr(uint8_t bs, uint8_t n)
{
	uint8_t i, p;
	p = 1;
     a64:	21 e0       	ldi	r18, 0x01	; 1
uint8_t EXPLODEmayia(EXPLODE* self, uint8_t nbits)
{//magic formula
	unsigned int mask;
	unsigned int diff;
	unsigned int trans;
	mask=EXPLODEPwr(2,nbits)-1;
     a66:	30 e0       	ldi	r19, 0x00	; 0
     a68:	21 50       	subi	r18, 0x01	; 1
     a6a:	31 09       	sbc	r19, r1
	self->XI&=mask;
     a6c:	ed 91       	ld	r30, X+
     a6e:	fc 91       	ld	r31, X
     a70:	11 97       	sbiw	r26, 0x01	; 1
     a72:	e2 23       	and	r30, r18
     a74:	f3 23       	and	r31, r19
     a76:	11 96       	adiw	r26, 0x01	; 1
     a78:	fc 93       	st	X, r31
     a7a:	ee 93       	st	-X, r30
	self->XF&=mask;
     a7c:	12 96       	adiw	r26, 0x02	; 2
     a7e:	4d 91       	ld	r20, X+
     a80:	5c 91       	ld	r21, X
     a82:	13 97       	sbiw	r26, 0x03	; 3
     a84:	24 23       	and	r18, r20
     a86:	35 23       	and	r19, r21
     a88:	13 96       	adiw	r26, 0x03	; 3
     a8a:	3c 93       	st	X, r19
     a8c:	2e 93       	st	-X, r18
     a8e:	12 97       	sbiw	r26, 0x02	; 2
	diff=self->XF^self->XI;
     a90:	cf 01       	movw	r24, r30
     a92:	82 27       	eor	r24, r18
     a94:	93 27       	eor	r25, r19
	trans=diff&self->XF;
	return (trans<<nbits)|diff;
     a96:	28 23       	and	r18, r24
     a98:	39 23       	and	r19, r25
     a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <EXPLODEmayia+0x50>
     a9c:	22 0f       	add	r18, r18
     a9e:	33 1f       	adc	r19, r19
     aa0:	6a 95       	dec	r22
     aa2:	e2 f7       	brpl	.-8      	; 0xa9c <EXPLODEmayia+0x4c>
}
     aa4:	82 2b       	or	r24, r18
     aa6:	08 95       	ret

00000aa8 <EXPLODEenable>:
uint8_t EXPLODEhl(EXPLODE* self);
uint8_t EXPLODEdiff(EXPLODE* self);
uint8_t EXPLODEdata(EXPLODE* self);
/***Procedure & Function***/
EXPLODE EXPLODEenable( void )
{
     aa8:	fc 01       	movw	r30, r24
	uint8_t tSREG;
	tSREG=STATUS_REGISTER;
     aaa:	9f b7       	in	r25, 0x3f	; 63
	STATUS_REGISTER&=~(1<<GLOBAL_INTERRUPT_ENABLE);
     aac:	8f b7       	in	r24, 0x3f	; 63
     aae:	8f 77       	andi	r24, 0x7F	; 127
     ab0:	8f bf       	out	0x3f, r24	; 63
	explode.ll=EXPLODEll;
	explode.lh=EXPLODElh;
	explode.hl=EXPLODEhl;
	explode.diff=EXPLODEdiff;
	explode.data=EXPLODEdata;
	STATUS_REGISTER=tSREG;
     ab2:	9f bf       	out	0x3f, r25	; 63
	/******/
	return explode;
     ab4:	11 82       	std	Z+1, r1	; 0x01
     ab6:	10 82       	st	Z, r1
     ab8:	13 82       	std	Z+3, r1	; 0x03
     aba:	12 82       	std	Z+2, r1	; 0x02
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	95 e0       	ldi	r25, 0x05	; 5
     ac0:	95 83       	std	Z+5, r25	; 0x05
     ac2:	84 83       	std	Z+4, r24	; 0x04
     ac4:	88 e2       	ldi	r24, 0x28	; 40
     ac6:	95 e0       	ldi	r25, 0x05	; 5
     ac8:	97 83       	std	Z+7, r25	; 0x07
     aca:	86 83       	std	Z+6, r24	; 0x06
     acc:	89 e0       	ldi	r24, 0x09	; 9
     ace:	95 e0       	ldi	r25, 0x05	; 5
     ad0:	91 87       	std	Z+9, r25	; 0x09
     ad2:	80 87       	std	Z+8, r24	; 0x08
     ad4:	8e e0       	ldi	r24, 0x0E	; 14
     ad6:	95 e0       	ldi	r25, 0x05	; 5
     ad8:	93 87       	std	Z+11, r25	; 0x0b
     ada:	82 87       	std	Z+10, r24	; 0x0a
     adc:	84 e1       	ldi	r24, 0x14	; 20
     ade:	95 e0       	ldi	r25, 0x05	; 5
     ae0:	95 87       	std	Z+13, r25	; 0x0d
     ae2:	84 87       	std	Z+12, r24	; 0x0c
     ae4:	8a e1       	ldi	r24, 0x1A	; 26
     ae6:	95 e0       	ldi	r25, 0x05	; 5
     ae8:	97 87       	std	Z+15, r25	; 0x0f
     aea:	86 87       	std	Z+14, r24	; 0x0e
     aec:	80 e2       	ldi	r24, 0x20	; 32
     aee:	95 e0       	ldi	r25, 0x05	; 5
     af0:	91 8b       	std	Z+17, r25	; 0x11
     af2:	80 8b       	std	Z+16, r24	; 0x10
     af4:	85 e2       	ldi	r24, 0x25	; 37
     af6:	95 e0       	ldi	r25, 0x05	; 5
     af8:	93 8b       	std	Z+19, r25	; 0x13
     afa:	82 8b       	std	Z+18, r24	; 0x12
}
     afc:	cf 01       	movw	r24, r30
     afe:	08 95       	ret

00000b00 <FUNCpinmatch>:
	return i;
}
uint8_t  bintobcd(uint8_t bin)
{
	return (((bin) / 10) << 4) + ((bin) % 10);
}
     b00:	68 23       	and	r22, r24
     b02:	44 23       	and	r20, r20
     b04:	21 f0       	breq	.+8      	; 0xb0e <FUNCpinmatch+0xe>
     b06:	86 17       	cp	r24, r22
     b08:	21 f0       	breq	.+8      	; 0xb12 <FUNCpinmatch+0x12>
     b0a:	80 e0       	ldi	r24, 0x00	; 0
     b0c:	08 95       	ret
     b0e:	61 11       	cpse	r22, r1
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	08 95       	ret

00000b14 <FUNChmerge>:
     b14:	86 2b       	or	r24, r22
     b16:	08 95       	ret

00000b18 <FUNClmerge>:
     b18:	86 23       	and	r24, r22
     b1a:	08 95       	ret

00000b1c <FUNChh>:
     b1c:	86 23       	and	r24, r22
     b1e:	08 95       	ret

00000b20 <FUNCll>:
     b20:	86 2b       	or	r24, r22
     b22:	80 95       	com	r24
     b24:	08 95       	ret

00000b26 <FUNClh>:
     b26:	86 27       	eor	r24, r22
     b28:	86 23       	and	r24, r22
     b2a:	08 95       	ret

00000b2c <FUNChl>:
     b2c:	60 95       	com	r22
     b2e:	86 23       	and	r24, r22
     b30:	08 95       	ret

00000b32 <FUNCdiff>:
     b32:	86 27       	eor	r24, r22
     b34:	08 95       	ret

00000b36 <FUNCswap>:
     b36:	cf 92       	push	r12
     b38:	df 92       	push	r13
     b3a:	ef 92       	push	r14
     b3c:	ff 92       	push	r15
     b3e:	0f 93       	push	r16
     b40:	1f 93       	push	r17
     b42:	fc 01       	movw	r30, r24
     b44:	00 81       	ld	r16, Z
     b46:	11 81       	ldd	r17, Z+1	; 0x01
     b48:	22 81       	ldd	r18, Z+2	; 0x02
     b4a:	33 81       	ldd	r19, Z+3	; 0x03
     b4c:	fb 01       	movw	r30, r22
     b4e:	c0 80       	ld	r12, Z
     b50:	d1 80       	ldd	r13, Z+1	; 0x01
     b52:	e2 80       	ldd	r14, Z+2	; 0x02
     b54:	f3 80       	ldd	r15, Z+3	; 0x03
     b56:	fc 01       	movw	r30, r24
     b58:	c0 82       	st	Z, r12
     b5a:	d1 82       	std	Z+1, r13	; 0x01
     b5c:	e2 82       	std	Z+2, r14	; 0x02
     b5e:	f3 82       	std	Z+3, r15	; 0x03
     b60:	fb 01       	movw	r30, r22
     b62:	00 83       	st	Z, r16
     b64:	11 83       	std	Z+1, r17	; 0x01
     b66:	22 83       	std	Z+2, r18	; 0x02
     b68:	33 83       	std	Z+3, r19	; 0x03
     b6a:	1f 91       	pop	r17
     b6c:	0f 91       	pop	r16
     b6e:	ff 90       	pop	r15
     b70:	ef 90       	pop	r14
     b72:	df 90       	pop	r13
     b74:	cf 90       	pop	r12
     b76:	08 95       	ret

00000b78 <FUNCcopy>:
     b78:	fb 01       	movw	r30, r22
     b7a:	20 81       	ld	r18, Z
     b7c:	fc 01       	movw	r30, r24
     b7e:	20 83       	st	Z, r18
     b80:	22 23       	and	r18, r18
     b82:	39 f0       	breq	.+14     	; 0xb92 <FUNCcopy+0x1a>
     b84:	db 01       	movw	r26, r22
     b86:	11 96       	adiw	r26, 0x01	; 1
     b88:	31 96       	adiw	r30, 0x01	; 1
     b8a:	9d 91       	ld	r25, X+
     b8c:	91 93       	st	Z+, r25
     b8e:	91 11       	cpse	r25, r1
     b90:	fc cf       	rjmp	.-8      	; 0xb8a <FUNCcopy+0x12>
     b92:	08 95       	ret

00000b94 <FUNCsqueeze>:
     b94:	cf 93       	push	r28
     b96:	df 93       	push	r29
     b98:	ec 01       	movw	r28, r24
     b9a:	98 81       	ld	r25, Y
     b9c:	99 23       	and	r25, r25
     b9e:	99 f0       	breq	.+38     	; 0xbc6 <FUNCsqueeze+0x32>
     ba0:	fe 01       	movw	r30, r28
     ba2:	31 96       	adiw	r30, 0x01	; 1
     ba4:	20 e0       	ldi	r18, 0x00	; 0
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	49 2f       	mov	r20, r25
     baa:	50 e0       	ldi	r21, 0x00	; 0
     bac:	46 17       	cp	r20, r22
     bae:	57 07       	cpc	r21, r23
     bb0:	31 f0       	breq	.+12     	; 0xbbe <FUNCsqueeze+0x2a>
     bb2:	de 01       	movw	r26, r28
     bb4:	a2 0f       	add	r26, r18
     bb6:	b3 1f       	adc	r27, r19
     bb8:	9c 93       	st	X, r25
     bba:	2f 5f       	subi	r18, 0xFF	; 255
     bbc:	3f 4f       	sbci	r19, 0xFF	; 255
     bbe:	91 91       	ld	r25, Z+
     bc0:	91 11       	cpse	r25, r1
     bc2:	f2 cf       	rjmp	.-28     	; 0xba8 <FUNCsqueeze+0x14>
     bc4:	02 c0       	rjmp	.+4      	; 0xbca <FUNCsqueeze+0x36>
     bc6:	20 e0       	ldi	r18, 0x00	; 0
     bc8:	30 e0       	ldi	r19, 0x00	; 0
     bca:	fe 01       	movw	r30, r28
     bcc:	e2 0f       	add	r30, r18
     bce:	f3 1f       	adc	r31, r19
     bd0:	10 82       	st	Z, r1
     bd2:	df 91       	pop	r29
     bd4:	cf 91       	pop	r28
     bd6:	08 95       	ret

00000bd8 <FUNCshellsort>:
     bd8:	2f 92       	push	r2
     bda:	3f 92       	push	r3
     bdc:	4f 92       	push	r4
     bde:	5f 92       	push	r5
     be0:	6f 92       	push	r6
     be2:	7f 92       	push	r7
     be4:	8f 92       	push	r8
     be6:	9f 92       	push	r9
     be8:	af 92       	push	r10
     bea:	bf 92       	push	r11
     bec:	cf 92       	push	r12
     bee:	df 92       	push	r13
     bf0:	ef 92       	push	r14
     bf2:	ff 92       	push	r15
     bf4:	0f 93       	push	r16
     bf6:	1f 93       	push	r17
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	00 d0       	rcall	.+0      	; 0xbfe <FUNCshellsort+0x26>
     bfe:	00 d0       	rcall	.+0      	; 0xc00 <FUNCshellsort+0x28>
     c00:	cd b7       	in	r28, 0x3d	; 61
     c02:	de b7       	in	r29, 0x3e	; 62
     c04:	2c 01       	movw	r4, r24
     c06:	1b 01       	movw	r2, r22
     c08:	4b 01       	movw	r8, r22
     c0a:	77 23       	and	r23, r23
     c0c:	1c f4       	brge	.+6      	; 0xc14 <FUNCshellsort+0x3c>
     c0e:	2f ef       	ldi	r18, 0xFF	; 255
     c10:	82 1a       	sub	r8, r18
     c12:	92 0a       	sbc	r9, r18
     c14:	95 94       	asr	r9
     c16:	87 94       	ror	r8
     c18:	18 14       	cp	r1, r8
     c1a:	19 04       	cpc	r1, r9
     c1c:	0c f4       	brge	.+2      	; 0xc20 <FUNCshellsort+0x48>
     c1e:	51 c0       	rjmp	.+162    	; 0xcc2 <FUNCshellsort+0xea>
     c20:	6a c0       	rjmp	.+212    	; 0xcf6 <FUNCshellsort+0x11e>
     c22:	96 01       	movw	r18, r12
     c24:	dd 20       	and	r13, r13
     c26:	9c f1       	brlt	.+102    	; 0xc8e <FUNCshellsort+0xb6>
     c28:	f5 01       	movw	r30, r10
     c2a:	40 81       	ld	r20, Z
     c2c:	51 81       	ldd	r21, Z+1	; 0x01
     c2e:	f4 01       	movw	r30, r8
     c30:	60 81       	ld	r22, Z
     c32:	71 81       	ldd	r23, Z+1	; 0x01
     c34:	64 17       	cp	r22, r20
     c36:	75 07       	cpc	r23, r21
     c38:	54 f5       	brge	.+84     	; 0xc8e <FUNCshellsort+0xb6>
     c3a:	8c 01       	movw	r16, r24
     c3c:	0a 0d       	add	r16, r10
     c3e:	1b 1d       	adc	r17, r11
     c40:	d4 01       	movw	r26, r8
     c42:	bc 82       	std	Y+4, r11	; 0x04
     c44:	ab 82       	std	Y+3, r10	; 0x03
     c46:	ba 82       	std	Y+2, r11	; 0x02
     c48:	a9 82       	std	Y+1, r10	; 0x01
     c4a:	eb 81       	ldd	r30, Y+3	; 0x03
     c4c:	fc 81       	ldd	r31, Y+4	; 0x04
     c4e:	71 83       	std	Z+1, r23	; 0x01
     c50:	60 83       	st	Z, r22
     c52:	11 96       	adiw	r26, 0x01	; 1
     c54:	5c 93       	st	X, r21
     c56:	4e 93       	st	-X, r20
     c58:	2e 19       	sub	r18, r14
     c5a:	3f 09       	sbc	r19, r15
     c5c:	c2 f0       	brmi	.+48     	; 0xc8e <FUNCshellsort+0xb6>
     c5e:	f8 01       	movw	r30, r16
     c60:	40 81       	ld	r20, Z
     c62:	51 81       	ldd	r21, Z+1	; 0x01
     c64:	e9 81       	ldd	r30, Y+1	; 0x01
     c66:	fa 81       	ldd	r31, Y+2	; 0x02
     c68:	60 81       	ld	r22, Z
     c6a:	71 81       	ldd	r23, Z+1	; 0x01
     c6c:	08 0f       	add	r16, r24
     c6e:	19 1f       	adc	r17, r25
     c70:	e8 0f       	add	r30, r24
     c72:	f9 1f       	adc	r31, r25
     c74:	fa 83       	std	Y+2, r31	; 0x02
     c76:	e9 83       	std	Y+1, r30	; 0x01
     c78:	eb 81       	ldd	r30, Y+3	; 0x03
     c7a:	fc 81       	ldd	r31, Y+4	; 0x04
     c7c:	e8 0f       	add	r30, r24
     c7e:	f9 1f       	adc	r31, r25
     c80:	fc 83       	std	Y+4, r31	; 0x04
     c82:	eb 83       	std	Y+3, r30	; 0x03
     c84:	a8 0f       	add	r26, r24
     c86:	b9 1f       	adc	r27, r25
     c88:	64 17       	cp	r22, r20
     c8a:	75 07       	cpc	r23, r21
     c8c:	f4 f2       	brlt	.-68     	; 0xc4a <FUNCshellsort+0x72>
     c8e:	ff ef       	ldi	r31, 0xFF	; 255
     c90:	cf 1a       	sub	r12, r31
     c92:	df 0a       	sbc	r13, r31
     c94:	22 e0       	ldi	r18, 0x02	; 2
     c96:	a2 0e       	add	r10, r18
     c98:	b1 1c       	adc	r11, r1
     c9a:	e2 e0       	ldi	r30, 0x02	; 2
     c9c:	8e 0e       	add	r8, r30
     c9e:	91 1c       	adc	r9, r1
     ca0:	c6 14       	cp	r12, r6
     ca2:	d7 04       	cpc	r13, r7
     ca4:	09 f0       	breq	.+2      	; 0xca8 <FUNCshellsort+0xd0>
     ca6:	bd cf       	rjmp	.-134    	; 0xc22 <FUNCshellsort+0x4a>
     ca8:	47 01       	movw	r8, r14
     caa:	ff 20       	and	r15, r15
     cac:	1c f4       	brge	.+6      	; 0xcb4 <FUNCshellsort+0xdc>
     cae:	ff ef       	ldi	r31, 0xFF	; 255
     cb0:	8f 1a       	sub	r8, r31
     cb2:	9f 0a       	sbc	r9, r31
     cb4:	95 94       	asr	r9
     cb6:	87 94       	ror	r8
     cb8:	18 14       	cp	r1, r8
     cba:	19 04       	cpc	r1, r9
     cbc:	e4 f4       	brge	.+56     	; 0xcf6 <FUNCshellsort+0x11e>
     cbe:	74 01       	movw	r14, r8
     cc0:	01 c0       	rjmp	.+2      	; 0xcc4 <FUNCshellsort+0xec>
     cc2:	74 01       	movw	r14, r8
     cc4:	82 14       	cp	r8, r2
     cc6:	93 04       	cpc	r9, r3
     cc8:	7c f7       	brge	.-34     	; 0xca8 <FUNCshellsort+0xd0>
     cca:	64 01       	movw	r12, r8
     ccc:	ce 18       	sub	r12, r14
     cce:	df 08       	sbc	r13, r15
     cd0:	56 01       	movw	r10, r12
     cd2:	aa 0c       	add	r10, r10
     cd4:	bb 1c       	adc	r11, r11
     cd6:	a4 0c       	add	r10, r4
     cd8:	b5 1c       	adc	r11, r5
     cda:	88 0c       	add	r8, r8
     cdc:	99 1c       	adc	r9, r9
     cde:	84 0c       	add	r8, r4
     ce0:	95 1c       	adc	r9, r5
     ce2:	31 01       	movw	r6, r2
     ce4:	6e 18       	sub	r6, r14
     ce6:	7f 08       	sbc	r7, r15
     ce8:	c7 01       	movw	r24, r14
     cea:	88 0f       	add	r24, r24
     cec:	99 1f       	adc	r25, r25
     cee:	91 95       	neg	r25
     cf0:	81 95       	neg	r24
     cf2:	91 09       	sbc	r25, r1
     cf4:	96 cf       	rjmp	.-212    	; 0xc22 <FUNCshellsort+0x4a>
     cf6:	0f 90       	pop	r0
     cf8:	0f 90       	pop	r0
     cfa:	0f 90       	pop	r0
     cfc:	0f 90       	pop	r0
     cfe:	df 91       	pop	r29
     d00:	cf 91       	pop	r28
     d02:	1f 91       	pop	r17
     d04:	0f 91       	pop	r16
     d06:	ff 90       	pop	r15
     d08:	ef 90       	pop	r14
     d0a:	df 90       	pop	r13
     d0c:	cf 90       	pop	r12
     d0e:	bf 90       	pop	r11
     d10:	af 90       	pop	r10
     d12:	9f 90       	pop	r9
     d14:	8f 90       	pop	r8
     d16:	7f 90       	pop	r7
     d18:	6f 90       	pop	r6
     d1a:	5f 90       	pop	r5
     d1c:	4f 90       	pop	r4
     d1e:	3f 90       	pop	r3
     d20:	2f 90       	pop	r2
     d22:	08 95       	ret

00000d24 <FUNCpmax>:
     d24:	86 17       	cp	r24, r22
     d26:	97 07       	cpc	r25, r23
     d28:	0c f4       	brge	.+2      	; 0xd2c <FUNCpmax+0x8>
     d2a:	cb 01       	movw	r24, r22
     d2c:	08 95       	ret

00000d2e <FUNCgcd>:
     d2e:	9b 01       	movw	r18, r22
     d30:	67 2b       	or	r22, r23
     d32:	11 f4       	brne	.+4      	; 0xd38 <FUNCgcd+0xa>
     d34:	08 95       	ret
     d36:	9a 01       	movw	r18, r20
     d38:	b9 01       	movw	r22, r18
     d3a:	0e 94 ad 15 	call	0x2b5a	; 0x2b5a <__divmodhi4>
     d3e:	ac 01       	movw	r20, r24
     d40:	82 2f       	mov	r24, r18
     d42:	93 2f       	mov	r25, r19
     d44:	41 15       	cp	r20, r1
     d46:	51 05       	cpc	r21, r1
     d48:	b1 f7       	brne	.-20     	; 0xd36 <FUNCgcd+0x8>
     d4a:	08 95       	ret

00000d4c <FUNCstrToInt>:
     d4c:	fc 01       	movw	r30, r24
     d4e:	90 81       	ld	r25, Z
     d50:	80 ed       	ldi	r24, 0xD0	; 208
     d52:	89 0f       	add	r24, r25
     d54:	8a 30       	cpi	r24, 0x0A	; 10
     d56:	d0 f4       	brcc	.+52     	; 0xd8c <FUNCstrToInt+0x40>
     d58:	31 96       	adiw	r30, 0x01	; 1
     d5a:	20 e0       	ldi	r18, 0x00	; 0
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	a9 01       	movw	r20, r18
     d60:	44 0f       	add	r20, r20
     d62:	55 1f       	adc	r21, r21
     d64:	22 0f       	add	r18, r18
     d66:	33 1f       	adc	r19, r19
     d68:	22 0f       	add	r18, r18
     d6a:	33 1f       	adc	r19, r19
     d6c:	22 0f       	add	r18, r18
     d6e:	33 1f       	adc	r19, r19
     d70:	42 0f       	add	r20, r18
     d72:	53 1f       	adc	r21, r19
     d74:	29 2f       	mov	r18, r25
     d76:	30 e0       	ldi	r19, 0x00	; 0
     d78:	20 53       	subi	r18, 0x30	; 48
     d7a:	31 09       	sbc	r19, r1
     d7c:	24 0f       	add	r18, r20
     d7e:	35 1f       	adc	r19, r21
     d80:	91 91       	ld	r25, Z+
     d82:	80 ed       	ldi	r24, 0xD0	; 208
     d84:	89 0f       	add	r24, r25
     d86:	8a 30       	cpi	r24, 0x0A	; 10
     d88:	50 f3       	brcs	.-44     	; 0xd5e <FUNCstrToInt+0x12>
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <FUNCstrToInt+0x44>
     d8c:	20 e0       	ldi	r18, 0x00	; 0
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	c9 01       	movw	r24, r18
     d92:	08 95       	ret

00000d94 <FUNCfilter>:
     d94:	86 23       	and	r24, r22
     d96:	08 95       	ret

00000d98 <FUNCticks>:
     d98:	00 97       	sbiw	r24, 0x00	; 0
     d9a:	39 f0       	breq	.+14     	; 0xdaa <FUNCticks+0x12>
     d9c:	20 e0       	ldi	r18, 0x00	; 0
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	2f 5f       	subi	r18, 0xFF	; 255
     da2:	3f 4f       	sbci	r19, 0xFF	; 255
     da4:	82 17       	cp	r24, r18
     da6:	93 07       	cpc	r25, r19
     da8:	d9 f7       	brne	.-10     	; 0xda0 <FUNCticks+0x8>
     daa:	08 95       	ret

00000dac <FUNCtwocomptoint8bit>:
     dac:	87 ff       	sbrs	r24, 7
     dae:	08 c0       	rjmp	.+16     	; 0xdc0 <FUNCtwocomptoint8bit+0x14>
     db0:	91 95       	neg	r25
     db2:	81 95       	neg	r24
     db4:	91 09       	sbc	r25, r1
     db6:	99 27       	eor	r25, r25
     db8:	91 95       	neg	r25
     dba:	81 95       	neg	r24
     dbc:	91 09       	sbc	r25, r1
     dbe:	08 95       	ret
     dc0:	8f 77       	andi	r24, 0x7F	; 127
     dc2:	99 27       	eor	r25, r25
     dc4:	08 95       	ret

00000dc6 <FUNCtwocomptoint10bit>:
     dc6:	91 ff       	sbrs	r25, 1
     dc8:	08 c0       	rjmp	.+16     	; 0xdda <FUNCtwocomptoint10bit+0x14>
     dca:	91 95       	neg	r25
     dcc:	81 95       	neg	r24
     dce:	91 09       	sbc	r25, r1
     dd0:	93 70       	andi	r25, 0x03	; 3
     dd2:	91 95       	neg	r25
     dd4:	81 95       	neg	r24
     dd6:	91 09       	sbc	r25, r1
     dd8:	08 95       	ret
     dda:	91 70       	andi	r25, 0x01	; 1
     ddc:	08 95       	ret

00000dde <FUNCtwocomptointnbit>:
     dde:	61 50       	subi	r22, 0x01	; 1
     de0:	21 e0       	ldi	r18, 0x01	; 1
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	02 c0       	rjmp	.+4      	; 0xdea <FUNCtwocomptointnbit+0xc>
     de6:	22 0f       	add	r18, r18
     de8:	33 1f       	adc	r19, r19
     dea:	6a 95       	dec	r22
     dec:	e2 f7       	brpl	.-8      	; 0xde6 <FUNCtwocomptointnbit+0x8>
     dee:	a9 01       	movw	r20, r18
     df0:	41 50       	subi	r20, 0x01	; 1
     df2:	51 09       	sbc	r21, r1
     df4:	b9 01       	movw	r22, r18
     df6:	68 23       	and	r22, r24
     df8:	79 23       	and	r23, r25
     dfa:	67 2b       	or	r22, r23
     dfc:	29 f0       	breq	.+10     	; 0xe08 <FUNCtwocomptointnbit+0x2a>
     dfe:	84 23       	and	r24, r20
     e00:	95 23       	and	r25, r21
     e02:	82 1b       	sub	r24, r18
     e04:	93 0b       	sbc	r25, r19
     e06:	08 95       	ret
     e08:	84 23       	and	r24, r20
     e0a:	95 23       	and	r25, r21
     e0c:	08 95       	ret

00000e0e <FUNCdec2bcd>:
     e0e:	9d ec       	ldi	r25, 0xCD	; 205
     e10:	89 9f       	mul	r24, r25
     e12:	91 2d       	mov	r25, r1
     e14:	11 24       	eor	r1, r1
     e16:	96 95       	lsr	r25
     e18:	96 95       	lsr	r25
     e1a:	96 95       	lsr	r25
     e1c:	39 2f       	mov	r19, r25
     e1e:	33 0f       	add	r19, r19
     e20:	23 2f       	mov	r18, r19
     e22:	22 0f       	add	r18, r18
     e24:	22 0f       	add	r18, r18
     e26:	23 0f       	add	r18, r19
     e28:	82 1b       	sub	r24, r18
     e2a:	20 e1       	ldi	r18, 0x10	; 16
     e2c:	92 9f       	mul	r25, r18
     e2e:	80 0d       	add	r24, r0
     e30:	11 24       	eor	r1, r1
     e32:	08 95       	ret

00000e34 <FUNCbcd2dec>:
     e34:	98 2f       	mov	r25, r24
     e36:	92 95       	swap	r25
     e38:	9f 70       	andi	r25, 0x0F	; 15
     e3a:	99 0f       	add	r25, r25
     e3c:	29 2f       	mov	r18, r25
     e3e:	22 0f       	add	r18, r18
     e40:	22 0f       	add	r18, r18
     e42:	92 0f       	add	r25, r18
     e44:	8f 70       	andi	r24, 0x0F	; 15
     e46:	89 0f       	add	r24, r25
     e48:	08 95       	ret

00000e4a <FUNCresizestr>:
     e4a:	fc 01       	movw	r30, r24
     e4c:	db 01       	movw	r26, r22
     e4e:	a1 53       	subi	r26, 0x31	; 49
     e50:	bd 4f       	sbci	r27, 0xFD	; 253
     e52:	1c 92       	st	X, r1
     e54:	16 16       	cp	r1, r22
     e56:	17 06       	cpc	r1, r23
     e58:	14 f5       	brge	.+68     	; 0xe9e <FUNCresizestr+0x54>
     e5a:	90 81       	ld	r25, Z
     e5c:	91 11       	cpse	r25, r1
     e5e:	0c c0       	rjmp	.+24     	; 0xe78 <FUNCresizestr+0x2e>
     e60:	17 c0       	rjmp	.+46     	; 0xe90 <FUNCresizestr+0x46>
     e62:	91 91       	ld	r25, Z+
     e64:	91 11       	cpse	r25, r1
     e66:	0d c0       	rjmp	.+26     	; 0xe82 <FUNCresizestr+0x38>
     e68:	15 c0       	rjmp	.+42     	; 0xe94 <FUNCresizestr+0x4a>
     e6a:	81 93       	st	Z+, r24
     e6c:	2f 5f       	subi	r18, 0xFF	; 255
     e6e:	3f 4f       	sbci	r19, 0xFF	; 255
     e70:	26 17       	cp	r18, r22
     e72:	37 07       	cpc	r19, r23
     e74:	d4 f3       	brlt	.-12     	; 0xe6a <FUNCresizestr+0x20>
     e76:	13 c0       	rjmp	.+38     	; 0xe9e <FUNCresizestr+0x54>
     e78:	af ec       	ldi	r26, 0xCF	; 207
     e7a:	b2 e0       	ldi	r27, 0x02	; 2
     e7c:	31 96       	adiw	r30, 0x01	; 1
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	9d 93       	st	X+, r25
     e84:	2f 5f       	subi	r18, 0xFF	; 255
     e86:	3f 4f       	sbci	r19, 0xFF	; 255
     e88:	62 17       	cp	r22, r18
     e8a:	73 07       	cpc	r23, r19
     e8c:	51 f7       	brne	.-44     	; 0xe62 <FUNCresizestr+0x18>
     e8e:	07 c0       	rjmp	.+14     	; 0xe9e <FUNCresizestr+0x54>
     e90:	20 e0       	ldi	r18, 0x00	; 0
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	f9 01       	movw	r30, r18
     e96:	e1 53       	subi	r30, 0x31	; 49
     e98:	fd 4f       	sbci	r31, 0xFD	; 253
     e9a:	80 e2       	ldi	r24, 0x20	; 32
     e9c:	e6 cf       	rjmp	.-52     	; 0xe6a <FUNCresizestr+0x20>
     e9e:	8f ec       	ldi	r24, 0xCF	; 207
     ea0:	92 e0       	ldi	r25, 0x02	; 2
     ea2:	08 95       	ret

00000ea4 <FUNCtrimmer>:
     ea4:	4f 92       	push	r4
     ea6:	5f 92       	push	r5
     ea8:	6f 92       	push	r6
     eaa:	7f 92       	push	r7
     eac:	af 92       	push	r10
     eae:	bf 92       	push	r11
     eb0:	cf 92       	push	r12
     eb2:	df 92       	push	r13
     eb4:	ef 92       	push	r14
     eb6:	ff 92       	push	r15
     eb8:	0f 93       	push	r16
     eba:	1f 93       	push	r17
     ebc:	cf 93       	push	r28
     ebe:	df 93       	push	r29
     ec0:	cd b7       	in	r28, 0x3d	; 61
     ec2:	de b7       	in	r29, 0x3e	; 62
     ec4:	29 01       	movw	r4, r18
     ec6:	3a 01       	movw	r6, r20
     ec8:	9b 01       	movw	r18, r22
     eca:	ac 01       	movw	r20, r24
     ecc:	24 19       	sub	r18, r4
     ece:	35 09       	sbc	r19, r5
     ed0:	46 09       	sbc	r20, r6
     ed2:	57 09       	sbc	r21, r7
     ed4:	89 89       	ldd	r24, Y+17	; 0x11
     ed6:	9a 89       	ldd	r25, Y+18	; 0x12
     ed8:	ab 89       	ldd	r26, Y+19	; 0x13
     eda:	bc 89       	ldd	r27, Y+20	; 0x14
     edc:	bc 01       	movw	r22, r24
     ede:	cd 01       	movw	r24, r26
     ee0:	6a 19       	sub	r22, r10
     ee2:	7b 09       	sbc	r23, r11
     ee4:	8c 09       	sbc	r24, r12
     ee6:	9d 09       	sbc	r25, r13
     ee8:	0e 94 8a 15 	call	0x2b14	; 0x2b14 <__mulsi3>
     eec:	a8 01       	movw	r20, r16
     eee:	97 01       	movw	r18, r14
     ef0:	24 19       	sub	r18, r4
     ef2:	35 09       	sbc	r19, r5
     ef4:	46 09       	sbc	r20, r6
     ef6:	57 09       	sbc	r21, r7
     ef8:	0e 94 e2 15 	call	0x2bc4	; 0x2bc4 <__divmodsi4>
     efc:	ca 01       	movw	r24, r20
     efe:	b9 01       	movw	r22, r18
     f00:	6a 0d       	add	r22, r10
     f02:	7b 1d       	adc	r23, r11
     f04:	8c 1d       	adc	r24, r12
     f06:	9d 1d       	adc	r25, r13
     f08:	df 91       	pop	r29
     f0a:	cf 91       	pop	r28
     f0c:	1f 91       	pop	r17
     f0e:	0f 91       	pop	r16
     f10:	ff 90       	pop	r15
     f12:	ef 90       	pop	r14
     f14:	df 90       	pop	r13
     f16:	cf 90       	pop	r12
     f18:	bf 90       	pop	r11
     f1a:	af 90       	pop	r10
     f1c:	7f 90       	pop	r7
     f1e:	6f 90       	pop	r6
     f20:	5f 90       	pop	r5
     f22:	4f 90       	pop	r4
     f24:	08 95       	ret

00000f26 <Pwr>:
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	61 15       	cp	r22, r1
     f2a:	71 05       	cpc	r23, r1
     f2c:	99 f0       	breq	.+38     	; 0xf54 <Pwr+0x2e>
     f2e:	41 e0       	ldi	r20, 0x01	; 1
     f30:	50 e0       	ldi	r21, 0x00	; 0
     f32:	21 e0       	ldi	r18, 0x01	; 1
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	fa 01       	movw	r30, r20
     f3a:	e8 9f       	mul	r30, r24
     f3c:	a0 01       	movw	r20, r0
     f3e:	e9 9f       	mul	r30, r25
     f40:	50 0d       	add	r21, r0
     f42:	f8 9f       	mul	r31, r24
     f44:	50 0d       	add	r21, r0
     f46:	11 24       	eor	r1, r1
     f48:	2f 5f       	subi	r18, 0xFF	; 255
     f4a:	3f 4f       	sbci	r19, 0xFF	; 255
     f4c:	62 17       	cp	r22, r18
     f4e:	73 07       	cpc	r23, r19
     f50:	98 f7       	brcc	.-26     	; 0xf38 <Pwr+0x12>
     f52:	02 c0       	rjmp	.+4      	; 0xf58 <Pwr+0x32>
     f54:	41 e0       	ldi	r20, 0x01	; 1
     f56:	50 e0       	ldi	r21, 0x00	; 0
     f58:	ca 01       	movw	r24, r20
     f5a:	08 95       	ret

00000f5c <StringLength>:
     f5c:	fc 01       	movw	r30, r24
     f5e:	20 81       	ld	r18, Z
     f60:	22 23       	and	r18, r18
     f62:	41 f0       	breq	.+16     	; 0xf74 <StringLength+0x18>
     f64:	31 96       	adiw	r30, 0x01	; 1
     f66:	80 e0       	ldi	r24, 0x00	; 0
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	01 96       	adiw	r24, 0x01	; 1
     f6c:	21 91       	ld	r18, Z+
     f6e:	21 11       	cpse	r18, r1
     f70:	fc cf       	rjmp	.-8      	; 0xf6a <StringLength+0xe>
     f72:	08 95       	ret
     f74:	80 e0       	ldi	r24, 0x00	; 0
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	08 95       	ret

00000f7a <FUNCtrim>:
     f7a:	cf 93       	push	r28
     f7c:	df 93       	push	r29
     f7e:	ec 01       	movw	r28, r24
     f80:	ed df       	rcall	.-38     	; 0xf5c <StringLength>
     f82:	9c 01       	movw	r18, r24
     f84:	21 50       	subi	r18, 0x01	; 1
     f86:	31 09       	sbc	r19, r1
     f88:	62 f0       	brmi	.+24     	; 0xfa2 <FUNCtrim+0x28>
     f8a:	fe 01       	movw	r30, r28
     f8c:	e8 0f       	add	r30, r24
     f8e:	f9 1f       	adc	r31, r25
     f90:	92 91       	ld	r25, -Z
     f92:	90 32       	cpi	r25, 0x20	; 32
     f94:	19 f0       	breq	.+6      	; 0xf9c <FUNCtrim+0x22>
     f96:	99 50       	subi	r25, 0x09	; 9
     f98:	92 30       	cpi	r25, 0x02	; 2
     f9a:	18 f4       	brcc	.+6      	; 0xfa2 <FUNCtrim+0x28>
     f9c:	21 50       	subi	r18, 0x01	; 1
     f9e:	31 09       	sbc	r19, r1
     fa0:	b8 f7       	brcc	.-18     	; 0xf90 <FUNCtrim+0x16>
     fa2:	c2 0f       	add	r28, r18
     fa4:	d3 1f       	adc	r29, r19
     fa6:	19 82       	std	Y+1, r1	; 0x01
     fa8:	c9 01       	movw	r24, r18
     faa:	df 91       	pop	r29
     fac:	cf 91       	pop	r28
     fae:	08 95       	ret

00000fb0 <Reverse>:
     fb0:	cf 93       	push	r28
     fb2:	df 93       	push	r29
     fb4:	ec 01       	movw	r28, r24
     fb6:	d2 df       	rcall	.-92     	; 0xf5c <StringLength>
     fb8:	9c 01       	movw	r18, r24
     fba:	21 50       	subi	r18, 0x01	; 1
     fbc:	31 09       	sbc	r19, r1
     fbe:	12 16       	cp	r1, r18
     fc0:	13 06       	cpc	r1, r19
     fc2:	84 f4       	brge	.+32     	; 0xfe4 <Reverse+0x34>
     fc4:	de 01       	movw	r26, r28
     fc6:	a8 0f       	add	r26, r24
     fc8:	b9 1f       	adc	r27, r25
     fca:	fe 01       	movw	r30, r28
     fcc:	80 e0       	ldi	r24, 0x00	; 0
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	40 81       	ld	r20, Z
     fd2:	5e 91       	ld	r21, -X
     fd4:	51 93       	st	Z+, r21
     fd6:	4c 93       	st	X, r20
     fd8:	01 96       	adiw	r24, 0x01	; 1
     fda:	21 50       	subi	r18, 0x01	; 1
     fdc:	31 09       	sbc	r19, r1
     fde:	82 17       	cp	r24, r18
     fe0:	93 07       	cpc	r25, r19
     fe2:	b4 f3       	brlt	.-20     	; 0xfd0 <Reverse+0x20>
     fe4:	df 91       	pop	r29
     fe6:	cf 91       	pop	r28
     fe8:	08 95       	ret

00000fea <FUNCi32toa>:
     fea:	8f 92       	push	r8
     fec:	9f 92       	push	r9
     fee:	af 92       	push	r10
     ff0:	bf 92       	push	r11
     ff2:	cf 92       	push	r12
     ff4:	df 92       	push	r13
     ff6:	ef 92       	push	r14
     ff8:	ff 92       	push	r15
     ffa:	0f 93       	push	r16
     ffc:	1f 93       	push	r17
     ffe:	cf 93       	push	r28
    1000:	df 93       	push	r29
    1002:	6b 01       	movw	r12, r22
    1004:	7c 01       	movw	r14, r24
    1006:	dc 01       	movw	r26, r24
    1008:	cb 01       	movw	r24, r22
    100a:	ff 20       	and	r15, r15
    100c:	3c f4       	brge	.+14     	; 0x101c <FUNCi32toa+0x32>
    100e:	88 27       	eor	r24, r24
    1010:	99 27       	eor	r25, r25
    1012:	dc 01       	movw	r26, r24
    1014:	8c 19       	sub	r24, r12
    1016:	9d 09       	sbc	r25, r13
    1018:	ae 09       	sbc	r26, r14
    101a:	bf 09       	sbc	r27, r15
    101c:	bc 01       	movw	r22, r24
    101e:	cd 01       	movw	r24, r26
    1020:	10 e0       	ldi	r17, 0x00	; 0
    1022:	0f 2e       	mov	r0, r31
    1024:	fa e0       	ldi	r31, 0x0A	; 10
    1026:	8f 2e       	mov	r8, r31
    1028:	91 2c       	mov	r9, r1
    102a:	a1 2c       	mov	r10, r1
    102c:	b1 2c       	mov	r11, r1
    102e:	f0 2d       	mov	r31, r0
    1030:	01 c0       	rjmp	.+2      	; 0x1034 <FUNCi32toa+0x4a>
    1032:	10 2f       	mov	r17, r16
    1034:	01 e0       	ldi	r16, 0x01	; 1
    1036:	01 0f       	add	r16, r17
    1038:	c1 2f       	mov	r28, r17
    103a:	d0 e0       	ldi	r29, 0x00	; 0
    103c:	c1 53       	subi	r28, 0x31	; 49
    103e:	dd 4f       	sbci	r29, 0xFD	; 253
    1040:	a5 01       	movw	r20, r10
    1042:	94 01       	movw	r18, r8
    1044:	0e 94 e2 15 	call	0x2bc4	; 0x2bc4 <__divmodsi4>
    1048:	60 5d       	subi	r22, 0xD0	; 208
    104a:	68 83       	st	Y, r22
    104c:	62 2f       	mov	r22, r18
    104e:	73 2f       	mov	r23, r19
    1050:	84 2f       	mov	r24, r20
    1052:	95 2f       	mov	r25, r21
    1054:	16 16       	cp	r1, r22
    1056:	17 06       	cpc	r1, r23
    1058:	18 06       	cpc	r1, r24
    105a:	19 06       	cpc	r1, r25
    105c:	54 f3       	brlt	.-44     	; 0x1032 <FUNCi32toa+0x48>
    105e:	ff 20       	and	r15, r15
    1060:	44 f4       	brge	.+16     	; 0x1072 <FUNCi32toa+0x88>
    1062:	e0 2f       	mov	r30, r16
    1064:	f0 e0       	ldi	r31, 0x00	; 0
    1066:	e1 53       	subi	r30, 0x31	; 49
    1068:	fd 4f       	sbci	r31, 0xFD	; 253
    106a:	8d e2       	ldi	r24, 0x2D	; 45
    106c:	80 83       	st	Z, r24
    106e:	02 e0       	ldi	r16, 0x02	; 2
    1070:	01 0f       	add	r16, r17
    1072:	e0 2f       	mov	r30, r16
    1074:	f0 e0       	ldi	r31, 0x00	; 0
    1076:	e1 53       	subi	r30, 0x31	; 49
    1078:	fd 4f       	sbci	r31, 0xFD	; 253
    107a:	10 82       	st	Z, r1
    107c:	8f ec       	ldi	r24, 0xCF	; 207
    107e:	92 e0       	ldi	r25, 0x02	; 2
    1080:	97 df       	rcall	.-210    	; 0xfb0 <Reverse>
    1082:	8f ec       	ldi	r24, 0xCF	; 207
    1084:	92 e0       	ldi	r25, 0x02	; 2
    1086:	df 91       	pop	r29
    1088:	cf 91       	pop	r28
    108a:	1f 91       	pop	r17
    108c:	0f 91       	pop	r16
    108e:	ff 90       	pop	r15
    1090:	ef 90       	pop	r14
    1092:	df 90       	pop	r13
    1094:	cf 90       	pop	r12
    1096:	bf 90       	pop	r11
    1098:	af 90       	pop	r10
    109a:	9f 90       	pop	r9
    109c:	8f 90       	pop	r8
    109e:	08 95       	ret

000010a0 <FUNCi16toa>:
    10a0:	0f 93       	push	r16
    10a2:	1f 93       	push	r17
    10a4:	cf 93       	push	r28
    10a6:	df 93       	push	r29
    10a8:	ec 01       	movw	r28, r24
    10aa:	99 23       	and	r25, r25
    10ac:	24 f4       	brge	.+8      	; 0x10b6 <FUNCi16toa+0x16>
    10ae:	88 27       	eor	r24, r24
    10b0:	99 27       	eor	r25, r25
    10b2:	8c 1b       	sub	r24, r28
    10b4:	9d 0b       	sbc	r25, r29
    10b6:	20 e0       	ldi	r18, 0x00	; 0
    10b8:	0a e0       	ldi	r16, 0x0A	; 10
    10ba:	10 e0       	ldi	r17, 0x00	; 0
    10bc:	01 c0       	rjmp	.+2      	; 0x10c0 <FUNCi16toa+0x20>
    10be:	23 2f       	mov	r18, r19
    10c0:	31 e0       	ldi	r19, 0x01	; 1
    10c2:	32 0f       	add	r19, r18
    10c4:	e2 2f       	mov	r30, r18
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	e1 53       	subi	r30, 0x31	; 49
    10ca:	fd 4f       	sbci	r31, 0xFD	; 253
    10cc:	b8 01       	movw	r22, r16
    10ce:	0e 94 ad 15 	call	0x2b5a	; 0x2b5a <__divmodhi4>
    10d2:	80 5d       	subi	r24, 0xD0	; 208
    10d4:	80 83       	st	Z, r24
    10d6:	86 2f       	mov	r24, r22
    10d8:	97 2f       	mov	r25, r23
    10da:	18 16       	cp	r1, r24
    10dc:	19 06       	cpc	r1, r25
    10de:	7c f3       	brlt	.-34     	; 0x10be <FUNCi16toa+0x1e>
    10e0:	dd 23       	and	r29, r29
    10e2:	44 f4       	brge	.+16     	; 0x10f4 <FUNCi16toa+0x54>
    10e4:	e3 2f       	mov	r30, r19
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	e1 53       	subi	r30, 0x31	; 49
    10ea:	fd 4f       	sbci	r31, 0xFD	; 253
    10ec:	8d e2       	ldi	r24, 0x2D	; 45
    10ee:	80 83       	st	Z, r24
    10f0:	32 e0       	ldi	r19, 0x02	; 2
    10f2:	32 0f       	add	r19, r18
    10f4:	e3 2f       	mov	r30, r19
    10f6:	f0 e0       	ldi	r31, 0x00	; 0
    10f8:	e1 53       	subi	r30, 0x31	; 49
    10fa:	fd 4f       	sbci	r31, 0xFD	; 253
    10fc:	10 82       	st	Z, r1
    10fe:	8f ec       	ldi	r24, 0xCF	; 207
    1100:	92 e0       	ldi	r25, 0x02	; 2
    1102:	56 df       	rcall	.-340    	; 0xfb0 <Reverse>
    1104:	8f ec       	ldi	r24, 0xCF	; 207
    1106:	92 e0       	ldi	r25, 0x02	; 2
    1108:	df 91       	pop	r29
    110a:	cf 91       	pop	r28
    110c:	1f 91       	pop	r17
    110e:	0f 91       	pop	r16
    1110:	08 95       	ret

00001112 <FUNCui16toa>:
    1112:	cf 93       	push	r28
    1114:	ac 01       	movw	r20, r24
    1116:	e0 e0       	ldi	r30, 0x00	; 0
    1118:	c1 e0       	ldi	r28, 0x01	; 1
    111a:	ce 0f       	add	r28, r30
    111c:	f0 e0       	ldi	r31, 0x00	; 0
    111e:	e1 53       	subi	r30, 0x31	; 49
    1120:	fd 4f       	sbci	r31, 0xFD	; 253
    1122:	9a 01       	movw	r18, r20
    1124:	ad ec       	ldi	r26, 0xCD	; 205
    1126:	bc ec       	ldi	r27, 0xCC	; 204
    1128:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__umulhisi3>
    112c:	96 95       	lsr	r25
    112e:	87 95       	ror	r24
    1130:	96 95       	lsr	r25
    1132:	87 95       	ror	r24
    1134:	96 95       	lsr	r25
    1136:	87 95       	ror	r24
    1138:	9c 01       	movw	r18, r24
    113a:	22 0f       	add	r18, r18
    113c:	33 1f       	adc	r19, r19
    113e:	88 0f       	add	r24, r24
    1140:	99 1f       	adc	r25, r25
    1142:	88 0f       	add	r24, r24
    1144:	99 1f       	adc	r25, r25
    1146:	88 0f       	add	r24, r24
    1148:	99 1f       	adc	r25, r25
    114a:	82 0f       	add	r24, r18
    114c:	93 1f       	adc	r25, r19
    114e:	9a 01       	movw	r18, r20
    1150:	28 1b       	sub	r18, r24
    1152:	39 0b       	sbc	r19, r25
    1154:	c9 01       	movw	r24, r18
    1156:	80 5d       	subi	r24, 0xD0	; 208
    1158:	80 83       	st	Z, r24
    115a:	9a 01       	movw	r18, r20
    115c:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__umulhisi3>
    1160:	ac 01       	movw	r20, r24
    1162:	56 95       	lsr	r21
    1164:	47 95       	ror	r20
    1166:	56 95       	lsr	r21
    1168:	47 95       	ror	r20
    116a:	56 95       	lsr	r21
    116c:	47 95       	ror	r20
    116e:	ec 2f       	mov	r30, r28
    1170:	41 15       	cp	r20, r1
    1172:	51 05       	cpc	r21, r1
    1174:	89 f6       	brne	.-94     	; 0x1118 <FUNCui16toa+0x6>
    1176:	ec 2f       	mov	r30, r28
    1178:	f0 e0       	ldi	r31, 0x00	; 0
    117a:	e1 53       	subi	r30, 0x31	; 49
    117c:	fd 4f       	sbci	r31, 0xFD	; 253
    117e:	10 82       	st	Z, r1
    1180:	8f ec       	ldi	r24, 0xCF	; 207
    1182:	92 e0       	ldi	r25, 0x02	; 2
    1184:	15 df       	rcall	.-470    	; 0xfb0 <Reverse>
    1186:	8f ec       	ldi	r24, 0xCF	; 207
    1188:	92 e0       	ldi	r25, 0x02	; 2
    118a:	cf 91       	pop	r28
    118c:	08 95       	ret

0000118e <FUNCbcd2bin>:
    118e:	98 2f       	mov	r25, r24
    1190:	92 95       	swap	r25
    1192:	9f 70       	andi	r25, 0x0F	; 15
    1194:	99 0f       	add	r25, r25
    1196:	29 2f       	mov	r18, r25
    1198:	22 0f       	add	r18, r18
    119a:	22 0f       	add	r18, r18
    119c:	92 0f       	add	r25, r18
    119e:	8f 70       	andi	r24, 0x0F	; 15
    11a0:	89 0f       	add	r24, r25
    11a2:	08 95       	ret

000011a4 <FUNCbin2bcd>:
    11a4:	ac 01       	movw	r20, r24
    11a6:	9c 01       	movw	r18, r24
    11a8:	ad ec       	ldi	r26, 0xCD	; 205
    11aa:	bc ec       	ldi	r27, 0xCC	; 204
    11ac:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__umulhisi3>
    11b0:	96 95       	lsr	r25
    11b2:	87 95       	ror	r24
    11b4:	96 95       	lsr	r25
    11b6:	87 95       	ror	r24
    11b8:	96 95       	lsr	r25
    11ba:	87 95       	ror	r24
    11bc:	bc 01       	movw	r22, r24
    11be:	66 0f       	add	r22, r22
    11c0:	77 1f       	adc	r23, r23
    11c2:	9c 01       	movw	r18, r24
    11c4:	22 0f       	add	r18, r18
    11c6:	33 1f       	adc	r19, r19
    11c8:	22 0f       	add	r18, r18
    11ca:	33 1f       	adc	r19, r19
    11cc:	22 0f       	add	r18, r18
    11ce:	33 1f       	adc	r19, r19
    11d0:	26 0f       	add	r18, r22
    11d2:	37 1f       	adc	r19, r23
    11d4:	42 1b       	sub	r20, r18
    11d6:	53 0b       	sbc	r21, r19
    11d8:	34 2f       	mov	r19, r20
    11da:	20 e1       	ldi	r18, 0x10	; 16
    11dc:	82 9f       	mul	r24, r18
    11de:	30 0d       	add	r19, r0
    11e0:	11 24       	eor	r1, r1
    11e2:	83 2f       	mov	r24, r19
    11e4:	08 95       	ret

000011e6 <FUNCgcd1>:
    11e6:	cf 92       	push	r12
    11e8:	df 92       	push	r13
    11ea:	ef 92       	push	r14
    11ec:	ff 92       	push	r15
    11ee:	cf 93       	push	r28
    11f0:	df 93       	push	r29
    11f2:	cd b7       	in	r28, 0x3d	; 61
    11f4:	de b7       	in	r29, 0x3e	; 62
    11f6:	28 97       	sbiw	r28, 0x08	; 8
    11f8:	0f b6       	in	r0, 0x3f	; 63
    11fa:	f8 94       	cli
    11fc:	de bf       	out	0x3e, r29	; 62
    11fe:	0f be       	out	0x3f, r0	; 63
    1200:	cd bf       	out	0x3d, r28	; 61
    1202:	6b 01       	movw	r12, r22
    1204:	7c 01       	movw	r14, r24
    1206:	69 83       	std	Y+1, r22	; 0x01
    1208:	7a 83       	std	Y+2, r23	; 0x02
    120a:	8b 83       	std	Y+3, r24	; 0x03
    120c:	9c 83       	std	Y+4, r25	; 0x04
    120e:	2d 83       	std	Y+5, r18	; 0x05
    1210:	3e 83       	std	Y+6, r19	; 0x06
    1212:	4f 83       	std	Y+7, r20	; 0x07
    1214:	58 87       	std	Y+8, r21	; 0x08
    1216:	c2 16       	cp	r12, r18
    1218:	d3 06       	cpc	r13, r19
    121a:	e4 06       	cpc	r14, r20
    121c:	f5 06       	cpc	r15, r21
    121e:	34 f4       	brge	.+12     	; 0x122c <FUNCgcd1+0x46>
    1220:	be 01       	movw	r22, r28
    1222:	6b 5f       	subi	r22, 0xFB	; 251
    1224:	7f 4f       	sbci	r23, 0xFF	; 255
    1226:	ce 01       	movw	r24, r28
    1228:	01 96       	adiw	r24, 0x01	; 1
    122a:	85 dc       	rcall	.-1782   	; 0xb36 <FUNCswap>
    122c:	8d 81       	ldd	r24, Y+5	; 0x05
    122e:	9e 81       	ldd	r25, Y+6	; 0x06
    1230:	af 81       	ldd	r26, Y+7	; 0x07
    1232:	b8 85       	ldd	r27, Y+8	; 0x08
    1234:	89 2b       	or	r24, r25
    1236:	8a 2b       	or	r24, r26
    1238:	8b 2b       	or	r24, r27
    123a:	71 f4       	brne	.+28     	; 0x1258 <FUNCgcd1+0x72>
    123c:	69 81       	ldd	r22, Y+1	; 0x01
    123e:	7a 81       	ldd	r23, Y+2	; 0x02
    1240:	8b 81       	ldd	r24, Y+3	; 0x03
    1242:	9c 81       	ldd	r25, Y+4	; 0x04
    1244:	20 e0       	ldi	r18, 0x00	; 0
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	a9 01       	movw	r20, r18
    124a:	0e 94 e2 15 	call	0x2bc4	; 0x2bc4 <__divmodsi4>
    124e:	61 15       	cp	r22, r1
    1250:	71 05       	cpc	r23, r1
    1252:	81 05       	cpc	r24, r1
    1254:	91 05       	cpc	r25, r1
    1256:	29 f4       	brne	.+10     	; 0x1262 <FUNCgcd1+0x7c>
    1258:	6d 81       	ldd	r22, Y+5	; 0x05
    125a:	7e 81       	ldd	r23, Y+6	; 0x06
    125c:	8f 81       	ldd	r24, Y+7	; 0x07
    125e:	98 85       	ldd	r25, Y+8	; 0x08
    1260:	05 c0       	rjmp	.+10     	; 0x126c <FUNCgcd1+0x86>
    1262:	6d 83       	std	Y+5, r22	; 0x05
    1264:	7e 83       	std	Y+6, r23	; 0x06
    1266:	8f 83       	std	Y+7, r24	; 0x07
    1268:	98 87       	std	Y+8, r25	; 0x08
    126a:	f6 cf       	rjmp	.-20     	; 0x1258 <FUNCgcd1+0x72>
    126c:	28 96       	adiw	r28, 0x08	; 8
    126e:	0f b6       	in	r0, 0x3f	; 63
    1270:	f8 94       	cli
    1272:	de bf       	out	0x3e, r29	; 62
    1274:	0f be       	out	0x3f, r0	; 63
    1276:	cd bf       	out	0x3d, r28	; 61
    1278:	df 91       	pop	r29
    127a:	cf 91       	pop	r28
    127c:	ff 90       	pop	r15
    127e:	ef 90       	pop	r14
    1280:	df 90       	pop	r13
    1282:	cf 90       	pop	r12
    1284:	08 95       	ret

00001286 <FUNCpincheck>:
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	02 c0       	rjmp	.+4      	; 0x128e <FUNCpincheck+0x8>
    128a:	95 95       	asr	r25
    128c:	87 95       	ror	r24
    128e:	6a 95       	dec	r22
    1290:	e2 f7       	brpl	.-8      	; 0x128a <FUNCpincheck+0x4>
    1292:	81 70       	andi	r24, 0x01	; 1
    1294:	08 95       	ret

00001296 <FUNCprint_binary>:
    1296:	ef ec       	ldi	r30, 0xCF	; 207
    1298:	f2 e0       	ldi	r31, 0x02	; 2
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	20 e8       	ldi	r18, 0x80	; 128
    129e:	50 e3       	ldi	r21, 0x30	; 48
    12a0:	41 e3       	ldi	r20, 0x31	; 49
    12a2:	38 2f       	mov	r19, r24
    12a4:	32 23       	and	r19, r18
    12a6:	11 f0       	breq	.+4      	; 0x12ac <FUNCprint_binary+0x16>
    12a8:	40 83       	st	Z, r20
    12aa:	01 c0       	rjmp	.+2      	; 0x12ae <FUNCprint_binary+0x18>
    12ac:	50 83       	st	Z, r21
    12ae:	26 95       	lsr	r18
    12b0:	9f 5f       	subi	r25, 0xFF	; 255
    12b2:	31 96       	adiw	r30, 0x01	; 1
    12b4:	98 30       	cpi	r25, 0x08	; 8
    12b6:	a9 f7       	brne	.-22     	; 0x12a2 <FUNCprint_binary+0xc>
    12b8:	10 92 d7 02 	sts	0x02D7, r1	; 0x8002d7 <FUNCstr+0x8>
    12bc:	8f ec       	ldi	r24, 0xCF	; 207
    12be:	92 e0       	ldi	r25, 0x02	; 2
    12c0:	08 95       	ret

000012c2 <FUNCmayia>:
    12c2:	a4 2f       	mov	r26, r20
    12c4:	b0 e0       	ldi	r27, 0x00	; 0
    12c6:	10 97       	sbiw	r26, 0x00	; 0
    12c8:	61 f0       	breq	.+24     	; 0x12e2 <FUNCmayia+0x20>
    12ca:	21 e0       	ldi	r18, 0x01	; 1
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	e1 e0       	ldi	r30, 0x01	; 1
    12d0:	f0 e0       	ldi	r31, 0x00	; 0
    12d2:	ee 0f       	add	r30, r30
    12d4:	ff 1f       	adc	r31, r31
    12d6:	2f 5f       	subi	r18, 0xFF	; 255
    12d8:	3f 4f       	sbci	r19, 0xFF	; 255
    12da:	a2 17       	cp	r26, r18
    12dc:	b3 07       	cpc	r27, r19
    12de:	c8 f7       	brcc	.-14     	; 0x12d2 <FUNCmayia+0x10>
    12e0:	02 c0       	rjmp	.+4      	; 0x12e6 <FUNCmayia+0x24>
    12e2:	e1 e0       	ldi	r30, 0x01	; 1
    12e4:	f0 e0       	ldi	r31, 0x00	; 0
    12e6:	31 97       	sbiw	r30, 0x01	; 1
    12e8:	6e 23       	and	r22, r30
    12ea:	7f 23       	and	r23, r31
    12ec:	8e 23       	and	r24, r30
    12ee:	9f 23       	and	r25, r31
    12f0:	86 27       	eor	r24, r22
    12f2:	97 27       	eor	r25, r23
    12f4:	68 23       	and	r22, r24
    12f6:	79 23       	and	r23, r25
    12f8:	02 c0       	rjmp	.+4      	; 0x12fe <FUNCmayia+0x3c>
    12fa:	66 0f       	add	r22, r22
    12fc:	77 1f       	adc	r23, r23
    12fe:	4a 95       	dec	r20
    1300:	e2 f7       	brpl	.-8      	; 0x12fa <FUNCmayia+0x38>
    1302:	86 2b       	or	r24, r22
    1304:	97 2b       	or	r25, r23
    1306:	08 95       	ret

00001308 <FUNCenable>:
    1308:	fc 01       	movw	r30, r24
    130a:	9f b7       	in	r25, 0x3f	; 63
    130c:	8f b7       	in	r24, 0x3f	; 63
    130e:	8f 77       	andi	r24, 0x7F	; 127
    1310:	8f bf       	out	0x3f, r24	; 63
    1312:	9f bf       	out	0x3f, r25	; 63
    1314:	83 e9       	ldi	r24, 0x93	; 147
    1316:	97 e0       	ldi	r25, 0x07	; 7
    1318:	91 83       	std	Z+1, r25	; 0x01
    131a:	80 83       	st	Z, r24
    131c:	8e ea       	ldi	r24, 0xAE	; 174
    131e:	97 e0       	ldi	r25, 0x07	; 7
    1320:	93 83       	std	Z+3, r25	; 0x03
    1322:	82 83       	std	Z+2, r24	; 0x02
    1324:	88 ed       	ldi	r24, 0xD8	; 216
    1326:	97 e0       	ldi	r25, 0x07	; 7
    1328:	95 83       	std	Z+5, r25	; 0x05
    132a:	84 83       	std	Z+4, r24	; 0x04
    132c:	81 e6       	ldi	r24, 0x61	; 97
    132e:	99 e0       	ldi	r25, 0x09	; 9
    1330:	97 83       	std	Z+7, r25	; 0x07
    1332:	86 83       	std	Z+6, r24	; 0x06
    1334:	80 e8       	ldi	r24, 0x80	; 128
    1336:	95 e0       	ldi	r25, 0x05	; 5
    1338:	91 87       	std	Z+9, r25	; 0x09
    133a:	80 87       	std	Z+8, r24	; 0x08
    133c:	8e e8       	ldi	r24, 0x8E	; 142
    133e:	95 e0       	ldi	r25, 0x05	; 5
    1340:	93 87       	std	Z+11, r25	; 0x0b
    1342:	82 87       	std	Z+10, r24	; 0x0a
    1344:	80 e9       	ldi	r24, 0x90	; 144
    1346:	95 e0       	ldi	r25, 0x05	; 5
    1348:	95 87       	std	Z+13, r25	; 0x0d
    134a:	84 87       	std	Z+12, r24	; 0x0c
    134c:	83 e9       	ldi	r24, 0x93	; 147
    134e:	95 e0       	ldi	r25, 0x05	; 5
    1350:	97 87       	std	Z+15, r25	; 0x0f
    1352:	86 87       	std	Z+14, r24	; 0x0e
    1354:	86 e9       	ldi	r24, 0x96	; 150
    1356:	95 e0       	ldi	r25, 0x05	; 5
    1358:	91 8b       	std	Z+17, r25	; 0x11
    135a:	80 8b       	std	Z+16, r24	; 0x10
    135c:	89 e9       	ldi	r24, 0x99	; 153
    135e:	95 e0       	ldi	r25, 0x05	; 5
    1360:	93 8b       	std	Z+19, r25	; 0x13
    1362:	82 8b       	std	Z+18, r24	; 0x12
    1364:	8a e8       	ldi	r24, 0x8A	; 138
    1366:	95 e0       	ldi	r25, 0x05	; 5
    1368:	95 8b       	std	Z+21, r25	; 0x15
    136a:	84 8b       	std	Z+20, r24	; 0x14
    136c:	8c e8       	ldi	r24, 0x8C	; 140
    136e:	95 e0       	ldi	r25, 0x05	; 5
    1370:	97 8b       	std	Z+23, r25	; 0x17
    1372:	86 8b       	std	Z+22, r24	; 0x16
    1374:	8b e9       	ldi	r24, 0x9B	; 155
    1376:	95 e0       	ldi	r25, 0x05	; 5
    1378:	91 8f       	std	Z+25, r25	; 0x19
    137a:	80 8f       	std	Z+24, r24	; 0x18
    137c:	8c eb       	ldi	r24, 0xBC	; 188
    137e:	95 e0       	ldi	r25, 0x05	; 5
    1380:	93 8f       	std	Z+27, r25	; 0x1b
    1382:	82 8f       	std	Z+26, r24	; 0x1a
    1384:	8a ec       	ldi	r24, 0xCA	; 202
    1386:	95 e0       	ldi	r25, 0x05	; 5
    1388:	95 8f       	std	Z+29, r25	; 0x1d
    138a:	84 8f       	std	Z+28, r24	; 0x1c
    138c:	8c ee       	ldi	r24, 0xEC	; 236
    138e:	95 e0       	ldi	r25, 0x05	; 5
    1390:	97 8f       	std	Z+31, r25	; 0x1f
    1392:	86 8f       	std	Z+30, r24	; 0x1e
    1394:	80 e5       	ldi	r24, 0x50	; 80
    1396:	98 e0       	ldi	r25, 0x08	; 8
    1398:	91 a3       	std	Z+33, r25	; 0x21
    139a:	80 a3       	std	Z+32, r24	; 0x20
    139c:	89 e8       	ldi	r24, 0x89	; 137
    139e:	98 e0       	ldi	r25, 0x08	; 8
    13a0:	93 a3       	std	Z+35, r25	; 0x23
    13a2:	82 a3       	std	Z+34, r24	; 0x22
    13a4:	85 ef       	ldi	r24, 0xF5	; 245
    13a6:	97 e0       	ldi	r25, 0x07	; 7
    13a8:	95 a3       	std	Z+37, r25	; 0x25
    13aa:	84 a3       	std	Z+36, r24	; 0x24
    13ac:	8d eb       	ldi	r24, 0xBD	; 189
    13ae:	97 e0       	ldi	r25, 0x07	; 7
    13b0:	97 a3       	std	Z+39, r25	; 0x27
    13b2:	86 a3       	std	Z+38, r24	; 0x26
    13b4:	82 e9       	ldi	r24, 0x92	; 146
    13b6:	96 e0       	ldi	r25, 0x06	; 6
    13b8:	91 a7       	std	Z+41, r25	; 0x29
    13ba:	80 a7       	std	Z+40, r24	; 0x28
    13bc:	87 e9       	ldi	r24, 0x97	; 151
    13be:	96 e0       	ldi	r25, 0x06	; 6
    13c0:	93 a7       	std	Z+43, r25	; 0x2b
    13c2:	82 a7       	std	Z+42, r24	; 0x2a
    13c4:	86 ea       	ldi	r24, 0xA6	; 166
    13c6:	96 e0       	ldi	r25, 0x06	; 6
    13c8:	95 a7       	std	Z+45, r25	; 0x2d
    13ca:	84 a7       	std	Z+44, r24	; 0x2c
    13cc:	8a ec       	ldi	r24, 0xCA	; 202
    13ce:	96 e0       	ldi	r25, 0x06	; 6
    13d0:	97 a7       	std	Z+47, r25	; 0x2f
    13d2:	86 a7       	std	Z+46, r24	; 0x2e
    13d4:	8c ec       	ldi	r24, 0xCC	; 204
    13d6:	96 e0       	ldi	r25, 0x06	; 6
    13d8:	91 ab       	std	Z+49, r25	; 0x31
    13da:	80 ab       	std	Z+48, r24	; 0x30
    13dc:	86 ed       	ldi	r24, 0xD6	; 214
    13de:	96 e0       	ldi	r25, 0x06	; 6
    13e0:	93 ab       	std	Z+51, r25	; 0x33
    13e2:	82 ab       	std	Z+50, r24	; 0x32
    13e4:	83 ee       	ldi	r24, 0xE3	; 227
    13e6:	96 e0       	ldi	r25, 0x06	; 6
    13e8:	95 ab       	std	Z+53, r25	; 0x35
    13ea:	84 ab       	std	Z+52, r24	; 0x34
    13ec:	8f ee       	ldi	r24, 0xEF	; 239
    13ee:	96 e0       	ldi	r25, 0x06	; 6
    13f0:	97 ab       	std	Z+55, r25	; 0x37
    13f2:	86 ab       	std	Z+54, r24	; 0x36
    13f4:	87 e0       	ldi	r24, 0x07	; 7
    13f6:	97 e0       	ldi	r25, 0x07	; 7
    13f8:	91 af       	std	Z+57, r25	; 0x39
    13fa:	80 af       	std	Z+56, r24	; 0x38
    13fc:	8a e1       	ldi	r24, 0x1A	; 26
    13fe:	97 e0       	ldi	r25, 0x07	; 7
    1400:	93 af       	std	Z+59, r25	; 0x3b
    1402:	82 af       	std	Z+58, r24	; 0x3a
    1404:	85 e2       	ldi	r24, 0x25	; 37
    1406:	97 e0       	ldi	r25, 0x07	; 7
    1408:	95 af       	std	Z+61, r25	; 0x3d
    140a:	84 af       	std	Z+60, r24	; 0x3c
    140c:	82 e5       	ldi	r24, 0x52	; 82
    140e:	97 e0       	ldi	r25, 0x07	; 7
    1410:	97 af       	std	Z+63, r25	; 0x3f
    1412:	86 af       	std	Z+62, r24	; 0x3e
    1414:	df 01       	movw	r26, r30
    1416:	a0 5c       	subi	r26, 0xC0	; 192
    1418:	bf 4f       	sbci	r27, 0xFF	; 255
    141a:	87 ec       	ldi	r24, 0xC7	; 199
    141c:	98 e0       	ldi	r25, 0x08	; 8
    141e:	11 96       	adiw	r26, 0x01	; 1
    1420:	9c 93       	st	X, r25
    1422:	8e 93       	st	-X, r24
    1424:	12 96       	adiw	r26, 0x02	; 2
    1426:	82 ed       	ldi	r24, 0xD2	; 210
    1428:	98 e0       	ldi	r25, 0x08	; 8
    142a:	11 96       	adiw	r26, 0x01	; 1
    142c:	9c 93       	st	X, r25
    142e:	8e 93       	st	-X, r24
    1430:	12 96       	adiw	r26, 0x02	; 2
    1432:	83 ef       	ldi	r24, 0xF3	; 243
    1434:	98 e0       	ldi	r25, 0x08	; 8
    1436:	11 96       	adiw	r26, 0x01	; 1
    1438:	9c 93       	st	X, r25
    143a:	8e 93       	st	-X, r24
    143c:	12 96       	adiw	r26, 0x02	; 2
    143e:	83 e4       	ldi	r24, 0x43	; 67
    1440:	99 e0       	ldi	r25, 0x09	; 9
    1442:	11 96       	adiw	r26, 0x01	; 1
    1444:	9c 93       	st	X, r25
    1446:	8e 93       	st	-X, r24
    1448:	12 96       	adiw	r26, 0x02	; 2
    144a:	8b e4       	ldi	r24, 0x4B	; 75
    144c:	99 e0       	ldi	r25, 0x09	; 9
    144e:	11 96       	adiw	r26, 0x01	; 1
    1450:	9c 93       	st	X, r25
    1452:	8e 93       	st	-X, r24
    1454:	12 96       	adiw	r26, 0x02	; 2
    1456:	8b e8       	ldi	r24, 0x8B	; 139
    1458:	9a e0       	ldi	r25, 0x0A	; 10
    145a:	8d 93       	st	X+, r24
    145c:	9c 93       	st	X, r25
    145e:	cf 01       	movw	r24, r30
    1460:	08 95       	ret

00001462 <FUNCintinvstr>:
/***intinvstr***/
uint8_t FUNCintinvstr(int32_t n, char* res, uint8_t n_digit)
{
    1462:	8f 92       	push	r8
    1464:	9f 92       	push	r9
    1466:	af 92       	push	r10
    1468:	bf 92       	push	r11
    146a:	ef 92       	push	r14
    146c:	ff 92       	push	r15
    146e:	0f 93       	push	r16
    1470:	1f 93       	push	r17
    1472:	cf 93       	push	r28
    1474:	df 93       	push	r29
    1476:	8a 01       	movw	r16, r20
    1478:	d2 2f       	mov	r29, r18
	uint8_t k=0;
	for(res[k++] = (n % 10) + '0' ; (n/=10) > ZERO ; res[k++] = (n % 10) + '0');
    147a:	2a e0       	ldi	r18, 0x0A	; 10
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	40 e0       	ldi	r20, 0x00	; 0
    1480:	50 e0       	ldi	r21, 0x00	; 0
    1482:	0e 94 e2 15 	call	0x2bc4	; 0x2bc4 <__divmodsi4>
    1486:	60 5d       	subi	r22, 0xD0	; 208
    1488:	f8 01       	movw	r30, r16
    148a:	60 83       	st	Z, r22
    148c:	62 2f       	mov	r22, r18
    148e:	73 2f       	mov	r23, r19
    1490:	84 2f       	mov	r24, r20
    1492:	95 2f       	mov	r25, r21
    1494:	16 16       	cp	r1, r22
    1496:	17 06       	cpc	r1, r23
    1498:	18 06       	cpc	r1, r24
    149a:	19 06       	cpc	r1, r25
    149c:	fc f4       	brge	.+62     	; 0x14dc <FUNCintinvstr+0x7a>
    149e:	21 e0       	ldi	r18, 0x01	; 1
    14a0:	0f 2e       	mov	r0, r31
    14a2:	fa e0       	ldi	r31, 0x0A	; 10
    14a4:	8f 2e       	mov	r8, r31
    14a6:	91 2c       	mov	r9, r1
    14a8:	a1 2c       	mov	r10, r1
    14aa:	b1 2c       	mov	r11, r1
    14ac:	f0 2d       	mov	r31, r0
    14ae:	c1 e0       	ldi	r28, 0x01	; 1
    14b0:	c2 0f       	add	r28, r18
    14b2:	78 01       	movw	r14, r16
    14b4:	e2 0e       	add	r14, r18
    14b6:	f1 1c       	adc	r15, r1
    14b8:	a5 01       	movw	r20, r10
    14ba:	94 01       	movw	r18, r8
    14bc:	0e 94 e2 15 	call	0x2bc4	; 0x2bc4 <__divmodsi4>
    14c0:	60 5d       	subi	r22, 0xD0	; 208
    14c2:	f7 01       	movw	r30, r14
    14c4:	60 83       	st	Z, r22
    14c6:	62 2f       	mov	r22, r18
    14c8:	73 2f       	mov	r23, r19
    14ca:	84 2f       	mov	r24, r20
    14cc:	95 2f       	mov	r25, r21
    14ce:	2c 2f       	mov	r18, r28
    14d0:	16 16       	cp	r1, r22
    14d2:	17 06       	cpc	r1, r23
    14d4:	18 06       	cpc	r1, r24
    14d6:	19 06       	cpc	r1, r25
    14d8:	54 f3       	brlt	.-44     	; 0x14ae <FUNCintinvstr+0x4c>
    14da:	01 c0       	rjmp	.+2      	; 0x14de <FUNCintinvstr+0x7c>
    14dc:	c1 e0       	ldi	r28, 0x01	; 1
	for( ; k < n_digit ; res[k++] = '0');
    14de:	cd 17       	cp	r28, r29
    14e0:	48 f4       	brcc	.+18     	; 0x14f4 <FUNCintinvstr+0x92>
    14e2:	80 e3       	ldi	r24, 0x30	; 48
    14e4:	f8 01       	movw	r30, r16
    14e6:	ec 0f       	add	r30, r28
    14e8:	f1 1d       	adc	r31, r1
    14ea:	80 83       	st	Z, r24
    14ec:	cf 5f       	subi	r28, 0xFF	; 255
    14ee:	dc 13       	cpse	r29, r28
    14f0:	f9 cf       	rjmp	.-14     	; 0x14e4 <FUNCintinvstr+0x82>
    14f2:	01 c0       	rjmp	.+2      	; 0x14f6 <FUNCintinvstr+0x94>
    14f4:	dc 2f       	mov	r29, r28
	res[k]='\0';
    14f6:	f8 01       	movw	r30, r16
    14f8:	ed 0f       	add	r30, r29
    14fa:	f1 1d       	adc	r31, r1
    14fc:	10 82       	st	Z, r1
	return k;
}
    14fe:	8d 2f       	mov	r24, r29
    1500:	df 91       	pop	r29
    1502:	cf 91       	pop	r28
    1504:	1f 91       	pop	r17
    1506:	0f 91       	pop	r16
    1508:	ff 90       	pop	r15
    150a:	ef 90       	pop	r14
    150c:	bf 90       	pop	r11
    150e:	af 90       	pop	r10
    1510:	9f 90       	pop	r9
    1512:	8f 90       	pop	r8
    1514:	08 95       	ret

00001516 <FUNCftoa>:
/***ftoa***/
char* FUNCftoa(float n, char* res, uint8_t afterpoint)
{
    1516:	4f 92       	push	r4
    1518:	5f 92       	push	r5
    151a:	6f 92       	push	r6
    151c:	7f 92       	push	r7
    151e:	8f 92       	push	r8
    1520:	9f 92       	push	r9
    1522:	af 92       	push	r10
    1524:	bf 92       	push	r11
    1526:	cf 92       	push	r12
    1528:	df 92       	push	r13
    152a:	ef 92       	push	r14
    152c:	ff 92       	push	r15
    152e:	1f 93       	push	r17
    1530:	cf 93       	push	r28
    1532:	df 93       	push	r29
    1534:	6b 01       	movw	r12, r22
    1536:	7c 01       	movw	r14, r24
    1538:	ea 01       	movw	r28, r20
    153a:	12 2f       	mov	r17, r18
	uint8_t k=ZERO;
	int32_t ipart;
	float fpart;
	int8_t sign;
	if (n < ZERO){
    153c:	20 e0       	ldi	r18, 0x00	; 0
    153e:	30 e0       	ldi	r19, 0x00	; 0
    1540:	a9 01       	movw	r20, r18
    1542:	cd d7       	rcall	.+3994   	; 0x24de <__cmpsf2>
    1544:	88 23       	and	r24, r24
    1546:	0c f0       	brlt	.+2      	; 0x154a <FUNCftoa+0x34>
    1548:	4b c0       	rjmp	.+150    	; 0x15e0 <FUNCftoa+0xca>
		n = -n;
    154a:	f7 fa       	bst	r15, 7
    154c:	f0 94       	com	r15
    154e:	f7 f8       	bld	r15, 7
    1550:	f0 94       	com	r15
		sign=-ONE;
	}else
		sign=ONE;
	ipart = (int32_t) n;
    1552:	c7 01       	movw	r24, r14
    1554:	b6 01       	movw	r22, r12
    1556:	0e 94 db 12 	call	0x25b6	; 0x25b6 <__fixsfsi>
    155a:	4b 01       	movw	r8, r22
    155c:	5c 01       	movw	r10, r24
	fpart = n - (float)ipart;
    155e:	0e 94 0e 13 	call	0x261c	; 0x261c <__floatsisf>
    1562:	9b 01       	movw	r18, r22
    1564:	ac 01       	movw	r20, r24
    1566:	c7 01       	movw	r24, r14
    1568:	b6 01       	movw	r22, r12
    156a:	54 d7       	rcall	.+3752   	; 0x2414 <__subsf3>
    156c:	2b 01       	movw	r4, r22
    156e:	3c 01       	movw	r6, r24
	k=FUNCintinvstr( ipart, res, ONE );
    1570:	21 e0       	ldi	r18, 0x01	; 1
    1572:	ae 01       	movw	r20, r28
    1574:	c5 01       	movw	r24, r10
    1576:	b4 01       	movw	r22, r8
    1578:	74 df       	rcall	.-280    	; 0x1462 <FUNCintinvstr>
	if (sign < ZERO)
		res[k++] = '-';
    157a:	ff 24       	eor	r15, r15
    157c:	f3 94       	inc	r15
    157e:	f8 0e       	add	r15, r24
    1580:	fe 01       	movw	r30, r28
    1582:	e8 0f       	add	r30, r24
    1584:	f1 1d       	adc	r31, r1
    1586:	8d e2       	ldi	r24, 0x2D	; 45
    1588:	80 83       	st	Z, r24
	else
		res[k++] = '+';
	res[k]='\0';
    158a:	6e 01       	movw	r12, r28
    158c:	cf 0c       	add	r12, r15
    158e:	d1 1c       	adc	r13, r1
    1590:	f6 01       	movw	r30, r12
	Reverse(res);
    1592:	10 82       	st	Z, r1
    1594:	ce 01       	movw	r24, r28
    1596:	0c dd       	rcall	.-1512   	; 0xfb0 <Reverse>
	if (afterpoint > ZERO) {
    1598:	11 23       	and	r17, r17
    159a:	09 f4       	brne	.+2      	; 0x159e <FUNCftoa+0x88>
    159c:	3d c0       	rjmp	.+122    	; 0x1618 <FUNCftoa+0x102>
		res[k++] = '.';
    159e:	8e e2       	ldi	r24, 0x2E	; 46
    15a0:	f6 01       	movw	r30, r12
    15a2:	80 83       	st	Z, r24
		FUNCintinvstr( fpart * pow(10, afterpoint), res+k, afterpoint );
    15a4:	f3 94       	inc	r15
    15a6:	ce 01       	movw	r24, r28
    15a8:	8f 0d       	add	r24, r15
    15aa:	91 1d       	adc	r25, r1
    15ac:	7c 01       	movw	r14, r24
    15ae:	61 2f       	mov	r22, r17
    15b0:	70 e0       	ldi	r23, 0x00	; 0
    15b2:	80 e0       	ldi	r24, 0x00	; 0
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	0e 94 0c 13 	call	0x2618	; 0x2618 <__floatunsisf>
    15ba:	9b 01       	movw	r18, r22
    15bc:	ac 01       	movw	r20, r24
    15be:	60 e0       	ldi	r22, 0x00	; 0
    15c0:	70 e0       	ldi	r23, 0x00	; 0
    15c2:	80 e2       	ldi	r24, 0x20	; 32
    15c4:	91 e4       	ldi	r25, 0x41	; 65
    15c6:	0e 94 25 14 	call	0x284a	; 0x284a <pow>
    15ca:	a3 01       	movw	r20, r6
    15cc:	92 01       	movw	r18, r4
    15ce:	0e 94 c2 13 	call	0x2784	; 0x2784 <__mulsf3>
    15d2:	f1 d7       	rcall	.+4066   	; 0x25b6 <__fixsfsi>
    15d4:	21 2f       	mov	r18, r17
    15d6:	a7 01       	movw	r20, r14
		Reverse(res+k);
    15d8:	44 df       	rcall	.-376    	; 0x1462 <FUNCintinvstr>
    15da:	c7 01       	movw	r24, r14
    15dc:	e9 dc       	rcall	.-1582   	; 0xfb0 <Reverse>
	}	
	return res;
    15de:	1c c0       	rjmp	.+56     	; 0x1618 <FUNCftoa+0x102>
	if (n < ZERO){
		n = -n;
		sign=-ONE;
	}else
		sign=ONE;
	ipart = (int32_t) n;
    15e0:	c7 01       	movw	r24, r14
    15e2:	b6 01       	movw	r22, r12
    15e4:	e8 d7       	rcall	.+4048   	; 0x25b6 <__fixsfsi>
    15e6:	4b 01       	movw	r8, r22
    15e8:	5c 01       	movw	r10, r24
    15ea:	0e 94 0e 13 	call	0x261c	; 0x261c <__floatsisf>
	fpart = n - (float)ipart;
    15ee:	9b 01       	movw	r18, r22
    15f0:	ac 01       	movw	r20, r24
    15f2:	c7 01       	movw	r24, r14
    15f4:	b6 01       	movw	r22, r12
    15f6:	0e d7       	rcall	.+3612   	; 0x2414 <__subsf3>
    15f8:	2b 01       	movw	r4, r22
    15fa:	3c 01       	movw	r6, r24
	k=FUNCintinvstr( ipart, res, ONE );
    15fc:	21 e0       	ldi	r18, 0x01	; 1
    15fe:	ae 01       	movw	r20, r28
    1600:	c5 01       	movw	r24, r10
    1602:	b4 01       	movw	r22, r8
    1604:	2e df       	rcall	.-420    	; 0x1462 <FUNCintinvstr>
    1606:	ff 24       	eor	r15, r15
	if (sign < ZERO)
		res[k++] = '-';
	else
		res[k++] = '+';
    1608:	f3 94       	inc	r15
    160a:	f8 0e       	add	r15, r24
    160c:	fe 01       	movw	r30, r28
    160e:	e8 0f       	add	r30, r24
    1610:	f1 1d       	adc	r31, r1
    1612:	8b e2       	ldi	r24, 0x2B	; 43
    1614:	80 83       	st	Z, r24
    1616:	b9 cf       	rjmp	.-142    	; 0x158a <FUNCftoa+0x74>
    1618:	ce 01       	movw	r24, r28
		res[k++] = '.';
		FUNCintinvstr( fpart * pow(10, afterpoint), res+k, afterpoint );
		Reverse(res+k);
	}	
	return res;
}
    161a:	df 91       	pop	r29
    161c:	cf 91       	pop	r28
    161e:	1f 91       	pop	r17
    1620:	ff 90       	pop	r15
    1622:	ef 90       	pop	r14
    1624:	df 90       	pop	r13
    1626:	cf 90       	pop	r12
    1628:	bf 90       	pop	r11
    162a:	af 90       	pop	r10
    162c:	9f 90       	pop	r9
    162e:	8f 90       	pop	r8
    1630:	7f 90       	pop	r7
    1632:	6f 90       	pop	r6
    1634:	5f 90       	pop	r5
    1636:	4f 90       	pop	r4
    1638:	08 95       	ret

0000163a <LCD0_write>:
    163a:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    163e:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1642:	90 81       	ld	r25, Z
    1644:	9d 7f       	andi	r25, 0xFD	; 253
    1646:	90 83       	st	Z, r25
    1648:	67 2b       	or	r22, r23
    164a:	41 f0       	breq	.+16     	; 0x165c <LCD0_write+0x22>
    164c:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1650:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1654:	90 81       	ld	r25, Z
    1656:	91 60       	ori	r25, 0x01	; 1
    1658:	90 83       	st	Z, r25
    165a:	07 c0       	rjmp	.+14     	; 0x166a <LCD0_write+0x30>
    165c:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1660:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1664:	90 81       	ld	r25, Z
    1666:	9e 7f       	andi	r25, 0xFE	; 254
    1668:	90 83       	st	Z, r25
    166a:	e0 91 f7 02 	lds	r30, 0x02F7	; 0x8002f7 <lcd0_DDR>
    166e:	f0 91 f8 02 	lds	r31, 0x02F8	; 0x8002f8 <lcd0_DDR+0x1>
    1672:	90 81       	ld	r25, Z
    1674:	90 6f       	ori	r25, 0xF0	; 240
    1676:	90 83       	st	Z, r25
    1678:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    167c:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1680:	90 81       	ld	r25, Z
    1682:	94 60       	ori	r25, 0x04	; 4
    1684:	90 83       	st	Z, r25
    1686:	88 23       	and	r24, r24
    1688:	44 f4       	brge	.+16     	; 0x169a <LCD0_write+0x60>
    168a:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    168e:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1692:	90 81       	ld	r25, Z
    1694:	90 68       	ori	r25, 0x80	; 128
    1696:	90 83       	st	Z, r25
    1698:	07 c0       	rjmp	.+14     	; 0x16a8 <LCD0_write+0x6e>
    169a:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    169e:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    16a2:	90 81       	ld	r25, Z
    16a4:	9f 77       	andi	r25, 0x7F	; 127
    16a6:	90 83       	st	Z, r25
    16a8:	86 ff       	sbrs	r24, 6
    16aa:	08 c0       	rjmp	.+16     	; 0x16bc <LCD0_write+0x82>
    16ac:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    16b0:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    16b4:	90 81       	ld	r25, Z
    16b6:	90 64       	ori	r25, 0x40	; 64
    16b8:	90 83       	st	Z, r25
    16ba:	07 c0       	rjmp	.+14     	; 0x16ca <LCD0_write+0x90>
    16bc:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    16c0:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    16c4:	90 81       	ld	r25, Z
    16c6:	9f 7b       	andi	r25, 0xBF	; 191
    16c8:	90 83       	st	Z, r25
    16ca:	85 ff       	sbrs	r24, 5
    16cc:	08 c0       	rjmp	.+16     	; 0x16de <LCD0_write+0xa4>
    16ce:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    16d2:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    16d6:	90 81       	ld	r25, Z
    16d8:	90 62       	ori	r25, 0x20	; 32
    16da:	90 83       	st	Z, r25
    16dc:	07 c0       	rjmp	.+14     	; 0x16ec <LCD0_write+0xb2>
    16de:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    16e2:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    16e6:	90 81       	ld	r25, Z
    16e8:	9f 7d       	andi	r25, 0xDF	; 223
    16ea:	90 83       	st	Z, r25
    16ec:	84 ff       	sbrs	r24, 4
    16ee:	08 c0       	rjmp	.+16     	; 0x1700 <LCD0_write+0xc6>
    16f0:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    16f4:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    16f8:	90 81       	ld	r25, Z
    16fa:	90 61       	ori	r25, 0x10	; 16
    16fc:	90 83       	st	Z, r25
    16fe:	07 c0       	rjmp	.+14     	; 0x170e <LCD0_write+0xd4>
    1700:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1704:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1708:	90 81       	ld	r25, Z
    170a:	9f 7e       	andi	r25, 0xEF	; 239
    170c:	90 83       	st	Z, r25
    170e:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1712:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1716:	90 81       	ld	r25, Z
    1718:	9b 7f       	andi	r25, 0xFB	; 251
    171a:	90 83       	st	Z, r25
    171c:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1720:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1724:	90 81       	ld	r25, Z
    1726:	94 60       	ori	r25, 0x04	; 4
    1728:	90 83       	st	Z, r25
    172a:	83 ff       	sbrs	r24, 3
    172c:	08 c0       	rjmp	.+16     	; 0x173e <LCD0_write+0x104>
    172e:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1732:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1736:	90 81       	ld	r25, Z
    1738:	90 68       	ori	r25, 0x80	; 128
    173a:	90 83       	st	Z, r25
    173c:	07 c0       	rjmp	.+14     	; 0x174c <LCD0_write+0x112>
    173e:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1742:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1746:	90 81       	ld	r25, Z
    1748:	9f 77       	andi	r25, 0x7F	; 127
    174a:	90 83       	st	Z, r25
    174c:	82 ff       	sbrs	r24, 2
    174e:	08 c0       	rjmp	.+16     	; 0x1760 <LCD0_write+0x126>
    1750:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1754:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1758:	90 81       	ld	r25, Z
    175a:	90 64       	ori	r25, 0x40	; 64
    175c:	90 83       	st	Z, r25
    175e:	07 c0       	rjmp	.+14     	; 0x176e <LCD0_write+0x134>
    1760:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1764:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1768:	90 81       	ld	r25, Z
    176a:	9f 7b       	andi	r25, 0xBF	; 191
    176c:	90 83       	st	Z, r25
    176e:	81 ff       	sbrs	r24, 1
    1770:	08 c0       	rjmp	.+16     	; 0x1782 <LCD0_write+0x148>
    1772:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1776:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    177a:	90 81       	ld	r25, Z
    177c:	90 62       	ori	r25, 0x20	; 32
    177e:	90 83       	st	Z, r25
    1780:	07 c0       	rjmp	.+14     	; 0x1790 <LCD0_write+0x156>
    1782:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1786:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    178a:	90 81       	ld	r25, Z
    178c:	9f 7d       	andi	r25, 0xDF	; 223
    178e:	90 83       	st	Z, r25
    1790:	80 ff       	sbrs	r24, 0
    1792:	08 c0       	rjmp	.+16     	; 0x17a4 <LCD0_write+0x16a>
    1794:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1798:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    179c:	80 81       	ld	r24, Z
    179e:	80 61       	ori	r24, 0x10	; 16
    17a0:	80 83       	st	Z, r24
    17a2:	07 c0       	rjmp	.+14     	; 0x17b2 <LCD0_write+0x178>
    17a4:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    17a8:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    17ac:	80 81       	ld	r24, Z
    17ae:	8f 7e       	andi	r24, 0xEF	; 239
    17b0:	80 83       	st	Z, r24
    17b2:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    17b6:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    17ba:	80 81       	ld	r24, Z
    17bc:	8b 7f       	andi	r24, 0xFB	; 251
    17be:	80 83       	st	Z, r24
    17c0:	08 95       	ret

000017c2 <LCD0_read>:
    17c2:	e0 91 f7 02 	lds	r30, 0x02F7	; 0x8002f7 <lcd0_DDR>
    17c6:	f0 91 f8 02 	lds	r31, 0x02F8	; 0x8002f8 <lcd0_DDR+0x1>
    17ca:	20 81       	ld	r18, Z
    17cc:	2f 70       	andi	r18, 0x0F	; 15
    17ce:	20 83       	st	Z, r18
    17d0:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    17d4:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    17d8:	20 81       	ld	r18, Z
    17da:	20 6f       	ori	r18, 0xF0	; 240
    17dc:	20 83       	st	Z, r18
    17de:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    17e2:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    17e6:	20 81       	ld	r18, Z
    17e8:	22 60       	ori	r18, 0x02	; 2
    17ea:	20 83       	st	Z, r18
    17ec:	89 2b       	or	r24, r25
    17ee:	41 f0       	breq	.+16     	; 0x1800 <LCD0_read+0x3e>
    17f0:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    17f4:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    17f8:	80 81       	ld	r24, Z
    17fa:	81 60       	ori	r24, 0x01	; 1
    17fc:	80 83       	st	Z, r24
    17fe:	07 c0       	rjmp	.+14     	; 0x180e <LCD0_read+0x4c>
    1800:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1804:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1808:	80 81       	ld	r24, Z
    180a:	8e 7f       	andi	r24, 0xFE	; 254
    180c:	80 83       	st	Z, r24
    180e:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1812:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1816:	80 81       	ld	r24, Z
    1818:	84 60       	ori	r24, 0x04	; 4
    181a:	80 83       	st	Z, r24
    181c:	e0 91 f0 02 	lds	r30, 0x02F0	; 0x8002f0 <lcd0_PIN>
    1820:	f0 91 f1 02 	lds	r31, 0x02F1	; 0x8002f1 <lcd0_PIN+0x1>
    1824:	80 81       	ld	r24, Z
    1826:	88 23       	and	r24, r24
    1828:	14 f0       	brlt	.+4      	; 0x182e <LCD0_read+0x6c>
    182a:	80 e0       	ldi	r24, 0x00	; 0
    182c:	01 c0       	rjmp	.+2      	; 0x1830 <LCD0_read+0x6e>
    182e:	80 e8       	ldi	r24, 0x80	; 128
    1830:	90 81       	ld	r25, Z
    1832:	96 ff       	sbrs	r25, 6
    1834:	02 c0       	rjmp	.+4      	; 0x183a <LCD0_read+0x78>
    1836:	80 64       	ori	r24, 0x40	; 64
    1838:	01 c0       	rjmp	.+2      	; 0x183c <LCD0_read+0x7a>
    183a:	8f 7b       	andi	r24, 0xBF	; 191
    183c:	90 81       	ld	r25, Z
    183e:	95 ff       	sbrs	r25, 5
    1840:	02 c0       	rjmp	.+4      	; 0x1846 <LCD0_read+0x84>
    1842:	80 62       	ori	r24, 0x20	; 32
    1844:	01 c0       	rjmp	.+2      	; 0x1848 <LCD0_read+0x86>
    1846:	8f 7d       	andi	r24, 0xDF	; 223
    1848:	90 81       	ld	r25, Z
    184a:	94 ff       	sbrs	r25, 4
    184c:	02 c0       	rjmp	.+4      	; 0x1852 <LCD0_read+0x90>
    184e:	80 61       	ori	r24, 0x10	; 16
    1850:	01 c0       	rjmp	.+2      	; 0x1854 <LCD0_read+0x92>
    1852:	8f 7e       	andi	r24, 0xEF	; 239
    1854:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1858:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    185c:	90 81       	ld	r25, Z
    185e:	9b 7f       	andi	r25, 0xFB	; 251
    1860:	90 83       	st	Z, r25
    1862:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1866:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    186a:	90 81       	ld	r25, Z
    186c:	94 60       	ori	r25, 0x04	; 4
    186e:	90 83       	st	Z, r25
    1870:	e0 91 f0 02 	lds	r30, 0x02F0	; 0x8002f0 <lcd0_PIN>
    1874:	f0 91 f1 02 	lds	r31, 0x02F1	; 0x8002f1 <lcd0_PIN+0x1>
    1878:	90 81       	ld	r25, Z
    187a:	99 23       	and	r25, r25
    187c:	14 f4       	brge	.+4      	; 0x1882 <LCD0_read+0xc0>
    187e:	88 60       	ori	r24, 0x08	; 8
    1880:	01 c0       	rjmp	.+2      	; 0x1884 <LCD0_read+0xc2>
    1882:	87 7f       	andi	r24, 0xF7	; 247
    1884:	90 81       	ld	r25, Z
    1886:	96 ff       	sbrs	r25, 6
    1888:	02 c0       	rjmp	.+4      	; 0x188e <LCD0_read+0xcc>
    188a:	84 60       	ori	r24, 0x04	; 4
    188c:	01 c0       	rjmp	.+2      	; 0x1890 <LCD0_read+0xce>
    188e:	8b 7f       	andi	r24, 0xFB	; 251
    1890:	90 81       	ld	r25, Z
    1892:	95 ff       	sbrs	r25, 5
    1894:	02 c0       	rjmp	.+4      	; 0x189a <LCD0_read+0xd8>
    1896:	82 60       	ori	r24, 0x02	; 2
    1898:	01 c0       	rjmp	.+2      	; 0x189c <LCD0_read+0xda>
    189a:	8d 7f       	andi	r24, 0xFD	; 253
    189c:	90 81       	ld	r25, Z
    189e:	94 ff       	sbrs	r25, 4
    18a0:	02 c0       	rjmp	.+4      	; 0x18a6 <LCD0_read+0xe4>
    18a2:	81 60       	ori	r24, 0x01	; 1
    18a4:	01 c0       	rjmp	.+2      	; 0x18a8 <LCD0_read+0xe6>
    18a6:	8e 7f       	andi	r24, 0xFE	; 254
    18a8:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    18ac:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    18b0:	90 81       	ld	r25, Z
    18b2:	9b 7f       	andi	r25, 0xFB	; 251
    18b4:	90 83       	st	Z, r25
    18b6:	08 95       	ret

000018b8 <LCD0_BF>:
    18b8:	cf 93       	push	r28
    18ba:	df 93       	push	r29
    18bc:	80 e0       	ldi	r24, 0x00	; 0
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	80 df       	rcall	.-256    	; 0x17c2 <LCD0_read>
    18c2:	cb e0       	ldi	r28, 0x0B	; 11
    18c4:	d0 e0       	ldi	r29, 0x00	; 0
    18c6:	05 c0       	rjmp	.+10     	; 0x18d2 <LCD0_BF+0x1a>
    18c8:	80 e0       	ldi	r24, 0x00	; 0
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	7a df       	rcall	.-268    	; 0x17c2 <LCD0_read>
    18ce:	21 97       	sbiw	r28, 0x01	; 1
    18d0:	11 f0       	breq	.+4      	; 0x18d6 <LCD0_BF+0x1e>
    18d2:	88 23       	and	r24, r24
    18d4:	cc f3       	brlt	.-14     	; 0x18c8 <LCD0_BF+0x10>
    18d6:	df 91       	pop	r29
    18d8:	cf 91       	pop	r28
    18da:	08 95       	ret

000018dc <LCD0_putch>:
    18dc:	61 e0       	ldi	r22, 0x01	; 1
    18de:	70 e0       	ldi	r23, 0x00	; 0
    18e0:	ac de       	rcall	.-680    	; 0x163a <LCD0_write>
    18e2:	ea cf       	rjmp	.-44     	; 0x18b8 <LCD0_BF>
    18e4:	08 95       	ret

000018e6 <LCD0_getch>:
    18e6:	cf 93       	push	r28
    18e8:	81 e0       	ldi	r24, 0x01	; 1
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	6a df       	rcall	.-300    	; 0x17c2 <LCD0_read>
    18ee:	c8 2f       	mov	r28, r24
    18f0:	e3 df       	rcall	.-58     	; 0x18b8 <LCD0_BF>
    18f2:	8c 2f       	mov	r24, r28
    18f4:	cf 91       	pop	r28
    18f6:	08 95       	ret

000018f8 <LCD0_string>:
    18f8:	cf 93       	push	r28
    18fa:	df 93       	push	r29
    18fc:	ec 01       	movw	r28, r24
    18fe:	88 81       	ld	r24, Y
    1900:	88 23       	and	r24, r24
    1902:	41 f0       	breq	.+16     	; 0x1914 <LCD0_string+0x1c>
    1904:	21 96       	adiw	r28, 0x01	; 1
    1906:	61 e0       	ldi	r22, 0x01	; 1
    1908:	70 e0       	ldi	r23, 0x00	; 0
    190a:	97 de       	rcall	.-722    	; 0x163a <LCD0_write>
    190c:	d5 df       	rcall	.-86     	; 0x18b8 <LCD0_BF>
    190e:	89 91       	ld	r24, Y+
    1910:	81 11       	cpse	r24, r1
    1912:	f9 cf       	rjmp	.-14     	; 0x1906 <LCD0_string+0xe>
    1914:	df 91       	pop	r29
    1916:	cf 91       	pop	r28
    1918:	08 95       	ret

0000191a <LCD0_string_size>:
    191a:	0f 93       	push	r16
    191c:	1f 93       	push	r17
    191e:	cf 93       	push	r28
    1920:	df 93       	push	r29
    1922:	fc 01       	movw	r30, r24
    1924:	d6 2f       	mov	r29, r22
    1926:	80 81       	ld	r24, Z
    1928:	88 23       	and	r24, r24
    192a:	51 f0       	breq	.+20     	; 0x1940 <LCD0_string_size+0x26>
    192c:	8f 01       	movw	r16, r30
    192e:	0f 5f       	subi	r16, 0xFF	; 255
    1930:	1f 4f       	sbci	r17, 0xFF	; 255
    1932:	61 11       	cpse	r22, r1
    1934:	09 c0       	rjmp	.+18     	; 0x1948 <LCD0_string_size+0x2e>
    1936:	1b c0       	rjmp	.+54     	; 0x196e <LCD0_string_size+0x54>
    1938:	cf 5f       	subi	r28, 0xFF	; 255
    193a:	dc 17       	cp	r29, r28
    193c:	30 f4       	brcc	.+12     	; 0x194a <LCD0_string_size+0x30>
    193e:	01 c0       	rjmp	.+2      	; 0x1942 <LCD0_string_size+0x28>
    1940:	c0 e0       	ldi	r28, 0x00	; 0
    1942:	cd 17       	cp	r28, r29
    1944:	60 f0       	brcs	.+24     	; 0x195e <LCD0_string_size+0x44>
    1946:	13 c0       	rjmp	.+38     	; 0x196e <LCD0_string_size+0x54>
    1948:	c1 e0       	ldi	r28, 0x01	; 1
    194a:	61 e0       	ldi	r22, 0x01	; 1
    194c:	70 e0       	ldi	r23, 0x00	; 0
    194e:	75 de       	rcall	.-790    	; 0x163a <LCD0_write>
    1950:	b3 df       	rcall	.-154    	; 0x18b8 <LCD0_BF>
    1952:	f8 01       	movw	r30, r16
    1954:	81 91       	ld	r24, Z+
    1956:	8f 01       	movw	r16, r30
    1958:	81 11       	cpse	r24, r1
    195a:	ee cf       	rjmp	.-36     	; 0x1938 <LCD0_string_size+0x1e>
    195c:	f2 cf       	rjmp	.-28     	; 0x1942 <LCD0_string_size+0x28>
    195e:	cf 5f       	subi	r28, 0xFF	; 255
    1960:	61 e0       	ldi	r22, 0x01	; 1
    1962:	70 e0       	ldi	r23, 0x00	; 0
    1964:	80 e2       	ldi	r24, 0x20	; 32
    1966:	69 de       	rcall	.-814    	; 0x163a <LCD0_write>
    1968:	a7 df       	rcall	.-178    	; 0x18b8 <LCD0_BF>
    196a:	cd 17       	cp	r28, r29
    196c:	c0 f3       	brcs	.-16     	; 0x195e <LCD0_string_size+0x44>
    196e:	df 91       	pop	r29
    1970:	cf 91       	pop	r28
    1972:	1f 91       	pop	r17
    1974:	0f 91       	pop	r16
    1976:	08 95       	ret

00001978 <LCD0_hspace>:
    1978:	cf 93       	push	r28
    197a:	c8 2f       	mov	r28, r24
    197c:	88 23       	and	r24, r24
    197e:	39 f0       	breq	.+14     	; 0x198e <LCD0_hspace+0x16>
    1980:	61 e0       	ldi	r22, 0x01	; 1
    1982:	70 e0       	ldi	r23, 0x00	; 0
    1984:	80 e2       	ldi	r24, 0x20	; 32
    1986:	59 de       	rcall	.-846    	; 0x163a <LCD0_write>
    1988:	97 df       	rcall	.-210    	; 0x18b8 <LCD0_BF>
    198a:	c1 50       	subi	r28, 0x01	; 1
    198c:	c9 f7       	brne	.-14     	; 0x1980 <LCD0_hspace+0x8>
    198e:	cf 91       	pop	r28
    1990:	08 95       	ret

00001992 <LCD0_gotoxy>:
    1992:	26 2f       	mov	r18, r22
    1994:	81 30       	cpi	r24, 0x01	; 1
    1996:	91 05       	cpc	r25, r1
    1998:	71 f0       	breq	.+28     	; 0x19b6 <LCD0_gotoxy+0x24>
    199a:	30 f0       	brcs	.+12     	; 0x19a8 <LCD0_gotoxy+0x16>
    199c:	82 30       	cpi	r24, 0x02	; 2
    199e:	91 05       	cpc	r25, r1
    19a0:	89 f0       	breq	.+34     	; 0x19c4 <LCD0_gotoxy+0x32>
    19a2:	03 97       	sbiw	r24, 0x03	; 3
    19a4:	b1 f0       	breq	.+44     	; 0x19d2 <LCD0_gotoxy+0x40>
    19a6:	08 95       	ret
    19a8:	60 e0       	ldi	r22, 0x00	; 0
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	80 e8       	ldi	r24, 0x80	; 128
    19ae:	82 0f       	add	r24, r18
    19b0:	44 de       	rcall	.-888    	; 0x163a <LCD0_write>
    19b2:	82 cf       	rjmp	.-252    	; 0x18b8 <LCD0_BF>
    19b4:	08 95       	ret
    19b6:	60 e0       	ldi	r22, 0x00	; 0
    19b8:	70 e0       	ldi	r23, 0x00	; 0
    19ba:	80 ec       	ldi	r24, 0xC0	; 192
    19bc:	82 0f       	add	r24, r18
    19be:	3d de       	rcall	.-902    	; 0x163a <LCD0_write>
    19c0:	7b cf       	rjmp	.-266    	; 0x18b8 <LCD0_BF>
    19c2:	08 95       	ret
    19c4:	60 e0       	ldi	r22, 0x00	; 0
    19c6:	70 e0       	ldi	r23, 0x00	; 0
    19c8:	84 e9       	ldi	r24, 0x94	; 148
    19ca:	82 0f       	add	r24, r18
    19cc:	36 de       	rcall	.-916    	; 0x163a <LCD0_write>
    19ce:	74 cf       	rjmp	.-280    	; 0x18b8 <LCD0_BF>
    19d0:	08 95       	ret
    19d2:	60 e0       	ldi	r22, 0x00	; 0
    19d4:	70 e0       	ldi	r23, 0x00	; 0
    19d6:	84 ed       	ldi	r24, 0xD4	; 212
    19d8:	82 0f       	add	r24, r18
    19da:	2f de       	rcall	.-930    	; 0x163a <LCD0_write>
    19dc:	6d cf       	rjmp	.-294    	; 0x18b8 <LCD0_BF>
    19de:	08 95       	ret

000019e0 <LCD0_clear>:
    19e0:	60 e0       	ldi	r22, 0x00	; 0
    19e2:	70 e0       	ldi	r23, 0x00	; 0
    19e4:	81 e0       	ldi	r24, 0x01	; 1
    19e6:	29 de       	rcall	.-942    	; 0x163a <LCD0_write>
    19e8:	87 ee       	ldi	r24, 0xE7	; 231
    19ea:	97 e1       	ldi	r25, 0x17	; 23
    19ec:	01 97       	sbiw	r24, 0x01	; 1
    19ee:	f1 f7       	brne	.-4      	; 0x19ec <LCD0_clear+0xc>
    19f0:	00 c0       	rjmp	.+0      	; 0x19f2 <LCD0_clear+0x12>
    19f2:	00 00       	nop
    19f4:	08 95       	ret

000019f6 <LCD0_inic>:
	return lcd0;
}
void LCD0_inic(void)
{
	//LCD INIC
	*lcd0_DDR=(1<<RS)|(1<<RW)|(1<<EN)|(0<<NC);
    19f6:	e0 91 f7 02 	lds	r30, 0x02F7	; 0x8002f7 <lcd0_DDR>
    19fa:	f0 91 f8 02 	lds	r31, 0x02F8	; 0x8002f8 <lcd0_DDR+0x1>
    19fe:	87 e0       	ldi	r24, 0x07	; 7
    1a00:	80 83       	st	Z, r24
	*lcd0_PORT=(1<<NC);
    1a02:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1a06:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1a0a:	88 e0       	ldi	r24, 0x08	; 8
    1a0c:	80 83       	st	Z, r24
    1a0e:	2f ef       	ldi	r18, 0xFF	; 255
    1a10:	83 ef       	ldi	r24, 0xF3	; 243
    1a12:	91 e0       	ldi	r25, 0x01	; 1
    1a14:	21 50       	subi	r18, 0x01	; 1
    1a16:	80 40       	sbci	r24, 0x00	; 0
    1a18:	90 40       	sbci	r25, 0x00	; 0
    1a1a:	e1 f7       	brne	.-8      	; 0x1a14 <LCD0_inic+0x1e>
    1a1c:	00 c0       	rjmp	.+0      	; 0x1a1e <LCD0_inic+0x28>
    1a1e:	00 00       	nop
	/***INICIALIZACAO LCD**datasheet*/
	_delay_ms(40);
	LCD0_write(0x33,INST); //function set
    1a20:	60 e0       	ldi	r22, 0x00	; 0
    1a22:	70 e0       	ldi	r23, 0x00	; 0
    1a24:	83 e3       	ldi	r24, 0x33	; 51
    1a26:	09 de       	rcall	.-1006   	; 0x163a <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1a28:	20 ed       	ldi	r18, 0xD0	; 208
    1a2a:	2a 95       	dec	r18
    1a2c:	f1 f7       	brne	.-4      	; 0x1a2a <LCD0_inic+0x34>
	_delay_us(39);
	LCD0_write(0x33,INST); //function set
    1a2e:	60 e0       	ldi	r22, 0x00	; 0
    1a30:	70 e0       	ldi	r23, 0x00	; 0
    1a32:	83 e3       	ldi	r24, 0x33	; 51
    1a34:	02 de       	rcall	.-1020   	; 0x163a <LCD0_write>
    1a36:	80 ed       	ldi	r24, 0xD0	; 208
    1a38:	8a 95       	dec	r24
    1a3a:	f1 f7       	brne	.-4      	; 0x1a38 <LCD0_inic+0x42>
	_delay_us(39);
	LCD0_write(0x2B,INST); //function set
    1a3c:	60 e0       	ldi	r22, 0x00	; 0
    1a3e:	70 e0       	ldi	r23, 0x00	; 0
    1a40:	8b e2       	ldi	r24, 0x2B	; 43
    1a42:	fb dd       	rcall	.-1034   	; 0x163a <LCD0_write>
    1a44:	95 ec       	ldi	r25, 0xC5	; 197
    1a46:	9a 95       	dec	r25
    1a48:	f1 f7       	brne	.-4      	; 0x1a46 <LCD0_inic+0x50>
    1a4a:	00 00       	nop
	_delay_us(37);
	LCD0_write(0x0C,INST);// display on/off control
    1a4c:	60 e0       	ldi	r22, 0x00	; 0
    1a4e:	70 e0       	ldi	r23, 0x00	; 0
    1a50:	8c e0       	ldi	r24, 0x0C	; 12
    1a52:	f3 dd       	rcall	.-1050   	; 0x163a <LCD0_write>
    1a54:	25 ec       	ldi	r18, 0xC5	; 197
    1a56:	2a 95       	dec	r18
    1a58:	f1 f7       	brne	.-4      	; 0x1a56 <LCD0_inic+0x60>
	_delay_us(37);
	LCD0_write(0x01,INST);// clear display
    1a5a:	00 00       	nop
    1a5c:	60 e0       	ldi	r22, 0x00	; 0
    1a5e:	70 e0       	ldi	r23, 0x00	; 0
    1a60:	81 e0       	ldi	r24, 0x01	; 1
    1a62:	eb dd       	rcall	.-1066   	; 0x163a <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1a64:	87 ee       	ldi	r24, 0xE7	; 231
    1a66:	97 e1       	ldi	r25, 0x17	; 23
    1a68:	01 97       	sbiw	r24, 0x01	; 1
    1a6a:	f1 f7       	brne	.-4      	; 0x1a68 <LCD0_inic+0x72>
    1a6c:	00 c0       	rjmp	.+0      	; 0x1a6e <LCD0_inic+0x78>
	_delay_ms(1.53);
	LCD0_write(0x06,INST);// entry mode set (crazy settings)
    1a6e:	00 00       	nop
    1a70:	60 e0       	ldi	r22, 0x00	; 0
    1a72:	70 e0       	ldi	r23, 0x00	; 0
    1a74:	86 e0       	ldi	r24, 0x06	; 6
    1a76:	e1 dd       	rcall	.-1086   	; 0x163a <LCD0_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1a78:	95 ec       	ldi	r25, 0xC5	; 197
    1a7a:	9a 95       	dec	r25
    1a7c:	f1 f7       	brne	.-4      	; 0x1a7a <LCD0_inic+0x84>
    1a7e:	00 00       	nop
    1a80:	08 95       	ret

00001a82 <LCD0enable>:
void LCD1_strobe(unsigned int num);
void LCD1_reboot(void);
unsigned int LCD_ticks(unsigned int num);
/***Procedure & Function***/
LCD0 LCD0enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port)
{
    1a82:	1f 93       	push	r17
    1a84:	cf 93       	push	r28
    1a86:	df 93       	push	r29
    1a88:	ec 01       	movw	r28, r24
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    1a8a:	1f b7       	in	r17, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1a8c:	8f b7       	in	r24, 0x3f	; 63
    1a8e:	8f 77       	andi	r24, 0x7F	; 127
    1a90:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	LCD0 lcd0;
	//import parametros
	lcd0_DDR=ddr;
    1a92:	70 93 f8 02 	sts	0x02F8, r23	; 0x8002f8 <lcd0_DDR+0x1>
    1a96:	60 93 f7 02 	sts	0x02F7, r22	; 0x8002f7 <lcd0_DDR>
	lcd0_PIN=pin;
    1a9a:	50 93 f1 02 	sts	0x02F1, r21	; 0x8002f1 <lcd0_PIN+0x1>
    1a9e:	40 93 f0 02 	sts	0x02F0, r20	; 0x8002f0 <lcd0_PIN>
	lcd0_PORT=port;
    1aa2:	30 93 fb 02 	sts	0x02FB, r19	; 0x8002fb <lcd0_PORT+0x1>
    1aa6:	20 93 fa 02 	sts	0x02FA, r18	; 0x8002fa <lcd0_PORT>
	//inic variables
	*lcd0_DDR=0x00;
    1aaa:	fb 01       	movw	r30, r22
    1aac:	10 82       	st	Z, r1
	*lcd0_PORT=0xFF;
    1aae:	e0 91 fa 02 	lds	r30, 0x02FA	; 0x8002fa <lcd0_PORT>
    1ab2:	f0 91 fb 02 	lds	r31, 0x02FB	; 0x8002fb <lcd0_PORT+0x1>
    1ab6:	8f ef       	ldi	r24, 0xFF	; 255
    1ab8:	80 83       	st	Z, r24
	lcd0_detect=*lcd0_PIN & (1<<NC);
    1aba:	e0 91 f0 02 	lds	r30, 0x02F0	; 0x8002f0 <lcd0_PIN>
    1abe:	f0 91 f1 02 	lds	r31, 0x02F1	; 0x8002f1 <lcd0_PIN+0x1>
    1ac2:	80 81       	ld	r24, Z
    1ac4:	88 70       	andi	r24, 0x08	; 8
    1ac6:	80 93 f9 02 	sts	0x02F9, r24	; 0x8002f9 <lcd0_detect>
	lcd0.hspace=LCD0_hspace;
	lcd0.clear=LCD0_clear;
	lcd0.gotoxy=LCD0_gotoxy;
	lcd0.reboot=LCD0_reboot;
	//LCD INIC
	LCD0_inic();
    1aca:	95 df       	rcall	.-214    	; 0x19f6 <LCD0_inic>
	SREG=tSREG;
    1acc:	1f bf       	out	0x3f, r17	; 63
	//
	return lcd0;
    1ace:	8d e1       	ldi	r24, 0x1D	; 29
    1ad0:	9b e0       	ldi	r25, 0x0B	; 11
    1ad2:	99 83       	std	Y+1, r25	; 0x01
    1ad4:	88 83       	st	Y, r24
    1ad6:	81 ee       	ldi	r24, 0xE1	; 225
    1ad8:	9b e0       	ldi	r25, 0x0B	; 11
    1ada:	9b 83       	std	Y+3, r25	; 0x03
    1adc:	8a 83       	std	Y+2, r24	; 0x02
    1ade:	8c e5       	ldi	r24, 0x5C	; 92
    1ae0:	9c e0       	ldi	r25, 0x0C	; 12
    1ae2:	9d 83       	std	Y+5, r25	; 0x05
    1ae4:	8c 83       	std	Y+4, r24	; 0x04
    1ae6:	8e e6       	ldi	r24, 0x6E	; 110
    1ae8:	9c e0       	ldi	r25, 0x0C	; 12
    1aea:	9f 83       	std	Y+7, r25	; 0x07
    1aec:	8e 83       	std	Y+6, r24	; 0x06
    1aee:	83 e7       	ldi	r24, 0x73	; 115
    1af0:	9c e0       	ldi	r25, 0x0C	; 12
    1af2:	99 87       	std	Y+9, r25	; 0x09
    1af4:	88 87       	std	Y+8, r24	; 0x08
    1af6:	8c e7       	ldi	r24, 0x7C	; 124
    1af8:	9c e0       	ldi	r25, 0x0C	; 12
    1afa:	9b 87       	std	Y+11, r25	; 0x0b
    1afc:	8a 87       	std	Y+10, r24	; 0x0a
    1afe:	8d e8       	ldi	r24, 0x8D	; 141
    1b00:	9c e0       	ldi	r25, 0x0C	; 12
    1b02:	9d 87       	std	Y+13, r25	; 0x0d
    1b04:	8c 87       	std	Y+12, r24	; 0x0c
    1b06:	8c eb       	ldi	r24, 0xBC	; 188
    1b08:	9c e0       	ldi	r25, 0x0C	; 12
    1b0a:	9f 87       	std	Y+15, r25	; 0x0f
    1b0c:	8e 87       	std	Y+14, r24	; 0x0e
    1b0e:	80 ef       	ldi	r24, 0xF0	; 240
    1b10:	9c e0       	ldi	r25, 0x0C	; 12
    1b12:	99 8b       	std	Y+17, r25	; 0x11
    1b14:	88 8b       	std	Y+16, r24	; 0x10
    1b16:	89 ec       	ldi	r24, 0xC9	; 201
    1b18:	9c e0       	ldi	r25, 0x0C	; 12
    1b1a:	9b 8b       	std	Y+19, r25	; 0x13
    1b1c:	8a 8b       	std	Y+18, r24	; 0x12
    1b1e:	88 e9       	ldi	r24, 0x98	; 152
    1b20:	9d e0       	ldi	r25, 0x0D	; 13
    1b22:	9d 8b       	std	Y+21, r25	; 0x15
    1b24:	8c 8b       	std	Y+20, r24	; 0x14
}
    1b26:	ce 01       	movw	r24, r28
    1b28:	df 91       	pop	r29
    1b2a:	cf 91       	pop	r28
    1b2c:	1f 91       	pop	r17
    1b2e:	08 95       	ret

00001b30 <LCD0_reboot>:
	*lcd0_PORT|=(1<<EN);
	LCD_ticks(num);
	*lcd0_PORT&=~(1<<EN);
}
void LCD0_reboot(void)
{
    1b30:	cf 93       	push	r28
    1b32:	df 93       	push	r29
	uint8_t tSREG;
	tSREG=SREG;
    1b34:	df b7       	in	r29, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1b36:	8f b7       	in	r24, 0x3f	; 63
    1b38:	8f 77       	andi	r24, 0x7F	; 127
    1b3a:	8f bf       	out	0x3f, r24	; 63
	//low high detect pin NC
	uint8_t i;
	uint8_t tmp;
	tmp=*lcd0_PIN & (1<<NC);
    1b3c:	e0 91 f0 02 	lds	r30, 0x02F0	; 0x8002f0 <lcd0_PIN>
    1b40:	f0 91 f1 02 	lds	r31, 0x02F1	; 0x8002f1 <lcd0_PIN+0x1>
    1b44:	c0 81       	ld	r28, Z
    1b46:	c8 70       	andi	r28, 0x08	; 8
	i=tmp^lcd0_detect;
    1b48:	80 91 f9 02 	lds	r24, 0x02F9	; 0x8002f9 <lcd0_detect>
    1b4c:	8c 27       	eor	r24, r28
	i&=tmp;
	if(i)
    1b4e:	8c 23       	and	r24, r28
    1b50:	09 f0       	breq	.+2      	; 0x1b54 <LCD0_reboot+0x24>
		LCD0_inic();
    1b52:	51 df       	rcall	.-350    	; 0x19f6 <LCD0_inic>
	lcd0_detect=tmp;
    1b54:	c0 93 f9 02 	sts	0x02F9, r28	; 0x8002f9 <lcd0_detect>
	SREG=tSREG;
    1b58:	df bf       	out	0x3f, r29	; 63
}
    1b5a:	df 91       	pop	r29
    1b5c:	cf 91       	pop	r28
    1b5e:	08 95       	ret

00001b60 <HX711_set_readflag>:
	// returns a copy
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=ONE;
    1b60:	21 e0       	ldi	r18, 0x01	; 1
    1b62:	fc 01       	movw	r30, r24
    1b64:	20 83       	st	Z, r18
    1b66:	08 95       	ret

00001b68 <HX711_check_readflag>:
	self->readflag=ZERO;
}
uint8_t HX711_check_readflag(HX711* self)
{
	return self->readflag;	
}
    1b68:	fc 01       	movw	r30, r24
    1b6a:	80 81       	ld	r24, Z
    1b6c:	08 95       	ret

00001b6e <HX711_read_bit>:
uint8_t HX711_read_bit(void)
{	
	uint16_t bool;
	*hx711_PORT|=(ONE<<hx711_clkpin);
    1b6e:	e0 91 01 03 	lds	r30, 0x0301	; 0x800301 <hx711_PORT>
    1b72:	f0 91 02 03 	lds	r31, 0x0302	; 0x800302 <hx711_PORT+0x1>
    1b76:	20 81       	ld	r18, Z
    1b78:	81 e0       	ldi	r24, 0x01	; 1
    1b7a:	90 e0       	ldi	r25, 0x00	; 0
    1b7c:	00 90 05 03 	lds	r0, 0x0305	; 0x800305 <hx711_clkpin>
    1b80:	02 c0       	rjmp	.+4      	; 0x1b86 <HX711_read_bit+0x18>
    1b82:	88 0f       	add	r24, r24
    1b84:	99 1f       	adc	r25, r25
    1b86:	0a 94       	dec	r0
    1b88:	e2 f7       	brpl	.-8      	; 0x1b82 <HX711_read_bit+0x14>
    1b8a:	82 2b       	or	r24, r18
    1b8c:	80 83       	st	Z, r24
    1b8e:	87 e3       	ldi	r24, 0x37	; 55
    1b90:	90 e0       	ldi	r25, 0x00	; 0
    1b92:	01 97       	sbiw	r24, 0x01	; 1
	/**0.1us minimum**/
	for(bool=0;bool<HX711_ticks;bool++);
    1b94:	f1 f7       	brne	.-4      	; 0x1b92 <HX711_read_bit+0x24>
	bool=*hx711_PIN & (ONE<<hx711_datapin);
    1b96:	e0 91 ff 02 	lds	r30, 0x02FF	; 0x8002ff <hx711_PIN>
    1b9a:	f0 91 00 03 	lds	r31, 0x0300	; 0x800300 <hx711_PIN+0x1>
    1b9e:	40 81       	ld	r20, Z
    1ba0:	21 e0       	ldi	r18, 0x01	; 1
    1ba2:	30 e0       	ldi	r19, 0x00	; 0
    1ba4:	c9 01       	movw	r24, r18
    1ba6:	00 90 fe 02 	lds	r0, 0x02FE	; 0x8002fe <hx711_datapin>
    1baa:	02 c0       	rjmp	.+4      	; 0x1bb0 <HX711_read_bit+0x42>
    1bac:	88 0f       	add	r24, r24
    1bae:	99 1f       	adc	r25, r25
    1bb0:	0a 94       	dec	r0
    1bb2:	e2 f7       	brpl	.-8      	; 0x1bac <HX711_read_bit+0x3e>
	*hx711_PORT&=~(ONE<<hx711_clkpin);
    1bb4:	e0 91 01 03 	lds	r30, 0x0301	; 0x800301 <hx711_PORT>
    1bb8:	f0 91 02 03 	lds	r31, 0x0302	; 0x800302 <hx711_PORT+0x1>
    1bbc:	90 81       	ld	r25, Z
    1bbe:	00 90 05 03 	lds	r0, 0x0305	; 0x800305 <hx711_clkpin>
    1bc2:	02 c0       	rjmp	.+4      	; 0x1bc8 <HX711_read_bit+0x5a>
    1bc4:	22 0f       	add	r18, r18
    1bc6:	33 1f       	adc	r19, r19
    1bc8:	0a 94       	dec	r0
    1bca:	e2 f7       	brpl	.-8      	; 0x1bc4 <HX711_read_bit+0x56>
    1bcc:	20 95       	com	r18
    1bce:	29 23       	and	r18, r25
    1bd0:	20 83       	st	Z, r18
	return bool;
}
    1bd2:	84 23       	and	r24, r20
    1bd4:	08 95       	ret

00001bd6 <HX711_set_amplify>:
// Gain selector
// AVDD connected to 5V, channel B gain=32
void HX711_set_amplify(HX711* self, uint8_t amplify)
{
	switch(amplify){
    1bd6:	60 34       	cpi	r22, 0x40	; 64
    1bd8:	79 f0       	breq	.+30     	; 0x1bf8 <HX711_set_amplify+0x22>
    1bda:	60 38       	cpi	r22, 0x80	; 128
    1bdc:	19 f0       	breq	.+6      	; 0x1be4 <HX711_set_amplify+0xe>
    1bde:	60 32       	cpi	r22, 0x20	; 32
    1be0:	81 f4       	brne	.+32     	; 0x1c02 <HX711_set_amplify+0x2c>
    1be2:	05 c0       	rjmp	.+10     	; 0x1bee <HX711_set_amplify+0x18>
		case 128:
			self->amplify=ONE; //channel A
    1be4:	21 e0       	ldi	r18, 0x01	; 1
    1be6:	fc 01       	movw	r30, r24
    1be8:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=ONE;
    1bea:	23 83       	std	Z+3, r18	; 0x03
			break;
    1bec:	08 95       	ret
		case 32:
			self->amplify=2; //channel B
    1bee:	22 e0       	ldi	r18, 0x02	; 2
    1bf0:	fc 01       	movw	r30, r24
    1bf2:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=2; 
    1bf4:	23 83       	std	Z+3, r18	; 0x03
			break;
    1bf6:	08 95       	ret
		case 64:
			self->amplify=3; //channel A
    1bf8:	23 e0       	ldi	r18, 0x03	; 3
    1bfa:	fc 01       	movw	r30, r24
    1bfc:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=3;
    1bfe:	23 83       	std	Z+3, r18	; 0x03
			break;
    1c00:	08 95       	ret
		default:
			self->amplify=ONE;
    1c02:	21 e0       	ldi	r18, 0x01	; 1
    1c04:	fc 01       	movw	r30, r24
    1c06:	22 83       	std	Z+2, r18	; 0x02
			self->ampcount=ONE;
    1c08:	23 83       	std	Z+3, r18	; 0x03
    1c0a:	08 95       	ret

00001c0c <HX711_raw_average>:
		}
	}
	return self->raw_reading;
}
float HX711_raw_average(HX711* self, uint8_t n)
{
    1c0c:	0f 93       	push	r16
    1c0e:	1f 93       	push	r17
    1c10:	cf 93       	push	r28
    1c12:	df 93       	push	r29
    1c14:	ec 01       	movw	r28, r24
	if(self->trigger){
    1c16:	89 81       	ldd	r24, Y+1	; 0x01
    1c18:	88 23       	and	r24, r24
    1c1a:	89 f1       	breq	.+98     	; 0x1c7e <HX711_raw_average+0x72>
		if(self->av_n < n){
    1c1c:	8a 89       	ldd	r24, Y+18	; 0x12
    1c1e:	86 17       	cp	r24, r22
    1c20:	98 f4       	brcc	.+38     	; 0x1c48 <HX711_raw_average+0x3c>
			self->sum+=self->raw_reading;
    1c22:	0e 85       	ldd	r16, Y+14	; 0x0e
    1c24:	1f 85       	ldd	r17, Y+15	; 0x0f
    1c26:	28 89       	ldd	r18, Y+16	; 0x10
    1c28:	39 89       	ldd	r19, Y+17	; 0x11
    1c2a:	4a 85       	ldd	r20, Y+10	; 0x0a
    1c2c:	5b 85       	ldd	r21, Y+11	; 0x0b
    1c2e:	6c 85       	ldd	r22, Y+12	; 0x0c
    1c30:	7d 85       	ldd	r23, Y+13	; 0x0d
    1c32:	40 0f       	add	r20, r16
    1c34:	51 1f       	adc	r21, r17
    1c36:	62 1f       	adc	r22, r18
    1c38:	73 1f       	adc	r23, r19
    1c3a:	4e 87       	std	Y+14, r20	; 0x0e
    1c3c:	5f 87       	std	Y+15, r21	; 0x0f
    1c3e:	68 8b       	std	Y+16, r22	; 0x10
    1c40:	79 8b       	std	Y+17, r23	; 0x11
			self->av_n++;
    1c42:	8f 5f       	subi	r24, 0xFF	; 255
    1c44:	8a 8b       	std	Y+18, r24	; 0x12
    1c46:	1a c0       	rjmp	.+52     	; 0x1c7c <HX711_raw_average+0x70>
			}else{
			self->av_n=0;
			self->raw_mean=self->sum/n;
    1c48:	26 2f       	mov	r18, r22
    1c4a:	30 e0       	ldi	r19, 0x00	; 0
    1c4c:	40 e0       	ldi	r20, 0x00	; 0
    1c4e:	50 e0       	ldi	r21, 0x00	; 0
    1c50:	6e 85       	ldd	r22, Y+14	; 0x0e
    1c52:	7f 85       	ldd	r23, Y+15	; 0x0f
    1c54:	88 89       	ldd	r24, Y+16	; 0x10
    1c56:	99 89       	ldd	r25, Y+17	; 0x11
    1c58:	b5 d7       	rcall	.+3946   	; 0x2bc4 <__divmodsi4>
    1c5a:	ca 01       	movw	r24, r20
    1c5c:	b9 01       	movw	r22, r18
    1c5e:	de d4       	rcall	.+2492   	; 0x261c <__floatsisf>
    1c60:	6b 8b       	std	Y+19, r22	; 0x13
    1c62:	7c 8b       	std	Y+20, r23	; 0x14
    1c64:	8d 8b       	std	Y+21, r24	; 0x15
    1c66:	9e 8b       	std	Y+22, r25	; 0x16
			self->sum=0;
			self->sum+=self->raw_reading;
    1c68:	8a 85       	ldd	r24, Y+10	; 0x0a
    1c6a:	9b 85       	ldd	r25, Y+11	; 0x0b
    1c6c:	ac 85       	ldd	r26, Y+12	; 0x0c
    1c6e:	bd 85       	ldd	r27, Y+13	; 0x0d
    1c70:	8e 87       	std	Y+14, r24	; 0x0e
    1c72:	9f 87       	std	Y+15, r25	; 0x0f
    1c74:	a8 8b       	std	Y+16, r26	; 0x10
    1c76:	b9 8b       	std	Y+17, r27	; 0x11
			self->av_n++;
    1c78:	81 e0       	ldi	r24, 0x01	; 1
    1c7a:	8a 8b       	std	Y+18, r24	; 0x12
		}
		self->trigger=ZERO;
    1c7c:	19 82       	std	Y+1, r1	; 0x01
	}
	return self->raw_mean;
    1c7e:	6b 89       	ldd	r22, Y+19	; 0x13
    1c80:	7c 89       	ldd	r23, Y+20	; 0x14
    1c82:	8d 89       	ldd	r24, Y+21	; 0x15
    1c84:	9e 89       	ldd	r25, Y+22	; 0x16
}
    1c86:	df 91       	pop	r29
    1c88:	cf 91       	pop	r28
    1c8a:	1f 91       	pop	r17
    1c8c:	0f 91       	pop	r16
    1c8e:	08 95       	ret

00001c90 <HX711_ptrcal>:
struct HX711_calibration* HX711_ptrcal(HX711* self)
{
	return &(self->cal);
}
    1c90:	47 96       	adiw	r24, 0x17	; 23
    1c92:	08 95       	ret

00001c94 <HX711_get_offset_32>:
int32_t HX711_get_offset_32(HX711* self)
{
	return self->cal.offset_32;
    1c94:	fc 01       	movw	r30, r24
    1c96:	67 89       	ldd	r22, Z+23	; 0x17
    1c98:	70 8d       	ldd	r23, Z+24	; 0x18
    1c9a:	81 8d       	ldd	r24, Z+25	; 0x19
    1c9c:	92 8d       	ldd	r25, Z+26	; 0x1a
}
    1c9e:	08 95       	ret

00001ca0 <HX711_get_offset_64>:
int32_t HX711_get_offset_64(HX711* self)
{
	return self->cal.offset_64;
    1ca0:	fc 01       	movw	r30, r24
    1ca2:	63 8d       	ldd	r22, Z+27	; 0x1b
    1ca4:	74 8d       	ldd	r23, Z+28	; 0x1c
    1ca6:	85 8d       	ldd	r24, Z+29	; 0x1d
    1ca8:	96 8d       	ldd	r25, Z+30	; 0x1e
}
    1caa:	08 95       	ret

00001cac <HX711_get_offset_128>:
int32_t HX711_get_offset_128(HX711* self)
{
	return self->cal.offset_128;
    1cac:	fc 01       	movw	r30, r24
    1cae:	67 8d       	ldd	r22, Z+31	; 0x1f
    1cb0:	70 a1       	ldd	r23, Z+32	; 0x20
    1cb2:	81 a1       	ldd	r24, Z+33	; 0x21
    1cb4:	92 a1       	ldd	r25, Z+34	; 0x22
}
    1cb6:	08 95       	ret

00001cb8 <HX711_get_divfactor_32>:
int8_t HX711_get_divfactor_32(HX711* self)
{
	return self->cal.divfactor_32;
}
    1cb8:	fc 01       	movw	r30, r24
    1cba:	83 a1       	ldd	r24, Z+35	; 0x23
    1cbc:	08 95       	ret

00001cbe <HX711_get_divfactor_64>:
int8_t HX711_get_divfactor_64(HX711* self)
{
	return self->cal.divfactor_64;
}
    1cbe:	fc 01       	movw	r30, r24
    1cc0:	86 a1       	ldd	r24, Z+38	; 0x26
    1cc2:	08 95       	ret

00001cc4 <HX711_get_divfactor_128>:
int8_t HX711_get_divfactor_128(HX711* self)
{
	return self->cal.divfactor_128;
}
    1cc4:	fc 01       	movw	r30, r24
    1cc6:	81 a5       	ldd	r24, Z+41	; 0x29
    1cc8:	08 95       	ret

00001cca <HX711_read_raw>:
}
/***
Function to be used in the interrupt routine with appropriate cycle period.
***/
int32_t HX711_read_raw(HX711* self)
{
    1cca:	0f 93       	push	r16
    1ccc:	1f 93       	push	r17
    1cce:	cf 93       	push	r28
    1cd0:	df 93       	push	r29
    1cd2:	ec 01       	movw	r28, r24
	uint8_t aindex, bindex;
	int32_t value;
	aindex = self->bufferindex-ONE;
    1cd4:	09 85       	ldd	r16, Y+9	; 0x09
	bindex = self->bitcount-ONE;
    1cd6:	1c 81       	ldd	r17, Y+4	; 0x04
	ptr=(int32_t*)self->buffer;
    1cd8:	05 96       	adiw	r24, 0x05	; 5
    1cda:	90 93 04 03 	sts	0x0304, r25	; 0x800304 <ptr+0x1>
    1cde:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <ptr>
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
    1ce2:	e0 91 ff 02 	lds	r30, 0x02FF	; 0x8002ff <hx711_PIN>
    1ce6:	f0 91 00 03 	lds	r31, 0x0300	; 0x800300 <hx711_PIN+0x1>
    1cea:	80 81       	ld	r24, Z
    1cec:	90 e0       	ldi	r25, 0x00	; 0
    1cee:	00 90 fe 02 	lds	r0, 0x02FE	; 0x8002fe <hx711_datapin>
    1cf2:	02 c0       	rjmp	.+4      	; 0x1cf8 <HX711_read_raw+0x2e>
    1cf4:	95 95       	asr	r25
    1cf6:	87 95       	ror	r24
    1cf8:	0a 94       	dec	r0
    1cfa:	e2 f7       	brpl	.-8      	; 0x1cf4 <HX711_read_raw+0x2a>
    1cfc:	80 fd       	sbrc	r24, 0
    1cfe:	06 c0       	rjmp	.+12     	; 0x1d0c <HX711_read_raw+0x42>
    1d00:	88 81       	ld	r24, Y
    1d02:	81 11       	cpse	r24, r1
    1d04:	07 c0       	rjmp	.+14     	; 0x1d14 <HX711_read_raw+0x4a>
	// returns a copy
	return hx711;
}
void HX711_set_readflag(HX711* self)
{
	self->readflag=ONE;
    1d06:	81 e0       	ldi	r24, 0x01	; 1
    1d08:	88 83       	st	Y, r24
    1d0a:	04 c0       	rjmp	.+8      	; 0x1d14 <HX711_read_raw+0x4a>
	/***Detect query for reading***/
	if((!(*hx711_PIN & ONE << hx711_datapin)) && !self->readflag){
		HX711_set_readflag(self);
	}
	/***Interrupt 24 times sequence***/
	if(self->readflag){
    1d0c:	88 81       	ld	r24, Y
    1d0e:	88 23       	and	r24, r24
    1d10:	09 f4       	brne	.+2      	; 0x1d14 <HX711_read_raw+0x4a>
    1d12:	48 c0       	rjmp	.+144    	; 0x1da4 <HX711_read_raw+0xda>
		if(self->bitcount){
    1d14:	11 23       	and	r17, r17
    1d16:	29 f1       	breq	.+74     	; 0x1d62 <HX711_read_raw+0x98>
			if (HX711_read_bit())
    1d18:	2a df       	rcall	.-428    	; 0x1b6e <HX711_read_bit>
    1d1a:	88 23       	and	r24, r24
    1d1c:	a9 f0       	breq	.+42     	; 0x1d48 <HX711_read_raw+0x7e>
				self->buffer[aindex] |= ONE<<(bindex-(aindex*8));
    1d1e:	01 50       	subi	r16, 0x01	; 1
    1d20:	80 2f       	mov	r24, r16
    1d22:	90 e0       	ldi	r25, 0x00	; 0
    1d24:	fe 01       	movw	r30, r28
    1d26:	e8 0f       	add	r30, r24
    1d28:	f9 1f       	adc	r31, r25
    1d2a:	11 50       	subi	r17, 0x01	; 1
    1d2c:	28 e0       	ldi	r18, 0x08	; 8
    1d2e:	02 9f       	mul	r16, r18
    1d30:	10 19       	sub	r17, r0
    1d32:	11 24       	eor	r1, r1
    1d34:	81 e0       	ldi	r24, 0x01	; 1
    1d36:	90 e0       	ldi	r25, 0x00	; 0
    1d38:	02 c0       	rjmp	.+4      	; 0x1d3e <HX711_read_raw+0x74>
    1d3a:	88 0f       	add	r24, r24
    1d3c:	99 1f       	adc	r25, r25
    1d3e:	1a 95       	dec	r17
    1d40:	e2 f7       	brpl	.-8      	; 0x1d3a <HX711_read_raw+0x70>
    1d42:	95 81       	ldd	r25, Z+5	; 0x05
    1d44:	89 2b       	or	r24, r25
    1d46:	85 83       	std	Z+5, r24	; 0x05
			self->bitcount--;
    1d48:	8c 81       	ldd	r24, Y+4	; 0x04
    1d4a:	81 50       	subi	r24, 0x01	; 1
    1d4c:	8c 83       	std	Y+4, r24	; 0x04
			if(self->bitcount==16)
    1d4e:	80 31       	cpi	r24, 0x10	; 16
    1d50:	19 f4       	brne	.+6      	; 0x1d58 <HX711_read_raw+0x8e>
				self->bufferindex=2;
    1d52:	82 e0       	ldi	r24, 0x02	; 2
    1d54:	89 87       	std	Y+9, r24	; 0x09
    1d56:	26 c0       	rjmp	.+76     	; 0x1da4 <HX711_read_raw+0xda>
			if(self->bitcount==8)
    1d58:	88 30       	cpi	r24, 0x08	; 8
    1d5a:	21 f5       	brne	.+72     	; 0x1da4 <HX711_read_raw+0xda>
				self->bufferindex=ONE;
    1d5c:	81 e0       	ldi	r24, 0x01	; 1
    1d5e:	89 87       	std	Y+9, r24	; 0x09
    1d60:	21 c0       	rjmp	.+66     	; 0x1da4 <HX711_read_raw+0xda>
		}else{
			if(self->ampcount){
    1d62:	8b 81       	ldd	r24, Y+3	; 0x03
    1d64:	88 23       	and	r24, r24
				HX711_read_bit();
    1d66:	29 f0       	breq	.+10     	; 0x1d72 <HX711_read_raw+0xa8>
    1d68:	02 df       	rcall	.-508    	; 0x1b6e <HX711_read_bit>
				self->ampcount--;
    1d6a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d6c:	81 50       	subi	r24, 0x01	; 1
    1d6e:	8b 83       	std	Y+3, r24	; 0x03
    1d70:	19 c0       	rjmp	.+50     	; 0x1da4 <HX711_read_raw+0xda>
			}else{
				value=*(ptr);
    1d72:	e0 91 03 03 	lds	r30, 0x0303	; 0x800303 <ptr>
    1d76:	f0 91 04 03 	lds	r31, 0x0304	; 0x800304 <ptr+0x1>
    1d7a:	80 81       	ld	r24, Z
    1d7c:	91 81       	ldd	r25, Z+1	; 0x01
    1d7e:	a2 81       	ldd	r26, Z+2	; 0x02
    1d80:	b3 81       	ldd	r27, Z+3	; 0x03
				self->raw_reading=value;
    1d82:	8a 87       	std	Y+10, r24	; 0x0a
    1d84:	9b 87       	std	Y+11, r25	; 0x0b
    1d86:	ac 87       	std	Y+12, r26	; 0x0c
    1d88:	bd 87       	std	Y+13, r27	; 0x0d
				self->bitcount=HX711_ADC_bits;
    1d8a:	88 e1       	ldi	r24, 0x18	; 24
    1d8c:	8c 83       	std	Y+4, r24	; 0x04
				self->bufferindex=HX711_VECT_SIZE-ONE;
    1d8e:	83 e0       	ldi	r24, 0x03	; 3
    1d90:	89 87       	std	Y+9, r24	; 0x09
				self->ampcount=self->amplify;
    1d92:	8a 81       	ldd	r24, Y+2	; 0x02
    1d94:	8b 83       	std	Y+3, r24	; 0x03
				self->buffer[0]=ZERO;
    1d96:	1d 82       	std	Y+5, r1	; 0x05
				self->buffer[1]=ZERO;
    1d98:	1e 82       	std	Y+6, r1	; 0x06
				self->buffer[2]=ZERO;
    1d9a:	1f 82       	std	Y+7, r1	; 0x07
				self->buffer[3]=ZERO;
    1d9c:	18 86       	std	Y+8, r1	; 0x08
				self->trigger=ONE;
    1d9e:	81 e0       	ldi	r24, 0x01	; 1
    1da0:	89 83       	std	Y+1, r24	; 0x01
{
	self->readflag=ONE;
}
void HX711_reset_readflag(HX711* self)
{
	self->readflag=ZERO;
    1da2:	18 82       	st	Y, r1
				/***Reset ready for next query***/
				HX711_reset_readflag(self);
			}
		}
	}
	return self->raw_reading;
    1da4:	6a 85       	ldd	r22, Y+10	; 0x0a
    1da6:	7b 85       	ldd	r23, Y+11	; 0x0b
    1da8:	8c 85       	ldd	r24, Y+12	; 0x0c
    1daa:	9d 85       	ldd	r25, Y+13	; 0x0d
}
    1dac:	df 91       	pop	r29
    1dae:	cf 91       	pop	r28
    1db0:	1f 91       	pop	r17
    1db2:	0f 91       	pop	r16
    1db4:	08 95       	ret

00001db6 <HX711enable>:
int8_t HX711_get_divfactor_32(HX711* self);
int8_t HX711_get_divfactor_64(HX711* self);
int8_t HX711_get_divfactor_128(HX711* self);
/***Procedure & Function***/
HX711 HX711enable(volatile uint8_t *ddr, volatile uint8_t *pin, volatile uint8_t *port, uint8_t datapin, uint8_t clkpin)
{
    1db6:	ef 92       	push	r14
    1db8:	0f 93       	push	r16
    1dba:	fc 01       	movw	r30, r24
    1dbc:	da 01       	movw	r26, r20
	//LOCAL VARIABLES
	uint8_t tSREG;
	tSREG=SREG;
    1dbe:	5f b7       	in	r21, 0x3f	; 63
	SREG&=~(1<<GLOBAL_INTERRUPT_ENABLE);
    1dc0:	8f b7       	in	r24, 0x3f	; 63
    1dc2:	8f 77       	andi	r24, 0x7F	; 127
    1dc4:	8f bf       	out	0x3f, r24	; 63
	//ALLOCAÇÂO MEMORIA PARA Estrutura
	HX711 hx711;
	//import parametros
	hx711_DDR=ddr;
    1dc6:	70 93 07 03 	sts	0x0307, r23	; 0x800307 <hx711_DDR+0x1>
    1dca:	60 93 06 03 	sts	0x0306, r22	; 0x800306 <hx711_DDR>
	hx711_PIN=pin;
    1dce:	b0 93 00 03 	sts	0x0300, r27	; 0x800300 <hx711_PIN+0x1>
    1dd2:	a0 93 ff 02 	sts	0x02FF, r26	; 0x8002ff <hx711_PIN>
	hx711_PORT=port;
    1dd6:	30 93 02 03 	sts	0x0302, r19	; 0x800302 <hx711_PORT+0x1>
    1dda:	20 93 01 03 	sts	0x0301, r18	; 0x800301 <hx711_PORT>
	hx711_datapin=datapin;
    1dde:	00 93 fe 02 	sts	0x02FE, r16	; 0x8002fe <hx711_datapin>
	hx711_clkpin=clkpin;
    1de2:	e0 92 05 03 	sts	0x0305, r14	; 0x800305 <hx711_clkpin>
	//inic variables
	*hx711_DDR |= (ONE<<clkpin);
    1de6:	db 01       	movw	r26, r22
    1de8:	4c 91       	ld	r20, X
    1dea:	81 e0       	ldi	r24, 0x01	; 1
    1dec:	90 e0       	ldi	r25, 0x00	; 0
    1dee:	9c 01       	movw	r18, r24
    1df0:	02 c0       	rjmp	.+4      	; 0x1df6 <HX711enable+0x40>
    1df2:	22 0f       	add	r18, r18
    1df4:	33 1f       	adc	r19, r19
    1df6:	ea 94       	dec	r14
    1df8:	e2 f7       	brpl	.-8      	; 0x1df2 <HX711enable+0x3c>
    1dfa:	24 2b       	or	r18, r20
    1dfc:	2c 93       	st	X, r18
	*hx711_PORT |= (ONE<<datapin);
    1dfe:	a0 91 01 03 	lds	r26, 0x0301	; 0x800301 <hx711_PORT>
    1e02:	b0 91 02 03 	lds	r27, 0x0302	; 0x800302 <hx711_PORT+0x1>
    1e06:	2c 91       	ld	r18, X
    1e08:	02 c0       	rjmp	.+4      	; 0x1e0e <HX711enable+0x58>
    1e0a:	88 0f       	add	r24, r24
    1e0c:	99 1f       	adc	r25, r25
    1e0e:	0a 95       	dec	r16
    1e10:	e2 f7       	brpl	.-8      	; 0x1e0a <HX711enable+0x54>
    1e12:	82 2b       	or	r24, r18
    1e14:	8c 93       	st	X, r24
	hx711.get_offset_64=HX711_get_offset_64;
	hx711.get_offset_128=HX711_get_offset_128;
	hx711.get_divfactor_32=HX711_get_divfactor_32;
	hx711.get_divfactor_64=HX711_get_divfactor_64;
	hx711.get_divfactor_128=HX711_get_divfactor_128;
	SREG=tSREG;
    1e16:	5f bf       	out	0x3f, r21	; 63
	// returns a copy
	return hx711;
    1e18:	10 82       	st	Z, r1
    1e1a:	11 82       	std	Z+1, r1	; 0x01
    1e1c:	81 e0       	ldi	r24, 0x01	; 1
    1e1e:	82 83       	std	Z+2, r24	; 0x02
    1e20:	83 83       	std	Z+3, r24	; 0x03
    1e22:	88 e1       	ldi	r24, 0x18	; 24
    1e24:	84 83       	std	Z+4, r24	; 0x04
    1e26:	15 82       	std	Z+5, r1	; 0x05
    1e28:	16 82       	std	Z+6, r1	; 0x06
    1e2a:	17 82       	std	Z+7, r1	; 0x07
    1e2c:	10 86       	std	Z+8, r1	; 0x08
    1e2e:	83 e0       	ldi	r24, 0x03	; 3
    1e30:	81 87       	std	Z+9, r24	; 0x09
    1e32:	12 86       	std	Z+10, r1	; 0x0a
    1e34:	13 86       	std	Z+11, r1	; 0x0b
    1e36:	14 86       	std	Z+12, r1	; 0x0c
    1e38:	15 86       	std	Z+13, r1	; 0x0d
    1e3a:	16 86       	std	Z+14, r1	; 0x0e
    1e3c:	17 86       	std	Z+15, r1	; 0x0f
    1e3e:	10 8a       	std	Z+16, r1	; 0x10
    1e40:	11 8a       	std	Z+17, r1	; 0x11
    1e42:	12 8a       	std	Z+18, r1	; 0x12
    1e44:	13 8a       	std	Z+19, r1	; 0x13
    1e46:	14 8a       	std	Z+20, r1	; 0x14
    1e48:	15 8a       	std	Z+21, r1	; 0x15
    1e4a:	16 8a       	std	Z+22, r1	; 0x16
    1e4c:	82 e0       	ldi	r24, 0x02	; 2
    1e4e:	91 e9       	ldi	r25, 0x91	; 145
    1e50:	a0 e0       	ldi	r26, 0x00	; 0
    1e52:	b0 e0       	ldi	r27, 0x00	; 0
    1e54:	87 8b       	std	Z+23, r24	; 0x17
    1e56:	90 8f       	std	Z+24, r25	; 0x18
    1e58:	a1 8f       	std	Z+25, r26	; 0x19
    1e5a:	b2 8f       	std	Z+26, r27	; 0x1a
    1e5c:	8c ea       	ldi	r24, 0xAC	; 172
    1e5e:	90 e2       	ldi	r25, 0x20	; 32
    1e60:	a1 e0       	ldi	r26, 0x01	; 1
    1e62:	b0 e0       	ldi	r27, 0x00	; 0
    1e64:	83 8f       	std	Z+27, r24	; 0x1b
    1e66:	94 8f       	std	Z+28, r25	; 0x1c
    1e68:	a5 8f       	std	Z+29, r26	; 0x1d
    1e6a:	b6 8f       	std	Z+30, r27	; 0x1e
    1e6c:	8a ed       	ldi	r24, 0xDA	; 218
    1e6e:	9c e3       	ldi	r25, 0x3C	; 60
    1e70:	a2 e0       	ldi	r26, 0x02	; 2
    1e72:	b0 e0       	ldi	r27, 0x00	; 0
    1e74:	87 8f       	std	Z+31, r24	; 0x1f
    1e76:	90 a3       	std	Z+32, r25	; 0x20
    1e78:	a1 a3       	std	Z+33, r26	; 0x21
    1e7a:	b2 a3       	std	Z+34, r27	; 0x22
    1e7c:	87 e1       	ldi	r24, 0x17	; 23
    1e7e:	83 a3       	std	Z+35, r24	; 0x23
    1e80:	8e e2       	ldi	r24, 0x2E	; 46
    1e82:	86 a3       	std	Z+38, r24	; 0x26
    1e84:	8c e5       	ldi	r24, 0x5C	; 92
    1e86:	81 a7       	std	Z+41, r24	; 0x29
    1e88:	14 a6       	std	Z+44, r1	; 0x2c
    1e8a:	80 eb       	ldi	r24, 0xB0	; 176
    1e8c:	9d e0       	ldi	r25, 0x0D	; 13
    1e8e:	96 a7       	std	Z+46, r25	; 0x2e
    1e90:	85 a7       	std	Z+45, r24	; 0x2d
    1e92:	84 eb       	ldi	r24, 0xB4	; 180
    1e94:	9d e0       	ldi	r25, 0x0D	; 13
    1e96:	90 ab       	std	Z+48, r25	; 0x30
    1e98:	87 a7       	std	Z+47, r24	; 0x2f
    1e9a:	87 eb       	ldi	r24, 0xB7	; 183
    1e9c:	9d e0       	ldi	r25, 0x0D	; 13
    1e9e:	92 ab       	std	Z+50, r25	; 0x32
    1ea0:	81 ab       	std	Z+49, r24	; 0x31
    1ea2:	8b ee       	ldi	r24, 0xEB	; 235
    1ea4:	9d e0       	ldi	r25, 0x0D	; 13
    1ea6:	94 ab       	std	Z+52, r25	; 0x34
    1ea8:	83 ab       	std	Z+51, r24	; 0x33
    1eaa:	85 e6       	ldi	r24, 0x65	; 101
    1eac:	9e e0       	ldi	r25, 0x0E	; 14
    1eae:	96 ab       	std	Z+54, r25	; 0x36
    1eb0:	85 ab       	std	Z+53, r24	; 0x35
    1eb2:	86 e0       	ldi	r24, 0x06	; 6
    1eb4:	9e e0       	ldi	r25, 0x0E	; 14
    1eb6:	90 af       	std	Z+56, r25	; 0x38
    1eb8:	87 ab       	std	Z+55, r24	; 0x37
    1eba:	88 e4       	ldi	r24, 0x48	; 72
    1ebc:	9e e0       	ldi	r25, 0x0E	; 14
    1ebe:	92 af       	std	Z+58, r25	; 0x3a
    1ec0:	81 af       	std	Z+57, r24	; 0x39
    1ec2:	8a e4       	ldi	r24, 0x4A	; 74
    1ec4:	9e e0       	ldi	r25, 0x0E	; 14
    1ec6:	94 af       	std	Z+60, r25	; 0x3c
    1ec8:	83 af       	std	Z+59, r24	; 0x3b
    1eca:	80 e5       	ldi	r24, 0x50	; 80
    1ecc:	9e e0       	ldi	r25, 0x0E	; 14
    1ece:	96 af       	std	Z+62, r25	; 0x3e
    1ed0:	85 af       	std	Z+61, r24	; 0x3d
    1ed2:	df 01       	movw	r26, r30
    1ed4:	df 96       	adiw	r26, 0x3f	; 63
    1ed6:	86 e5       	ldi	r24, 0x56	; 86
    1ed8:	9e e0       	ldi	r25, 0x0E	; 14
    1eda:	11 96       	adiw	r26, 0x01	; 1
    1edc:	9c 93       	st	X, r25
    1ede:	8e 93       	st	-X, r24
    1ee0:	12 96       	adiw	r26, 0x02	; 2
    1ee2:	8c e5       	ldi	r24, 0x5C	; 92
    1ee4:	9e e0       	ldi	r25, 0x0E	; 14
    1ee6:	11 96       	adiw	r26, 0x01	; 1
    1ee8:	9c 93       	st	X, r25
    1eea:	8e 93       	st	-X, r24
    1eec:	12 96       	adiw	r26, 0x02	; 2
    1eee:	8f e5       	ldi	r24, 0x5F	; 95
    1ef0:	9e e0       	ldi	r25, 0x0E	; 14
    1ef2:	11 96       	adiw	r26, 0x01	; 1
    1ef4:	9c 93       	st	X, r25
    1ef6:	8e 93       	st	-X, r24
    1ef8:	12 96       	adiw	r26, 0x02	; 2
    1efa:	82 e6       	ldi	r24, 0x62	; 98
    1efc:	9e e0       	ldi	r25, 0x0E	; 14
    1efe:	8d 93       	st	X+, r24
    1f00:	9c 93       	st	X, r25
}
    1f02:	cf 01       	movw	r24, r30
    1f04:	0f 91       	pop	r16
    1f06:	ef 90       	pop	r14
    1f08:	08 95       	ret

00001f0a <PORTINIT>:
** procedure and function
*/
void PORTINIT(void)
{
	//Control buttons
	PORTF|=0x3F;
    1f0a:	e2 e6       	ldi	r30, 0x62	; 98
    1f0c:	f0 e0       	ldi	r31, 0x00	; 0
    1f0e:	80 81       	ld	r24, Z
    1f10:	8f 63       	ori	r24, 0x3F	; 63
    1f12:	80 83       	st	Z, r24
	//troubleshooting output
	DDRC=0xFF;
    1f14:	8f ef       	ldi	r24, 0xFF	; 255
    1f16:	84 bb       	out	0x14, r24	; 20
	PORTC=0xFF;
    1f18:	85 bb       	out	0x15, r24	; 21
    1f1a:	08 95       	ret

00001f1c <main>:
** Header
*/
void PORTINIT();
/****MAIN****/
int main(void)
{
    1f1c:	cf 93       	push	r28
    1f1e:	df 93       	push	r29
    1f20:	cd b7       	in	r28, 0x3d	; 61
    1f22:	de b7       	in	r29, 0x3e	; 62
    1f24:	cd 5d       	subi	r28, 0xDD	; 221
    1f26:	d1 09       	sbc	r29, r1
    1f28:	0f b6       	in	r0, 0x3f	; 63
    1f2a:	f8 94       	cli
    1f2c:	de bf       	out	0x3e, r29	; 62
    1f2e:	0f be       	out	0x3f, r0	; 63
    1f30:	cd bf       	out	0x3d, r28	; 61
	HX711_ptr=&HX711_data;
    1f32:	0f 2e       	mov	r0, r31
    1f34:	fa e2       	ldi	r31, 0x2A	; 42
    1f36:	6f 2e       	mov	r6, r31
    1f38:	f3 e0       	ldi	r31, 0x03	; 3
    1f3a:	7f 2e       	mov	r7, r31
    1f3c:	f0 2d       	mov	r31, r0
    1f3e:	70 92 41 03 	sts	0x0341, r7	; 0x800341 <HX711_ptr+0x1>
    1f42:	60 92 40 03 	sts	0x0340, r6	; 0x800340 <HX711_ptr>
	
	PORTINIT();
    1f46:	e1 df       	rcall	.-62     	; 0x1f0a <PORTINIT>
	/***INICIALIZE OBJECTS***/
	F = EXPLODEenable();
    1f48:	ce 01       	movw	r24, r28
    1f4a:	8d 57       	subi	r24, 0x7D	; 125
    1f4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f4e:	0e 94 54 05 	call	0xaa8	; 0xaa8 <EXPLODEenable>
    1f52:	84 e1       	ldi	r24, 0x14	; 20
    1f54:	fe 01       	movw	r30, r28
    1f56:	ed 57       	subi	r30, 0x7D	; 125
    1f58:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5a:	a9 ea       	ldi	r26, 0xA9	; 169
    1f5c:	b3 e0       	ldi	r27, 0x03	; 3
    1f5e:	01 90       	ld	r0, Z+
    1f60:	0d 92       	st	X+, r0
    1f62:	8a 95       	dec	r24
    1f64:	e1 f7       	brne	.-8      	; 0x1f5e <main+0x42>
	FUNC function = FUNCenable();
    1f66:	ce 01       	movw	r24, r28
    1f68:	01 96       	adiw	r24, 0x01	; 1
    1f6a:	ce d9       	rcall	.-3172   	; 0x1308 <FUNCenable>
    1f6c:	2d 96       	adiw	r28, 0x0d	; 13
    1f6e:	8e ac       	ldd	r8, Y+62	; 0x3e
    1f70:	9f ac       	ldd	r9, Y+63	; 0x3f
    1f72:	2d 97       	sbiw	r28, 0x0d	; 13
	LCD0 lcd0 = LCD0enable(&DDRA,&PINA,&PORTA);
    1f74:	2b e3       	ldi	r18, 0x3B	; 59
    1f76:	30 e0       	ldi	r19, 0x00	; 0
    1f78:	49 e3       	ldi	r20, 0x39	; 57
    1f7a:	50 e0       	ldi	r21, 0x00	; 0
    1f7c:	6a e3       	ldi	r22, 0x3A	; 58
    1f7e:	70 e0       	ldi	r23, 0x00	; 0
    1f80:	ce 01       	movw	r24, r28
    1f82:	83 5b       	subi	r24, 0xB3	; 179
    1f84:	9f 4f       	sbci	r25, 0xFF	; 255
    1f86:	7d dd       	rcall	.-1286   	; 0x1a82 <LCD0enable>
    1f88:	6b 96       	adiw	r28, 0x1b	; 27
    1f8a:	ce ac       	ldd	r12, Y+62	; 0x3e
    1f8c:	df ac       	ldd	r13, Y+63	; 0x3f
    1f8e:	6b 97       	sbiw	r28, 0x1b	; 27
    1f90:	a1 96       	adiw	r28, 0x21	; 33
    1f92:	ae ac       	ldd	r10, Y+62	; 0x3e
    1f94:	bf ac       	ldd	r11, Y+63	; 0x3f
    1f96:	a1 97       	sbiw	r28, 0x21	; 33
	TIMER_COUNTER0 timer0 = TIMER_COUNTER0enable(2,2); //2,2
    1f98:	42 e0       	ldi	r20, 0x02	; 2
    1f9a:	62 e0       	ldi	r22, 0x02	; 2
    1f9c:	ce 01       	movw	r24, r28
    1f9e:	8d 59       	subi	r24, 0x9D	; 157
    1fa0:	9f 4f       	sbci	r25, 0xFF	; 255
    1fa2:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <TIMER_COUNTER0enable>
	TIMER_COUNTER1 timer1 = TIMER_COUNTER1enable(4,2);
    1fa6:	42 e0       	ldi	r20, 0x02	; 2
    1fa8:	64 e0       	ldi	r22, 0x04	; 4
    1faa:	ce 01       	movw	r24, r28
    1fac:	8d 58       	subi	r24, 0x8D	; 141
    1fae:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb0:	0e 94 9f 02 	call	0x53e	; 0x53e <TIMER_COUNTER1enable>
	hx = HX711enable(&DDRF, &PINF, &PORTF, 6, 7);
    1fb4:	0f 2e       	mov	r0, r31
    1fb6:	f7 e0       	ldi	r31, 0x07	; 7
    1fb8:	ef 2e       	mov	r14, r31
    1fba:	f0 2d       	mov	r31, r0
    1fbc:	06 e0       	ldi	r16, 0x06	; 6
    1fbe:	22 e6       	ldi	r18, 0x62	; 98
    1fc0:	30 e0       	ldi	r19, 0x00	; 0
    1fc2:	40 e2       	ldi	r20, 0x20	; 32
    1fc4:	50 e0       	ldi	r21, 0x00	; 0
    1fc6:	61 e6       	ldi	r22, 0x61	; 97
    1fc8:	70 e0       	ldi	r23, 0x00	; 0
    1fca:	ce 01       	movw	r24, r28
    1fcc:	89 56       	subi	r24, 0x69	; 105
    1fce:	9f 4f       	sbci	r25, 0xFF	; 255
    1fd0:	f2 de       	rcall	.-540    	; 0x1db6 <HX711enable>
    1fd2:	87 e4       	ldi	r24, 0x47	; 71
    1fd4:	fe 01       	movw	r30, r28
    1fd6:	e9 56       	subi	r30, 0x69	; 105
    1fd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fda:	a2 e6       	ldi	r26, 0x62	; 98
    1fdc:	b3 e0       	ldi	r27, 0x03	; 3
    1fde:	01 90       	ld	r0, Z+
    1fe0:	0d 92       	st	X+, r0
    1fe2:	8a 95       	dec	r24
    1fe4:	e1 f7       	brne	.-8      	; 0x1fde <main+0xc2>
	eprom = EEPROMenable();
    1fe6:	ce 01       	movw	r24, r28
    1fe8:	8d 57       	subi	r24, 0x7D	; 125
    1fea:	9f 4f       	sbci	r25, 0xFF	; 255
    1fec:	0e 94 cd 04 	call	0x99a	; 0x99a <EEPROMenable>
    1ff0:	8e e1       	ldi	r24, 0x1E	; 30
    1ff2:	fe 01       	movw	r30, r28
    1ff4:	ed 57       	subi	r30, 0x7D	; 125
    1ff6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff8:	ac e0       	ldi	r26, 0x0C	; 12
    1ffa:	b3 e0       	ldi	r27, 0x03	; 3
    1ffc:	01 90       	ld	r0, Z+
    1ffe:	0d 92       	st	X+, r0
    2000:	8a 95       	dec	r24
    2002:	e1 f7       	brne	.-8      	; 0x1ffc <main+0xe0>
	char Menu='1'; // Main menu selector
	float value_64=0;
	float value_128=0;
	
	// Get default values to memory
	HX711_data.offset_32=hx.get_offset_32(&hx);
    2004:	02 e6       	ldi	r16, 0x62	; 98
    2006:	13 e0       	ldi	r17, 0x03	; 3
    2008:	d8 01       	movw	r26, r16
    200a:	db 96       	adiw	r26, 0x3b	; 59
    200c:	6d 91       	ld	r22, X+
    200e:	7c 91       	ld	r23, X
    2010:	dc 97       	sbiw	r26, 0x3c	; 60
    2012:	c8 01       	movw	r24, r16
    2014:	fb 01       	movw	r30, r22
    2016:	09 95       	icall
    2018:	d3 01       	movw	r26, r6
    201a:	6d 93       	st	X+, r22
    201c:	7d 93       	st	X+, r23
    201e:	8d 93       	st	X+, r24
    2020:	9c 93       	st	X, r25
    2022:	13 97       	sbiw	r26, 0x03	; 3
	HX711_data.offset_64=hx.get_offset_64(&hx);
    2024:	f8 01       	movw	r30, r16
    2026:	65 ad       	ldd	r22, Z+61	; 0x3d
    2028:	76 ad       	ldd	r23, Z+62	; 0x3e
    202a:	c8 01       	movw	r24, r16
    202c:	fb 01       	movw	r30, r22
    202e:	09 95       	icall
    2030:	d3 01       	movw	r26, r6
    2032:	14 96       	adiw	r26, 0x04	; 4
    2034:	6d 93       	st	X+, r22
    2036:	7d 93       	st	X+, r23
    2038:	8d 93       	st	X+, r24
    203a:	9c 93       	st	X, r25
    203c:	17 97       	sbiw	r26, 0x07	; 7
	HX711_data.offset_128=hx.get_offset_128(&hx);
    203e:	60 91 a1 03 	lds	r22, 0x03A1	; 0x8003a1 <hx+0x3f>
    2042:	70 91 a2 03 	lds	r23, 0x03A2	; 0x8003a2 <hx+0x40>
    2046:	c8 01       	movw	r24, r16
    2048:	fb 01       	movw	r30, r22
    204a:	09 95       	icall
    204c:	d3 01       	movw	r26, r6
    204e:	18 96       	adiw	r26, 0x08	; 8
    2050:	6d 93       	st	X+, r22
    2052:	7d 93       	st	X+, r23
    2054:	8d 93       	st	X+, r24
    2056:	9c 93       	st	X, r25
    2058:	1b 97       	sbiw	r26, 0x0b	; 11
	HX711_data.divfactor_32=hx.get_divfactor_32(&hx);
    205a:	e0 91 a3 03 	lds	r30, 0x03A3	; 0x8003a3 <hx+0x41>
    205e:	f0 91 a4 03 	lds	r31, 0x03A4	; 0x8003a4 <hx+0x42>
    2062:	c8 01       	movw	r24, r16
    2064:	09 95       	icall
    2066:	f3 01       	movw	r30, r6
    2068:	84 87       	std	Z+12, r24	; 0x0c
	HX711_data.divfactor_64=hx.get_divfactor_64(&hx);
    206a:	e0 91 a5 03 	lds	r30, 0x03A5	; 0x8003a5 <hx+0x43>
    206e:	f0 91 a6 03 	lds	r31, 0x03A6	; 0x8003a6 <hx+0x44>
    2072:	c8 01       	movw	r24, r16
    2074:	09 95       	icall
    2076:	d3 01       	movw	r26, r6
    2078:	1f 96       	adiw	r26, 0x0f	; 15
    207a:	8c 93       	st	X, r24
	HX711_data.divfactor_128=hx.get_divfactor_128(&hx);
    207c:	e0 91 a7 03 	lds	r30, 0x03A7	; 0x8003a7 <hx+0x45>
    2080:	f0 91 a8 03 	lds	r31, 0x03A8	; 0x8003a8 <hx+0x46>
    2084:	c8 01       	movw	r24, r16
    2086:	09 95       	icall
    2088:	f3 01       	movw	r30, r6
    208a:	82 8b       	std	Z+18, r24	; 0x12

	tmp=0;
    208c:	10 92 08 03 	sts	0x0308, r1	; 0x800308 <tmp>
    2090:	10 92 09 03 	sts	0x0309, r1	; 0x800309 <tmp+0x1>
    2094:	10 92 0a 03 	sts	0x030A, r1	; 0x80030a <tmp+0x2>
    2098:	10 92 0b 03 	sts	0x030B, r1	; 0x80030b <tmp+0x3>
	/***Parameters timers***/
	//vector[0]=255;
	//vector[1]=255;
	//vector[2]=255;
	//uint8_t* ptr=vector;
	timer0.compoutmode(1);
    209c:	a5 96       	adiw	r28, 0x25	; 37
    209e:	ee ad       	ldd	r30, Y+62	; 0x3e
    20a0:	ff ad       	ldd	r31, Y+63	; 0x3f
    20a2:	a5 97       	sbiw	r28, 0x25	; 37
    20a4:	81 e0       	ldi	r24, 0x01	; 1
    20a6:	09 95       	icall
	timer0.compare(79); // 1 -> 159 -> 20 us, 1 -> 79 -> 10 us, 1 -> 15 -> 2 us, 8 -> 99 -> 100 us, 8 -> 79 -> 80 us
    20a8:	ab 96       	adiw	r28, 0x2b	; 43
    20aa:	ee ad       	ldd	r30, Y+62	; 0x3e
    20ac:	ff ad       	ldd	r31, Y+63	; 0x3f
    20ae:	ab 97       	sbiw	r28, 0x2b	; 43
    20b0:	8f e4       	ldi	r24, 0x4F	; 79
    20b2:	09 95       	icall
	timer0.start(8); // 1 -> 32 us , 8 -> 256 us , 32 64 128 256 1024
    20b4:	e1 96       	adiw	r28, 0x31	; 49
    20b6:	ee ad       	ldd	r30, Y+62	; 0x3e
    20b8:	ff ad       	ldd	r31, Y+63	; 0x3f
    20ba:	e1 97       	sbiw	r28, 0x31	; 49
    20bc:	88 e0       	ldi	r24, 0x08	; 8
    20be:	90 e0       	ldi	r25, 0x00	; 0
    20c0:	09 95       	icall
	
	// to be used to jump menu for calibration in progress
	timer1.compoutmodeA(1);
    20c2:	e5 96       	adiw	r28, 0x35	; 53
    20c4:	ee ad       	ldd	r30, Y+62	; 0x3e
    20c6:	ff ad       	ldd	r31, Y+63	; 0x3f
    20c8:	e5 97       	sbiw	r28, 0x35	; 53
    20ca:	81 e0       	ldi	r24, 0x01	; 1
    20cc:	09 95       	icall
	timer1.compareA(62800); // 256 -> 62800 -> 2 s
    20ce:	eb 96       	adiw	r28, 0x3b	; 59
    20d0:	ee ad       	ldd	r30, Y+62	; 0x3e
    20d2:	ff ad       	ldd	r31, Y+63	; 0x3f
    20d4:	eb 97       	sbiw	r28, 0x3b	; 59
    20d6:	80 e5       	ldi	r24, 0x50	; 80
    20d8:	95 ef       	ldi	r25, 0xF5	; 245
    20da:	09 95       	icall
	timer1.start(256);
    20dc:	c1 58       	subi	r28, 0x81	; 129
    20de:	df 4f       	sbci	r29, 0xFF	; 255
    20e0:	e8 81       	ld	r30, Y
    20e2:	f9 81       	ldd	r31, Y+1	; 0x01
    20e4:	cf 57       	subi	r28, 0x7F	; 127
    20e6:	d0 40       	sbci	r29, 0x00	; 0
    20e8:	80 e0       	ldi	r24, 0x00	; 0
    20ea:	91 e0       	ldi	r25, 0x01	; 1
    20ec:	09 95       	icall
	
	// HX711 Gain
	hx.set_amplify(&hx,64); // 32 64 128
    20ee:	d8 01       	movw	r26, r16
    20f0:	d3 96       	adiw	r26, 0x33	; 51
    20f2:	ed 91       	ld	r30, X+
    20f4:	fc 91       	ld	r31, X
    20f6:	d4 97       	sbiw	r26, 0x34	; 52
    20f8:	60 e4       	ldi	r22, 0x40	; 64
    20fa:	c8 01       	movw	r24, r16
    20fc:	09 95       	icall
	
	//Get stored calibration values and put them to effect
	eprom.read_block(HX711_ptr, (const void*) ZERO, sizeblock);
    20fe:	e0 91 24 03 	lds	r30, 0x0324	; 0x800324 <eprom+0x18>
    2102:	f0 91 25 03 	lds	r31, 0x0325	; 0x800325 <eprom+0x19>
    2106:	46 e1       	ldi	r20, 0x16	; 22
    2108:	50 e0       	ldi	r21, 0x00	; 0
    210a:	60 e0       	ldi	r22, 0x00	; 0
    210c:	70 e0       	ldi	r23, 0x00	; 0
    210e:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <HX711_ptr>
    2112:	90 91 41 03 	lds	r25, 0x0341	; 0x800341 <HX711_ptr+0x1>
    2116:	09 95       	icall
	if(HX711_ptr->status == 1){
    2118:	00 91 40 03 	lds	r16, 0x0340	; 0x800340 <HX711_ptr>
    211c:	10 91 41 03 	lds	r17, 0x0341	; 0x800341 <HX711_ptr+0x1>
    2120:	f8 01       	movw	r30, r16
    2122:	85 89       	ldd	r24, Z+21	; 0x15
    2124:	81 30       	cpi	r24, 0x01	; 1
    2126:	91 f4       	brne	.+36     	; 0x214c <main+0x230>
		memcpy ( hx.ptrcal(&hx), HX711_ptr, sizeblock );
    2128:	e0 91 9b 03 	lds	r30, 0x039B	; 0x80039b <hx+0x39>
    212c:	f0 91 9c 03 	lds	r31, 0x039C	; 0x80039c <hx+0x3a>
    2130:	82 e6       	ldi	r24, 0x62	; 98
    2132:	93 e0       	ldi	r25, 0x03	; 3
    2134:	09 95       	icall
    2136:	dc 01       	movw	r26, r24
    2138:	96 e1       	ldi	r25, 0x16	; 22
    213a:	f8 01       	movw	r30, r16
    213c:	01 90       	ld	r0, Z+
    213e:	0d 92       	st	X+, r0
    2140:	9a 95       	dec	r25
    2142:	e1 f7       	brne	.-8      	; 0x213c <main+0x220>
		PORTC^=(ONE<<5); // troubleshooting
    2144:	95 b3       	in	r25, 0x15	; 21
    2146:	80 e2       	ldi	r24, 0x20	; 32
    2148:	89 27       	eor	r24, r25
    214a:	85 bb       	out	0x15, r24	; 21
	/***********************************************************************************************/
	while(TRUE){
		/******PREAMBLE******/
		lcd0.reboot();
		/*******INPUT*******/
		F.boot(&F,PINF);
    214c:	0f 2e       	mov	r0, r31
    214e:	f9 ea       	ldi	r31, 0xA9	; 169
    2150:	ef 2e       	mov	r14, r31
    2152:	f3 e0       	ldi	r31, 0x03	; 3
    2154:	ff 2e       	mov	r15, r31
    2156:	f0 2d       	mov	r31, r0
				//Just to keep track
				lcd0.gotoxy(0,4); //for troubleshooting
				lcd0.string_size("Weight Scale", 12); //for troubleshooting
				//lcd0.string_size(function.i32toa(tmp), 8); lcd0.string_size("raw", 3); // RAW_READING //for troubleshooting
				
				value_64=hx.raw_average(&hx, 25); // 25 50, smaller means faster or more readings
    2158:	02 e6       	ldi	r16, 0x62	; 98
    215a:	13 e0       	ldi	r17, 0x03	; 3
		PORTC^=(ONE<<5); // troubleshooting
	}
	/***********************************************************************************************/
	while(TRUE){
		/******PREAMBLE******/
		lcd0.reboot();
    215c:	a3 96       	adiw	r28, 0x23	; 35
    215e:	ee ad       	ldd	r30, Y+62	; 0x3e
    2160:	ff ad       	ldd	r31, Y+63	; 0x3f
    2162:	a3 97       	sbiw	r28, 0x23	; 35
    2164:	09 95       	icall
		/*******INPUT*******/
		F.boot(&F,PINF);
    2166:	60 b1       	in	r22, 0x00	; 0
    2168:	d7 01       	movw	r26, r14
    216a:	14 96       	adiw	r26, 0x04	; 4
    216c:	ed 91       	ld	r30, X+
    216e:	fc 91       	ld	r31, X
    2170:	15 97       	sbiw	r26, 0x05	; 5
    2172:	c7 01       	movw	r24, r14
    2174:	09 95       	icall
			case '1': // Main Program Menu
				//if(!strcmp(keypad.get().string,"A")){Menu='2';keypad.flush();lcd0.clear();break;}
				//if(!strcmp(keypad.get().string,"B")){Menu='3';keypad.flush();lcd0.clear();break;}					
				
				//Just to keep track
				lcd0.gotoxy(0,4); //for troubleshooting
    2176:	64 e0       	ldi	r22, 0x04	; 4
    2178:	70 e0       	ldi	r23, 0x00	; 0
    217a:	80 e0       	ldi	r24, 0x00	; 0
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	f5 01       	movw	r30, r10
    2180:	09 95       	icall
				lcd0.string_size("Weight Scale", 12); //for troubleshooting
    2182:	6c e0       	ldi	r22, 0x0C	; 12
    2184:	80 e0       	ldi	r24, 0x00	; 0
    2186:	91 e0       	ldi	r25, 0x01	; 1
    2188:	f6 01       	movw	r30, r12
    218a:	09 95       	icall
				//lcd0.string_size(function.i32toa(tmp), 8); lcd0.string_size("raw", 3); // RAW_READING //for troubleshooting
				
				value_64=hx.raw_average(&hx, 25); // 25 50, smaller means faster or more readings
    218c:	d8 01       	movw	r26, r16
    218e:	d7 96       	adiw	r26, 0x37	; 55
    2190:	ed 91       	ld	r30, X+
    2192:	fc 91       	ld	r31, X
    2194:	d8 97       	sbiw	r26, 0x38	; 56
    2196:	69 e1       	ldi	r22, 0x19	; 25
    2198:	c8 01       	movw	r24, r16
    219a:	09 95       	icall
    219c:	2b 01       	movw	r4, r22
    219e:	3c 01       	movw	r6, r24
				lcd0.gotoxy(1,0);
    21a0:	60 e0       	ldi	r22, 0x00	; 0
    21a2:	70 e0       	ldi	r23, 0x00	; 0
    21a4:	81 e0       	ldi	r24, 0x01	; 1
    21a6:	90 e0       	ldi	r25, 0x00	; 0
    21a8:	f5 01       	movw	r30, r10
    21aa:	09 95       	icall
				lcd0.string_size(function.ftoa(value_64, result, 0), 12); lcd0.string_size("raw_av", 6);
    21ac:	20 e0       	ldi	r18, 0x00	; 0
    21ae:	42 e4       	ldi	r20, 0x42	; 66
    21b0:	53 e0       	ldi	r21, 0x03	; 3
    21b2:	c3 01       	movw	r24, r6
    21b4:	b2 01       	movw	r22, r4
    21b6:	f4 01       	movw	r30, r8
    21b8:	09 95       	icall
    21ba:	6c e0       	ldi	r22, 0x0C	; 12
    21bc:	f6 01       	movw	r30, r12
    21be:	09 95       	icall
    21c0:	66 e0       	ldi	r22, 0x06	; 6
    21c2:	8d e0       	ldi	r24, 0x0D	; 13
    21c4:	91 e0       	ldi	r25, 0x01	; 1
    21c6:	f6 01       	movw	r30, r12
    21c8:	09 95       	icall
				
				if(F.hl(&F) & ONE){ // calibrate offset by pressing button 1
    21ca:	d7 01       	movw	r26, r14
    21cc:	1e 96       	adiw	r26, 0x0e	; 14
    21ce:	ed 91       	ld	r30, X+
    21d0:	fc 91       	ld	r31, X
    21d2:	1f 97       	sbiw	r26, 0x0f	; 15
    21d4:	c7 01       	movw	r24, r14
    21d6:	09 95       	icall
    21d8:	80 ff       	sbrs	r24, 0
    21da:	31 c0       	rjmp	.+98     	; 0x223e <main+0x322>
					PORTC^=(ONE<<5); // troubleshooting
    21dc:	85 b3       	in	r24, 0x15	; 21
    21de:	b0 e2       	ldi	r27, 0x20	; 32
    21e0:	8b 27       	eor	r24, r27
					HX711_data.offset_64=value_64;
    21e2:	85 bb       	out	0x15, r24	; 21
    21e4:	c3 01       	movw	r24, r6
    21e6:	b2 01       	movw	r22, r4
    21e8:	e6 d1       	rcall	.+972    	; 0x25b6 <__fixsfsi>
    21ea:	60 93 2e 03 	sts	0x032E, r22	; 0x80032e <HX711_data+0x4>
    21ee:	70 93 2f 03 	sts	0x032F, r23	; 0x80032f <HX711_data+0x5>
    21f2:	80 93 30 03 	sts	0x0330, r24	; 0x800330 <HX711_data+0x6>
    21f6:	90 93 31 03 	sts	0x0331, r25	; 0x800331 <HX711_data+0x7>
					//HX711_data.divfactor_64=46; //for troubleshooting
					HX711_data.status=1;
    21fa:	e1 e0       	ldi	r30, 0x01	; 1
    21fc:	e0 93 3f 03 	sts	0x033F, r30	; 0x80033f <HX711_data+0x15>
					eprom.update_block(HX711_ptr, (void*) ZERO, sizeblock);
    2200:	e0 91 28 03 	lds	r30, 0x0328	; 0x800328 <eprom+0x1c>
    2204:	f0 91 29 03 	lds	r31, 0x0329	; 0x800329 <eprom+0x1d>
    2208:	46 e1       	ldi	r20, 0x16	; 22
    220a:	50 e0       	ldi	r21, 0x00	; 0
    220c:	60 e0       	ldi	r22, 0x00	; 0
    220e:	70 e0       	ldi	r23, 0x00	; 0
    2210:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <HX711_ptr>
    2214:	90 91 41 03 	lds	r25, 0x0341	; 0x800341 <HX711_ptr+0x1>
    2218:	09 95       	icall
					//lcd0.gotoxy(2,0); //for troubleshooting
					//lcd0.string_size(function.i32toa(hx.get_offset_64(&hx)), 8); //for troubleshooting
					//lcd0.string_size(function.i16toa(hx.get_divfactor_64(&hx)), 8); //for troubleshooting
					memcpy ( hx.ptrcal(&hx), HX711_ptr, sizeblock ); // Update new values
    221a:	20 90 40 03 	lds	r2, 0x0340	; 0x800340 <HX711_ptr>
    221e:	30 90 41 03 	lds	r3, 0x0341	; 0x800341 <HX711_ptr+0x1>
    2222:	d8 01       	movw	r26, r16
    2224:	d9 96       	adiw	r26, 0x39	; 57
    2226:	ed 91       	ld	r30, X+
    2228:	fc 91       	ld	r31, X
    222a:	da 97       	sbiw	r26, 0x3a	; 58
    222c:	c8 01       	movw	r24, r16
    222e:	09 95       	icall
    2230:	dc 01       	movw	r26, r24
    2232:	96 e1       	ldi	r25, 0x16	; 22
    2234:	f1 01       	movw	r30, r2
    2236:	01 90       	ld	r0, Z+
    2238:	0d 92       	st	X+, r0
    223a:	9a 95       	dec	r25
    223c:	e1 f7       	brne	.-8      	; 0x2236 <main+0x31a>
				}
				
				//value_128=(value_64-hx.cal.offset_128)/hx.cal.divfactor_128;
				value_64=(value_64-hx.cal.offset_64)/hx.cal.divfactor_64; //value to be published to LCD
    223e:	f8 01       	movw	r30, r16
    2240:	63 8d       	ldd	r22, Z+27	; 0x1b
    2242:	74 8d       	ldd	r23, Z+28	; 0x1c
    2244:	85 8d       	ldd	r24, Z+29	; 0x1d
    2246:	96 8d       	ldd	r25, Z+30	; 0x1e
    2248:	e9 d1       	rcall	.+978    	; 0x261c <__floatsisf>
    224a:	9b 01       	movw	r18, r22
    224c:	ac 01       	movw	r20, r24
    224e:	c3 01       	movw	r24, r6
    2250:	b2 01       	movw	r22, r4
    2252:	e0 d0       	rcall	.+448    	; 0x2414 <__subsf3>
    2254:	2b 01       	movw	r4, r22
    2256:	3c 01       	movw	r6, r24
    2258:	d8 01       	movw	r26, r16
    225a:	96 96       	adiw	r26, 0x26	; 38
    225c:	6c 91       	ld	r22, X
    225e:	70 e0       	ldi	r23, 0x00	; 0
    2260:	80 e0       	ldi	r24, 0x00	; 0
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	db d1       	rcall	.+950    	; 0x261c <__floatsisf>
    2266:	9b 01       	movw	r18, r22
    2268:	ac 01       	movw	r20, r24
    226a:	c3 01       	movw	r24, r6
    226c:	b2 01       	movw	r22, r4
    226e:	3b d1       	rcall	.+630    	; 0x24e6 <__divsf3>
    2270:	2b 01       	movw	r4, r22
				
				//Display
				if (value_64 > 1000 || value_64 < -1000){
    2272:	3c 01       	movw	r6, r24
    2274:	20 e0       	ldi	r18, 0x00	; 0
    2276:	30 e0       	ldi	r19, 0x00	; 0
    2278:	4a e7       	ldi	r20, 0x7A	; 122
    227a:	54 e4       	ldi	r21, 0x44	; 68
    227c:	7f d2       	rcall	.+1278   	; 0x277c <__gesf2>
    227e:	18 16       	cp	r1, r24
    2280:	4c f0       	brlt	.+18     	; 0x2294 <main+0x378>
    2282:	20 e0       	ldi	r18, 0x00	; 0
    2284:	30 e0       	ldi	r19, 0x00	; 0
    2286:	4a e7       	ldi	r20, 0x7A	; 122
    2288:	54 ec       	ldi	r21, 0xC4	; 196
    228a:	c3 01       	movw	r24, r6
    228c:	b2 01       	movw	r22, r4
    228e:	27 d1       	rcall	.+590    	; 0x24de <__cmpsf2>
    2290:	88 23       	and	r24, r24
    2292:	b4 f4       	brge	.+44     	; 0x22c0 <main+0x3a4>
					value_64 = value_64/1000;
					value_128 = value_128/1000;
					lcd0.gotoxy(3,0);
    2294:	60 e0       	ldi	r22, 0x00	; 0
    2296:	70 e0       	ldi	r23, 0x00	; 0
    2298:	83 e0       	ldi	r24, 0x03	; 3
    229a:	90 e0       	ldi	r25, 0x00	; 0
    229c:	f5 01       	movw	r30, r10
					lcd0.string_size(function.ftoa(value_64,result,3), 12); //lcd0.string_size("Kg", 4);
    229e:	09 95       	icall
    22a0:	20 e0       	ldi	r18, 0x00	; 0
    22a2:	30 e0       	ldi	r19, 0x00	; 0
    22a4:	4a e7       	ldi	r20, 0x7A	; 122
    22a6:	54 e4       	ldi	r21, 0x44	; 68
    22a8:	c3 01       	movw	r24, r6
    22aa:	b2 01       	movw	r22, r4
    22ac:	1c d1       	rcall	.+568    	; 0x24e6 <__divsf3>
    22ae:	23 e0       	ldi	r18, 0x03	; 3
    22b0:	42 e4       	ldi	r20, 0x42	; 66
    22b2:	53 e0       	ldi	r21, 0x03	; 3
    22b4:	f4 01       	movw	r30, r8
    22b6:	09 95       	icall
    22b8:	6c e0       	ldi	r22, 0x0C	; 12
    22ba:	f6 01       	movw	r30, r12
    22bc:	09 95       	icall
    22be:	4e cf       	rjmp	.-356    	; 0x215c <main+0x240>
					//lcd0.gotoxy(3,0);
					//lcd0.string_size(function.ftoa(value_128,result,3), 12); lcd0.string_size("Kg", 4);	
				}else{
					lcd0.gotoxy(3,0);
    22c0:	60 e0       	ldi	r22, 0x00	; 0
    22c2:	70 e0       	ldi	r23, 0x00	; 0
    22c4:	83 e0       	ldi	r24, 0x03	; 3
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	f5 01       	movw	r30, r10
    22ca:	09 95       	icall
					lcd0.string_size(function.ftoa(value_64,result,0), 12); //lcd0.string_size("gram", 4);
    22cc:	20 e0       	ldi	r18, 0x00	; 0
    22ce:	42 e4       	ldi	r20, 0x42	; 66
    22d0:	53 e0       	ldi	r21, 0x03	; 3
    22d2:	c3 01       	movw	r24, r6
    22d4:	b2 01       	movw	r22, r4
    22d6:	f4 01       	movw	r30, r8
    22d8:	09 95       	icall
    22da:	6c e0       	ldi	r22, 0x0C	; 12
    22dc:	f6 01       	movw	r30, r12
    22de:	09 95       	icall
    22e0:	3d cf       	rjmp	.-390    	; 0x215c <main+0x240>

000022e2 <__vector_15>:
}
/*
** interrupt
*/
ISR(TIMER0_COMP_vect) // 20 us intervals
{
    22e2:	1f 92       	push	r1
    22e4:	0f 92       	push	r0
    22e6:	0f b6       	in	r0, 0x3f	; 63
    22e8:	0f 92       	push	r0
    22ea:	11 24       	eor	r1, r1
    22ec:	0b b6       	in	r0, 0x3b	; 59
    22ee:	0f 92       	push	r0
    22f0:	2f 93       	push	r18
    22f2:	3f 93       	push	r19
    22f4:	4f 93       	push	r20
    22f6:	5f 93       	push	r21
    22f8:	6f 93       	push	r22
    22fa:	7f 93       	push	r23
    22fc:	8f 93       	push	r24
    22fe:	9f 93       	push	r25
    2300:	af 93       	push	r26
    2302:	bf 93       	push	r27
    2304:	cf 93       	push	r28
    2306:	ef 93       	push	r30
    2308:	ff 93       	push	r31
	/***Block other interrupts during this procedure***/
	uint8_t Sreg;
	Sreg=SREG;
    230a:	cf b7       	in	r28, 0x3f	; 63
	SREG&=~(ONE<<7);
    230c:	8f b7       	in	r24, 0x3f	; 63
    230e:	8f 77       	andi	r24, 0x7F	; 127
    2310:	8f bf       	out	0x3f, r24	; 63
	/***Block other interrupts during this procedure***/	
	tmp=hx.read_raw(&hx);
    2312:	e0 91 97 03 	lds	r30, 0x0397	; 0x800397 <hx+0x35>
    2316:	f0 91 98 03 	lds	r31, 0x0398	; 0x800398 <hx+0x36>
    231a:	82 e6       	ldi	r24, 0x62	; 98
    231c:	93 e0       	ldi	r25, 0x03	; 3
    231e:	09 95       	icall
    2320:	60 93 08 03 	sts	0x0308, r22	; 0x800308 <tmp>
    2324:	70 93 09 03 	sts	0x0309, r23	; 0x800309 <tmp+0x1>
    2328:	80 93 0a 03 	sts	0x030A, r24	; 0x80030a <tmp+0x2>
    232c:	90 93 0b 03 	sts	0x030B, r25	; 0x80030b <tmp+0x3>
	/***enable interrupts again***/
	SREG=Sreg;
    2330:	cf bf       	out	0x3f, r28	; 63
}
    2332:	ff 91       	pop	r31
    2334:	ef 91       	pop	r30
    2336:	cf 91       	pop	r28
    2338:	bf 91       	pop	r27
    233a:	af 91       	pop	r26
    233c:	9f 91       	pop	r25
    233e:	8f 91       	pop	r24
    2340:	7f 91       	pop	r23
    2342:	6f 91       	pop	r22
    2344:	5f 91       	pop	r21
    2346:	4f 91       	pop	r20
    2348:	3f 91       	pop	r19
    234a:	2f 91       	pop	r18
    234c:	0f 90       	pop	r0
    234e:	0b be       	out	0x3b, r0	; 59
    2350:	0f 90       	pop	r0
    2352:	0f be       	out	0x3f, r0	; 63
    2354:	0f 90       	pop	r0
    2356:	1f 90       	pop	r1
    2358:	18 95       	reti

0000235a <__vector_12>:
ISR(TIMER1_COMPA_vect) // 1 second intervals
{
    235a:	1f 92       	push	r1
    235c:	0f 92       	push	r0
    235e:	0f b6       	in	r0, 0x3f	; 63
    2360:	0f 92       	push	r0
    2362:	11 24       	eor	r1, r1
    2364:	0b b6       	in	r0, 0x3b	; 59
    2366:	0f 92       	push	r0
    2368:	2f 93       	push	r18
    236a:	3f 93       	push	r19
    236c:	4f 93       	push	r20
    236e:	5f 93       	push	r21
    2370:	6f 93       	push	r22
    2372:	7f 93       	push	r23
    2374:	8f 93       	push	r24
    2376:	9f 93       	push	r25
    2378:	af 93       	push	r26
    237a:	bf 93       	push	r27
    237c:	ef 93       	push	r30
    237e:	ff 93       	push	r31
	
	if(F.ll(&F) & ONE)
    2380:	e0 91 b3 03 	lds	r30, 0x03B3	; 0x8003b3 <F+0xa>
    2384:	f0 91 b4 03 	lds	r31, 0x03B4	; 0x8003b4 <F+0xb>
    2388:	89 ea       	ldi	r24, 0xA9	; 169
    238a:	93 e0       	ldi	r25, 0x03	; 3
    238c:	09 95       	icall
    238e:	80 ff       	sbrs	r24, 0
    2390:	05 c0       	rjmp	.+10     	; 0x239c <__vector_12+0x42>
		counter_1++;
    2392:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <counter_1>
    2396:	8f 5f       	subi	r24, 0xFF	; 255
    2398:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <counter_1>
		
	if(counter_1 > _5sec){
    239c:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <counter_1>
    23a0:	86 30       	cpi	r24, 0x06	; 6
    23a2:	28 f1       	brcs	.+74     	; 0x23ee <__vector_12+0x94>
		counter_1=_5sec+ONE; //lock in place
    23a4:	86 e0       	ldi	r24, 0x06	; 6
    23a6:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <counter_1>
		
		PORTC^=(ONE<<5); // troubleshooting
    23aa:	95 b3       	in	r25, 0x15	; 21
    23ac:	80 e2       	ldi	r24, 0x20	; 32
    23ae:	89 27       	eor	r24, r25
    23b0:	85 bb       	out	0x15, r24	; 21
		
		if(F.ll(&F) & 2){
    23b2:	e0 91 b3 03 	lds	r30, 0x03B3	; 0x8003b3 <F+0xa>
    23b6:	f0 91 b4 03 	lds	r31, 0x03B4	; 0x8003b4 <F+0xb>
    23ba:	89 ea       	ldi	r24, 0xA9	; 169
    23bc:	93 e0       	ldi	r25, 0x03	; 3
    23be:	09 95       	icall
    23c0:	81 ff       	sbrs	r24, 1
    23c2:	15 c0       	rjmp	.+42     	; 0x23ee <__vector_12+0x94>
			// Delete eerpom memory ZERO
			HX711_data.status=0;
    23c4:	10 92 3f 03 	sts	0x033F, r1	; 0x80033f <HX711_data+0x15>
			eprom.update_block(HX711_ptr, (void*) ZERO, sizeblock);
    23c8:	e0 91 28 03 	lds	r30, 0x0328	; 0x800328 <eprom+0x1c>
    23cc:	f0 91 29 03 	lds	r31, 0x0329	; 0x800329 <eprom+0x1d>
    23d0:	46 e1       	ldi	r20, 0x16	; 22
    23d2:	50 e0       	ldi	r21, 0x00	; 0
    23d4:	60 e0       	ldi	r22, 0x00	; 0
    23d6:	70 e0       	ldi	r23, 0x00	; 0
    23d8:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <HX711_ptr>
    23dc:	90 91 41 03 	lds	r25, 0x0341	; 0x800341 <HX711_ptr+0x1>
    23e0:	09 95       	icall
			PORTC^=(ONE<<5); // troubleshooting
    23e2:	95 b3       	in	r25, 0x15	; 21
    23e4:	80 e2       	ldi	r24, 0x20	; 32
    23e6:	89 27       	eor	r24, r25
    23e8:	85 bb       	out	0x15, r24	; 21
			counter_1=ZERO;
    23ea:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <counter_1>
		}
	}
}
    23ee:	ff 91       	pop	r31
    23f0:	ef 91       	pop	r30
    23f2:	bf 91       	pop	r27
    23f4:	af 91       	pop	r26
    23f6:	9f 91       	pop	r25
    23f8:	8f 91       	pop	r24
    23fa:	7f 91       	pop	r23
    23fc:	6f 91       	pop	r22
    23fe:	5f 91       	pop	r21
    2400:	4f 91       	pop	r20
    2402:	3f 91       	pop	r19
    2404:	2f 91       	pop	r18
    2406:	0f 90       	pop	r0
    2408:	0b be       	out	0x3b, r0	; 59
    240a:	0f 90       	pop	r0
    240c:	0f be       	out	0x3f, r0	; 63
    240e:	0f 90       	pop	r0
    2410:	1f 90       	pop	r1
    2412:	18 95       	reti

00002414 <__subsf3>:
    2414:	50 58       	subi	r21, 0x80	; 128

00002416 <__addsf3>:
    2416:	bb 27       	eor	r27, r27
    2418:	aa 27       	eor	r26, r26
    241a:	0e d0       	rcall	.+28     	; 0x2438 <__addsf3x>
    241c:	75 c1       	rjmp	.+746    	; 0x2708 <__fp_round>
    241e:	66 d1       	rcall	.+716    	; 0x26ec <__fp_pscA>
    2420:	30 f0       	brcs	.+12     	; 0x242e <__addsf3+0x18>
    2422:	6b d1       	rcall	.+726    	; 0x26fa <__fp_pscB>
    2424:	20 f0       	brcs	.+8      	; 0x242e <__addsf3+0x18>
    2426:	31 f4       	brne	.+12     	; 0x2434 <__addsf3+0x1e>
    2428:	9f 3f       	cpi	r25, 0xFF	; 255
    242a:	11 f4       	brne	.+4      	; 0x2430 <__addsf3+0x1a>
    242c:	1e f4       	brtc	.+6      	; 0x2434 <__addsf3+0x1e>
    242e:	5b c1       	rjmp	.+694    	; 0x26e6 <__fp_nan>
    2430:	0e f4       	brtc	.+2      	; 0x2434 <__addsf3+0x1e>
    2432:	e0 95       	com	r30
    2434:	e7 fb       	bst	r30, 7
    2436:	51 c1       	rjmp	.+674    	; 0x26da <__fp_inf>

00002438 <__addsf3x>:
    2438:	e9 2f       	mov	r30, r25
    243a:	77 d1       	rcall	.+750    	; 0x272a <__fp_split3>
    243c:	80 f3       	brcs	.-32     	; 0x241e <__addsf3+0x8>
    243e:	ba 17       	cp	r27, r26
    2440:	62 07       	cpc	r22, r18
    2442:	73 07       	cpc	r23, r19
    2444:	84 07       	cpc	r24, r20
    2446:	95 07       	cpc	r25, r21
    2448:	18 f0       	brcs	.+6      	; 0x2450 <__addsf3x+0x18>
    244a:	71 f4       	brne	.+28     	; 0x2468 <__addsf3x+0x30>
    244c:	9e f5       	brtc	.+102    	; 0x24b4 <__addsf3x+0x7c>
    244e:	8f c1       	rjmp	.+798    	; 0x276e <__fp_zero>
    2450:	0e f4       	brtc	.+2      	; 0x2454 <__addsf3x+0x1c>
    2452:	e0 95       	com	r30
    2454:	0b 2e       	mov	r0, r27
    2456:	ba 2f       	mov	r27, r26
    2458:	a0 2d       	mov	r26, r0
    245a:	0b 01       	movw	r0, r22
    245c:	b9 01       	movw	r22, r18
    245e:	90 01       	movw	r18, r0
    2460:	0c 01       	movw	r0, r24
    2462:	ca 01       	movw	r24, r20
    2464:	a0 01       	movw	r20, r0
    2466:	11 24       	eor	r1, r1
    2468:	ff 27       	eor	r31, r31
    246a:	59 1b       	sub	r21, r25
    246c:	99 f0       	breq	.+38     	; 0x2494 <__addsf3x+0x5c>
    246e:	59 3f       	cpi	r21, 0xF9	; 249
    2470:	50 f4       	brcc	.+20     	; 0x2486 <__addsf3x+0x4e>
    2472:	50 3e       	cpi	r21, 0xE0	; 224
    2474:	68 f1       	brcs	.+90     	; 0x24d0 <__addsf3x+0x98>
    2476:	1a 16       	cp	r1, r26
    2478:	f0 40       	sbci	r31, 0x00	; 0
    247a:	a2 2f       	mov	r26, r18
    247c:	23 2f       	mov	r18, r19
    247e:	34 2f       	mov	r19, r20
    2480:	44 27       	eor	r20, r20
    2482:	58 5f       	subi	r21, 0xF8	; 248
    2484:	f3 cf       	rjmp	.-26     	; 0x246c <__addsf3x+0x34>
    2486:	46 95       	lsr	r20
    2488:	37 95       	ror	r19
    248a:	27 95       	ror	r18
    248c:	a7 95       	ror	r26
    248e:	f0 40       	sbci	r31, 0x00	; 0
    2490:	53 95       	inc	r21
    2492:	c9 f7       	brne	.-14     	; 0x2486 <__addsf3x+0x4e>
    2494:	7e f4       	brtc	.+30     	; 0x24b4 <__addsf3x+0x7c>
    2496:	1f 16       	cp	r1, r31
    2498:	ba 0b       	sbc	r27, r26
    249a:	62 0b       	sbc	r22, r18
    249c:	73 0b       	sbc	r23, r19
    249e:	84 0b       	sbc	r24, r20
    24a0:	ba f0       	brmi	.+46     	; 0x24d0 <__addsf3x+0x98>
    24a2:	91 50       	subi	r25, 0x01	; 1
    24a4:	a1 f0       	breq	.+40     	; 0x24ce <__addsf3x+0x96>
    24a6:	ff 0f       	add	r31, r31
    24a8:	bb 1f       	adc	r27, r27
    24aa:	66 1f       	adc	r22, r22
    24ac:	77 1f       	adc	r23, r23
    24ae:	88 1f       	adc	r24, r24
    24b0:	c2 f7       	brpl	.-16     	; 0x24a2 <__addsf3x+0x6a>
    24b2:	0e c0       	rjmp	.+28     	; 0x24d0 <__addsf3x+0x98>
    24b4:	ba 0f       	add	r27, r26
    24b6:	62 1f       	adc	r22, r18
    24b8:	73 1f       	adc	r23, r19
    24ba:	84 1f       	adc	r24, r20
    24bc:	48 f4       	brcc	.+18     	; 0x24d0 <__addsf3x+0x98>
    24be:	87 95       	ror	r24
    24c0:	77 95       	ror	r23
    24c2:	67 95       	ror	r22
    24c4:	b7 95       	ror	r27
    24c6:	f7 95       	ror	r31
    24c8:	9e 3f       	cpi	r25, 0xFE	; 254
    24ca:	08 f0       	brcs	.+2      	; 0x24ce <__addsf3x+0x96>
    24cc:	b3 cf       	rjmp	.-154    	; 0x2434 <__addsf3+0x1e>
    24ce:	93 95       	inc	r25
    24d0:	88 0f       	add	r24, r24
    24d2:	08 f0       	brcs	.+2      	; 0x24d6 <__addsf3x+0x9e>
    24d4:	99 27       	eor	r25, r25
    24d6:	ee 0f       	add	r30, r30
    24d8:	97 95       	ror	r25
    24da:	87 95       	ror	r24
    24dc:	08 95       	ret

000024de <__cmpsf2>:
    24de:	d9 d0       	rcall	.+434    	; 0x2692 <__fp_cmp>
    24e0:	08 f4       	brcc	.+2      	; 0x24e4 <__cmpsf2+0x6>
    24e2:	81 e0       	ldi	r24, 0x01	; 1
    24e4:	08 95       	ret

000024e6 <__divsf3>:
    24e6:	0c d0       	rcall	.+24     	; 0x2500 <__divsf3x>
    24e8:	0f c1       	rjmp	.+542    	; 0x2708 <__fp_round>
    24ea:	07 d1       	rcall	.+526    	; 0x26fa <__fp_pscB>
    24ec:	40 f0       	brcs	.+16     	; 0x24fe <__divsf3+0x18>
    24ee:	fe d0       	rcall	.+508    	; 0x26ec <__fp_pscA>
    24f0:	30 f0       	brcs	.+12     	; 0x24fe <__divsf3+0x18>
    24f2:	21 f4       	brne	.+8      	; 0x24fc <__divsf3+0x16>
    24f4:	5f 3f       	cpi	r21, 0xFF	; 255
    24f6:	19 f0       	breq	.+6      	; 0x24fe <__divsf3+0x18>
    24f8:	f0 c0       	rjmp	.+480    	; 0x26da <__fp_inf>
    24fa:	51 11       	cpse	r21, r1
    24fc:	39 c1       	rjmp	.+626    	; 0x2770 <__fp_szero>
    24fe:	f3 c0       	rjmp	.+486    	; 0x26e6 <__fp_nan>

00002500 <__divsf3x>:
    2500:	14 d1       	rcall	.+552    	; 0x272a <__fp_split3>
    2502:	98 f3       	brcs	.-26     	; 0x24ea <__divsf3+0x4>

00002504 <__divsf3_pse>:
    2504:	99 23       	and	r25, r25
    2506:	c9 f3       	breq	.-14     	; 0x24fa <__divsf3+0x14>
    2508:	55 23       	and	r21, r21
    250a:	b1 f3       	breq	.-20     	; 0x24f8 <__divsf3+0x12>
    250c:	95 1b       	sub	r25, r21
    250e:	55 0b       	sbc	r21, r21
    2510:	bb 27       	eor	r27, r27
    2512:	aa 27       	eor	r26, r26
    2514:	62 17       	cp	r22, r18
    2516:	73 07       	cpc	r23, r19
    2518:	84 07       	cpc	r24, r20
    251a:	38 f0       	brcs	.+14     	; 0x252a <__divsf3_pse+0x26>
    251c:	9f 5f       	subi	r25, 0xFF	; 255
    251e:	5f 4f       	sbci	r21, 0xFF	; 255
    2520:	22 0f       	add	r18, r18
    2522:	33 1f       	adc	r19, r19
    2524:	44 1f       	adc	r20, r20
    2526:	aa 1f       	adc	r26, r26
    2528:	a9 f3       	breq	.-22     	; 0x2514 <__divsf3_pse+0x10>
    252a:	33 d0       	rcall	.+102    	; 0x2592 <__divsf3_pse+0x8e>
    252c:	0e 2e       	mov	r0, r30
    252e:	3a f0       	brmi	.+14     	; 0x253e <__divsf3_pse+0x3a>
    2530:	e0 e8       	ldi	r30, 0x80	; 128
    2532:	30 d0       	rcall	.+96     	; 0x2594 <__divsf3_pse+0x90>
    2534:	91 50       	subi	r25, 0x01	; 1
    2536:	50 40       	sbci	r21, 0x00	; 0
    2538:	e6 95       	lsr	r30
    253a:	00 1c       	adc	r0, r0
    253c:	ca f7       	brpl	.-14     	; 0x2530 <__divsf3_pse+0x2c>
    253e:	29 d0       	rcall	.+82     	; 0x2592 <__divsf3_pse+0x8e>
    2540:	fe 2f       	mov	r31, r30
    2542:	27 d0       	rcall	.+78     	; 0x2592 <__divsf3_pse+0x8e>
    2544:	66 0f       	add	r22, r22
    2546:	77 1f       	adc	r23, r23
    2548:	88 1f       	adc	r24, r24
    254a:	bb 1f       	adc	r27, r27
    254c:	26 17       	cp	r18, r22
    254e:	37 07       	cpc	r19, r23
    2550:	48 07       	cpc	r20, r24
    2552:	ab 07       	cpc	r26, r27
    2554:	b0 e8       	ldi	r27, 0x80	; 128
    2556:	09 f0       	breq	.+2      	; 0x255a <__divsf3_pse+0x56>
    2558:	bb 0b       	sbc	r27, r27
    255a:	80 2d       	mov	r24, r0
    255c:	bf 01       	movw	r22, r30
    255e:	ff 27       	eor	r31, r31
    2560:	93 58       	subi	r25, 0x83	; 131
    2562:	5f 4f       	sbci	r21, 0xFF	; 255
    2564:	2a f0       	brmi	.+10     	; 0x2570 <__divsf3_pse+0x6c>
    2566:	9e 3f       	cpi	r25, 0xFE	; 254
    2568:	51 05       	cpc	r21, r1
    256a:	68 f0       	brcs	.+26     	; 0x2586 <__divsf3_pse+0x82>
    256c:	b6 c0       	rjmp	.+364    	; 0x26da <__fp_inf>
    256e:	00 c1       	rjmp	.+512    	; 0x2770 <__fp_szero>
    2570:	5f 3f       	cpi	r21, 0xFF	; 255
    2572:	ec f3       	brlt	.-6      	; 0x256e <__divsf3_pse+0x6a>
    2574:	98 3e       	cpi	r25, 0xE8	; 232
    2576:	dc f3       	brlt	.-10     	; 0x256e <__divsf3_pse+0x6a>
    2578:	86 95       	lsr	r24
    257a:	77 95       	ror	r23
    257c:	67 95       	ror	r22
    257e:	b7 95       	ror	r27
    2580:	f7 95       	ror	r31
    2582:	9f 5f       	subi	r25, 0xFF	; 255
    2584:	c9 f7       	brne	.-14     	; 0x2578 <__divsf3_pse+0x74>
    2586:	88 0f       	add	r24, r24
    2588:	91 1d       	adc	r25, r1
    258a:	96 95       	lsr	r25
    258c:	87 95       	ror	r24
    258e:	97 f9       	bld	r25, 7
    2590:	08 95       	ret
    2592:	e1 e0       	ldi	r30, 0x01	; 1
    2594:	66 0f       	add	r22, r22
    2596:	77 1f       	adc	r23, r23
    2598:	88 1f       	adc	r24, r24
    259a:	bb 1f       	adc	r27, r27
    259c:	62 17       	cp	r22, r18
    259e:	73 07       	cpc	r23, r19
    25a0:	84 07       	cpc	r24, r20
    25a2:	ba 07       	cpc	r27, r26
    25a4:	20 f0       	brcs	.+8      	; 0x25ae <__divsf3_pse+0xaa>
    25a6:	62 1b       	sub	r22, r18
    25a8:	73 0b       	sbc	r23, r19
    25aa:	84 0b       	sbc	r24, r20
    25ac:	ba 0b       	sbc	r27, r26
    25ae:	ee 1f       	adc	r30, r30
    25b0:	88 f7       	brcc	.-30     	; 0x2594 <__divsf3_pse+0x90>
    25b2:	e0 95       	com	r30
    25b4:	08 95       	ret

000025b6 <__fixsfsi>:
    25b6:	04 d0       	rcall	.+8      	; 0x25c0 <__fixunssfsi>
    25b8:	68 94       	set
    25ba:	b1 11       	cpse	r27, r1
    25bc:	d9 c0       	rjmp	.+434    	; 0x2770 <__fp_szero>
    25be:	08 95       	ret

000025c0 <__fixunssfsi>:
    25c0:	bc d0       	rcall	.+376    	; 0x273a <__fp_splitA>
    25c2:	88 f0       	brcs	.+34     	; 0x25e6 <__fixunssfsi+0x26>
    25c4:	9f 57       	subi	r25, 0x7F	; 127
    25c6:	90 f0       	brcs	.+36     	; 0x25ec <__fixunssfsi+0x2c>
    25c8:	b9 2f       	mov	r27, r25
    25ca:	99 27       	eor	r25, r25
    25cc:	b7 51       	subi	r27, 0x17	; 23
    25ce:	a0 f0       	brcs	.+40     	; 0x25f8 <__fixunssfsi+0x38>
    25d0:	d1 f0       	breq	.+52     	; 0x2606 <__fixunssfsi+0x46>
    25d2:	66 0f       	add	r22, r22
    25d4:	77 1f       	adc	r23, r23
    25d6:	88 1f       	adc	r24, r24
    25d8:	99 1f       	adc	r25, r25
    25da:	1a f0       	brmi	.+6      	; 0x25e2 <__fixunssfsi+0x22>
    25dc:	ba 95       	dec	r27
    25de:	c9 f7       	brne	.-14     	; 0x25d2 <__fixunssfsi+0x12>
    25e0:	12 c0       	rjmp	.+36     	; 0x2606 <__fixunssfsi+0x46>
    25e2:	b1 30       	cpi	r27, 0x01	; 1
    25e4:	81 f0       	breq	.+32     	; 0x2606 <__fixunssfsi+0x46>
    25e6:	c3 d0       	rcall	.+390    	; 0x276e <__fp_zero>
    25e8:	b1 e0       	ldi	r27, 0x01	; 1
    25ea:	08 95       	ret
    25ec:	c0 c0       	rjmp	.+384    	; 0x276e <__fp_zero>
    25ee:	67 2f       	mov	r22, r23
    25f0:	78 2f       	mov	r23, r24
    25f2:	88 27       	eor	r24, r24
    25f4:	b8 5f       	subi	r27, 0xF8	; 248
    25f6:	39 f0       	breq	.+14     	; 0x2606 <__fixunssfsi+0x46>
    25f8:	b9 3f       	cpi	r27, 0xF9	; 249
    25fa:	cc f3       	brlt	.-14     	; 0x25ee <__fixunssfsi+0x2e>
    25fc:	86 95       	lsr	r24
    25fe:	77 95       	ror	r23
    2600:	67 95       	ror	r22
    2602:	b3 95       	inc	r27
    2604:	d9 f7       	brne	.-10     	; 0x25fc <__fixunssfsi+0x3c>
    2606:	3e f4       	brtc	.+14     	; 0x2616 <__fixunssfsi+0x56>
    2608:	90 95       	com	r25
    260a:	80 95       	com	r24
    260c:	70 95       	com	r23
    260e:	61 95       	neg	r22
    2610:	7f 4f       	sbci	r23, 0xFF	; 255
    2612:	8f 4f       	sbci	r24, 0xFF	; 255
    2614:	9f 4f       	sbci	r25, 0xFF	; 255
    2616:	08 95       	ret

00002618 <__floatunsisf>:
    2618:	e8 94       	clt
    261a:	09 c0       	rjmp	.+18     	; 0x262e <__floatsisf+0x12>

0000261c <__floatsisf>:
    261c:	97 fb       	bst	r25, 7
    261e:	3e f4       	brtc	.+14     	; 0x262e <__floatsisf+0x12>
    2620:	90 95       	com	r25
    2622:	80 95       	com	r24
    2624:	70 95       	com	r23
    2626:	61 95       	neg	r22
    2628:	7f 4f       	sbci	r23, 0xFF	; 255
    262a:	8f 4f       	sbci	r24, 0xFF	; 255
    262c:	9f 4f       	sbci	r25, 0xFF	; 255
    262e:	99 23       	and	r25, r25
    2630:	a9 f0       	breq	.+42     	; 0x265c <__floatsisf+0x40>
    2632:	f9 2f       	mov	r31, r25
    2634:	96 e9       	ldi	r25, 0x96	; 150
    2636:	bb 27       	eor	r27, r27
    2638:	93 95       	inc	r25
    263a:	f6 95       	lsr	r31
    263c:	87 95       	ror	r24
    263e:	77 95       	ror	r23
    2640:	67 95       	ror	r22
    2642:	b7 95       	ror	r27
    2644:	f1 11       	cpse	r31, r1
    2646:	f8 cf       	rjmp	.-16     	; 0x2638 <__floatsisf+0x1c>
    2648:	fa f4       	brpl	.+62     	; 0x2688 <__floatsisf+0x6c>
    264a:	bb 0f       	add	r27, r27
    264c:	11 f4       	brne	.+4      	; 0x2652 <__floatsisf+0x36>
    264e:	60 ff       	sbrs	r22, 0
    2650:	1b c0       	rjmp	.+54     	; 0x2688 <__floatsisf+0x6c>
    2652:	6f 5f       	subi	r22, 0xFF	; 255
    2654:	7f 4f       	sbci	r23, 0xFF	; 255
    2656:	8f 4f       	sbci	r24, 0xFF	; 255
    2658:	9f 4f       	sbci	r25, 0xFF	; 255
    265a:	16 c0       	rjmp	.+44     	; 0x2688 <__floatsisf+0x6c>
    265c:	88 23       	and	r24, r24
    265e:	11 f0       	breq	.+4      	; 0x2664 <__floatsisf+0x48>
    2660:	96 e9       	ldi	r25, 0x96	; 150
    2662:	11 c0       	rjmp	.+34     	; 0x2686 <__floatsisf+0x6a>
    2664:	77 23       	and	r23, r23
    2666:	21 f0       	breq	.+8      	; 0x2670 <__floatsisf+0x54>
    2668:	9e e8       	ldi	r25, 0x8E	; 142
    266a:	87 2f       	mov	r24, r23
    266c:	76 2f       	mov	r23, r22
    266e:	05 c0       	rjmp	.+10     	; 0x267a <__floatsisf+0x5e>
    2670:	66 23       	and	r22, r22
    2672:	71 f0       	breq	.+28     	; 0x2690 <__floatsisf+0x74>
    2674:	96 e8       	ldi	r25, 0x86	; 134
    2676:	86 2f       	mov	r24, r22
    2678:	70 e0       	ldi	r23, 0x00	; 0
    267a:	60 e0       	ldi	r22, 0x00	; 0
    267c:	2a f0       	brmi	.+10     	; 0x2688 <__floatsisf+0x6c>
    267e:	9a 95       	dec	r25
    2680:	66 0f       	add	r22, r22
    2682:	77 1f       	adc	r23, r23
    2684:	88 1f       	adc	r24, r24
    2686:	da f7       	brpl	.-10     	; 0x267e <__floatsisf+0x62>
    2688:	88 0f       	add	r24, r24
    268a:	96 95       	lsr	r25
    268c:	87 95       	ror	r24
    268e:	97 f9       	bld	r25, 7
    2690:	08 95       	ret

00002692 <__fp_cmp>:
    2692:	99 0f       	add	r25, r25
    2694:	00 08       	sbc	r0, r0
    2696:	55 0f       	add	r21, r21
    2698:	aa 0b       	sbc	r26, r26
    269a:	e0 e8       	ldi	r30, 0x80	; 128
    269c:	fe ef       	ldi	r31, 0xFE	; 254
    269e:	16 16       	cp	r1, r22
    26a0:	17 06       	cpc	r1, r23
    26a2:	e8 07       	cpc	r30, r24
    26a4:	f9 07       	cpc	r31, r25
    26a6:	c0 f0       	brcs	.+48     	; 0x26d8 <__fp_cmp+0x46>
    26a8:	12 16       	cp	r1, r18
    26aa:	13 06       	cpc	r1, r19
    26ac:	e4 07       	cpc	r30, r20
    26ae:	f5 07       	cpc	r31, r21
    26b0:	98 f0       	brcs	.+38     	; 0x26d8 <__fp_cmp+0x46>
    26b2:	62 1b       	sub	r22, r18
    26b4:	73 0b       	sbc	r23, r19
    26b6:	84 0b       	sbc	r24, r20
    26b8:	95 0b       	sbc	r25, r21
    26ba:	39 f4       	brne	.+14     	; 0x26ca <__fp_cmp+0x38>
    26bc:	0a 26       	eor	r0, r26
    26be:	61 f0       	breq	.+24     	; 0x26d8 <__fp_cmp+0x46>
    26c0:	23 2b       	or	r18, r19
    26c2:	24 2b       	or	r18, r20
    26c4:	25 2b       	or	r18, r21
    26c6:	21 f4       	brne	.+8      	; 0x26d0 <__fp_cmp+0x3e>
    26c8:	08 95       	ret
    26ca:	0a 26       	eor	r0, r26
    26cc:	09 f4       	brne	.+2      	; 0x26d0 <__fp_cmp+0x3e>
    26ce:	a1 40       	sbci	r26, 0x01	; 1
    26d0:	a6 95       	lsr	r26
    26d2:	8f ef       	ldi	r24, 0xFF	; 255
    26d4:	81 1d       	adc	r24, r1
    26d6:	81 1d       	adc	r24, r1
    26d8:	08 95       	ret

000026da <__fp_inf>:
    26da:	97 f9       	bld	r25, 7
    26dc:	9f 67       	ori	r25, 0x7F	; 127
    26de:	80 e8       	ldi	r24, 0x80	; 128
    26e0:	70 e0       	ldi	r23, 0x00	; 0
    26e2:	60 e0       	ldi	r22, 0x00	; 0
    26e4:	08 95       	ret

000026e6 <__fp_nan>:
    26e6:	9f ef       	ldi	r25, 0xFF	; 255
    26e8:	80 ec       	ldi	r24, 0xC0	; 192
    26ea:	08 95       	ret

000026ec <__fp_pscA>:
    26ec:	00 24       	eor	r0, r0
    26ee:	0a 94       	dec	r0
    26f0:	16 16       	cp	r1, r22
    26f2:	17 06       	cpc	r1, r23
    26f4:	18 06       	cpc	r1, r24
    26f6:	09 06       	cpc	r0, r25
    26f8:	08 95       	ret

000026fa <__fp_pscB>:
    26fa:	00 24       	eor	r0, r0
    26fc:	0a 94       	dec	r0
    26fe:	12 16       	cp	r1, r18
    2700:	13 06       	cpc	r1, r19
    2702:	14 06       	cpc	r1, r20
    2704:	05 06       	cpc	r0, r21
    2706:	08 95       	ret

00002708 <__fp_round>:
    2708:	09 2e       	mov	r0, r25
    270a:	03 94       	inc	r0
    270c:	00 0c       	add	r0, r0
    270e:	11 f4       	brne	.+4      	; 0x2714 <__fp_round+0xc>
    2710:	88 23       	and	r24, r24
    2712:	52 f0       	brmi	.+20     	; 0x2728 <__fp_round+0x20>
    2714:	bb 0f       	add	r27, r27
    2716:	40 f4       	brcc	.+16     	; 0x2728 <__fp_round+0x20>
    2718:	bf 2b       	or	r27, r31
    271a:	11 f4       	brne	.+4      	; 0x2720 <__fp_round+0x18>
    271c:	60 ff       	sbrs	r22, 0
    271e:	04 c0       	rjmp	.+8      	; 0x2728 <__fp_round+0x20>
    2720:	6f 5f       	subi	r22, 0xFF	; 255
    2722:	7f 4f       	sbci	r23, 0xFF	; 255
    2724:	8f 4f       	sbci	r24, 0xFF	; 255
    2726:	9f 4f       	sbci	r25, 0xFF	; 255
    2728:	08 95       	ret

0000272a <__fp_split3>:
    272a:	57 fd       	sbrc	r21, 7
    272c:	90 58       	subi	r25, 0x80	; 128
    272e:	44 0f       	add	r20, r20
    2730:	55 1f       	adc	r21, r21
    2732:	59 f0       	breq	.+22     	; 0x274a <__fp_splitA+0x10>
    2734:	5f 3f       	cpi	r21, 0xFF	; 255
    2736:	71 f0       	breq	.+28     	; 0x2754 <__fp_splitA+0x1a>
    2738:	47 95       	ror	r20

0000273a <__fp_splitA>:
    273a:	88 0f       	add	r24, r24
    273c:	97 fb       	bst	r25, 7
    273e:	99 1f       	adc	r25, r25
    2740:	61 f0       	breq	.+24     	; 0x275a <__fp_splitA+0x20>
    2742:	9f 3f       	cpi	r25, 0xFF	; 255
    2744:	79 f0       	breq	.+30     	; 0x2764 <__fp_splitA+0x2a>
    2746:	87 95       	ror	r24
    2748:	08 95       	ret
    274a:	12 16       	cp	r1, r18
    274c:	13 06       	cpc	r1, r19
    274e:	14 06       	cpc	r1, r20
    2750:	55 1f       	adc	r21, r21
    2752:	f2 cf       	rjmp	.-28     	; 0x2738 <__fp_split3+0xe>
    2754:	46 95       	lsr	r20
    2756:	f1 df       	rcall	.-30     	; 0x273a <__fp_splitA>
    2758:	08 c0       	rjmp	.+16     	; 0x276a <__fp_splitA+0x30>
    275a:	16 16       	cp	r1, r22
    275c:	17 06       	cpc	r1, r23
    275e:	18 06       	cpc	r1, r24
    2760:	99 1f       	adc	r25, r25
    2762:	f1 cf       	rjmp	.-30     	; 0x2746 <__fp_splitA+0xc>
    2764:	86 95       	lsr	r24
    2766:	71 05       	cpc	r23, r1
    2768:	61 05       	cpc	r22, r1
    276a:	08 94       	sec
    276c:	08 95       	ret

0000276e <__fp_zero>:
    276e:	e8 94       	clt

00002770 <__fp_szero>:
    2770:	bb 27       	eor	r27, r27
    2772:	66 27       	eor	r22, r22
    2774:	77 27       	eor	r23, r23
    2776:	cb 01       	movw	r24, r22
    2778:	97 f9       	bld	r25, 7
    277a:	08 95       	ret

0000277c <__gesf2>:
    277c:	8a df       	rcall	.-236    	; 0x2692 <__fp_cmp>
    277e:	08 f4       	brcc	.+2      	; 0x2782 <__gesf2+0x6>
    2780:	8f ef       	ldi	r24, 0xFF	; 255
    2782:	08 95       	ret

00002784 <__mulsf3>:
    2784:	0b d0       	rcall	.+22     	; 0x279c <__mulsf3x>
    2786:	c0 cf       	rjmp	.-128    	; 0x2708 <__fp_round>
    2788:	b1 df       	rcall	.-158    	; 0x26ec <__fp_pscA>
    278a:	28 f0       	brcs	.+10     	; 0x2796 <__mulsf3+0x12>
    278c:	b6 df       	rcall	.-148    	; 0x26fa <__fp_pscB>
    278e:	18 f0       	brcs	.+6      	; 0x2796 <__mulsf3+0x12>
    2790:	95 23       	and	r25, r21
    2792:	09 f0       	breq	.+2      	; 0x2796 <__mulsf3+0x12>
    2794:	a2 cf       	rjmp	.-188    	; 0x26da <__fp_inf>
    2796:	a7 cf       	rjmp	.-178    	; 0x26e6 <__fp_nan>
    2798:	11 24       	eor	r1, r1
    279a:	ea cf       	rjmp	.-44     	; 0x2770 <__fp_szero>

0000279c <__mulsf3x>:
    279c:	c6 df       	rcall	.-116    	; 0x272a <__fp_split3>
    279e:	a0 f3       	brcs	.-24     	; 0x2788 <__mulsf3+0x4>

000027a0 <__mulsf3_pse>:
    27a0:	95 9f       	mul	r25, r21
    27a2:	d1 f3       	breq	.-12     	; 0x2798 <__mulsf3+0x14>
    27a4:	95 0f       	add	r25, r21
    27a6:	50 e0       	ldi	r21, 0x00	; 0
    27a8:	55 1f       	adc	r21, r21
    27aa:	62 9f       	mul	r22, r18
    27ac:	f0 01       	movw	r30, r0
    27ae:	72 9f       	mul	r23, r18
    27b0:	bb 27       	eor	r27, r27
    27b2:	f0 0d       	add	r31, r0
    27b4:	b1 1d       	adc	r27, r1
    27b6:	63 9f       	mul	r22, r19
    27b8:	aa 27       	eor	r26, r26
    27ba:	f0 0d       	add	r31, r0
    27bc:	b1 1d       	adc	r27, r1
    27be:	aa 1f       	adc	r26, r26
    27c0:	64 9f       	mul	r22, r20
    27c2:	66 27       	eor	r22, r22
    27c4:	b0 0d       	add	r27, r0
    27c6:	a1 1d       	adc	r26, r1
    27c8:	66 1f       	adc	r22, r22
    27ca:	82 9f       	mul	r24, r18
    27cc:	22 27       	eor	r18, r18
    27ce:	b0 0d       	add	r27, r0
    27d0:	a1 1d       	adc	r26, r1
    27d2:	62 1f       	adc	r22, r18
    27d4:	73 9f       	mul	r23, r19
    27d6:	b0 0d       	add	r27, r0
    27d8:	a1 1d       	adc	r26, r1
    27da:	62 1f       	adc	r22, r18
    27dc:	83 9f       	mul	r24, r19
    27de:	a0 0d       	add	r26, r0
    27e0:	61 1d       	adc	r22, r1
    27e2:	22 1f       	adc	r18, r18
    27e4:	74 9f       	mul	r23, r20
    27e6:	33 27       	eor	r19, r19
    27e8:	a0 0d       	add	r26, r0
    27ea:	61 1d       	adc	r22, r1
    27ec:	23 1f       	adc	r18, r19
    27ee:	84 9f       	mul	r24, r20
    27f0:	60 0d       	add	r22, r0
    27f2:	21 1d       	adc	r18, r1
    27f4:	82 2f       	mov	r24, r18
    27f6:	76 2f       	mov	r23, r22
    27f8:	6a 2f       	mov	r22, r26
    27fa:	11 24       	eor	r1, r1
    27fc:	9f 57       	subi	r25, 0x7F	; 127
    27fe:	50 40       	sbci	r21, 0x00	; 0
    2800:	8a f0       	brmi	.+34     	; 0x2824 <__mulsf3_pse+0x84>
    2802:	e1 f0       	breq	.+56     	; 0x283c <__mulsf3_pse+0x9c>
    2804:	88 23       	and	r24, r24
    2806:	4a f0       	brmi	.+18     	; 0x281a <__mulsf3_pse+0x7a>
    2808:	ee 0f       	add	r30, r30
    280a:	ff 1f       	adc	r31, r31
    280c:	bb 1f       	adc	r27, r27
    280e:	66 1f       	adc	r22, r22
    2810:	77 1f       	adc	r23, r23
    2812:	88 1f       	adc	r24, r24
    2814:	91 50       	subi	r25, 0x01	; 1
    2816:	50 40       	sbci	r21, 0x00	; 0
    2818:	a9 f7       	brne	.-22     	; 0x2804 <__mulsf3_pse+0x64>
    281a:	9e 3f       	cpi	r25, 0xFE	; 254
    281c:	51 05       	cpc	r21, r1
    281e:	70 f0       	brcs	.+28     	; 0x283c <__mulsf3_pse+0x9c>
    2820:	5c cf       	rjmp	.-328    	; 0x26da <__fp_inf>
    2822:	a6 cf       	rjmp	.-180    	; 0x2770 <__fp_szero>
    2824:	5f 3f       	cpi	r21, 0xFF	; 255
    2826:	ec f3       	brlt	.-6      	; 0x2822 <__mulsf3_pse+0x82>
    2828:	98 3e       	cpi	r25, 0xE8	; 232
    282a:	dc f3       	brlt	.-10     	; 0x2822 <__mulsf3_pse+0x82>
    282c:	86 95       	lsr	r24
    282e:	77 95       	ror	r23
    2830:	67 95       	ror	r22
    2832:	b7 95       	ror	r27
    2834:	f7 95       	ror	r31
    2836:	e7 95       	ror	r30
    2838:	9f 5f       	subi	r25, 0xFF	; 255
    283a:	c1 f7       	brne	.-16     	; 0x282c <__mulsf3_pse+0x8c>
    283c:	fe 2b       	or	r31, r30
    283e:	88 0f       	add	r24, r24
    2840:	91 1d       	adc	r25, r1
    2842:	96 95       	lsr	r25
    2844:	87 95       	ror	r24
    2846:	97 f9       	bld	r25, 7
    2848:	08 95       	ret

0000284a <pow>:
    284a:	fa 01       	movw	r30, r20
    284c:	ee 0f       	add	r30, r30
    284e:	ff 1f       	adc	r31, r31
    2850:	30 96       	adiw	r30, 0x00	; 0
    2852:	21 05       	cpc	r18, r1
    2854:	31 05       	cpc	r19, r1
    2856:	99 f1       	breq	.+102    	; 0x28be <pow+0x74>
    2858:	61 15       	cp	r22, r1
    285a:	71 05       	cpc	r23, r1
    285c:	61 f4       	brne	.+24     	; 0x2876 <pow+0x2c>
    285e:	80 38       	cpi	r24, 0x80	; 128
    2860:	bf e3       	ldi	r27, 0x3F	; 63
    2862:	9b 07       	cpc	r25, r27
    2864:	49 f1       	breq	.+82     	; 0x28b8 <pow+0x6e>
    2866:	68 94       	set
    2868:	90 38       	cpi	r25, 0x80	; 128
    286a:	81 05       	cpc	r24, r1
    286c:	61 f0       	breq	.+24     	; 0x2886 <pow+0x3c>
    286e:	80 38       	cpi	r24, 0x80	; 128
    2870:	bf ef       	ldi	r27, 0xFF	; 255
    2872:	9b 07       	cpc	r25, r27
    2874:	41 f0       	breq	.+16     	; 0x2886 <pow+0x3c>
    2876:	99 23       	and	r25, r25
    2878:	42 f5       	brpl	.+80     	; 0x28ca <pow+0x80>
    287a:	ff 3f       	cpi	r31, 0xFF	; 255
    287c:	e1 05       	cpc	r30, r1
    287e:	31 05       	cpc	r19, r1
    2880:	21 05       	cpc	r18, r1
    2882:	11 f1       	breq	.+68     	; 0x28c8 <pow+0x7e>
    2884:	e8 94       	clt
    2886:	08 94       	sec
    2888:	e7 95       	ror	r30
    288a:	d9 01       	movw	r26, r18
    288c:	aa 23       	and	r26, r26
    288e:	29 f4       	brne	.+10     	; 0x289a <pow+0x50>
    2890:	ab 2f       	mov	r26, r27
    2892:	be 2f       	mov	r27, r30
    2894:	f8 5f       	subi	r31, 0xF8	; 248
    2896:	d0 f3       	brcs	.-12     	; 0x288c <pow+0x42>
    2898:	10 c0       	rjmp	.+32     	; 0x28ba <pow+0x70>
    289a:	ff 5f       	subi	r31, 0xFF	; 255
    289c:	70 f4       	brcc	.+28     	; 0x28ba <pow+0x70>
    289e:	a6 95       	lsr	r26
    28a0:	e0 f7       	brcc	.-8      	; 0x289a <pow+0x50>
    28a2:	f7 39       	cpi	r31, 0x97	; 151
    28a4:	50 f0       	brcs	.+20     	; 0x28ba <pow+0x70>
    28a6:	19 f0       	breq	.+6      	; 0x28ae <pow+0x64>
    28a8:	ff 3a       	cpi	r31, 0xAF	; 175
    28aa:	38 f4       	brcc	.+14     	; 0x28ba <pow+0x70>
    28ac:	9f 77       	andi	r25, 0x7F	; 127
    28ae:	9f 93       	push	r25
    28b0:	0c d0       	rcall	.+24     	; 0x28ca <pow+0x80>
    28b2:	0f 90       	pop	r0
    28b4:	07 fc       	sbrc	r0, 7
    28b6:	90 58       	subi	r25, 0x80	; 128
    28b8:	08 95       	ret
    28ba:	3e f0       	brts	.+14     	; 0x28ca <pow+0x80>
    28bc:	14 cf       	rjmp	.-472    	; 0x26e6 <__fp_nan>
    28be:	60 e0       	ldi	r22, 0x00	; 0
    28c0:	70 e0       	ldi	r23, 0x00	; 0
    28c2:	80 e8       	ldi	r24, 0x80	; 128
    28c4:	9f e3       	ldi	r25, 0x3F	; 63
    28c6:	08 95       	ret
    28c8:	4f e7       	ldi	r20, 0x7F	; 127
    28ca:	9f 77       	andi	r25, 0x7F	; 127
    28cc:	5f 93       	push	r21
    28ce:	4f 93       	push	r20
    28d0:	3f 93       	push	r19
    28d2:	2f 93       	push	r18
    28d4:	9e d0       	rcall	.+316    	; 0x2a12 <log>
    28d6:	2f 91       	pop	r18
    28d8:	3f 91       	pop	r19
    28da:	4f 91       	pop	r20
    28dc:	5f 91       	pop	r21
    28de:	52 df       	rcall	.-348    	; 0x2784 <__mulsf3>
    28e0:	05 c0       	rjmp	.+10     	; 0x28ec <exp>
    28e2:	19 f4       	brne	.+6      	; 0x28ea <pow+0xa0>
    28e4:	0e f0       	brts	.+2      	; 0x28e8 <pow+0x9e>
    28e6:	f9 ce       	rjmp	.-526    	; 0x26da <__fp_inf>
    28e8:	42 cf       	rjmp	.-380    	; 0x276e <__fp_zero>
    28ea:	fd ce       	rjmp	.-518    	; 0x26e6 <__fp_nan>

000028ec <exp>:
    28ec:	26 df       	rcall	.-436    	; 0x273a <__fp_splitA>
    28ee:	c8 f3       	brcs	.-14     	; 0x28e2 <pow+0x98>
    28f0:	96 38       	cpi	r25, 0x86	; 134
    28f2:	c0 f7       	brcc	.-16     	; 0x28e4 <pow+0x9a>
    28f4:	07 f8       	bld	r0, 7
    28f6:	0f 92       	push	r0
    28f8:	e8 94       	clt
    28fa:	2b e3       	ldi	r18, 0x3B	; 59
    28fc:	3a ea       	ldi	r19, 0xAA	; 170
    28fe:	48 eb       	ldi	r20, 0xB8	; 184
    2900:	5f e7       	ldi	r21, 0x7F	; 127
    2902:	4e df       	rcall	.-356    	; 0x27a0 <__mulsf3_pse>
    2904:	0f 92       	push	r0
    2906:	0f 92       	push	r0
    2908:	0f 92       	push	r0
    290a:	4d b7       	in	r20, 0x3d	; 61
    290c:	5e b7       	in	r21, 0x3e	; 62
    290e:	0f 92       	push	r0
    2910:	c0 d0       	rcall	.+384    	; 0x2a92 <modf>
    2912:	e2 ec       	ldi	r30, 0xC2	; 194
    2914:	f0 e0       	ldi	r31, 0x00	; 0
    2916:	16 d0       	rcall	.+44     	; 0x2944 <__fp_powser>
    2918:	4f 91       	pop	r20
    291a:	5f 91       	pop	r21
    291c:	ef 91       	pop	r30
    291e:	ff 91       	pop	r31
    2920:	e5 95       	asr	r30
    2922:	ee 1f       	adc	r30, r30
    2924:	ff 1f       	adc	r31, r31
    2926:	49 f0       	breq	.+18     	; 0x293a <exp+0x4e>
    2928:	fe 57       	subi	r31, 0x7E	; 126
    292a:	e0 68       	ori	r30, 0x80	; 128
    292c:	44 27       	eor	r20, r20
    292e:	ee 0f       	add	r30, r30
    2930:	44 1f       	adc	r20, r20
    2932:	fa 95       	dec	r31
    2934:	e1 f7       	brne	.-8      	; 0x292e <exp+0x42>
    2936:	41 95       	neg	r20
    2938:	55 0b       	sbc	r21, r21
    293a:	32 d0       	rcall	.+100    	; 0x29a0 <ldexp>
    293c:	0f 90       	pop	r0
    293e:	07 fe       	sbrs	r0, 7
    2940:	26 c0       	rjmp	.+76     	; 0x298e <inverse>
    2942:	08 95       	ret

00002944 <__fp_powser>:
    2944:	df 93       	push	r29
    2946:	cf 93       	push	r28
    2948:	1f 93       	push	r17
    294a:	0f 93       	push	r16
    294c:	ff 92       	push	r15
    294e:	ef 92       	push	r14
    2950:	df 92       	push	r13
    2952:	7b 01       	movw	r14, r22
    2954:	8c 01       	movw	r16, r24
    2956:	68 94       	set
    2958:	05 c0       	rjmp	.+10     	; 0x2964 <__fp_powser+0x20>
    295a:	da 2e       	mov	r13, r26
    295c:	ef 01       	movw	r28, r30
    295e:	1e df       	rcall	.-452    	; 0x279c <__mulsf3x>
    2960:	fe 01       	movw	r30, r28
    2962:	e8 94       	clt
    2964:	a5 91       	lpm	r26, Z+
    2966:	25 91       	lpm	r18, Z+
    2968:	35 91       	lpm	r19, Z+
    296a:	45 91       	lpm	r20, Z+
    296c:	55 91       	lpm	r21, Z+
    296e:	ae f3       	brts	.-22     	; 0x295a <__fp_powser+0x16>
    2970:	ef 01       	movw	r28, r30
    2972:	62 dd       	rcall	.-1340   	; 0x2438 <__addsf3x>
    2974:	fe 01       	movw	r30, r28
    2976:	97 01       	movw	r18, r14
    2978:	a8 01       	movw	r20, r16
    297a:	da 94       	dec	r13
    297c:	79 f7       	brne	.-34     	; 0x295c <__fp_powser+0x18>
    297e:	df 90       	pop	r13
    2980:	ef 90       	pop	r14
    2982:	ff 90       	pop	r15
    2984:	0f 91       	pop	r16
    2986:	1f 91       	pop	r17
    2988:	cf 91       	pop	r28
    298a:	df 91       	pop	r29
    298c:	08 95       	ret

0000298e <inverse>:
    298e:	9b 01       	movw	r18, r22
    2990:	ac 01       	movw	r20, r24
    2992:	60 e0       	ldi	r22, 0x00	; 0
    2994:	70 e0       	ldi	r23, 0x00	; 0
    2996:	80 e8       	ldi	r24, 0x80	; 128
    2998:	9f e3       	ldi	r25, 0x3F	; 63
    299a:	a5 cd       	rjmp	.-1206   	; 0x24e6 <__divsf3>
    299c:	9e ce       	rjmp	.-708    	; 0x26da <__fp_inf>
    299e:	ac c0       	rjmp	.+344    	; 0x2af8 <__fp_mpack>

000029a0 <ldexp>:
    29a0:	cc de       	rcall	.-616    	; 0x273a <__fp_splitA>
    29a2:	e8 f3       	brcs	.-6      	; 0x299e <inverse+0x10>
    29a4:	99 23       	and	r25, r25
    29a6:	d9 f3       	breq	.-10     	; 0x299e <inverse+0x10>
    29a8:	94 0f       	add	r25, r20
    29aa:	51 1d       	adc	r21, r1
    29ac:	bb f3       	brvs	.-18     	; 0x299c <inverse+0xe>
    29ae:	91 50       	subi	r25, 0x01	; 1
    29b0:	50 40       	sbci	r21, 0x00	; 0
    29b2:	94 f0       	brlt	.+36     	; 0x29d8 <ldexp+0x38>
    29b4:	59 f0       	breq	.+22     	; 0x29cc <ldexp+0x2c>
    29b6:	88 23       	and	r24, r24
    29b8:	32 f0       	brmi	.+12     	; 0x29c6 <ldexp+0x26>
    29ba:	66 0f       	add	r22, r22
    29bc:	77 1f       	adc	r23, r23
    29be:	88 1f       	adc	r24, r24
    29c0:	91 50       	subi	r25, 0x01	; 1
    29c2:	50 40       	sbci	r21, 0x00	; 0
    29c4:	c1 f7       	brne	.-16     	; 0x29b6 <ldexp+0x16>
    29c6:	9e 3f       	cpi	r25, 0xFE	; 254
    29c8:	51 05       	cpc	r21, r1
    29ca:	44 f7       	brge	.-48     	; 0x299c <inverse+0xe>
    29cc:	88 0f       	add	r24, r24
    29ce:	91 1d       	adc	r25, r1
    29d0:	96 95       	lsr	r25
    29d2:	87 95       	ror	r24
    29d4:	97 f9       	bld	r25, 7
    29d6:	08 95       	ret
    29d8:	5f 3f       	cpi	r21, 0xFF	; 255
    29da:	ac f0       	brlt	.+42     	; 0x2a06 <ldexp+0x66>
    29dc:	98 3e       	cpi	r25, 0xE8	; 232
    29de:	9c f0       	brlt	.+38     	; 0x2a06 <ldexp+0x66>
    29e0:	bb 27       	eor	r27, r27
    29e2:	86 95       	lsr	r24
    29e4:	77 95       	ror	r23
    29e6:	67 95       	ror	r22
    29e8:	b7 95       	ror	r27
    29ea:	08 f4       	brcc	.+2      	; 0x29ee <ldexp+0x4e>
    29ec:	b1 60       	ori	r27, 0x01	; 1
    29ee:	93 95       	inc	r25
    29f0:	c1 f7       	brne	.-16     	; 0x29e2 <ldexp+0x42>
    29f2:	bb 0f       	add	r27, r27
    29f4:	58 f7       	brcc	.-42     	; 0x29cc <ldexp+0x2c>
    29f6:	11 f4       	brne	.+4      	; 0x29fc <ldexp+0x5c>
    29f8:	60 ff       	sbrs	r22, 0
    29fa:	e8 cf       	rjmp	.-48     	; 0x29cc <ldexp+0x2c>
    29fc:	6f 5f       	subi	r22, 0xFF	; 255
    29fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2a00:	8f 4f       	sbci	r24, 0xFF	; 255
    2a02:	9f 4f       	sbci	r25, 0xFF	; 255
    2a04:	e3 cf       	rjmp	.-58     	; 0x29cc <ldexp+0x2c>
    2a06:	b4 ce       	rjmp	.-664    	; 0x2770 <__fp_szero>
    2a08:	0e f0       	brts	.+2      	; 0x2a0c <ldexp+0x6c>
    2a0a:	76 c0       	rjmp	.+236    	; 0x2af8 <__fp_mpack>
    2a0c:	6c ce       	rjmp	.-808    	; 0x26e6 <__fp_nan>
    2a0e:	68 94       	set
    2a10:	64 ce       	rjmp	.-824    	; 0x26da <__fp_inf>

00002a12 <log>:
    2a12:	93 de       	rcall	.-730    	; 0x273a <__fp_splitA>
    2a14:	c8 f3       	brcs	.-14     	; 0x2a08 <ldexp+0x68>
    2a16:	99 23       	and	r25, r25
    2a18:	d1 f3       	breq	.-12     	; 0x2a0e <ldexp+0x6e>
    2a1a:	c6 f3       	brts	.-16     	; 0x2a0c <ldexp+0x6c>
    2a1c:	df 93       	push	r29
    2a1e:	cf 93       	push	r28
    2a20:	1f 93       	push	r17
    2a22:	0f 93       	push	r16
    2a24:	ff 92       	push	r15
    2a26:	c9 2f       	mov	r28, r25
    2a28:	dd 27       	eor	r29, r29
    2a2a:	88 23       	and	r24, r24
    2a2c:	2a f0       	brmi	.+10     	; 0x2a38 <log+0x26>
    2a2e:	21 97       	sbiw	r28, 0x01	; 1
    2a30:	66 0f       	add	r22, r22
    2a32:	77 1f       	adc	r23, r23
    2a34:	88 1f       	adc	r24, r24
    2a36:	da f7       	brpl	.-10     	; 0x2a2e <log+0x1c>
    2a38:	20 e0       	ldi	r18, 0x00	; 0
    2a3a:	30 e0       	ldi	r19, 0x00	; 0
    2a3c:	40 e8       	ldi	r20, 0x80	; 128
    2a3e:	5f eb       	ldi	r21, 0xBF	; 191
    2a40:	9f e3       	ldi	r25, 0x3F	; 63
    2a42:	88 39       	cpi	r24, 0x98	; 152
    2a44:	20 f0       	brcs	.+8      	; 0x2a4e <log+0x3c>
    2a46:	80 3e       	cpi	r24, 0xE0	; 224
    2a48:	30 f0       	brcs	.+12     	; 0x2a56 <log+0x44>
    2a4a:	21 96       	adiw	r28, 0x01	; 1
    2a4c:	8f 77       	andi	r24, 0x7F	; 127
    2a4e:	e3 dc       	rcall	.-1594   	; 0x2416 <__addsf3>
    2a50:	ea ee       	ldi	r30, 0xEA	; 234
    2a52:	f0 e0       	ldi	r31, 0x00	; 0
    2a54:	03 c0       	rjmp	.+6      	; 0x2a5c <log+0x4a>
    2a56:	df dc       	rcall	.-1602   	; 0x2416 <__addsf3>
    2a58:	e7 e1       	ldi	r30, 0x17	; 23
    2a5a:	f1 e0       	ldi	r31, 0x01	; 1
    2a5c:	73 df       	rcall	.-282    	; 0x2944 <__fp_powser>
    2a5e:	8b 01       	movw	r16, r22
    2a60:	be 01       	movw	r22, r28
    2a62:	ec 01       	movw	r28, r24
    2a64:	fb 2e       	mov	r15, r27
    2a66:	6f 57       	subi	r22, 0x7F	; 127
    2a68:	71 09       	sbc	r23, r1
    2a6a:	75 95       	asr	r23
    2a6c:	77 1f       	adc	r23, r23
    2a6e:	88 0b       	sbc	r24, r24
    2a70:	99 0b       	sbc	r25, r25
    2a72:	d4 dd       	rcall	.-1112   	; 0x261c <__floatsisf>
    2a74:	28 e1       	ldi	r18, 0x18	; 24
    2a76:	32 e7       	ldi	r19, 0x72	; 114
    2a78:	41 e3       	ldi	r20, 0x31	; 49
    2a7a:	5f e3       	ldi	r21, 0x3F	; 63
    2a7c:	8f de       	rcall	.-738    	; 0x279c <__mulsf3x>
    2a7e:	af 2d       	mov	r26, r15
    2a80:	98 01       	movw	r18, r16
    2a82:	ae 01       	movw	r20, r28
    2a84:	ff 90       	pop	r15
    2a86:	0f 91       	pop	r16
    2a88:	1f 91       	pop	r17
    2a8a:	cf 91       	pop	r28
    2a8c:	df 91       	pop	r29
    2a8e:	d4 dc       	rcall	.-1624   	; 0x2438 <__addsf3x>
    2a90:	3b ce       	rjmp	.-906    	; 0x2708 <__fp_round>

00002a92 <modf>:
    2a92:	fa 01       	movw	r30, r20
    2a94:	dc 01       	movw	r26, r24
    2a96:	aa 0f       	add	r26, r26
    2a98:	bb 1f       	adc	r27, r27
    2a9a:	9b 01       	movw	r18, r22
    2a9c:	ac 01       	movw	r20, r24
    2a9e:	bf 57       	subi	r27, 0x7F	; 127
    2aa0:	28 f4       	brcc	.+10     	; 0x2aac <modf+0x1a>
    2aa2:	22 27       	eor	r18, r18
    2aa4:	33 27       	eor	r19, r19
    2aa6:	44 27       	eor	r20, r20
    2aa8:	50 78       	andi	r21, 0x80	; 128
    2aaa:	1f c0       	rjmp	.+62     	; 0x2aea <modf+0x58>
    2aac:	b7 51       	subi	r27, 0x17	; 23
    2aae:	88 f4       	brcc	.+34     	; 0x2ad2 <modf+0x40>
    2ab0:	ab 2f       	mov	r26, r27
    2ab2:	00 24       	eor	r0, r0
    2ab4:	46 95       	lsr	r20
    2ab6:	37 95       	ror	r19
    2ab8:	27 95       	ror	r18
    2aba:	01 1c       	adc	r0, r1
    2abc:	a3 95       	inc	r26
    2abe:	d2 f3       	brmi	.-12     	; 0x2ab4 <modf+0x22>
    2ac0:	00 20       	and	r0, r0
    2ac2:	69 f0       	breq	.+26     	; 0x2ade <modf+0x4c>
    2ac4:	22 0f       	add	r18, r18
    2ac6:	33 1f       	adc	r19, r19
    2ac8:	44 1f       	adc	r20, r20
    2aca:	b3 95       	inc	r27
    2acc:	da f3       	brmi	.-10     	; 0x2ac4 <modf+0x32>
    2ace:	0d d0       	rcall	.+26     	; 0x2aea <modf+0x58>
    2ad0:	a1 cc       	rjmp	.-1726   	; 0x2414 <__subsf3>
    2ad2:	61 30       	cpi	r22, 0x01	; 1
    2ad4:	71 05       	cpc	r23, r1
    2ad6:	a0 e8       	ldi	r26, 0x80	; 128
    2ad8:	8a 07       	cpc	r24, r26
    2ada:	b9 46       	sbci	r27, 0x69	; 105
    2adc:	30 f4       	brcc	.+12     	; 0x2aea <modf+0x58>
    2ade:	9b 01       	movw	r18, r22
    2ae0:	ac 01       	movw	r20, r24
    2ae2:	66 27       	eor	r22, r22
    2ae4:	77 27       	eor	r23, r23
    2ae6:	88 27       	eor	r24, r24
    2ae8:	90 78       	andi	r25, 0x80	; 128
    2aea:	30 96       	adiw	r30, 0x00	; 0
    2aec:	21 f0       	breq	.+8      	; 0x2af6 <modf+0x64>
    2aee:	20 83       	st	Z, r18
    2af0:	31 83       	std	Z+1, r19	; 0x01
    2af2:	42 83       	std	Z+2, r20	; 0x02
    2af4:	53 83       	std	Z+3, r21	; 0x03
    2af6:	08 95       	ret

00002af8 <__fp_mpack>:
    2af8:	9f 3f       	cpi	r25, 0xFF	; 255
    2afa:	31 f0       	breq	.+12     	; 0x2b08 <__fp_mpack_finite+0xc>

00002afc <__fp_mpack_finite>:
    2afc:	91 50       	subi	r25, 0x01	; 1
    2afe:	20 f4       	brcc	.+8      	; 0x2b08 <__fp_mpack_finite+0xc>
    2b00:	87 95       	ror	r24
    2b02:	77 95       	ror	r23
    2b04:	67 95       	ror	r22
    2b06:	b7 95       	ror	r27
    2b08:	88 0f       	add	r24, r24
    2b0a:	91 1d       	adc	r25, r1
    2b0c:	96 95       	lsr	r25
    2b0e:	87 95       	ror	r24
    2b10:	97 f9       	bld	r25, 7
    2b12:	08 95       	ret

00002b14 <__mulsi3>:
    2b14:	db 01       	movw	r26, r22
    2b16:	8f 93       	push	r24
    2b18:	9f 93       	push	r25
    2b1a:	88 d0       	rcall	.+272    	; 0x2c2c <__muluhisi3>
    2b1c:	bf 91       	pop	r27
    2b1e:	af 91       	pop	r26
    2b20:	a2 9f       	mul	r26, r18
    2b22:	80 0d       	add	r24, r0
    2b24:	91 1d       	adc	r25, r1
    2b26:	a3 9f       	mul	r26, r19
    2b28:	90 0d       	add	r25, r0
    2b2a:	b2 9f       	mul	r27, r18
    2b2c:	90 0d       	add	r25, r0
    2b2e:	11 24       	eor	r1, r1
    2b30:	08 95       	ret

00002b32 <__udivmodhi4>:
    2b32:	aa 1b       	sub	r26, r26
    2b34:	bb 1b       	sub	r27, r27
    2b36:	51 e1       	ldi	r21, 0x11	; 17
    2b38:	07 c0       	rjmp	.+14     	; 0x2b48 <__udivmodhi4_ep>

00002b3a <__udivmodhi4_loop>:
    2b3a:	aa 1f       	adc	r26, r26
    2b3c:	bb 1f       	adc	r27, r27
    2b3e:	a6 17       	cp	r26, r22
    2b40:	b7 07       	cpc	r27, r23
    2b42:	10 f0       	brcs	.+4      	; 0x2b48 <__udivmodhi4_ep>
    2b44:	a6 1b       	sub	r26, r22
    2b46:	b7 0b       	sbc	r27, r23

00002b48 <__udivmodhi4_ep>:
    2b48:	88 1f       	adc	r24, r24
    2b4a:	99 1f       	adc	r25, r25
    2b4c:	5a 95       	dec	r21
    2b4e:	a9 f7       	brne	.-22     	; 0x2b3a <__udivmodhi4_loop>
    2b50:	80 95       	com	r24
    2b52:	90 95       	com	r25
    2b54:	bc 01       	movw	r22, r24
    2b56:	cd 01       	movw	r24, r26
    2b58:	08 95       	ret

00002b5a <__divmodhi4>:
    2b5a:	97 fb       	bst	r25, 7
    2b5c:	07 2e       	mov	r0, r23
    2b5e:	16 f4       	brtc	.+4      	; 0x2b64 <__divmodhi4+0xa>
    2b60:	00 94       	com	r0
    2b62:	06 d0       	rcall	.+12     	; 0x2b70 <__divmodhi4_neg1>
    2b64:	77 fd       	sbrc	r23, 7
    2b66:	08 d0       	rcall	.+16     	; 0x2b78 <__divmodhi4_neg2>
    2b68:	e4 df       	rcall	.-56     	; 0x2b32 <__udivmodhi4>
    2b6a:	07 fc       	sbrc	r0, 7
    2b6c:	05 d0       	rcall	.+10     	; 0x2b78 <__divmodhi4_neg2>
    2b6e:	3e f4       	brtc	.+14     	; 0x2b7e <__divmodhi4_exit>

00002b70 <__divmodhi4_neg1>:
    2b70:	90 95       	com	r25
    2b72:	81 95       	neg	r24
    2b74:	9f 4f       	sbci	r25, 0xFF	; 255
    2b76:	08 95       	ret

00002b78 <__divmodhi4_neg2>:
    2b78:	70 95       	com	r23
    2b7a:	61 95       	neg	r22
    2b7c:	7f 4f       	sbci	r23, 0xFF	; 255

00002b7e <__divmodhi4_exit>:
    2b7e:	08 95       	ret

00002b80 <__udivmodsi4>:
    2b80:	a1 e2       	ldi	r26, 0x21	; 33
    2b82:	1a 2e       	mov	r1, r26
    2b84:	aa 1b       	sub	r26, r26
    2b86:	bb 1b       	sub	r27, r27
    2b88:	fd 01       	movw	r30, r26
    2b8a:	0d c0       	rjmp	.+26     	; 0x2ba6 <__udivmodsi4_ep>

00002b8c <__udivmodsi4_loop>:
    2b8c:	aa 1f       	adc	r26, r26
    2b8e:	bb 1f       	adc	r27, r27
    2b90:	ee 1f       	adc	r30, r30
    2b92:	ff 1f       	adc	r31, r31
    2b94:	a2 17       	cp	r26, r18
    2b96:	b3 07       	cpc	r27, r19
    2b98:	e4 07       	cpc	r30, r20
    2b9a:	f5 07       	cpc	r31, r21
    2b9c:	20 f0       	brcs	.+8      	; 0x2ba6 <__udivmodsi4_ep>
    2b9e:	a2 1b       	sub	r26, r18
    2ba0:	b3 0b       	sbc	r27, r19
    2ba2:	e4 0b       	sbc	r30, r20
    2ba4:	f5 0b       	sbc	r31, r21

00002ba6 <__udivmodsi4_ep>:
    2ba6:	66 1f       	adc	r22, r22
    2ba8:	77 1f       	adc	r23, r23
    2baa:	88 1f       	adc	r24, r24
    2bac:	99 1f       	adc	r25, r25
    2bae:	1a 94       	dec	r1
    2bb0:	69 f7       	brne	.-38     	; 0x2b8c <__udivmodsi4_loop>
    2bb2:	60 95       	com	r22
    2bb4:	70 95       	com	r23
    2bb6:	80 95       	com	r24
    2bb8:	90 95       	com	r25
    2bba:	9b 01       	movw	r18, r22
    2bbc:	ac 01       	movw	r20, r24
    2bbe:	bd 01       	movw	r22, r26
    2bc0:	cf 01       	movw	r24, r30
    2bc2:	08 95       	ret

00002bc4 <__divmodsi4>:
    2bc4:	05 2e       	mov	r0, r21
    2bc6:	97 fb       	bst	r25, 7
    2bc8:	16 f4       	brtc	.+4      	; 0x2bce <__divmodsi4+0xa>
    2bca:	00 94       	com	r0
    2bcc:	0f d0       	rcall	.+30     	; 0x2bec <__negsi2>
    2bce:	57 fd       	sbrc	r21, 7
    2bd0:	05 d0       	rcall	.+10     	; 0x2bdc <__divmodsi4_neg2>
    2bd2:	d6 df       	rcall	.-84     	; 0x2b80 <__udivmodsi4>
    2bd4:	07 fc       	sbrc	r0, 7
    2bd6:	02 d0       	rcall	.+4      	; 0x2bdc <__divmodsi4_neg2>
    2bd8:	46 f4       	brtc	.+16     	; 0x2bea <__divmodsi4_exit>
    2bda:	08 c0       	rjmp	.+16     	; 0x2bec <__negsi2>

00002bdc <__divmodsi4_neg2>:
    2bdc:	50 95       	com	r21
    2bde:	40 95       	com	r20
    2be0:	30 95       	com	r19
    2be2:	21 95       	neg	r18
    2be4:	3f 4f       	sbci	r19, 0xFF	; 255
    2be6:	4f 4f       	sbci	r20, 0xFF	; 255
    2be8:	5f 4f       	sbci	r21, 0xFF	; 255

00002bea <__divmodsi4_exit>:
    2bea:	08 95       	ret

00002bec <__negsi2>:
    2bec:	90 95       	com	r25
    2bee:	80 95       	com	r24
    2bf0:	70 95       	com	r23
    2bf2:	61 95       	neg	r22
    2bf4:	7f 4f       	sbci	r23, 0xFF	; 255
    2bf6:	8f 4f       	sbci	r24, 0xFF	; 255
    2bf8:	9f 4f       	sbci	r25, 0xFF	; 255
    2bfa:	08 95       	ret

00002bfc <__tablejump2__>:
    2bfc:	ee 0f       	add	r30, r30
    2bfe:	ff 1f       	adc	r31, r31
    2c00:	00 24       	eor	r0, r0
    2c02:	00 1c       	adc	r0, r0
    2c04:	0b be       	out	0x3b, r0	; 59
    2c06:	07 90       	elpm	r0, Z+
    2c08:	f6 91       	elpm	r31, Z
    2c0a:	e0 2d       	mov	r30, r0
    2c0c:	09 94       	ijmp

00002c0e <__umulhisi3>:
    2c0e:	a2 9f       	mul	r26, r18
    2c10:	b0 01       	movw	r22, r0
    2c12:	b3 9f       	mul	r27, r19
    2c14:	c0 01       	movw	r24, r0
    2c16:	a3 9f       	mul	r26, r19
    2c18:	70 0d       	add	r23, r0
    2c1a:	81 1d       	adc	r24, r1
    2c1c:	11 24       	eor	r1, r1
    2c1e:	91 1d       	adc	r25, r1
    2c20:	b2 9f       	mul	r27, r18
    2c22:	70 0d       	add	r23, r0
    2c24:	81 1d       	adc	r24, r1
    2c26:	11 24       	eor	r1, r1
    2c28:	91 1d       	adc	r25, r1
    2c2a:	08 95       	ret

00002c2c <__muluhisi3>:
    2c2c:	f0 df       	rcall	.-32     	; 0x2c0e <__umulhisi3>
    2c2e:	a5 9f       	mul	r26, r21
    2c30:	90 0d       	add	r25, r0
    2c32:	b4 9f       	mul	r27, r20
    2c34:	90 0d       	add	r25, r0
    2c36:	a4 9f       	mul	r26, r20
    2c38:	80 0d       	add	r24, r0
    2c3a:	91 1d       	adc	r25, r1
    2c3c:	11 24       	eor	r1, r1
    2c3e:	08 95       	ret

00002c40 <eeprom_read_block>:
    2c40:	dc 01       	movw	r26, r24
    2c42:	cb 01       	movw	r24, r22

00002c44 <eeprom_read_blraw>:
    2c44:	fc 01       	movw	r30, r24
    2c46:	e1 99       	sbic	0x1c, 1	; 28
    2c48:	fe cf       	rjmp	.-4      	; 0x2c46 <eeprom_read_blraw+0x2>
    2c4a:	06 c0       	rjmp	.+12     	; 0x2c58 <eeprom_read_blraw+0x14>
    2c4c:	ff bb       	out	0x1f, r31	; 31
    2c4e:	ee bb       	out	0x1e, r30	; 30
    2c50:	e0 9a       	sbi	0x1c, 0	; 28
    2c52:	31 96       	adiw	r30, 0x01	; 1
    2c54:	0d b2       	in	r0, 0x1d	; 29
    2c56:	0d 92       	st	X+, r0
    2c58:	41 50       	subi	r20, 0x01	; 1
    2c5a:	50 40       	sbci	r21, 0x00	; 0
    2c5c:	b8 f7       	brcc	.-18     	; 0x2c4c <eeprom_read_blraw+0x8>
    2c5e:	08 95       	ret

00002c60 <eeprom_read_byte>:
    2c60:	e1 99       	sbic	0x1c, 1	; 28
    2c62:	fe cf       	rjmp	.-4      	; 0x2c60 <eeprom_read_byte>
    2c64:	9f bb       	out	0x1f, r25	; 31
    2c66:	8e bb       	out	0x1e, r24	; 30
    2c68:	e0 9a       	sbi	0x1c, 0	; 28
    2c6a:	99 27       	eor	r25, r25
    2c6c:	8d b3       	in	r24, 0x1d	; 29
    2c6e:	08 95       	ret

00002c70 <eeprom_read_word>:
    2c70:	a8 e1       	ldi	r26, 0x18	; 24
    2c72:	b0 e0       	ldi	r27, 0x00	; 0
    2c74:	42 e0       	ldi	r20, 0x02	; 2
    2c76:	50 e0       	ldi	r21, 0x00	; 0
    2c78:	e5 cf       	rjmp	.-54     	; 0x2c44 <eeprom_read_blraw>

00002c7a <eeprom_update_block>:
    2c7a:	dc 01       	movw	r26, r24
    2c7c:	a4 0f       	add	r26, r20
    2c7e:	b5 1f       	adc	r27, r21
    2c80:	41 50       	subi	r20, 0x01	; 1
    2c82:	50 40       	sbci	r21, 0x00	; 0
    2c84:	40 f0       	brcs	.+16     	; 0x2c96 <eeprom_update_block+0x1c>
    2c86:	cb 01       	movw	r24, r22
    2c88:	84 0f       	add	r24, r20
    2c8a:	95 1f       	adc	r25, r21
    2c8c:	2e 91       	ld	r18, -X
    2c8e:	05 d0       	rcall	.+10     	; 0x2c9a <eeprom_update_r18>
    2c90:	41 50       	subi	r20, 0x01	; 1
    2c92:	50 40       	sbci	r21, 0x00	; 0
    2c94:	d8 f7       	brcc	.-10     	; 0x2c8c <eeprom_update_block+0x12>
    2c96:	08 95       	ret

00002c98 <eeprom_update_byte>:
    2c98:	26 2f       	mov	r18, r22

00002c9a <eeprom_update_r18>:
    2c9a:	e1 99       	sbic	0x1c, 1	; 28
    2c9c:	fe cf       	rjmp	.-4      	; 0x2c9a <eeprom_update_r18>
    2c9e:	9f bb       	out	0x1f, r25	; 31
    2ca0:	8e bb       	out	0x1e, r24	; 30
    2ca2:	e0 9a       	sbi	0x1c, 0	; 28
    2ca4:	01 97       	sbiw	r24, 0x01	; 1
    2ca6:	0d b2       	in	r0, 0x1d	; 29
    2ca8:	02 16       	cp	r0, r18
    2caa:	31 f0       	breq	.+12     	; 0x2cb8 <eeprom_update_r18+0x1e>
    2cac:	2d bb       	out	0x1d, r18	; 29
    2cae:	0f b6       	in	r0, 0x3f	; 63
    2cb0:	f8 94       	cli
    2cb2:	e2 9a       	sbi	0x1c, 2	; 28
    2cb4:	e1 9a       	sbi	0x1c, 1	; 28
    2cb6:	0f be       	out	0x3f, r0	; 63
    2cb8:	08 95       	ret

00002cba <eeprom_update_dword>:
    2cba:	03 96       	adiw	r24, 0x03	; 3
    2cbc:	27 2f       	mov	r18, r23
    2cbe:	ed df       	rcall	.-38     	; 0x2c9a <eeprom_update_r18>
    2cc0:	eb df       	rcall	.-42     	; 0x2c98 <eeprom_update_byte>
    2cc2:	25 2f       	mov	r18, r21
    2cc4:	ea df       	rcall	.-44     	; 0x2c9a <eeprom_update_r18>
    2cc6:	24 2f       	mov	r18, r20
    2cc8:	e8 cf       	rjmp	.-48     	; 0x2c9a <eeprom_update_r18>

00002cca <eeprom_update_word>:
    2cca:	01 96       	adiw	r24, 0x01	; 1
    2ccc:	27 2f       	mov	r18, r23
    2cce:	e5 df       	rcall	.-54     	; 0x2c9a <eeprom_update_r18>
    2cd0:	e3 cf       	rjmp	.-58     	; 0x2c98 <eeprom_update_byte>

00002cd2 <eeprom_write_block>:
    2cd2:	dc 01       	movw	r26, r24
    2cd4:	cb 01       	movw	r24, r22
    2cd6:	02 c0       	rjmp	.+4      	; 0x2cdc <eeprom_write_block+0xa>
    2cd8:	2d 91       	ld	r18, X+
    2cda:	05 d0       	rcall	.+10     	; 0x2ce6 <eeprom_write_r18>
    2cdc:	41 50       	subi	r20, 0x01	; 1
    2cde:	50 40       	sbci	r21, 0x00	; 0
    2ce0:	d8 f7       	brcc	.-10     	; 0x2cd8 <eeprom_write_block+0x6>
    2ce2:	08 95       	ret

00002ce4 <eeprom_write_byte>:
    2ce4:	26 2f       	mov	r18, r22

00002ce6 <eeprom_write_r18>:
    2ce6:	e1 99       	sbic	0x1c, 1	; 28
    2ce8:	fe cf       	rjmp	.-4      	; 0x2ce6 <eeprom_write_r18>
    2cea:	9f bb       	out	0x1f, r25	; 31
    2cec:	8e bb       	out	0x1e, r24	; 30
    2cee:	2d bb       	out	0x1d, r18	; 29
    2cf0:	0f b6       	in	r0, 0x3f	; 63
    2cf2:	f8 94       	cli
    2cf4:	e2 9a       	sbi	0x1c, 2	; 28
    2cf6:	e1 9a       	sbi	0x1c, 1	; 28
    2cf8:	0f be       	out	0x3f, r0	; 63
    2cfa:	01 96       	adiw	r24, 0x01	; 1
    2cfc:	08 95       	ret

00002cfe <eeprom_write_dword>:
    2cfe:	24 2f       	mov	r18, r20
    2d00:	f2 df       	rcall	.-28     	; 0x2ce6 <eeprom_write_r18>
    2d02:	25 2f       	mov	r18, r21
    2d04:	f0 df       	rcall	.-32     	; 0x2ce6 <eeprom_write_r18>
    2d06:	00 c0       	rjmp	.+0      	; 0x2d08 <eeprom_write_word>

00002d08 <eeprom_write_word>:
    2d08:	ed df       	rcall	.-38     	; 0x2ce4 <eeprom_write_byte>
    2d0a:	27 2f       	mov	r18, r23
    2d0c:	ec cf       	rjmp	.-40     	; 0x2ce6 <eeprom_write_r18>

00002d0e <_exit>:
    2d0e:	f8 94       	cli

00002d10 <__stop_program>:
    2d10:	ff cf       	rjmp	.-2      	; 0x2d10 <__stop_program>
